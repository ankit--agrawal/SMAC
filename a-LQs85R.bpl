// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out.c --bit-precise --verifier-options  /bopt:z3opt:SMT.MBQI=false /noCallTreeReuse /staticInlining /useArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = bv32;

// Basic constants
const $0: bv32;
axiom ($0 == 0bv32);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (29 regions)
var $M.0: [ref] bv8;
var $M.1: bv32;
var $M.2: [ref] bv32;
var $M.3: [ref] bv32;
var $M.4: [ref] ref;
var $M.5: [ref] bv32;
var $M.6: bv8;
var $M.7: [ref] ref;
var $M.8: bv32;
var $M.9: bv8;
var $M.10: [ref] ref;
var $M.11: [ref] ref;
var $M.12: [ref] bv32;
var $M.13: [ref] bv32;
var $M.14: [ref] bv8;
var $M.15: ref;
var $M.16: ref;
var $M.17: ref;
var $M.18: bv32;
var $M.19: bv32;
var $M.20: bv32;
var $M.21: bv32;
var $M.22: bv32;
var $M.23: bv32;
var $M.24: bv32;
var $M.25: bv32;
var $M.26: bv32;
var $M.27: bv32;
var $M.28: bv32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 385082));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32808));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2uint.64(i: bv64) returns (i64);
function {:inline} $bv2int.64(i: bv64) returns (i64) { if $slt.bv64.bool(i, 0bv64) then $sub.i64($bv2uint.64(i), 18446744073709551616) else $bv2uint.64(i) }
// Bytewise pointer storage
function {:inline} $load.bytes.ref(M: [ref] bv8, p: ref) returns (ref) { $i2p.bv64.ref($load.bytes.bv64(M, p)) }
function {:inline} $store.bytes.ref(M: [ref] bv8, p: ref, v: ref)returns ([ref] bv8) { $store.bytes.bv64(M,p,$p2i.ref.bv64(v)) }
// Pointer-number conversions
function {:inline} $p2i.ref.bv8(p: ref) returns (bv8) { $trunc.bv64.bv8($int2bv.64(p)) }
function {:inline} $i2p.bv8.ref(i: bv8) returns (ref) { $bv2int.64($zext.bv8.bv64(i)) }
function {:inline} $p2i.ref.bv16(p: ref) returns (bv16) { $trunc.bv64.bv16($int2bv.64(p)) }
function {:inline} $i2p.bv16.ref(i: bv16) returns (ref) { $bv2int.64($zext.bv16.bv64(i)) }
function {:inline} $p2i.ref.bv32(p: ref) returns (bv32) { $trunc.bv64.bv32($int2bv.64(p)) }
function {:inline} $i2p.bv32.ref(i: bv32) returns (ref) { $bv2int.64($zext.bv32.bv64(i)) }
function {:inline} $p2i.ref.bv64(p: ref) returns (bv64) { $int2bv.64(p) }
function {:inline} $i2p.bv64.ref(i: bv64) returns (ref) { $bv2int.64(i) }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (bv1) { if $eq.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (bv1) { if $ne.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (bv1) { if $ugt.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (bv1) { if $uge.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (bv1) { if $ult.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (bv1) { if $ule.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (bv1) { if $sgt.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (bv1) { if $sge.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (bv1) { if $slt.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (bv1) { if $sle.i64.bool(p1, p2) then 1bv1 else 0bv1 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const mptctl_fops_group1: ref;
axiom (mptctl_fops_group1 == $sub.ref(0, 2060));
const mptctl_fops_group2: ref;
axiom (mptctl_fops_group2 == $sub.ref(0, 3092));
const mptctl_driver_group0: ref;
axiom (mptctl_driver_group0 == $sub.ref(0, 4124));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 5152));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 6180));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 7208));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 8236));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 9264));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 10292));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 11320));
const ldv_mutex_mutex_of_device: ref;
axiom (ldv_mutex_mutex_of_device == $sub.ref(0, 12348));
const ldv_mutex_mutex_of__MPT_MGMT: ref;
axiom (ldv_mutex_mutex_of__MPT_MGMT == $sub.ref(0, 13376));
const ldv_mutex_mpctl_mutex: ref;
axiom (ldv_mutex_mpctl_mutex == $sub.ref(0, 14404));
const ldv_mutex_lock: ref;
axiom (ldv_mutex_lock == $sub.ref(0, 15432));
const ldv_mutex_i_mutex_of_inode: ref;
axiom (ldv_mutex_i_mutex_of_inode == $sub.ref(0, 16460));
const mpctl_mutex: ref;
axiom (mpctl_mutex == $sub.ref(0, 17644));
const async_queue: ref;
axiom (async_queue == $sub.ref(0, 18676));
const mptctl_driver: ref;
axiom (mptctl_driver == $sub.ref(0, 19716));
const mptctl_taskmgmt_id: ref;
axiom (mptctl_taskmgmt_id == $sub.ref(0, 20741));
const mptctl_id: ref;
axiom (mptctl_id == $sub.ref(0, 21766));
const mptctl_fops: ref;
axiom (mptctl_fops == $sub.ref(0, 23014));
const mptctl_miscdev: ref;
axiom (mptctl_miscdev == $sub.ref(0, 24118));
const {:count 7} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 25149));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const ioc_list: ref;
axiom (ioc_list == $sub.ref(0, 32784));
const {:count 56} .str.137: ref;
axiom (.str.137 == $sub.ref(0, 26229));
const {:count 46} .str.138: ref;
axiom (.str.138 == $sub.ref(0, 27299));
const {:count 38} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 28361));
const {:count 54} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 29439));
const {:count 36} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 30499));
const {:count 36} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 31559));
const {:count 39} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 32622));
const {:count 49} .str.67: ref;
axiom (.str.67 == $sub.ref(0, 33695));
const {:count 86} .str.68: ref;
axiom (.str.68 == $sub.ref(0, 34805));
const {:count 209} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 36038));
const {:count 35} .str.69: ref;
axiom (.str.69 == $sub.ref(0, 37097));
const {:count 22} .str.70: ref;
axiom (.str.70 == $sub.ref(0, 38143));
const {:count 61} .str.71: ref;
axiom (.str.71 == $sub.ref(0, 39228));
const {:count 37} .str.72: ref;
axiom (.str.72 == $sub.ref(0, 40289));
const {:count 63} .str.73: ref;
axiom (.str.73 == $sub.ref(0, 41376));
const {:count 61} .str.74: ref;
axiom (.str.74 == $sub.ref(0, 42461));
const {:count 34} .str.75: ref;
axiom (.str.75 == $sub.ref(0, 43519));
const {:count 43} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 44586));
const {:count 67} .str.77: ref;
axiom (.str.77 == $sub.ref(0, 45677));
const {:count 37} .str.78: ref;
axiom (.str.78 == $sub.ref(0, 46738));
const {:count 48} .str.96: ref;
axiom (.str.96 == $sub.ref(0, 47810));
const {:count 41} .str.86: ref;
axiom (.str.86 == $sub.ref(0, 48875));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32792));
const {:count 19} .str.87: ref;
axiom (.str.87 == $sub.ref(0, 49918));
const {:count 23} .str.88: ref;
axiom (.str.88 == $sub.ref(0, 50965));
const mpt_fwfault_debug: ref;
axiom (mpt_fwfault_debug == $sub.ref(0, 32800));
const {:count 30} .str.89: ref;
axiom (.str.89 == $sub.ref(0, 52019));
const {:count 50} .str.90: ref;
axiom (.str.90 == $sub.ref(0, 53093));
const {:count 39} .str.91: ref;
axiom (.str.91 == $sub.ref(0, 54156));
const {:count 43} .str.92: ref;
axiom (.str.92 == $sub.ref(0, 55223));
const jiffies: ref;
axiom (jiffies == $sub.ref(0, 32808));
const {:count 82} .str.93: ref;
axiom (.str.93 == $sub.ref(0, 56329));
const {:count 30} .str.94: ref;
axiom (.str.94 == $sub.ref(0, 57383));
const {:count 140} .str.95: ref;
axiom (.str.95 == $sub.ref(0, 58547));
const {:count 66} .str.79: ref;
axiom (.str.79 == $sub.ref(0, 59637));
const {:count 48} .str.80: ref;
axiom (.str.80 == $sub.ref(0, 60709));
const {:count 63} .str.81: ref;
axiom (.str.81 == $sub.ref(0, 61796));
const {:count 43} .str.82: ref;
axiom (.str.82 == $sub.ref(0, 62863));
const {:count 66} .str.83: ref;
axiom (.str.83 == $sub.ref(0, 63953));
const {:count 63} .str.84: ref;
axiom (.str.84 == $sub.ref(0, 65040));
const {:count 63} .str.85: ref;
axiom (.str.85 == $sub.ref(0, 66127));
const {:count 33} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 67184));
const {:count 52} .str.135: ref;
axiom (.str.135 == $sub.ref(0, 68260));
const {:count 42} .str.136: ref;
axiom (.str.136 == $sub.ref(0, 69326));
const {:count 59} .str.99: ref;
axiom (.str.99 == $sub.ref(0, 70409));
const {:count 66} .str.100: ref;
axiom (.str.100 == $sub.ref(0, 71499));
const {:count 99} .str.101: ref;
axiom (.str.101 == $sub.ref(0, 72622));
const {:count 110} .str.102: ref;
axiom (.str.102 == $sub.ref(0, 73756));
const {:count 52} .str.103: ref;
axiom (.str.103 == $sub.ref(0, 74832));
const {:count 71} .str.104: ref;
axiom (.str.104 == $sub.ref(0, 75927));
const {:count 83} .str.105: ref;
axiom (.str.105 == $sub.ref(0, 77034));
const {:count 84} .str.106: ref;
axiom (.str.106 == $sub.ref(0, 78142));
const {:count 85} .str.107: ref;
axiom (.str.107 == $sub.ref(0, 79251));
const {:count 80} .str.108: ref;
axiom (.str.108 == $sub.ref(0, 80355));
const {:count 120} .str.109: ref;
axiom (.str.109 == $sub.ref(0, 81499));
const {:count 90} .str.110: ref;
axiom (.str.110 == $sub.ref(0, 82613));
const {:count 94} .str.111: ref;
axiom (.str.111 == $sub.ref(0, 83731));
const {:count 65} .str.112: ref;
axiom (.str.112 == $sub.ref(0, 84820));
const {:count 41} .str.113: ref;
axiom (.str.113 == $sub.ref(0, 85885));
const {:count 22} .str.114: ref;
axiom (.str.114 == $sub.ref(0, 86931));
const {:count 71} .str.115: ref;
axiom (.str.115 == $sub.ref(0, 88026));
const {:count 92} .str.116: ref;
axiom (.str.116 == $sub.ref(0, 89142));
const {:count 95} .str.117: ref;
axiom (.str.117 == $sub.ref(0, 90261));
const {:count 89} .str.118: ref;
axiom (.str.118 == $sub.ref(0, 91374));
const {:count 75} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 92473));
const {:count 54} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 93551));
const {:count 87} .str.131: ref;
axiom (.str.131 == $sub.ref(0, 94662));
const {:count 58} .str.132: ref;
axiom (.str.132 == $sub.ref(0, 95744));
const {:count 43} .str.133: ref;
axiom (.str.133 == $sub.ref(0, 96811));
const {:count 110} .str.134: ref;
axiom (.str.134 == $sub.ref(0, 97945));
const {:count 80} .str.123: ref;
axiom (.str.123 == $sub.ref(0, 99049));
const {:count 56} .str.124: ref;
axiom (.str.124 == $sub.ref(0, 100129));
const {:count 43} .str.125: ref;
axiom (.str.125 == $sub.ref(0, 101196));
const {:count 2} .str.126: ref;
axiom (.str.126 == $sub.ref(0, 102222));
const {:count 44} .str.127: ref;
axiom (.str.127 == $sub.ref(0, 103290));
const {:count 19} .str.128: ref;
axiom (.str.128 == $sub.ref(0, 104333));
const {:count 67} .str.129: ref;
axiom (.str.129 == $sub.ref(0, 105424));
const {:count 94} .str.130: ref;
axiom (.str.130 == $sub.ref(0, 106542));
const {:count 81} .str.119: ref;
axiom (.str.119 == $sub.ref(0, 107647));
const {:count 50} .str.120: ref;
axiom (.str.120 == $sub.ref(0, 108721));
const {:count 38} .str.121: ref;
axiom (.str.121 == $sub.ref(0, 109783));
const {:count 65} .str.122: ref;
axiom (.str.122 == $sub.ref(0, 110872));
const {:count 84} .str.97: ref;
axiom (.str.97 == $sub.ref(0, 111980));
const {:count 56} .str.98: ref;
axiom (.str.98 == $sub.ref(0, 113060));
const {:count 68} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 114152));
const {:count 86} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 115262));
const {:count 55} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 116341));
const {:count 40} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 117405));
const {:count 103} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 118532));
const {:count 88} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 119644));
const {:count 56} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 120724));
const {:count 41} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 121789));
const {:count 108} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 122921));
const {:count 88} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 124033));
const {:count 56} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 125113));
const {:count 41} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 126178));
const {:count 76} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 127278));
const {:count 86} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 128388));
const {:count 55} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 129467));
const {:count 40} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 130531));
const {:count 106} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 131661));
const {:count 78} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 132763));
const {:count 53} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 133840));
const {:count 38} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 134902));
const {:count 98} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 136024));
const {:count 89} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 137137));
const {:count 58} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 138219));
const {:count 43} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 139286));
const {:count 79} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 140389));
const {:count 109} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 141522));
const {:count 70} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 142616));
const {:count 55} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 143695));
const {:count 101} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 144820));
const {:count 40} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 145884));
const {:count 21} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 146929));
const {:count 103} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 148056));
const .str: ref;
axiom (.str == $sub.ref(0, 149103));
const {:count 9} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 150136));
const {:count 22} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 151182));
const {:count 12} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 152218));
const {:count 8} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 153250));
const {:count 38} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 154312));
const {:count 8} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 155344));
const {:count 49} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 156417));
const {:count 49} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 157490));
const {:count 40} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 158554));
const {:count 13} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 159591));
const {:count 68} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 160683));
const {:count 22} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 161729));
const {:count 26} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 162779));
const {:count 21} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 163824));
const {:count 42} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 164890));
const {:count 38} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 165952));
const {:count 17} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 166993));
const {:count 36} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 168053));
const {:count 37} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 169114));
const {:count 48} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 170186));
const {:count 65} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 171275));
const {:count 51} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 172350));
const {:count 97} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 173471));
const {:count 53} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 174548));
const {:count 14} .str.2.143: ref;
axiom (.str.2.143 == $sub.ref(0, 175586));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 176618));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 177650));
procedure  malloc($i0: bv64)
  returns ($r: ref)
{
  call $r := $malloc($bv2int.64($i0));
}
const no_llseek: ref;
axiom (no_llseek == $sub.ref(0, 178682));
procedure  no_llseek($p0: ref, $i1: bv64, $i2: bv32)
  returns ($r: bv64);
const mptctl_ioctl: ref;
axiom (mptctl_ioctl == $sub.ref(0, 179714));
procedure  mptctl_ioctl($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: bv64)
{
  var $i3: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !6787, metadata !6788), !dbg !6789, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6791, metadata !6788), !dbg !6792, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6592, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_20(mpctl_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6593, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __mptctl_ioctl($p0, $i1, $i2);
  // WARNING: %4 = call i64 @__mptctl_ioctl(%struct.file* %0, i32 %1, i64 %2), !dbg !6797, !verifier.code !6790
  call {:cexpr "ret"} boogie_si_record_bv64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6594, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_21(mpctl_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6595, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const compat_mpctl_ioctl: ref;
axiom (compat_mpctl_ioctl == $sub.ref(0, 180746));
procedure  compat_mpctl_ioctl($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: bv64)
{
  var $i3: bv1;
  var $i4: bv1;
  var $i5: bv1;
  var $i6: bv1;
  var $i7: bv1;
  var $i8: bv1;
  var $i9: bv1;
  var $i10: bv1;
  var $i11: bv1;
  var $i12: bv1;
  var $i13: bv1;
  var $i14: bv1;
  var $i15: bv1;
  var $i16: bv1;
  var $i17: bv1;
  var $i18: bv1;
  var $i19: bv1;
  var $i20: bv1;
  var $i21: bv1;
  var $i22: bv1;
  var $i23: bv1;
  var $i24: bv1;
  var $i25: bv1;
  var $i26: bv1;
  var $i27: bv1;
  var $i28: bv64;
  var $i30: bv32;
  var $i31: bv64;
  var $i32: bv32;
  var $i33: bv64;
  var $i29: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !6803, metadata !6788), !dbg !6804, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6805, metadata !6788), !dbg !6806, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8790, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_30(mpctl_mutex);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i3 := $slt.bv32($i1, $sub.bv32(0bv32, 1072403179bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1bv1);
  assume {:verifier.code 0} true;
  $i17 := $slt.bv32($i1, $sub.bv32(0bv32, 1072927464bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb36, $bb37;
$bb3:
  assume !(($i3 == 1bv1));
  assume {:verifier.code 0} true;
  $i4 := $slt.bv32($i1, $sub.bv32(0bv32, 1069781741bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1bv1);
  assume {:verifier.code 0} true;
  $i12 := $slt.bv32($i1, $sub.bv32(0bv32, 1071878889bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb24, $bb25;
$bb5:
  assume !(($i4 == 1bv1));
  assume {:verifier.code 0} true;
  $i5 := $slt.bv32($i1, $sub.bv32(0bv32, 1067946735bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1bv1);
  assume {:verifier.code 0} true;
  $i9 := $slt.bv32($i1, $sub.bv32(0bv32, 1068208879bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb16, $bb17;
$bb7:
  assume !(($i5 == 1bv1));
  assume {:verifier.code 0} true;
  $i6 := $slt.bv32($i1, $sub.bv32(0bv32, 1067684591bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i6 == 1bv1);
  assume {:verifier.code 0} true;
  $i8 := $eq.bv32($i1, $sub.bv32(0bv32, 1067946735bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb13, $bb15;
$bb9:
  assume !(($i6 == 1bv1));
  assume {:verifier.code 0} true;
  $i7 := $eq.bv32($i1, $sub.bv32(0bv32, 1067684591bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i7 == 1bv1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb64;
$bb13:
  assume {:verifier.code 0} true;
  assume ($i8 == 1bv1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1bv1));
  goto $bb12;
$bb16:
  assume ($i9 == 1bv1);
  assume {:verifier.code 0} true;
  $i11 := $eq.bv32($i1, $sub.bv32(0bv32, 1069781741bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb21, $bb23;
$bb17:
  assume !(($i9 == 1bv1));
  assume {:verifier.code 0} true;
  $i10 := $eq.bv32($i1, $sub.bv32(0bv32, 1068208879bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb18, $bb20;
$bb18:
  assume {:verifier.code 0} true;
  assume ($i10 == 1bv1);
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb20:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1bv1));
  goto $bb12;
$bb21:
  assume {:verifier.code 0} true;
  assume ($i11 == 1bv1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8803, 9} true;
  assume {:verifier.code 0} true;
  call $i28 := __mptctl_ioctl($p0, $i1, $i2);
  // WARNING: %15 = call i64 @__mptctl_ioctl(%struct.file* %0, i32 %1, i64 %2), !dbg !6817, !verifier.code !6790
  call {:cexpr "ret"} boogie_si_record_bv64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8804, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i28;
  goto $bb63;
$bb23:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1bv1));
  goto $bb12;
$bb24:
  assume ($i12 == 1bv1);
  assume {:verifier.code 0} true;
  $i16 := $eq.bv32($i1, $sub.bv32(0bv32, 1072403179bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb33, $bb35;
$bb25:
  assume !(($i12 == 1bv1));
  assume {:verifier.code 0} true;
  $i13 := $slt.bv32($i1, $sub.bv32(0bv32, 1070043884bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i13 == 1bv1);
  assume {:verifier.code 0} true;
  $i15 := $eq.bv32($i1, $sub.bv32(0bv32, 1071878889bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb30, $bb32;
$bb27:
  assume !(($i13 == 1bv1));
  assume {:verifier.code 0} true;
  $i14 := $eq.bv32($i1, $sub.bv32(0bv32, 1070043884bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i14 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8806, 9} true;
  assume {:verifier.code 0} true;
  call $i30 := compat_mpt_command($p0, $i1, $i2);
  // WARNING: %17 = call i32 @compat_mpt_command(%struct.file* %0, i32 %1, i64 %2), !dbg !6822, !verifier.code !6790
  call {:cexpr "tmp"} boogie_si_record_bv32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8807, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.bv32.bv64($i30);
  // WARNING: %18 = sext i32 %17 to i64, !dbg !6825, !verifier.code !6790
  call {:cexpr "ret"} boogie_si_record_bv64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8808, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i31;
  goto $bb63;
$bb29:
  assume {:verifier.code 0} true;
  assume !(($i14 == 1bv1));
  goto $bb12;
$bb30:
  assume {:verifier.code 0} true;
  assume ($i15 == 1bv1);
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb32:
  assume {:verifier.code 0} true;
  assume !(($i15 == 1bv1));
  goto $bb12;
$bb33:
  assume {:verifier.code 0} true;
  assume ($i16 == 1bv1);
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb35:
  assume {:verifier.code 0} true;
  assume !(($i16 == 1bv1));
  goto $bb12;
$bb36:
  assume ($i17 == 1bv1);
  assume {:verifier.code 0} true;
  $i23 := $slt.bv32($i1, $sub.bv32(0bv32, 2140906988bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb51, $bb52;
$bb37:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  $i18 := $slt.bv32($i1, $sub.bv32(0bv32, 1072665322bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i18 == 1bv1);
  assume {:verifier.code 0} true;
  $i22 := $eq.bv32($i1, $sub.bv32(0bv32, 1072927464bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb48, $bb50;
$bb39:
  assume !(($i18 == 1bv1));
  assume {:verifier.code 0} true;
  $i19 := $slt.bv32($i1, $sub.bv32(0bv32, 1072403182bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i19 == 1bv1);
  assume {:verifier.code 0} true;
  $i21 := $eq.bv32($i1, $sub.bv32(0bv32, 1072665322bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb45, $bb47;
$bb41:
  assume !(($i19 == 1bv1));
  assume {:verifier.code 0} true;
  $i20 := $eq.bv32($i1, $sub.bv32(0bv32, 1072403182bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb42, $bb44;
$bb42:
  assume {:verifier.code 0} true;
  assume ($i20 == 1bv1);
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb44:
  assume {:verifier.code 0} true;
  assume !(($i20 == 1bv1));
  goto $bb12;
$bb45:
  assume {:verifier.code 0} true;
  assume ($i21 == 1bv1);
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb47:
  assume {:verifier.code 0} true;
  assume !(($i21 == 1bv1));
  goto $bb12;
$bb48:
  assume {:verifier.code 0} true;
  assume ($i22 == 1bv1);
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb50:
  assume {:verifier.code 0} true;
  assume !(($i22 == 1bv1));
  goto $bb12;
$bb51:
  assume ($i23 == 1bv1);
  assume {:verifier.code 0} true;
  $i27 := $eq.bv32($i1, $sub.bv32(0bv32, 2144314859bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb60, $bb62;
$bb52:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  $i24 := $slt.bv32($i1, $sub.bv32(0bv32, 1072927473bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i24 == 1bv1);
  assume {:verifier.code 0} true;
  $i26 := $eq.bv32($i1, $sub.bv32(0bv32, 2140906988bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb57, $bb59;
$bb54:
  assume !(($i24 == 1bv1));
  assume {:verifier.code 0} true;
  $i25 := $eq.bv32($i1, $sub.bv32(0bv32, 1072927473bv32));
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i25 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8810, 13} true;
  assume {:verifier.code 0} true;
  call $i32 := compat_mptfwxfer_ioctl($p0, $i1, $i2);
  // WARNING: %20 = call i32 @compat_mptfwxfer_ioctl(%struct.file* %0, i32 %1, i64 %2), !dbg !6827, !verifier.code !6790
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8811, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.bv32.bv64($i32);
  // WARNING: %21 = sext i32 %20 to i64, !dbg !6830, !verifier.code !6790
  call {:cexpr "ret"} boogie_si_record_bv64($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8812, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i33;
  goto $bb63;
$bb56:
  assume {:verifier.code 0} true;
  assume !(($i25 == 1bv1));
  goto $bb12;
$bb57:
  assume {:verifier.code 0} true;
  assume ($i26 == 1bv1);
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb59:
  assume {:verifier.code 0} true;
  assume !(($i26 == 1bv1));
  goto $bb12;
$bb60:
  assume {:verifier.code 0} true;
  assume ($i27 == 1bv1);
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8791, 16} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb62:
  assume {:verifier.code 0} true;
  assume !(($i27 == 1bv1));
  goto $bb12;
$bb63:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8818, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_31(mpctl_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8819, 3} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8815, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.bv64(0bv64, 515bv64);
  goto $bb63;
}
const mptctl_fasync: ref;
axiom (mptctl_fasync == $sub.ref(0, 181778));
procedure  mptctl_fasync($i0: bv32, $p1: ref, $i2: bv32)
  returns ($r: bv32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: bv64;
  var $i8: bv1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv64;
  var $i18: bv1;
  var $p9: ref;
  var $i19: bv32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !6852, metadata !6788), !dbg !6853, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6465, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_17(mpctl_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6466, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $load.bytes.ref($M.0, ioc_list);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6467, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6467, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref($sub.ref(0, 1680), 5616));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p4, $mul.ref($sub.ref(0, 1680), 5616)), 1680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.bv64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.bv64($i7, $p2i.ref.bv64(ioc_list));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p5;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1bv1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6475, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6470, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 1664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6470, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p10, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6471, 49} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, 1680);
  $p12 := $add.ref($p9, 1680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6471, 54} true;
  assume {:verifier.code 0} true;
  $p13 := $load.bytes.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6472, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6472, 35} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, $mul.ref($sub.ref(0, 1680), 5616));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p14, $mul.ref($sub.ref(0, 1680), 5616)), 1680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.bv64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 37} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.bv64($i17, $p2i.ref.bv64(ioc_list));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p15;
  assume {:branchcond $i18} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i18 == 1bv1);
  goto $bb4;
$bb7:
  assume !(($i18 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6474, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6479, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := fasync_helper($i0, $p1, $i2, async_queue);
  // WARNING: %23 = call i32 @fasync_helper(i32 %0, %struct.file* %1, i32 %2, %struct.fasync_struct** @async_queue), !dbg !6819, !verifier.code !6790
  call {:cexpr "ret"} boogie_si_record_bv32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6480, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_18(mpctl_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6481, 3} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
}
const ldv_mutex_lock_17: ref;
axiom (ldv_mutex_lock_17 == $sub.ref(0, 182810));
procedure  ldv_mutex_lock_17($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9283, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9284, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9285, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const fasync_helper: ref;
axiom (fasync_helper == $sub.ref(0, 183842));
procedure  fasync_helper($i0: bv32, $p1: ref, $i2: bv32, $p3: ref)
  returns ($r: bv32);
const ldv_mutex_unlock_18: ref;
axiom (ldv_mutex_unlock_18 == $sub.ref(0, 184874));
procedure  ldv_mutex_unlock_18($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9293, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9294, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9295, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_mpctl_mutex: ref;
axiom (ldv_mutex_unlock_mpctl_mutex == $sub.ref(0, 185906));
procedure  ldv_mutex_unlock_mpctl_mutex($p0: ref)
{
  var $i1: bv32;
  var $i2: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9991, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9991, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9991, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9992, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9993, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9996, 25} true;
  assume {:verifier.code 0} true;
  $M.1 := 1bv32;
  call {:cexpr "ldv_mutex_mpctl_mutex"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9997, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 186938));
procedure  mutex_unlock($p0: ref);
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 187970));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9481, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9483, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9485, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_lock_mpctl_mutex: ref;
axiom (ldv_mutex_lock_mpctl_mutex == $sub.ref(0, 189002));
procedure  ldv_mutex_lock_mpctl_mutex($p0: ref)
{
  var $i1: bv32;
  var $i2: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9921, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9921, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9921, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9922, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9923, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9926, 25} true;
  assume {:verifier.code 0} true;
  $M.1 := 2bv32;
  call {:cexpr "ldv_mutex_mpctl_mutex"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9927, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_lock: ref;
axiom (mutex_lock == $sub.ref(0, 190034));
procedure  mutex_lock($p0: ref);
const ldv_mutex_lock_30: ref;
axiom (ldv_mutex_lock_30 == $sub.ref(0, 191066));
procedure  ldv_mutex_lock_30($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9413, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9414, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9415, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __mptctl_ioctl: ref;
axiom (__mptctl_ioctl == $sub.ref(0, 192098));
procedure  __mptctl_ioctl($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: bv64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv32;
  var $p9: ref;
  var $p10: ref;
  var $i11: bv64;
  var $i12: bv1;
  var $i13: bv32;
  var $p15: ref;
  var $i16: bv32;
  var $i17: bv32;
  var $i18: bv32;
  var $i19: bv1;
  var $p20: ref;
  var $i21: bv64;
  var $i22: bv1;
  var $p23: ref;
  var $p24: ref;
  var $i25: bv32;
  var $i26: bv1;
  var $i27: bv32;
  var $i28: bv64;
  var $i29: bv64;
  var $i30: bv1;
  var $i31: bv32;
  var $i32: bv32;
  var $i33: bv32;
  var $i34: bv64;
  var $i35: bv1;
  var $i36: bv32;
  var $i37: bv64;
  var $i38: bv1;
  var $i39: bv32;
  var $i40: bv64;
  var $i41: bv1;
  var $i42: bv32;
  var $i43: bv64;
  var $i44: bv1;
  var $i45: bv32;
  var $i46: bv64;
  var $i47: bv1;
  var $i48: bv32;
  var $i49: bv64;
  var $i50: bv1;
  var $i51: bv32;
  var $i52: bv64;
  var $p53: ref;
  var $i54: bv32;
  var $i55: bv1;
  var $i56: bv64;
  var $i57: bv1;
  var $i58: bv32;
  var $i60: bv1;
  var $i61: bv32;
  var $i63: bv1;
  var $i64: bv32;
  var $i66: bv64;
  var $i67: bv64;
  var $i68: bv1;
  var $i69: bv32;
  var $i70: bv32;
  var $i71: bv32;
  var $i73: bv1;
  var $i74: bv32;
  var $i75: bv32;
  var $i72: bv32;
  var $i65: bv32;
  var $i62: bv32;
  var $i59: bv32;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: bv64;
  var $i14: bv64;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(12, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !6941, metadata !6788), !dbg !6942, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6943, metadata !6788), !dbg !6944, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6503, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.bv64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6504, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6504, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $load.bytes.bv32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6504, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $and.bv32($i7, 2048bv32);
  // WARNING: %9 = and i32 %8, 2048, !dbg !6804, !verifier.code !6787
  call {:cexpr "nonblock"} boogie_si_record_bv32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6505, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6506, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6506, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6506, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := copy_from_user($p9, $p10, 12bv64);
  // WARNING: %12 = call i64 @copy_from_user(i8* %10, i8* %11, i64 12), !dbg !6810, !verifier.code !6787
  call {:cexpr "tmp"} boogie_si_record_bv64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6507, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.bv64($i11, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6508, 5} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref.ref.bv32.ref(.str.26, .str.27, 634bv32, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6511, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.bv64(0bv64, 14bv64);
  goto $bb3;
$bb2:
  assume !(($i12 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6586, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6516, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6516, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $load.bytes.bv32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6516, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $and.bv32($i16, 255bv32);
  // WARNING: %20 = and i32 %19, 255, !dbg !6822, !verifier.code !6787
  call {:cexpr "iocnumX"} boogie_si_record_bv32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6517, 12} true;
  assume {:verifier.code 0} true;
  call $i18 := mpt_verify_adapter($i17, $p4);
  // WARNING: %21 = call i32 @mpt_verify_adapter(i32 %20, %struct._MPT_ADAPTER** %5), !dbg !6825, !verifier.code !6787
  call {:cexpr "iocnum"} boogie_si_record_bv32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 14} true;
  assume {:verifier.code 0} true;
  $i19 := $slt.bv32($i18, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 18} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6519, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.bv64(0bv64, 19bv64);
  goto $bb3;
$bb7:
  assume !(($i19 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $load.bytes.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.bv64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 42} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.bv64($i21, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6518, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i22 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6523, 7} true;
  assume {:verifier.code 0} true;
  $p23 := $load.bytes.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6523, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6523, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $load.bytes.bv32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6523, 20} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.bv32($i25, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6523, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6524, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref.bv32(.str.28, .str.27, 649bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6526, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.bv64(0bv64, 14bv64);
  goto $bb3;
$bb12:
  assume !(($i26 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6530, 8} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.bv32.bv64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6530, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $and.bv64($i28, 3221291007bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6530, 44} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.bv64($i29, 3221253393bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6530, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i30 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6531, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $lshr.bv32($i1, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6531, 50} true;
  assume {:verifier.code 0} true;
  $i32 := $and.bv32($i31, 16383bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6531, 15} true;
  assume {:verifier.code 0} true;
  call $i33 := mptctl_getiocinfo($i2, $i32);
  // WARNING: %44 = call i32 @mptctl_getiocinfo(i64 %2, i32 %43), !dbg !6854, !verifier.code !6787
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6532, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.bv32.bv64($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6532, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i34;
  goto $bb3;
$bb15:
  assume !(($i30 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6534, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.bv32($i1, $sub.bv32(0bv32, 1072403182bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6534, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i35 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6535, 15} true;
  assume {:verifier.code 0} true;
  call $i36 := mptctl_gettargetinfo($i2);
  // WARNING: %49 = call i32 @mptctl_gettargetinfo(i64 %2), !dbg !6862, !verifier.code !6787
  call {:cexpr "tmp___1"} boogie_si_record_bv32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6536, 13} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.bv32.bv64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6536, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i37;
  goto $bb3;
$bb17:
  assume !(($i35 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6538, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.bv32($i1, $sub.bv32(0bv32, 1069781741bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6538, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i38 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6539, 15} true;
  assume {:verifier.code 0} true;
  call $i39 := mptctl_readtest($i2);
  // WARNING: %54 = call i32 @mptctl_readtest(i64 %2), !dbg !6871, !verifier.code !6787
  call {:cexpr "tmp___2"} boogie_si_record_bv32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6540, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.bv32.bv64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6540, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i40;
  goto $bb3;
$bb19:
  assume !(($i38 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6542, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.bv32($i1, $sub.bv32(0bv32, 1072403179bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6542, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i41 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6543, 15} true;
  assume {:verifier.code 0} true;
  call $i42 := mptctl_eventquery($i2);
  // WARNING: %59 = call i32 @mptctl_eventquery(i64 %2), !dbg !6880, !verifier.code !6787
  call {:cexpr "tmp___3"} boogie_si_record_bv32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6544, 13} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.bv32.bv64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6544, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i43;
  goto $bb3;
$bb21:
  assume !(($i41 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6546, 11} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.bv32($i1, $sub.bv32(0bv32, 1072665322bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6546, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i44 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6547, 15} true;
  assume {:verifier.code 0} true;
  call $i45 := mptctl_eventenable($i2);
  // WARNING: %64 = call i32 @mptctl_eventenable(i64 %2), !dbg !6889, !verifier.code !6787
  call {:cexpr "tmp___4"} boogie_si_record_bv32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6548, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.bv32.bv64($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6548, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i46;
  goto $bb3;
$bb23:
  assume !(($i44 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6550, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.bv32($i1, $sub.bv32(0bv32, 1071878889bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i47 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6551, 15} true;
  assume {:verifier.code 0} true;
  call $i48 := mptctl_eventreport($i2);
  // WARNING: %69 = call i32 @mptctl_eventreport(i64 %2), !dbg !6898, !verifier.code !6787
  call {:cexpr "tmp___5"} boogie_si_record_bv32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6552, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.bv32.bv64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6552, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i49;
  goto $bb3;
$bb25:
  assume !(($i47 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6554, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.bv32($i1, $sub.bv32(0bv32, 1072403175bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6554, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i50 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6555, 15} true;
  assume {:verifier.code 0} true;
  call $i51 := mptctl_replace_fw($i2);
  // WARNING: %74 = call i32 @mptctl_replace_fw(i64 %2), !dbg !6907, !verifier.code !6787
  call {:cexpr "tmp___6"} boogie_si_record_bv32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6556, 13} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.bv32.bv64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6556, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i52;
  goto $bb3;
$bb27:
  assume !(($i50 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6560, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $load.bytes.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6560, 9} true;
  assume {:verifier.code 0} true;
  call $i54 := mptctl_syscall_down($p53, $i8);
  // WARNING: %85 = call i32 @mptctl_syscall_down(%struct._MPT_ADAPTER* %84, i32 %9), !dbg !6914, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6561, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.bv32($i54, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6561, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i55 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6562, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.bv32.bv64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6562, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i56;
  goto $bb3;
$bb36:
  assume !(($i55 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6566, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.bv32($i1, $sub.bv32(0bv32, 1072665329bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6566, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i57 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6567, 11} true;
  assume {:verifier.code 0} true;
  call $i58 := mptctl_fw_download($i2);
  // WARNING: %93 = call i32 @mptctl_fw_download(i64 %2), !dbg !6924, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6568, 3} true;
  assume {:verifier.code 0} true;
  $i59 := $i58;
  goto $bb40;
$bb39:
  assume !(($i57 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6569, 11} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.bv32($i1, $sub.bv32(0bv32, 1068995308bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6569, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb41, $bb42;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6583, 25} true;
  assume {:verifier.code 0} true;
  $p76 := $load.bytes.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6583, 31} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p76, 4232);
  $p78 := $add.ref($p76, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6583, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_19($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6584, 11} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.bv32.bv64($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6584, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i79;
  goto $bb3;
$bb41:
  assume ($i60 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6570, 11} true;
  assume {:verifier.code 0} true;
  call $i61 := mptctl_mpt_command($i2);
  // WARNING: %97 = call i32 @mptctl_mpt_command(i64 %2), !dbg !6930, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6571, 3} true;
  assume {:verifier.code 0} true;
  $i62 := $i61;
  goto $bb43;
$bb42:
  assume !(($i60 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6572, 11} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.bv32($i1, $sub.bv32(0bv32, 1072927464bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6572, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb44, $bb45;
$bb43:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i59 := $i62;
  goto $bb40;
$bb44:
  assume ($i63 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6573, 11} true;
  assume {:verifier.code 0} true;
  call $i64 := mptctl_do_reset($i2);
  // WARNING: %101 = call i32 @mptctl_do_reset(i64 %2), !dbg !6936, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6574, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb46;
$bb45:
  assume !(($i63 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6575, 8} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.bv32.bv64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6575, 28} true;
  assume {:verifier.code 0} true;
  $i67 := $and.bv64($i66, 3221291007bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6575, 44} true;
  assume {:verifier.code 0} true;
  $i68 := $eq.bv64($i67, 2147506708bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6575, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb47, $bb48;
$bb46:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i62 := $i65;
  goto $bb43;
$bb47:
  assume ($i68 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6576, 40} true;
  assume {:verifier.code 0} true;
  $i69 := $lshr.bv32($i1, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6576, 47} true;
  assume {:verifier.code 0} true;
  $i70 := $and.bv32($i69, 16383bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6576, 11} true;
  assume {:verifier.code 0} true;
  call $i71 := mptctl_hp_hostinfo($i2, $i70);
  // WARNING: %109 = call i32 @mptctl_hp_hostinfo(i64 %2, i32 %108), !dbg !6947, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6577, 3} true;
  assume {:verifier.code 0} true;
  $i72 := $i71;
  goto $bb49;
$bb48:
  assume !(($i68 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6578, 11} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.bv32($i1, $sub.bv32(0bv32, 2144314859bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6578, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb50, $bb51;
$bb49:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65 := $i72;
  goto $bb46;
$bb50:
  assume ($i73 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6579, 11} true;
  assume {:verifier.code 0} true;
  call $i74 := mptctl_hp_targetinfo($i2);
  // WARNING: %113 = call i32 @mptctl_hp_targetinfo(i64 %2), !dbg !6952, !verifier.code !6787
  call {:cexpr "ret"} boogie_si_record_bv32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6580, 3} true;
  assume {:verifier.code 0} true;
  $i75 := $i74;
  goto $bb52;
$bb51:
  assume !(($i73 == 1bv1));
  assume {:verifier.code 0} true;
  $i75 := $sub.bv32(0bv32, 22bv32);
  goto $bb52;
$bb52:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i72 := $i75;
  goto $bb49;
}
const compat_mpt_command: ref;
axiom (compat_mpt_command == $sub.ref(0, 193130));
procedure  compat_mpt_command($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: bv32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: bv32;
  var $i9: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv64;
  var $i13: bv1;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv32;
  var $i18: bv32;
  var $i19: bv32;
  var $i20: bv1;
  var $p21: ref;
  var $i22: bv64;
  var $i23: bv1;
  var $i24: bv32;
  var $p25: ref;
  var $i26: bv32;
  var $i27: bv1;
  var $p28: ref;
  var $p29: ref;
  var $i30: bv32;
  var $i31: bv32;
  var $i32: bv1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: bv32;
  var $p37: ref;
  var $p38: ref;
  var $i39: bv32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: bv32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: bv32;
  var $p49: ref;
  var $p50: ref;
  var $i51: bv32;
  var $p52: ref;
  var $p53: ref;
  var $i54: bv32;
  var $p55: ref;
  var $p56: ref;
  var $i57: bv32;
  var $p58: ref;
  var $p59: ref;
  var $i60: bv32;
  var $p61: ref;
  var $p62: ref;
  var $i63: bv32;
  var $p64: ref;
  var $p65: ref;
  var $i66: bv32;
  var $i67: bv64;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: bv32;
  var $i72: bv64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: bv32;
  var $i77: bv64;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: bv32;
  var $i82: bv64;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: bv32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i14: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(56, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(72, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !7116, metadata !6788), !dbg !7117, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7118, metadata !6788), !dbg !7119, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8738, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.bv64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8739, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8740, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8740, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $load.bytes.bv32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8740, 34} true;
  assume {:verifier.code 0} true;
  $i9 := $and.bv32($i8, 2048bv32);
  // WARNING: %10 = and i32 %9, 2048, !dbg !6809, !verifier.code !6789
  call {:cexpr "nonblock"} boogie_si_record_bv32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8741, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8741, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.bv64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8741, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := copy_from_user($p10, $p11, 56bv64);
  // WARNING: %13 = call i64 @copy_from_user(i8* %11, i8* %12, i64 56), !dbg !6814, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8742, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.bv64($i12, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8742, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8743, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i13 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8782, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8747, 26} true;
  assume {:verifier.code 0} true;
  $p15 := $p3;
  $p16 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8747, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $load.bytes.bv32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8747, 37} true;
  assume {:verifier.code 0} true;
  $i18 := $and.bv32($i17, 255bv32);
  // WARNING: %21 = and i32 %20, 255, !dbg !6824, !verifier.code !6789
  call {:cexpr "iocnumX"} boogie_si_record_bv32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8748, 12} true;
  assume {:verifier.code 0} true;
  call $i19 := mpt_verify_adapter($i18, $p5);
  // WARNING: %22 = call i32 @mpt_verify_adapter(i32 %21, %struct._MPT_ADAPTER** %6), !dbg !6827, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.bv32($i19, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 18} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8750, 5} true;
  assume {:verifier.code 0} true;
  call $i24 := printk.ref.bv32.bv32(.str.135, 2880bv32, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8751, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i20 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.bv64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 42} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.bv64($i22, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8749, 7} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8755, 29} true;
  assume {:verifier.code 0} true;
  $p25 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8755, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := mptctl_syscall_down($p25, $i9);
  // WARNING: %33 = call i32 @mptctl_syscall_down(%struct._MPT_ADAPTER* %32, i32 %10), !dbg !6842, !verifier.code !6789
  call {:cexpr "ret"} boogie_si_record_bv32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8756, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.bv32($i26, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8756, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i27 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8757, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i26;
  goto $bb3;
$bb12:
  assume !(($i27 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 14} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 14} true;
  assume {:verifier.code 0} true;
  $i30 := $load.bytes.bv32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $and.bv32($i30, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 36} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.bv32($i31, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8761, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i32 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8762, 72} true;
  assume {:verifier.code 0} true;
  $p33 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8762, 78} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8762, 61} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8762, 5} true;
  assume {:verifier.code 0} true;
  call $i36 := printk.ref.ref(.str.136, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8763, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i32 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8766, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $p3;
  $p38 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8766, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $load.bytes.bv32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8766, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $p4;
  $p41 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8766, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p41, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8767, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $p3;
  $p43 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8767, 30} true;
  assume {:verifier.code 0} true;
  $i44 := $load.bytes.bv32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8767, 8} true;
  assume {:verifier.code 0} true;
  $p45 := $p4;
  $p46 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8767, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p46, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8768, 25} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8768, 25} true;
  assume {:verifier.code 0} true;
  $i48 := $load.bytes.bv32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8768, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8768, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8769, 31} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8769, 31} true;
  assume {:verifier.code 0} true;
  $i51 := $load.bytes.bv32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8769, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8769, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8770, 28} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p3, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8770, 28} true;
  assume {:verifier.code 0} true;
  $i54 := $load.bytes.bv32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8770, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p4, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8770, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8771, 29} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p3, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8771, 29} true;
  assume {:verifier.code 0} true;
  $i57 := $load.bytes.bv32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8771, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8771, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8772, 31} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p3, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8772, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $load.bytes.bv32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8772, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p4, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8772, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p61, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8773, 31} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p3, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8773, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $load.bytes.bv32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8773, 8} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8773, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 59} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 59} true;
  assume {:verifier.code 0} true;
  $i66 := $load.bytes.bv32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 36} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.bv32.bv64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 27} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.bv64.ref($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8774, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p69, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 55} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 55} true;
  assume {:verifier.code 0} true;
  $i71 := $load.bytes.bv32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 32} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.bv32.bv64($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 23} true;
  assume {:verifier.code 0} true;
  $p73 := $i2p.bv64.ref($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 8} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8775, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p74, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 56} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 56} true;
  assume {:verifier.code 0} true;
  $i76 := $load.bytes.bv32($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 33} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.bv32.bv64($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 24} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.bv64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8776, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p79, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 55} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p3, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 55} true;
  assume {:verifier.code 0} true;
  $i81 := $load.bytes.bv32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 32} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.bv32.bv64($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 23} true;
  assume {:verifier.code 0} true;
  $p83 := $i2p.bv64.ref($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 8} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8777, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p84, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8778, 54} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p6, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8778, 37} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8778, 9} true;
  assume {:verifier.code 0} true;
  call $i87 := mptctl_do_mpt_command($p4, $p86);
  // WARNING: %100 = call i32 @mptctl_do_mpt_command(%struct.mpt_ioctl_command* byval align 8 %5, i8* %99), !dbg !6910, !verifier.code !6789
  call {:cexpr "ret"} boogie_si_record_bv32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8779, 25} true;
  assume {:verifier.code 0} true;
  $p88 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8779, 31} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 4232);
  $p90 := $add.ref($p88, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8779, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_29($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8780, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i87;
  goto $bb3;
}
const compat_mptfwxfer_ioctl: ref;
axiom (compat_mptfwxfer_ioctl == $sub.ref(0, 194162));
procedure  compat_mptfwxfer_ioctl($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: bv32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv32;
  var $p9: ref;
  var $p10: ref;
  var $i11: bv64;
  var $i12: bv1;
  var $p14: ref;
  var $i15: bv32;
  var $i16: bv32;
  var $i17: bv32;
  var $i18: bv1;
  var $p19: ref;
  var $i20: bv64;
  var $i21: bv1;
  var $i22: bv32;
  var $p23: ref;
  var $i24: bv32;
  var $i25: bv1;
  var $p26: ref;
  var $p27: ref;
  var $i28: bv32;
  var $i29: bv32;
  var $i30: bv1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: bv32;
  var $p35: ref;
  var $p36: ref;
  var $i37: bv32;
  var $p38: ref;
  var $p39: ref;
  var $i40: bv32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: bv32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: bv32;
  var $i49: bv64;
  var $i50: bv32;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i13: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(12, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !7242, metadata !6788), !dbg !7243, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7244, metadata !6788), !dbg !7245, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8690, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8691, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8691, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $load.bytes.bv32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8691, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $and.bv32($i7, 2048bv32);
  // WARNING: %9 = and i32 %8, 2048, !dbg !6811, !verifier.code !6789
  call {:cexpr "nonblock"} boogie_si_record_bv32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8692, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8692, 43} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.bv64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8692, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := copy_from_user($p9, $p10, 12bv64);
  // WARNING: %12 = call i64 @copy_from_user(i8* %10, i8* %11, i64 12), !dbg !6816, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8693, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.bv64($i11, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8693, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8694, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i12 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8724, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8698, 25} true;
  assume {:verifier.code 0} true;
  $p14 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8698, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $load.bytes.bv32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8698, 32} true;
  assume {:verifier.code 0} true;
  $i16 := $and.bv32($i15, 255bv32);
  // WARNING: %19 = and i32 %18, 255, !dbg !6825, !verifier.code !6789
  call {:cexpr "iocnumX"} boogie_si_record_bv32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8699, 12} true;
  assume {:verifier.code 0} true;
  call $i17 := mpt_verify_adapter($i16, $p5);
  // WARNING: %20 = call i32 @mpt_verify_adapter(i32 %19, %struct._MPT_ADAPTER** %6), !dbg !6828, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 14} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.bv32($i17, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 18} true;
  assume {:verifier.code 0} true;
  assume ($i18 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8701, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref.bv32.bv32(.str.137, 2840bv32, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8702, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i18 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.bv64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 42} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.bv64($i20, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8700, 7} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i21 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8706, 29} true;
  assume {:verifier.code 0} true;
  $p23 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8706, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := mptctl_syscall_down($p23, $i8);
  // WARNING: %31 = call i32 @mptctl_syscall_down(%struct._MPT_ADAPTER* %30, i32 %9), !dbg !6843, !verifier.code !6789
  call {:cexpr "ret"} boogie_si_record_bv32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8707, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.bv32($i24, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8707, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8708, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i24;
  goto $bb3;
$bb12:
  assume !(($i25 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 14} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 14} true;
  assume {:verifier.code 0} true;
  $i28 := $load.bytes.bv32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 26} true;
  assume {:verifier.code 0} true;
  $i29 := $and.bv32($i28, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 36} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.bv32($i29, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8712, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i30 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8713, 76} true;
  assume {:verifier.code 0} true;
  $p31 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8713, 82} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8713, 65} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8713, 5} true;
  assume {:verifier.code 0} true;
  call $i34 := printk.ref.ref(.str.138, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8714, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i30 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8717, 7} true;
  assume {:verifier.code 0} true;
  $p35 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8717, 14} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.bv32($M.2, $p35, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8718, 21} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8718, 21} true;
  assume {:verifier.code 0} true;
  $i37 := $load.bytes.bv32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8718, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8718, 13} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.bv32($M.3, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8719, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8719, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $load.bytes.bv32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8719, 14} true;
  assume {:verifier.code 0} true;
  call $p41 := compat_ptr($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8719, 7} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8719, 12} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p42, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 41} true;
  assume {:verifier.code 0} true;
  $p43 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 41} true;
  assume {:verifier.code 0} true;
  $i44 := $load.bv32($M.2, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 61} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 61} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.4, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 80} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 80} true;
  assume {:verifier.code 0} true;
  $i48 := $load.bv32($M.3, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 67} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.bv32.bv64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8720, 9} true;
  assume {:verifier.code 0} true;
  call $i50 := mptctl_do_fw_download($i44, $p46, $i49);
  // WARNING: %63 = call i32 @mptctl_do_fw_download(i32 %57, i8* %59, i64 %62), !dbg !6876, !verifier.code !6789
  call {:cexpr "ret"} boogie_si_record_bv32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8721, 25} true;
  assume {:verifier.code 0} true;
  $p51 := $load.bytes.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8721, 31} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 4232);
  $p53 := $add.ref($p51, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8721, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_28($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8722, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i50;
  goto $bb3;
}
const ldv_mutex_unlock_31: ref;
axiom (ldv_mutex_unlock_31 == $sub.ref(0, 195194));
procedure  ldv_mutex_unlock_31($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9423, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9424, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9425, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const copy_from_user: ref;
axiom (copy_from_user == $sub.ref(0, 196226));
procedure  copy_from_user($p0: ref, $p1: ref, $i2: bv64)
  returns ($r: bv64)
{
  var $i3: bv32;
  var $i4: bv64;
  var $i5: bv32;
  var $i6: bv1;
  var $i8: bv64;
  var $i9: bv1;
  var $i7: bv1;
  var $i10: bv32;
  var $i11: bv64;
  var $i12: bv64;
  var $i13: bv1;
  var $i14: bv32;
  var $i15: bv64;
  var $i16: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7345, metadata !6788), !dbg !7346, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5842, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.bv32($p0, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5842, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.bv32.bv64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !6797, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5843, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.bv64.bv32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !6801, !verifier.code !6792
  call {:cexpr "sz"} boogie_si_record_bv32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5844, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.29, 697bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.bv32($i5, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1bv1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1bv1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.bv1.bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.bv32.bv64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1bv64);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !6814, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5846, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.bv64($i12, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5846, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.bv32.bv64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.bv64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5845, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5847, 35} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5847, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_from_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_from_user(i8* %0, i8* %1, i32 %18), !dbg !6822, !verifier.code !6792
  call {:cexpr "n"} boogie_si_record_bv64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5848, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5849, 5} true;
  assume {:verifier.code 0} true;
  call __copy_from_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5851, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const mpt_verify_adapter: ref;
axiom (mpt_verify_adapter == $sub.ref(0, 197258));
procedure  mpt_verify_adapter($i0: bv32, $p1: ref)
  returns ($r: bv32);
const printk: ref;
axiom (printk == $sub.ref(0, 198290));
procedure  printk.ref.ref.bv32.bv32($p0: ref, p.1: ref, p.2: bv32, p.3: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.bv32.bv32.bv32($p0: ref, p.1: ref, p.2: bv32, p.3: bv32, p.4: bv32, p.5: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.ref.ref($p0: ref, p.1: ref, p.2: bv32, p.3: ref, p.4: ref)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.ref($p0: ref, p.1: ref, p.2: ref, p.3: ref)
  returns ($r: bv32);
procedure  printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref)
  returns ($r: bv32);
procedure  printk.ref.ref($p0: ref, p.1: ref)
  returns ($r: bv32);
procedure  printk.ref($p0: ref)
  returns ($r: bv32);
procedure  printk.ref.bv32($p0: ref, p.1: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.bv32.ref($p0: ref, p.1: ref, p.2: ref, p.3: bv32, p.4: ref)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.bv32($p0: ref, p.1: ref, p.2: ref, p.3: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.bv64($p0: ref, p.1: ref, p.2: bv32, p.3: bv64)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.ref($p0: ref, p.1: ref, p.2: bv32, p.3: ref)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32($p0: ref, p.1: ref, p.2: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.bv32.bv32($p0: ref, p.1: ref, p.2: ref, p.3: bv32, p.4: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.bv32.bv32.bv32.bv32($p0: ref, p.1: ref, p.2: bv32, p.3: bv32, p.4: bv32, p.5: bv32, p.6: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.bv32.bv32.bv32($p0: ref, p.1: ref, p.2: ref, p.3: bv32, p.4: bv32, p.5: bv32)
  returns ($r: bv32);
procedure  printk.ref.bv32.bv32($p0: ref, p.1: bv32, p.2: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.bv32.bv32.bv32.bv32.bv32.bv32.bv32($p0: ref, p.1: ref, p.2: bv32, p.3: bv32, p.4: bv32, p.5: bv32, p.6: bv32, p.7: bv32, p.8: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.ref.bv32($p0: ref, p.1: ref, p.2: ref, p.3: ref, p.4: bv32)
  returns ($r: bv32);
procedure  printk.ref.ref.ref.bv32.bv32.ref($p0: ref, p.1: ref, p.2: ref, p.3: bv32, p.4: bv32, p.5: ref)
  returns ($r: bv32);
const mptctl_syscall_down: ref;
axiom (mptctl_syscall_down == $sub.ref(0, 199322));
procedure  mptctl_syscall_down($p0: ref, $i1: bv32)
  returns ($r: bv32)
{
  var $i2: bv1;
  var $p3: ref;
  var $p4: ref;
  var $i5: bv32;
  var $i6: bv1;
  var $i7: bv32;
  var $p9: ref;
  var $p10: ref;
  var $i11: bv32;
  var $i12: bv1;
  var $i13: bv32;
  var $i8: bv32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_ADAPTER* %0, i64 0, metadata !7382, metadata !6788), !dbg !7383, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7384, metadata !6788), !dbg !7385, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5956, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5956, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5957, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 4232);
  $p4 := $add.ref($p0, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5957, 11} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv_mutex_trylock_12($p4);
  // WARNING: %7 = call i32 @ldv_mutex_trylock_12(%struct.mutex* %6), !dbg !6803, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5958, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.bv32($i5, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5958, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5964, 54} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 4232);
  $p10 := $add.ref($p0, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5964, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv_mutex_lock_interruptible_13($p10);
  // WARNING: %15 = call i32 @ldv_mutex_lock_interruptible_13(%struct.mutex* %14), !dbg !6814, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5965, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.bv32($i11, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5965, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i6 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5960, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.bv32(0bv32, 11bv32);
  goto $bb5;
$bb4:
  assume !(($i6 == 1bv1));
  assume {:verifier.code 0} true;
  $i7 := 0bv32;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5963, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5971, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb7:
  assume ($i12 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5967, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.bv32(0bv32, 512bv32);
  goto $bb9;
$bb8:
  assume !(($i12 == 1bv1));
  assume {:verifier.code 0} true;
  $i13 := 0bv32;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb6;
}
const compat_ptr: ref;
axiom (compat_ptr == $sub.ref(0, 200354));
procedure  compat_ptr($i0: bv32)
  returns ($r: ref)
{
  var $i1: bv64;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5828, 20} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.bv32.bv64($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5828, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.bv64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5828, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const mptctl_do_fw_download: ref;
axiom (mptctl_do_fw_download == $sub.ref(0, 201386));
procedure  mptctl_do_fw_download($i0: bv32, $p1: ref, $i2: bv64)
  returns ($r: bv32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv1;
  var $i9: bv32;
  var $i11: bv8;
  var $i12: bv32;
  var $i13: bv8;
  var $p14: ref;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $p18: ref;
  var $p19: ref;
  var $i20: bv32;
  var $i21: bv32;
  var $i22: bv1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: bv8;
  var $i27: bv32;
  var $i28: bv32;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv32;
  var $i32: bv32;
  var $i33: bv1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: bv32;
  var $p38: ref;
  var $p39: ref;
  var $i40: bv32;
  var $i41: bv32;
  var $i42: bv1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: bv32;
  var $i47: bv32;
  var $p48: ref;
  var $p49: ref;
  var $i50: bv32;
  var $i51: bv32;
  var $i52: bv1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: bv16;
  var $i76: bv32;
  var $i77: bv1;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: bv32;
  var $p87: ref;
  var $i88: bv32;
  var $p89: ref;
  var $p90: ref;
  var $i91: bv64;
  var $i92: bv1;
  var $p93: ref;
  var $p94: ref;
  var $i95: bv32;
  var $i96: bv64;
  var $i97: bv64;
  var $p98: ref;
  var $p99: ref;
  var $i100: bv8;
  var $i101: bv64;
  var $i102: bv64;
  var $i103: bv32;
  var $i104: bv32;
  var $i105: bv1;
  var $p107: ref;
  var $p108: ref;
  var $i109: bv32;
  var $i110: bv32;
  var $i111: bv1;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: bv32;
  var $i116: bv32;
  var $p117: ref;
  var $i118: bv32;
  var $i119: bv1;
  var $p126: ref;
  var $i127: bv32;
  var $i128: bv32;
  var $i129: bv32;
  var $i130: bv1;
  var $i131: bv1;
  var $p134: ref;
  var $i135: bv64;
  var $i136: bv1;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: bv32;
  var $p142: ref;
  var $i143: bv64;
  var $i144: bv32;
  var $p145: ref;
  var $p146: ref;
  var $i147: bv64;
  var $p148: ref;
  var $p149: ref;
  var $i150: bv32;
  var $i151: bv64;
  var $i152: bv64;
  var $i153: bv1;
  var $i154: bv32;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $i158: bv32;
  var $p159: ref;
  var $i160: bv32;
  var $i161: bv32;
  var $i162: bv32;
  var $i163: bv32;
  var $i132: bv32;
  var $i133: bv32;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: bv8;
  var $i169: bv64;
  var $p170: ref;
  var $i171: bv32;
  var $i172: bv32;
  var $i173: bv1;
  var $i120: bv32;
  var $i121: bv32;
  var $i122: bv32;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p174: ref;
  var $i175: bv32;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: bv8;
  var $i183: bv32;
  var $i184: bv8;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: bv64;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $i193: bv8;
  var $i194: bv32;
  var $i195: bv32;
  var $i196: bv1;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $i201: bv64;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $i205: bv8;
  var $i206: bv32;
  var $i207: bv32;
  var $i208: bv1;
  var $i197: bv64;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: bv32;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $i216: bv8;
  var $i217: bv32;
  var $i218: bv32;
  var $i219: bv1;
  var $p220: ref;
  var $i221: bv1;
  var $p222: ref;
  var $i223: bv32;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $i227: bv32;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $i232: bv8;
  var $i233: bv32;
  var $i234: bv32;
  var $i235: bv1;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $i239: bv32;
  var $p240: ref;
  var $i241: bv64;
  var $i242: bv1;
  var $i243: bv64;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $i251: bv16;
  var $i252: bv32;
  var $i253: bv32;
  var $i254: bv16;
  var $i255: bv32;
  var $i256: bv1;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $i260: bv32;
  var $i261: bv32;
  var $i262: bv1;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i266: bv32;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $i270: bv32;
  var $i271: bv32;
  var $i272: bv1;
  var $p273: ref;
  var $p274: ref;
  var $p275: ref;
  var $i276: bv32;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $i280: bv32;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $i284: bv32;
  var $i285: bv32;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $i289: bv32;
  var $i106: bv32;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $i296: bv64;
  var $p297: ref;
  var $p298: ref;
  var $i10: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %7 = alloca i32, align 4, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7428, metadata !6788), !dbg !7429, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6696, 12} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.bv32($M.5, $p6, 0bv32);
  // WARNING: store i32 0, i32* %7, align 4, !dbg !6805, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7442, metadata !6788), !dbg !7443, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7444, metadata !6788), !dbg !7445, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6701, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := mpt_verify_adapter($i0, $p3);
  // WARNING: %8 = call i32 @mpt_verify_adapter(i32 %0, %struct._MPT_ADAPTER** %4), !dbg !6815, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6702, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.bv32($i7, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6702, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6703, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := printk.ref.bv32(.str.62, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6704, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb2:
  assume !(($i8 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6706, 34} true;
  assume {:verifier.code 0} true;
  $i11 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6706, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.bv8.bv32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6706, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.bv32.bv8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6706, 45} true;
  assume {:verifier.code 0} true;
  $p14 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6706, 10} true;
  assume {:verifier.code 0} true;
  call $p15 := mpt_get_msg_frame($i13, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6707, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6707, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6707, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6885, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6708, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 11bv32);
  goto $bb3;
$bb5:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 14} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $load.bytes.bv32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $and.bv32($i20, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 36} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.bv32($i21, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6713, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6714, 84} true;
  assume {:verifier.code 0} true;
  $p23 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6714, 90} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6714, 73} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6715, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6715, 12} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.bv8.bv32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6714, 5} true;
  assume {:verifier.code 0} true;
  call $i28 := printk.ref.ref.bv32(.str.63, $p25, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6716, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i22 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 14} true;
  assume {:verifier.code 0} true;
  $i31 := $load.bytes.bv32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 26} true;
  assume {:verifier.code 0} true;
  $i32 := $and.bv32($i31, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 36} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.bv32($i32, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6719, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i33 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6720, 66} true;
  assume {:verifier.code 0} true;
  $p34 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6720, 72} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6720, 55} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6720, 5} true;
  assume {:verifier.code 0} true;
  call $i37 := printk.ref.ref.ref(.str.64, $p36, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6721, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i33 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 14} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $load.bytes.bv32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $and.bv32($i40, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 36} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.bv32($i41, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6724, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i42 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6725, 66} true;
  assume {:verifier.code 0} true;
  $p43 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6725, 72} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6725, 55} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6725, 79} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6725, 5} true;
  assume {:verifier.code 0} true;
  call $i47 := printk.ref.ref.bv32(.str.65, $p45, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6726, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i42 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 14} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 14} true;
  assume {:verifier.code 0} true;
  $i50 := $load.bytes.bv32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 26} true;
  assume {:verifier.code 0} true;
  $i51 := $and.bv32($i50, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 36} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.bv32($i51, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6729, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i52 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6730, 69} true;
  assume {:verifier.code 0} true;
  $p53 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6730, 75} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6730, 58} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6730, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := printk.ref.ref.bv32(.str.66, $p55, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6731, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i52 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6734, 11} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6735, 42} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6735, 11} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6736, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6736, 25} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6737, 10} true;
  assume {:verifier.code 0} true;
  $p62 := $p57;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6737, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p62, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6738, 10} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p57, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6738, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p63, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6739, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p57, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6739, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p64, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6740, 10} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p57, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6740, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p65, 9bv8);
  // WARNING: store i8 9, i8* %83, align 1, !dbg !6906, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6742, 10} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p57, 4);
  $p67 := $add.ref($add.ref($p57, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6742, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p67, 0bv8);
  // WARNING: store i8 0, i8* %85, align 2, !dbg !6910, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6744, 10} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p57, 4);
  $p69 := $add.ref($add.ref($p57, 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6744, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p69, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6745, 10} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p57, 4);
  $p71 := $add.ref($p57, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6745, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p71, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 22} true;
  assume {:verifier.code 0} true;
  $p72 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 28} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 1284);
  $p74 := $add.ref($p72, 1284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 34} true;
  assume {:verifier.code 0} true;
  $i75 := $load.bytes.bv16($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.bv16.bv32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 45} true;
  assume {:verifier.code 0} true;
  $i77 := $ugt.bv32($i76, 260bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i77 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6747, 12} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p57, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6747, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p78, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6748, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i77 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6749, 12} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p57, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6749, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p79, 0bv8);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6751, 10} true;
  assume {:verifier.code 0} true;
  $p80 := $p59;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6751, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p80, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6752, 10} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p59, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6752, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p81, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6753, 10} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p59, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6753, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p82, 12bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6754, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p59, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6754, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p83, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6755, 10} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p59, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6755, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p84, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6756, 10} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p59, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6756, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p85, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6757, 22} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6757, 10} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p59, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6757, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p87, $i86);
  // WARNING: store i32 %107, i32* %108, align 4, !dbg !6945, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i32 67108864, i64 0, metadata !7581, metadata !6788), !dbg !7582, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6760, 26} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6761, 26} true;
  assume {:verifier.code 0} true;
  $p89 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6760, 9} true;
  assume {:verifier.code 0} true;
  call $p90 := kbuf_alloc_2_sgl($i88, 67108864bv32, 28bv32, $p6, $p4, $p5, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6762, 7} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.bv64($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6762, 27} true;
  assume {:verifier.code 0} true;
  $i92 := $eq.bv64($i91, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i92 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6763, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 12bv32);
  goto $bb3;
$bb24:
  assume !(($i92 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 38} true;
  assume {:verifier.code 0} true;
  $p93 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 44} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 44} true;
  assume {:verifier.code 0} true;
  $i95 := $load.bytes.bv32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 22} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.bv32.bv64($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 51} true;
  assume {:verifier.code 0} true;
  $i97 := $sub.bv64($i96, 28bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 77} true;
  assume {:verifier.code 0} true;
  $p98 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 83} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 83} true;
  assume {:verifier.code 0} true;
  $i100 := $load.bytes.bv8($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 61} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.bv8.bv64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 59} true;
  assume {:verifier.code 0} true;
  $i102 := $udiv.bv64($i97, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6767, 14} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.bv64.bv32($i102);
  // WARNING: %127 = trunc i64 %126 to i32, !dbg !6967, !verifier.code !6789
  call {:cexpr "maxfrags"} boogie_si_record_bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6768, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $load.bv32($M.5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6768, 16} true;
  assume {:verifier.code 0} true;
  $i105 := $sgt.bv32($i104, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6768, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i105 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6770, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.bv32(0bv32, 31bv32);
  goto $bb28;
$bb27:
  assume !(($i105 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6880, 3} true;
  assume {:verifier.code 0} true;
  $p290 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6880, 9} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p290, 4232);
  $p292 := $add.ref($add.ref($p290, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6880, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p292, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6881, 3} true;
  assume {:verifier.code 0} true;
  $p293 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6881, 9} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p293, 4232);
  $p295 := $add.ref($add.ref($p293, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6881, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p295, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6882, 18} true;
  assume {:verifier.code 0} true;
  $i296 := $load.bytes.bv64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6882, 27} true;
  assume {:verifier.code 0} true;
  $p297 := $load.ref($M.7, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6882, 36} true;
  assume {:verifier.code 0} true;
  $p298 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6882, 3} true;
  assume {:verifier.code 0} true;
  call kfree_sgl($p90, $i296, $p297, $p298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6883, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i106;
  goto $bb3;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 8} true;
  assume {:verifier.code 0} true;
  $p107 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 14} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 14} true;
  assume {:verifier.code 0} true;
  $i109 := $load.bytes.bv32($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 26} true;
  assume {:verifier.code 0} true;
  $i110 := $and.bv32($i109, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 36} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.bv32($i110, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6774, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i111 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6775, 79} true;
  assume {:verifier.code 0} true;
  $p112 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6775, 85} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p112, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6775, 68} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6776, 17} true;
  assume {:verifier.code 0} true;
  $i115 := $load.bv32($M.5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6775, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := printk.ref.ref.ref.bv32(.str.67, $p114, $p90, $i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6777, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i111 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6782, 8} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.7, $p4);
  // WARNING: call void @llvm.dbg.value(metadata %struct.buflist* %146, i64 0, metadata !7629, metadata !6788), !dbg !7630, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  $i118 := $load.bv32($M.5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $slt.bv32(0bv32, $i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i119 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  $i120, $i121, $i122, $p123, $p124, $p125 := 0bv32, 0bv32, 0bv32, $p117, $p90, $p61;
  goto $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i119 == 1bv1));
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb52;
$bb36:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6813, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6786, 16} true;
  assume {:verifier.code 0} true;
  $p126 := $p124;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6786, 16} true;
  assume {:verifier.code 0} true;
  $i127 := $load.bytes.bv32($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6786, 28} true;
  assume {:verifier.code 0} true;
  $i128 := $and.bv32($i127, 805306368bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6786, 42} true;
  assume {:verifier.code 0} true;
  $i129 := $lshr.bv32($i128, 28bv32);
  // WARNING: %153 = lshr i32 %152, 28, !dbg !7004, !verifier.code !6789
  call {:cexpr "nib"} boogie_si_record_bv32($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 11} true;
  assume {:verifier.code 0} true;
  $i130 := $eq.bv32($i129, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb38, $bb40;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 17} true;
  assume {:verifier.code 0} true;
  assume ($i130 == 1bv1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6789, 3} true;
  assume {:verifier.code 0} true;
  $i132, $i133 := $i122, $i121;
  goto $bb43;
$bb40:
  assume !(($i130 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 24} true;
  assume {:verifier.code 0} true;
  $i131 := $eq.bv32($i129, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb41, $bb42;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6787, 7} true;
  assume {:verifier.code 0} true;
  assume ($i131 == 1bv1);
  goto $bb39;
$bb42:
  assume !(($i131 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6790, 13} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p124, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6790, 13} true;
  assume {:verifier.code 0} true;
  $i135 := $load.bytes.bv64($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6790, 21} true;
  assume {:verifier.code 0} true;
  $i136 := $ne.bv64($i135, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6790, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb44, $bb45;
$bb43:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6807, 15} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p124, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6808, 11} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p123, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6809, 35} true;
  assume {:verifier.code 0} true;
  $p166 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6809, 41} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p166, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6809, 41} true;
  assume {:verifier.code 0} true;
  $i168 := $load.bytes.bv8($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6809, 19} true;
  assume {:verifier.code 0} true;
  $i169 := $zext.bv8.bv64($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6809, 17} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p125, $mul.ref($bv2int.64($i169), 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6810, 9} true;
  assume {:verifier.code 0} true;
  $i171 := $add.bv32($i120, 1bv32);
  // WARNING: %200 = add nsw i32 %.0115, 1, !dbg !7051, !verifier.code !6789
  call {:cexpr "i"} boogie_si_record_bv32($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  $i172 := $load.bv32($M.5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $slt.bv32($i171, $i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  $i120, $i121, $i122, $p123, $p124, $p125 := $i171, $i133, $i132, $p165, $p164, $p170;
  assume {:branchcond $i173} true;
  goto $bb50, $bb51;
$bb44:
  assume ($i136 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 8} true;
  assume {:verifier.code 0} true;
  $p137 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 14} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 14} true;
  assume {:verifier.code 0} true;
  $p139 := $load.bytes.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 45} true;
  assume {:verifier.code 0} true;
  $p140 := $p124;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 45} true;
  assume {:verifier.code 0} true;
  $i141 := $load.bytes.bv32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 64} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p124, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6791, 64} true;
  assume {:verifier.code 0} true;
  $i143 := $load.bytes.bv64($M.0, $p142);
  call devirtbounce($p139, $p125, $i141, $i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6792, 11} true;
  assume {:verifier.code 0} true;
  $i144 := $add.bv32($i122, 1bv32);
  // WARNING: %170 = add nsw i32 %.2513, 1, !dbg !7024, !verifier.code !6789
  call {:cexpr "n"} boogie_si_record_bv32($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6793, 42} true;
  assume {:verifier.code 0} true;
  $p145 := $p123;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6793, 42} true;
  assume {:verifier.code 0} true;
  $p146 := $load.bytes.ref($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6793, 73} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.bv32.bv64($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6793, 71} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p1, $mul.ref($bv2int.64($i147), 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6794, 50} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p123, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6794, 50} true;
  assume {:verifier.code 0} true;
  $i150 := $load.bytes.bv32($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6794, 30} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.bv32.bv64($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6793, 15} true;
  assume {:verifier.code 0} true;
  call $i152 := copy_from_user($p146, $p148, $i151);
  // WARNING: %178 = call i64 @copy_from_user(i8* %172, i8* %174, i64 %177), !dbg !7030, !verifier.code !6789
  call {:cexpr "tmp___2"} boogie_si_record_bv64($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6795, 17} true;
  assume {:verifier.code 0} true;
  $i153 := $ne.bv64($i152, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6795, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $i144;
  assume {:branchcond $i153} true;
  goto $bb46, $bb47;
$bb45:
  assume !(($i136 == 1bv1));
  assume {:verifier.code 0} true;
  $i162, $i163 := $i122, $i121;
  goto $bb49;
$bb46:
  assume ($i153 == 1bv1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6797, 25} true;
  assume {:verifier.code 0} true;
  $p155 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6797, 31} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p155, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6797, 14} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6796, 7} true;
  assume {:verifier.code 0} true;
  call $i158 := printk.ref.ref.ref.bv32.bv32.ref(.str.68, $p157, .str.27, 928bv32, $i154, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6799, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.bv32(0bv32, 14bv32);
  goto $bb28;
$bb47:
  assume !(($i153 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6803, 27} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p123, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6803, 27} true;
  assume {:verifier.code 0} true;
  $i160 := $load.bytes.bv32($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6803, 31} true;
  assume {:verifier.code 0} true;
  $i161 := $add.bv32($i160, $i121);
  // WARNING: %189 = add nsw i32 %188, %.214, !dbg !7043, !verifier.code !6789
  call {:cexpr "fw_bytes_copied"} boogie_si_record_bv32($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6804, 3} true;
  assume {:verifier.code 0} true;
  $i162, $i163 := $i144, $i161;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i132, $i133 := $i162, $i163;
  goto $bb43;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  assume ($i173 == 1bv1);
  goto $bb36;
$bb51:
  assume !(($i173 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6812, 7} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6818, 41} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p57, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6818, 41} true;
  assume {:verifier.code 0} true;
  $i175 := $load.bytes.bv32($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6818, 3} true;
  assume {:verifier.code 0} true;
  $p176 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6818, 9} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p176, 4232);
  $p178 := $add.ref($add.ref($p176, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6818, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p178, $i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6819, 3} true;
  assume {:verifier.code 0} true;
  $p179 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6819, 9} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p179, 4232);
  $p181 := $add.ref($add.ref($p179, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6819, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p181, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6820, 27} true;
  assume {:verifier.code 0} true;
  $i182 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6820, 21} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.bv8.bv32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6820, 21} true;
  assume {:verifier.code 0} true;
  $i184 := $trunc.bv32.bv8($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6820, 38} true;
  assume {:verifier.code 0} true;
  $p185 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6820, 3} true;
  assume {:verifier.code 0} true;
  call mpt_put_msg_frame($i184, $p185, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 44} true;
  assume {:verifier.code 0} true;
  $p186 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 50} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p186, 4232);
  $p188 := $add.ref($add.ref($p186, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 14} true;
  assume {:verifier.code 0} true;
  call $i189 := wait_for_completion_timeout($p188, 15000bv64);
  // WARNING: %221 = call i64 @wait_for_completion_timeout(%struct.completion* %220, i64 15000), !dbg !7067, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 14} true;
  assume {:verifier.code 0} true;
  $p190 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 20} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p190, 4232);
  $p192 := $add.ref($add.ref($p190, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 31} true;
  assume {:verifier.code 0} true;
  $i193 := $load.bytes.bv8($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.bv8.bv32($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 38} true;
  assume {:verifier.code 0} true;
  $i195 := $and.bv32($i194, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 43} true;
  assume {:verifier.code 0} true;
  $i196 := $eq.bv32($i195, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i196} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i196 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  $i197 := $i189;
  goto $bb56;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i196 == 1bv1));
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb65;
$bb56:
  assume {:verifier.code 0} true;
  // WARNING: %242 = phi i64 [ %221, %.lr.ph ], [ %233, %229 ], !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6825, 63} true;
  assume {:verifier.code 0} true;
  $p209 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6825, 69} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p209, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6825, 52} true;
  assume {:verifier.code 0} true;
  $p211 := $bitcast.ref.ref($p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6825, 5} true;
  assume {:verifier.code 0} true;
  call $i212 := printk.ref.ref.ref(.str.69, $p211, .str.70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 16} true;
  assume {:verifier.code 0} true;
  $p213 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 22} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p213, 4232);
  $p215 := $add.ref($add.ref($p213, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 33} true;
  assume {:verifier.code 0} true;
  $i216 := $load.bytes.bv8($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 10} true;
  assume {:verifier.code 0} true;
  $i217 := $zext.bv8.bv32($i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 40} true;
  assume {:verifier.code 0} true;
  $i218 := $and.bv32($i217, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 45} true;
  assume {:verifier.code 0} true;
  $i219 := $ne.bv32($i218, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6826, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb60, $bb61;
$bb57:
  assume !(($i221 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 44} true;
  assume {:verifier.code 0} true;
  $p198 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 50} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p198, 4232);
  $p200 := $add.ref($add.ref($p198, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6822, 14} true;
  assume {:verifier.code 0} true;
  call $i201 := wait_for_completion_timeout($p200, 15000bv64);
  // WARNING: %233 = call i64 @wait_for_completion_timeout(%struct.completion* %232, i64 15000), !dbg !7067, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 14} true;
  assume {:verifier.code 0} true;
  $p202 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 20} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p202, 4232);
  $p204 := $add.ref($add.ref($p202, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 31} true;
  assume {:verifier.code 0} true;
  $i205 := $load.bytes.bv8($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 8} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.bv8.bv32($i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 38} true;
  assume {:verifier.code 0} true;
  $i207 := $and.bv32($i206, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 43} true;
  assume {:verifier.code 0} true;
  $i208 := $eq.bv32($i207, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  $i197 := $i201;
  assume {:branchcond $i208} true;
  goto $bb58, $bb59;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  assume ($i208 == 1bv1);
  goto $bb56;
$bb59:
  assume !(($i208 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb60:
  assume ($i219 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6827, 26} true;
  assume {:verifier.code 0} true;
  $p220 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6827, 7} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p220, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6828, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.bv32(0bv32, 62bv32);
  goto $bb28;
$bb61:
  assume !(($i219 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6832, 18} true;
  assume {:verifier.code 0} true;
  $i221 := $eq.bv64($i197, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6832, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb63, $bb57;
$bb63:
  assume ($i221 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6833, 33} true;
  assume {:verifier.code 0} true;
  $p222 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6833, 17} true;
  assume {:verifier.code 0} true;
  call $i223 := mpt_GetIocState($p222, 0bv32);
  // WARNING: %261 = call i32 @mpt_GetIocState(%struct._MPT_ADAPTER* %260, i32 0), !dbg !7100, !verifier.code !6789
  call {:cexpr "tmp___3"} boogie_si_record_bv32($i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6834, 91} true;
  assume {:verifier.code 0} true;
  $p224 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6834, 97} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p224, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6834, 80} true;
  assume {:verifier.code 0} true;
  $p226 := $bitcast.ref.ref($p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6834, 7} true;
  assume {:verifier.code 0} true;
  call $i227 := printk.ref.ref.bv32(.str.71, $p226, $i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6836, 30} true;
  assume {:verifier.code 0} true;
  $p228 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6836, 7} true;
  assume {:verifier.code 0} true;
  call mptctl_timeout_expired($p228, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6837, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6840, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.bv32(0bv32, 62bv32);
  goto $bb28;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 14} true;
  assume {:verifier.code 0} true;
  $p229 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 20} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p229, 4232);
  $p231 := $add.ref($add.ref($p229, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 31} true;
  assume {:verifier.code 0} true;
  $i232 := $load.bytes.bv8($M.0, $p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 8} true;
  assume {:verifier.code 0} true;
  $i233 := $zext.bv8.bv32($i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 38} true;
  assume {:verifier.code 0} true;
  $i234 := $and.bv32($i233, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 43} true;
  assume {:verifier.code 0} true;
  $i235 := $eq.bv32($i234, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6844, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i235} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i235 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6845, 63} true;
  assume {:verifier.code 0} true;
  $p236 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6845, 69} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p236, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6845, 52} true;
  assume {:verifier.code 0} true;
  $p238 := $bitcast.ref.ref($p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6845, 5} true;
  assume {:verifier.code 0} true;
  call $i239 := printk.ref.ref.ref(.str.69, $p238, .str.70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6846, 24} true;
  assume {:verifier.code 0} true;
  $p240 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6846, 5} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p240, $p15);
  // WARNING: call void @mpt_free_msg_frame(%struct._MPT_ADAPTER* %282, %struct._MPT_FRAME_HDR* %17), !dbg !7125, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6848, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.bv32(0bv32, 61bv32);
  goto $bb28;
$bb67:
  assume !(($i235 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6852, 7} true;
  assume {:verifier.code 0} true;
  $i241 := $p2i.ref.bv64($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6852, 27} true;
  assume {:verifier.code 0} true;
  $i242 := $ne.bv64($i241, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6852, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i242 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6853, 20} true;
  assume {:verifier.code 0} true;
  $i243 := $load.bytes.bv64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6853, 29} true;
  assume {:verifier.code 0} true;
  $p244 := $load.ref($M.7, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6853, 38} true;
  assume {:verifier.code 0} true;
  $p245 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6853, 5} true;
  assume {:verifier.code 0} true;
  call kfree_sgl($p90, $i243, $p244, $p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6854, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i242 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6857, 50} true;
  assume {:verifier.code 0} true;
  $p246 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6857, 56} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p246, 4232);
  $p248 := $add.ref($add.ref($p246, 4232), 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6857, 14} true;
  assume {:verifier.code 0} true;
  $p249 := $bitcast.ref.ref($p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6858, 38} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p249, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6858, 38} true;
  assume {:verifier.code 0} true;
  $i251 := $load.bytes.bv16($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6858, 13} true;
  assume {:verifier.code 0} true;
  $i252 := $zext.bv16.bv32($i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6858, 48} true;
  assume {:verifier.code 0} true;
  $i253 := $and.bv32($i252, 32767bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6858, 13} true;
  assume {:verifier.code 0} true;
  $i254 := $trunc.bv32.bv16($i253);
  // WARNING: %301 = trunc i32 %300 to i16, !dbg !7141, !verifier.code !6789
  call {:cexpr "iocstat"} boogie_si_record_bv16($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6859, 7} true;
  assume {:verifier.code 0} true;
  $i255 := $zext.bv16.bv32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6859, 30} true;
  assume {:verifier.code 0} true;
  $i256 := $eq.bv32($i255, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6859, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i256} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i256 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6860, 67} true;
  assume {:verifier.code 0} true;
  $p257 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6860, 73} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p257, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6860, 56} true;
  assume {:verifier.code 0} true;
  $p259 := $bitcast.ref.ref($p258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6860, 5} true;
  assume {:verifier.code 0} true;
  call $i260 := printk.ref.ref(.str.72, $p259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6861, 5} true;
  assume {:verifier.code 0} true;
  $i10 := 0bv32;
  goto $bb3;
$bb73:
  assume !(($i256 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6863, 7} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.bv16.bv32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6863, 30} true;
  assume {:verifier.code 0} true;
  $i262 := $eq.bv32($i261, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6863, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i262} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i262 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6864, 91} true;
  assume {:verifier.code 0} true;
  $p263 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6864, 97} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p263, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6864, 80} true;
  assume {:verifier.code 0} true;
  $p265 := $bitcast.ref.ref($p264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6864, 5} true;
  assume {:verifier.code 0} true;
  call $i266 := printk.ref.ref(.str.73, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6865, 89} true;
  assume {:verifier.code 0} true;
  $p267 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6865, 95} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p267, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6865, 78} true;
  assume {:verifier.code 0} true;
  $p269 := $bitcast.ref.ref($p268);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6865, 5} true;
  assume {:verifier.code 0} true;
  call $i270 := printk.ref.ref(.str.74, $p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6866, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 56bv32);
  goto $bb3;
$bb75:
  assume !(($i262 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  $i271 := $zext.bv16.bv32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6868, 30} true;
  assume {:verifier.code 0} true;
  $i272 := $eq.bv32($i271, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i272} true;
  goto $bb76, $bb77;
$bb76:
  assume ($i272 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6869, 62} true;
  assume {:verifier.code 0} true;
  $p273 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6869, 68} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p273, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6869, 51} true;
  assume {:verifier.code 0} true;
  $p275 := $bitcast.ref.ref($p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6869, 5} true;
  assume {:verifier.code 0} true;
  call $i276 := printk.ref.ref(.str.75, $p275);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6870, 71} true;
  assume {:verifier.code 0} true;
  $p277 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6870, 77} true;
  assume {:verifier.code 0} true;
  $p278 := $add.ref($p277, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6870, 60} true;
  assume {:verifier.code 0} true;
  $p279 := $bitcast.ref.ref($p278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6870, 5} true;
  assume {:verifier.code 0} true;
  call $i280 := printk.ref.ref(.str.76, $p279);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6871, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 16bv32);
  goto $bb3;
$bb77:
  assume !(($i272 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6874, 23} true;
  assume {:verifier.code 0} true;
  $p281 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6874, 29} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p281, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6874, 12} true;
  assume {:verifier.code 0} true;
  $p283 := $bitcast.ref.ref($p282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6874, 36} true;
  assume {:verifier.code 0} true;
  $i284 := $zext.bv16.bv32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6873, 5} true;
  assume {:verifier.code 0} true;
  call $i285 := printk.ref.ref.bv32(.str.77, $p283, $i284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6875, 65} true;
  assume {:verifier.code 0} true;
  $p286 := $load.bytes.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6875, 71} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p286, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6875, 54} true;
  assume {:verifier.code 0} true;
  $p288 := $bitcast.ref.ref($p287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6875, 5} true;
  assume {:verifier.code 0} true;
  call $i289 := printk.ref.ref(.str.78, $p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6876, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 42bv32);
  goto $bb3;
}
const ldv_mutex_unlock_28: ref;
axiom (ldv_mutex_unlock_28 == $sub.ref(0, 202418));
procedure  ldv_mutex_unlock_28($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9393, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9394, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9395, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_mutex_of__MPT_MGMT: ref;
axiom (ldv_mutex_unlock_mutex_of__MPT_MGMT == $sub.ref(0, 203450));
procedure  ldv_mutex_unlock_mutex_of__MPT_MGMT($p0: ref)
{
  var $i1: bv32;
  var $i2: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10157, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10157, 36} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10157, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10158, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10159, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10162, 32} true;
  assume {:verifier.code 0} true;
  $M.8 := 1bv32;
  call {:cexpr "ldv_mutex_mutex_of__MPT_MGMT"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10163, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mpt_get_msg_frame: ref;
axiom (mpt_get_msg_frame == $sub.ref(0, 204482));
procedure  mpt_get_msg_frame($i0: bv8, $p1: ref)
  returns ($r: ref);
const kbuf_alloc_2_sgl: ref;
axiom (kbuf_alloc_2_sgl == $sub.ref(0, 205514));
procedure  kbuf_alloc_2_sgl($i0: bv32, $i1: bv32, $i2: bv32, $p3: ref, $p4: ref, $p5: ref, $p6: ref)
  returns ($r: ref)
{
  var $p7: ref;
  var $i8: bv1;
  var $i9: bv32;
  var $i10: bv64;
  var $p11: ref;
  var $p12: ref;
  var $i13: bv64;
  var $i14: bv1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: bv64;
  var $i21: bv1;
  var $i23: bv32;
  var $i24: bv1;
  var $i25: bv32;
  var $p26: ref;
  var $i27: bv32;
  var $i28: bv32;
  var $p29: ref;
  var $i30: bv8;
  var $i31: bv32;
  var $i32: bv32;
  var $i33: bv32;
  var $i34: bv1;
  var $i45: bv32;
  var $i46: bv1;
  var $i48: bv32;
  var $i49: bv64;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: bv64;
  var $p55: ref;
  var $i56: bv64;
  var $p57: ref;
  var $p58: ref;
  var $i59: bv64;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: bv64;
  var $i64: bv1;
  var $i67: bv32;
  var $i68: bv1;
  var $i69: bv32;
  var $p70: ref;
  var $p71: ref;
  var $i72: bv32;
  var $p73: ref;
  var $p74: ref;
  var $i75: bv32;
  var $i65: bv32;
  var $i66: bv32;
  var $i79: bv32;
  var $i80: bv32;
  var $i81: bv32;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: bv64;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: bv64;
  var $i90: bv64;
  var $p91: ref;
  var $i92: bv32;
  var $i93: bv32;
  var $p94: ref;
  var $i95: bv32;
  var $i96: bv1;
  var $i97: bv32;
  var $p98: ref;
  var $i99: bv32;
  var $i103: bv1;
  var $i104: bv32;
  var $p105: ref;
  var $p106: ref;
  var $i107: bv32;
  var $p108: ref;
  var $p109: ref;
  var $i110: bv32;
  var $i111: bv32;
  var $i112: bv1;
  var $i113: bv32;
  var $p114: ref;
  var $p115: ref;
  var $i116: bv32;
  var $p117: ref;
  var $p118: ref;
  var $i119: bv32;
  var $i120: bv1;
  var $i38: bv1;
  var $i39: bv32;
  var $i40: bv32;
  var $i41: bv32;
  var $i42: bv32;
  var $p43: ref;
  var $i44: bv32;
  var $i47: bv32;
  var $i121: bv32;
  var $p122: ref;
  var $i123: bv32;
  var $i35: bv32;
  var $p36: ref;
  var $i37: bv32;
  var $i76: bv32;
  var $p77: ref;
  var $i78: bv32;
  var $i124: bv32;
  var $p125: ref;
  var $i126: bv32;
  var $i100: bv32;
  var $i101: bv32;
  var $p102: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: bv32;
  var $i130: bv32;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: bv32;
  var $i135: bv32;
  var $i136: bv1;
  var $p137: ref;
  var $p138: ref;
  var $i139: bv32;
  var $p140: ref;
  var $i141: bv32;
  var $i142: bv32;
  var $i143: bv1;
  var $p144: ref;
  var $p145: ref;
  var $i146: bv32;
  var $i22: bv32;
  var $i147: bv64;
  var $i148: bv1;
  var $i149: bv1;
  var $i151: bv64;
  var $p152: ref;
  var $p153: ref;
  var $i154: bv32;
  var $i155: bv32;
  var $i156: bv1;
  var $i157: bv64;
  var $p158: ref;
  var $p159: ref;
  var $i160: bv64;
  var $i161: bv64;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $i165: bv64;
  var $p166: ref;
  var $p167: ref;
  var $i168: bv32;
  var $p169: ref;
  var $p170: ref;
  var $i171: bv64;
  var $i172: bv32;
  var $i173: bv1;
  var $i150: bv32;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $i177: bv64;
  var $p178: ref;
  var $p15: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %8 = alloca i64, align 8, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !7865, metadata !6788), !dbg !7866, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7867, metadata !6788), !dbg !7868, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.value(metadata %struct.buflist* null, i64 0, metadata !7883, metadata !6788), !dbg !7884, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7885, metadata !6788), !dbg !7886, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7887, metadata !6788), !dbg !7888, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !7889, metadata !6788), !dbg !7890, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6922, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.bv32($i0, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6922, 14} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6922, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $i0;
  goto $bb3;
$bb2:
  assume !(($i8 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6922, 14} true;
  assume {:verifier.code 0} true;
  $i9 := 131072bv32;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6922, 14} true;
  assume {:verifier.code 0} true;
  // WARNING: %13 = phi i32 [ %0, %10 ], [ 131072, %11 ], !dbg !6827, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !7902, metadata !6788), !dbg !7903, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7904, metadata !6788), !dbg !7905, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6925, 10} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.bv32($M.5, $p3, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6926, 8} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.ref($M.7, $p4, $0.ref);
  // WARNING: store %struct.buflist* null, %struct.buflist** %4, align 8, !dbg !6836, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6928, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.bv32.bv64(74bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6928, 9} true;
  assume {:verifier.code 0} true;
  call $p11 := kzalloc($i10, 131280bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6929, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6930, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.bv64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6930, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.bv64($i13, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6931, 5} true;
  assume {:verifier.code 0} true;
  $p15 := $0.ref;
  goto $bb6;
$bb5:
  assume !(($i14 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7055, 1} true;
  assume {:verifier.code 0} true;
  $r := $p15;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6936, 39} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p6, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6936, 39} true;
  assume {:verifier.code 0} true;
  $p17 := $load.bytes.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6936, 13} true;
  assume {:verifier.code 0} true;
  call $p18 := pci_alloc_consistent($p17, 592bv64, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6937, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6938, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.bv64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6938, 30} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.bv64($i20, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i21 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6939, 5} true;
  assume {:verifier.code 0} true;
  $i22 := 0bv32;
  goto $bb10;
$bb9:
  assume !(($i21 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7027, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.bv64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7027, 30} true;
  assume {:verifier.code 0} true;
  $i148 := $ne.bv64($i147, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7027, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb52, $bb53;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6943, 14} true;
  assume {:verifier.code 0} true;
  $i23 := $and.bv32($i1, 67108864bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6943, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.bv32($i23, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6943, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i24 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6945, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 1bv32;
  goto $bb14;
$bb13:
  assume !(($i24 == 1bv1));
  assume {:verifier.code 0} true;
  $i25 := 2bv32;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 20} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 20} true;
  assume {:verifier.code 0} true;
  $i27 := $load.bytes.bv32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.bv32($i27, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 54} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p6, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 54} true;
  assume {:verifier.code 0} true;
  $i30 := $load.bytes.bv8($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.bv8.bv32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 41} true;
  assume {:verifier.code 0} true;
  $i32 := $sdiv.bv32($i28, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6949, 63} true;
  assume {:verifier.code 0} true;
  $i33 := $add.bv32($i32, $sub.bv32(0bv32, 1bv32));
  // WARNING: %43 = add nsw i32 %42, -1, !dbg !6878, !verifier.code !6790
  call {:cexpr "sg_spill"} boogie_si_record_bv32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 20} true;
  assume {:verifier.code 0} true;
  $i34 := $slt.bv32(0bv32, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i35, $p36, $i37 := 0bv32, $p18, $i9;
  assume {:branchcond $i34} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i34 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i38, $i39, $i40, $i41, $i42, $p43, $i44 := $i34, 0bv32, 0bv32, $i9, 0bv32, $p18, 0bv32;
  goto $bb18;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1bv1));
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i124, $p125, $i126 := $i35, $p36, $i37;
  goto $bb44;
$bb18:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $i41;
  goto $bb29;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6953, 21} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.bv32($i0, $i40);
  // WARNING: %46 = sub nsw i32 %0, %.04.ph43, !dbg !6884, !verifier.code !6790
  call {:cexpr "_min2___0"} boogie_si_record_bv32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6954, 26} true;
  assume {:verifier.code 0} true;
  $i46 := $slt.bv32($i47, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6954, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i46 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6954, 16} true;
  assume {:verifier.code 0} true;
  $i48 := $i47;
  goto $bb22;
$bb21:
  assume !(($i46 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6954, 16} true;
  assume {:verifier.code 0} true;
  $i48 := $i45;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6954, 16} true;
  assume {:verifier.code 0} true;
  // WARNING: %51 = phi i32 [ %.0531, %48 ], [ %46, %49 ], !dbg !6891, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6955, 14} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.bv32.bv64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6955, 12} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p12, $mul.ref($bv2int.64($i49), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6955, 44} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p12, $mul.ref($bv2int.64($i49), 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6955, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p51, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6956, 39} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p6, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6956, 39} true;
  assume {:verifier.code 0} true;
  $p53 := $load.bytes.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6956, 47} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.bv32.bv64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6956, 13} true;
  assume {:verifier.code 0} true;
  call $p55 := pci_alloc_consistent($p53, $i54, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6957, 14} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.bv32.bv64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6957, 12} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p12, $mul.ref($bv2int.64($i56), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6957, 44} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p12, $mul.ref($bv2int.64($i56), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6957, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p58, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 34} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.bv32.bv64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 32} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p12, $mul.ref($bv2int.64($i59), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 64} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p12, $mul.ref($bv2int.64($i59), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 64} true;
  assume {:verifier.code 0} true;
  $p62 := $load.bytes.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.bv64($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 69} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.bv64($i63, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6958, 7} true;
  assume {:verifier.code 0} true;
  $i65, $i66 := $i47, $i48;
  assume {:branchcond $i64} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i64 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6959, 25} true;
  assume {:verifier.code 0} true;
  $i67 := $sdiv.bv32($i47, 2bv32);
  // WARNING: %69 = sdiv i32 %.0531, 2, !dbg !6914, !verifier.code !6790
  call {:cexpr "alloc_sz"} boogie_si_record_bv32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6960, 18} true;
  assume {:verifier.code 0} true;
  $i68 := $eq.bv32($i67, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6960, 9} true;
  assume {:verifier.code 0} true;
  $i69 := $i44;
  assume {:branchcond $i68} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i64 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6971, 33} true;
  assume {:verifier.code 0} true;
  $i79 := $add.bv32($i40, $i66);
  // WARNING: %81 = add nsw i32 %.04.ph43, %.lcssa, !dbg !6927, !verifier.code !6790
  call {:cexpr "bytes_allocd"} boogie_si_record_bv32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6972, 31} true;
  assume {:verifier.code 0} true;
  $i80 := $or.bv32($i1, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6972, 51} true;
  assume {:verifier.code 0} true;
  $i81 := $or.bv32($i80, 268435456bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6972, 10} true;
  assume {:verifier.code 0} true;
  $p82 := $p43;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6972, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 36} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p6, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 36} true;
  assume {:verifier.code 0} true;
  $p84 := $load.bytes.ref($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 63} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.bv32.bv64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 61} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p12, $mul.ref($bv2int.64($i85), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 93} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p12, $mul.ref($bv2int.64($i85), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 93} true;
  assume {:verifier.code 0} true;
  $p88 := $load.bytes.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6974, 31} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.bv32.bv64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6973, 16} true;
  assume {:verifier.code 0} true;
  call $i90 := pci_map_single($p84, $p88, $i89, $i25);
  // WARNING: %92 = call i64 @pci_map_single(%struct.pci_dev* %86, i8* %90, i64 %91, i32 %.01), !dbg !6938, !verifier.code !6790
  call {:cexpr "dma_addr"} boogie_si_record_bv64($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6975, 10} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p43, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6975, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p91, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6976, 23} true;
  assume {:verifier.code 0} true;
  $i92 := $add.bv32($i42, 1bv32);
  // WARNING: %94 = add nsw i32 %.06.ph41, 1, !dbg !6943, !verifier.code !6790
  call {:cexpr "fragcnt"} boogie_si_record_bv32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6977, 25} true;
  assume {:verifier.code 0} true;
  $i93 := $add.bv32($i44, 1bv32);
  // WARNING: %95 = add nsw i32 %.08.ph39, 1, !dbg !6944, !verifier.code !6790
  call {:cexpr "numfrags"} boogie_si_record_bv32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6978, 15} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p43, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6979, 31} true;
  assume {:verifier.code 0} true;
  $i95 := $add.bv32($i39, 1bv32);
  // WARNING: %97 = add nsw i32 %.02.ph44, 1, !dbg !6946, !verifier.code !6790
  call {:cexpr "buflist_ent"} boogie_si_record_bv32($i95);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb25:
  assume ($i68 == 1bv1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6962, 30} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6962, 14} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6961, 7} true;
  assume {:verifier.code 0} true;
  call $i72 := printk.ref.ref(.str.79, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6963, 83} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6963, 67} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6963, 7} true;
  assume {:verifier.code 0} true;
  call $i75 := printk.ref.ref.bv32(.str.80, $p74, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6965, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $i69;
  goto $bb10;
$bb26:
  assume !(($i68 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i47, $i76, $p77, $i78 := $i67, $i44, $p43, $i67;
  assume {:branchcond $i38} true;
  goto $bb28, $bb30;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1bv1);
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7005, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb30:
  assume !(($i38 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i124, $p125, $i126 := $i76, $p77, $i78;
  goto $bb44;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6981, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $sge.bv32($i79, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6981, 7} true;
  assume {:verifier.code 0} true;
  $i97, $p98, $i99 := $i93, $p94, $i65;
  assume {:branchcond $i96} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i96 == 1bv1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6982, 5} true;
  assume {:verifier.code 0} true;
  $i100, $i101, $p102 := $i99, $i97, $p98;
  goto $bb34;
$bb33:
  assume !(($i96 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 52} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p102, $mul.ref($sub.ref(0, 1), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 77} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p102, $mul.ref($sub.ref(0, 1), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 77} true;
  assume {:verifier.code 0} true;
  $i129 := $load.bytes.bv32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 89} true;
  assume {:verifier.code 0} true;
  $i130 := $or.bv32($i129, $sub.bv32(0bv32, 1056964608bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 8} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p102, $mul.ref($sub.ref(0, 1), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 33} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p102, $mul.ref($sub.ref(0, 1), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7010, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p132, $i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7011, 10} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.bv32($M.5, $p3, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7012, 8} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.ref($M.7, $p4, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7013, 13} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p6, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7013, 13} true;
  assume {:verifier.code 0} true;
  $i134 := $load.bytes.bv32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7013, 25} true;
  assume {:verifier.code 0} true;
  $i135 := $and.bv32($i134, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7013, 35} true;
  assume {:verifier.code 0} true;
  $i136 := $ne.bv32($i135, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7013, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb46, $bb47;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6986, 15} true;
  assume {:verifier.code 0} true;
  $i103 := $eq.bv32($i92, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6986, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $i93;
  assume {:branchcond $i103} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i103 == 1bv1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6987, 96} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6987, 80} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6987, 5} true;
  assume {:verifier.code 0} true;
  call $i107 := printk.ref.ref(.str.81, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6988, 76} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6988, 60} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6988, 5} true;
  assume {:verifier.code 0} true;
  call $i110 := printk.ref.ref.bv32(.str.82, $p109, $i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6990, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i104;
  goto $bb10;
$bb37:
  assume !(($i103 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6994, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $mul.bv32($i93, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6994, 20} true;
  assume {:verifier.code 0} true;
  $i112 := $sgt.bv32($i111, 592bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6994, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $i93;
  assume {:branchcond $i112} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i112 == 1bv1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6996, 28} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6996, 12} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6995, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := printk.ref.ref(.str.83, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6997, 81} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6997, 65} true;
  assume {:verifier.code 0} true;
  $p118 := $bitcast.ref.ref($p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6997, 5} true;
  assume {:verifier.code 0} true;
  call $i119 := printk.ref.ref.bv32(.str.80, $p118, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6999, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i113;
  goto $bb10;
$bb40:
  assume !(($i112 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 20} true;
  assume {:verifier.code 0} true;
  $i120 := $slt.bv32($i79, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i38, $i39, $i40, $i41, $i42, $p43, $i44, $i121, $p122, $i123 := $i120, $i95, $i79, $i65, $i92, $p94, $i93, $i93, $p94, $i65;
  assume {:branchcond $i120} true;
  goto $bb42, $bb43;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  assume ($i120 == 1bv1);
  goto $bb18;
$bb43:
  assume !(($i120 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 7} true;
  assume {:verifier.code 0} true;
  $i35, $p36, $i37 := $i121, $p122, $i123;
  goto $bb17;
$bb44:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7004, 22} true;
  assume {:verifier.code 0} true;
  $i100, $i101, $p102 := $i126, $i124, $p125;
  goto $bb34;
$bb46:
  assume ($i136 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7014, 98} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7014, 82} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7014, 5} true;
  assume {:verifier.code 0} true;
  call $i139 := printk.ref.ref.bv32(.str.84, $p138, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7016, 3} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i136 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7019, 13} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p6, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7019, 13} true;
  assume {:verifier.code 0} true;
  $i141 := $load.bytes.bv32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7019, 25} true;
  assume {:verifier.code 0} true;
  $i142 := $and.bv32($i141, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7019, 35} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.bv32($i142, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7019, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i143 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7020, 98} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7020, 82} true;
  assume {:verifier.code 0} true;
  $p145 := $bitcast.ref.ref($p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7020, 5} true;
  assume {:verifier.code 0} true;
  call $i146 := printk.ref.ref.bv32(.str.85, $p145, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7022, 3} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i143 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7025, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $p18;
  goto $bb6;
$bb52:
  assume ($i148 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 11} true;
  assume {:verifier.code 0} true;
  $i149 := $slt.bv32(0bv32, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb54, $bb55;
$bb53:
  assume !(($i148 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb54:
  assume ($i149 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  $i150 := 0bv32;
  goto $bb57;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i149 == 1bv1));
  goto $bb56;
$bb56:
  assume {:verifier.code 0} true;
  goto $bb65;
$bb57:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7044, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 19} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.bv32.bv64($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 17} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p19, $mul.ref($bv2int.64($i151), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 39} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p19, $mul.ref($bv2int.64($i151), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 39} true;
  assume {:verifier.code 0} true;
  $i154 := $load.bytes.bv32($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 51} true;
  assume {:verifier.code 0} true;
  $i155 := $lshr.bv32($i154, 24bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 57} true;
  assume {:verifier.code 0} true;
  $i156 := $eq.bv32($i155, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7031, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  goto $bb59, $bb60;
$bb59:
  assume ($i156 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7032, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i156 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7041, 11} true;
  assume {:verifier.code 0} true;
  $i172 := $add.bv32($i150, 1bv32);
  // WARNING: %186 = add nsw i32 %.0330, 1, !dbg !7043, !verifier.code !6790
  call {:cexpr "i"} boogie_si_record_bv32($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 11} true;
  assume {:verifier.code 0} true;
  $i173 := $slt.bv32($i172, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $i172;
  assume {:branchcond $i173} true;
  goto $bb63, $bb64;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7036, 30} true;
  assume {:verifier.code 0} true;
  $i157 := $sext.bv32.bv64($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7036, 28} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p19, $mul.ref($bv2int.64($i157), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7036, 50} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($add.ref($p19, $mul.ref($bv2int.64($i157), 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7036, 50} true;
  assume {:verifier.code 0} true;
  $i160 := $load.bytes.bv64($M.0, $p159);
  // WARNING: %173 = load i64, i64* %172, align 8, !dbg !7027, !verifier.code !6790
  call {:cexpr "dma_addr___0"} boogie_si_record_bv64($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7037, 23} true;
  assume {:verifier.code 0} true;
  $i161 := $sext.bv32.bv64($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7037, 21} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p12, $mul.ref($bv2int.64($i161), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7037, 43} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p12, $mul.ref($bv2int.64($i161), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7037, 43} true;
  assume {:verifier.code 0} true;
  $p164 := $load.bytes.ref($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7038, 22} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.bv32.bv64($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7038, 20} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p12, $mul.ref($bv2int.64($i165), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7038, 42} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($add.ref($p12, $mul.ref($bv2int.64($i165), 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7038, 42} true;
  assume {:verifier.code 0} true;
  $i168 := $load.bytes.bv32($M.0, $p167);
  // WARNING: %181 = load i32, i32* %180, align 8, !dbg !7037, !verifier.code !6790
  call {:cexpr "len"} boogie_si_record_bv32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7039, 30} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p6, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7039, 30} true;
  assume {:verifier.code 0} true;
  $p170 := $load.bytes.ref($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7039, 38} true;
  assume {:verifier.code 0} true;
  $i171 := $sext.bv32.bv64($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7039, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p170, $i171, $p164, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7039, 5} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  assume ($i173 == 1bv1);
  goto $bb57;
$bb64:
  assume !(($i173 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7043, 9} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7048, 30} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p6, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7048, 30} true;
  assume {:verifier.code 0} true;
  $p175 := $load.bytes.ref($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7048, 45} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7048, 61} true;
  assume {:verifier.code 0} true;
  $i177 := $load.bytes.bv64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7048, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p175, 592bv64, $p176, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7049, 3} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7052, 9} true;
  assume {:verifier.code 0} true;
  $p178 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7052, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7053, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $0.ref;
  goto $bb6;
}
const mpt_put_msg_frame: ref;
axiom (mpt_put_msg_frame == $sub.ref(0, 206546));
procedure  mpt_put_msg_frame($i0: bv8, $p1: ref, $p2: ref);
const wait_for_completion_timeout: ref;
axiom (wait_for_completion_timeout == $sub.ref(0, 207578));
procedure  wait_for_completion_timeout($p0: ref, $i1: bv64)
  returns ($r: bv64);
const mpt_free_msg_frame: ref;
axiom (mpt_free_msg_frame == $sub.ref(0, 208610));
procedure  mpt_free_msg_frame($p0: ref, $p1: ref);
const mpt_GetIocState: ref;
axiom (mpt_GetIocState == $sub.ref(0, 209642));
procedure  mpt_GetIocState($p0: ref, $i1: bv32)
  returns ($r: bv32);
const mptctl_timeout_expired: ref;
axiom (mptctl_timeout_expired == $sub.ref(0, 210674));
procedure  mptctl_timeout_expired($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv8;
  var $p7: ref;
  var $i8: bv32;
  var $i9: bv32;
  var $i10: bv1;
  var $p11: ref;
  var $p12: ref;
  var $i13: bv32;
  var $i14: bv32;
  var $i15: bv1;
  var $p16: ref;
  var $p17: ref;
  var $i18: bv64;
  var $p19: ref;
  var $i20: bv8;
  var $i21: bv32;
  var $i22: bv1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: bv8;
  var $i27: bv32;
  var $i28: bv32;
  var $i29: bv8;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: bv8;
  var $i36: bv32;
  var $i37: bv32;
  var $i38: bv8;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: bv8;
  var $i43: bv32;
  var $i44: bv1;
  var $i45: bv32;
  var $i46: bv1;
  var $p47: ref;
  var $i48: bv8;
  var $i49: bv32;
  var $i50: bv8;
  var $p51: ref;
  var $i52: bv8;
  var $i53: bv32;
  var $i54: bv8;
  var $i55: bv32;
  var $i57: bv32;
  var $i58: bv1;
  var $p59: ref;
  var $i60: bv8;
  var $i61: bv32;
  var $i62: bv8;
  var $i63: bv32;
  var $i64: bv32;
  var $i56: bv32;
  var $i65: bv1;
  var $i66: bv32;
  var $i67: bv1;
  var $i68: bv32;
  var $i69: bv1;
  var $p70: ref;
  var $i71: bv8;
  var $i72: bv32;
  var $i73: bv8;
  var $i74: bv32;
  var $i75: bv32;
  var $i76: bv1;
  var $p77: ref;
  var $i78: bv32;
  var $i79: bv32;
  var $i80: bv1;
  var $p81: ref;
  var $p82: ref;
  var $i83: bv32;
  var $i84: bv32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_FRAME_HDR* %1, i64 0, metadata !8133, metadata !6788), !dbg !8134, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6300, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6301, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6301, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6301, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6301, 24} true;
  assume {:verifier.code 0} true;
  $i6 := $load.bytes.bv8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %6, align 1, !dbg !6803, !verifier.code !6792
  call {:cexpr "function"} boogie_si_record_bv8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6302, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6302, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $load.bytes.bv32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6302, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $and.bv32($i8, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6302, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.bv32($i9, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6303, 54} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6303, 38} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6303, 5} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref.ref.ref(.str.87, $p12, .str.88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6304, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6307, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $load.bytes.bv32($M.0, mpt_fwfault_debug);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6307, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.bv32($i14, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6308, 5} true;
  assume {:verifier.code 0} true;
  call mpt_halt_firmware($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6309, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i15 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6312, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6312, 9} true;
  assume {:verifier.code 0} true;
  call $p17 := spinlock_check($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6313, 11} true;
  assume {:verifier.code 0} true;
  call $i18 := _raw_spin_lock_irqsave($p17);
  // WARNING: %25 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %24), !dbg !6828, !verifier.code !6792
  call {:cexpr "flags"} boogie_si_record_bv64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6314, 27} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 4773);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6314, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $load.bytes.bv8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6314, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.bv8.bv32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6314, 49} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.bv32($i21, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6314, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i22 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6315, 35} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6315, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p23, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 50} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 4232);
  $p25 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 61} true;
  assume {:verifier.code 0} true;
  $i26 := $load.bytes.bv8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 30} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.bv8.bv32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 68} true;
  assume {:verifier.code 0} true;
  $i28 := $and.bv32($i27, 251bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.bv32.bv8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 10} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 4232);
  $p31 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6316, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p31, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6317, 5} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6318, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i22 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6359, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6322, 33} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6322, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p32, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 48} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 4232);
  $p34 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 59} true;
  assume {:verifier.code 0} true;
  $i35 := $load.bytes.bv8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 28} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.bv8.bv32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 66} true;
  assume {:verifier.code 0} true;
  $i37 := $and.bv32($i36, 251bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 28} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.bv32.bv8($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 4232);
  $p40 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6323, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p40, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6324, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6324, 27} true;
  assume {:verifier.code 0} true;
  $i42 := $load.bytes.bv8($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6324, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.bv8.bv32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6324, 36} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.bv32($i43, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i44 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6325, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.bv8.bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6325, 33} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.bv32($i45, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6325, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i44 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.bv8.bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.bv32($i66, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb23, $bb25;
$bb13:
  assume ($i46 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 60} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 60} true;
  assume {:verifier.code 0} true;
  $i48 := $load.bytes.bv8($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 44} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.bv8.bv32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 44} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.bv32.bv8($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 81} true;
  assume {:verifier.code 0} true;
  $p51 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 81} true;
  assume {:verifier.code 0} true;
  $i52 := $load.bytes.bv8($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 65} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.bv8.bv32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 65} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.bv32.bv8($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6326, 17} true;
  assume {:verifier.code 0} true;
  call $i55 := mptctl_do_taskmgmt($p0, 3bv8, $i50, $i54);
  // WARNING: %67 = call i32 @mptctl_do_taskmgmt(%struct._MPT_ADAPTER* %0, i8 zeroext 3, i8 zeroext %62, i8 zeroext %66), !dbg !6870, !verifier.code !6792
  call {:cexpr "ret_val"} boogie_si_record_bv32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6327, 5} true;
  assume {:verifier.code 0} true;
  $i56 := $i55;
  goto $bb15;
$bb14:
  assume !(($i46 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6328, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.bv8.bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6328, 33} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.bv32($i57, 22bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6328, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6333, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.bv32($i56, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6333, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i58 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6329, 60} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6329, 60} true;
  assume {:verifier.code 0} true;
  $i60 := $load.bytes.bv8($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6329, 44} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.bv8.bv32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6329, 44} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.bv32.bv8($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6329, 17} true;
  assume {:verifier.code 0} true;
  call $i63 := mptctl_do_taskmgmt($p0, 4bv8, $i62, 0bv8);
  // WARNING: %76 = call i32 @mptctl_do_taskmgmt(%struct._MPT_ADAPTER* %0, i8 zeroext 4, i8 zeroext %75, i8 zeroext 0), !dbg !6879, !verifier.code !6792
  call {:cexpr "ret_val"} boogie_si_record_bv32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6330, 5} true;
  assume {:verifier.code 0} true;
  $i64 := $i63;
  goto $bb18;
$bb17:
  assume !(($i58 == 1bv1));
  assume {:verifier.code 0} true;
  $i64 := $sub.bv32(0bv32, 1bv32);
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i56 := $i64;
  goto $bb15;
$bb19:
  assume ($i65 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6334, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb20:
  assume !(($i65 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6350, 13} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6350, 13} true;
  assume {:verifier.code 0} true;
  $i78 := $load.bytes.bv32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6350, 25} true;
  assume {:verifier.code 0} true;
  $i79 := $and.bv32($i78, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6350, 32} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.bv32($i79, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6350, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb32, $bb33;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 39} true;
  assume {:verifier.code 0} true;
  assume ($i67 == 1bv1);
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6340, 60} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6340, 60} true;
  assume {:verifier.code 0} true;
  $i71 := $load.bytes.bv8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6340, 44} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.bv8.bv32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6340, 44} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.bv32.bv8($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6340, 17} true;
  assume {:verifier.code 0} true;
  call $i74 := mptctl_do_taskmgmt($p0, 4bv8, $i73, 0bv8);
  // WARNING: %95 = call i32 @mptctl_do_taskmgmt(%struct._MPT_ADAPTER* %0, i8 zeroext 4, i8 zeroext %94, i8 zeroext 0), !dbg !6899, !verifier.code !6792
  call {:cexpr "ret_val"} boogie_si_record_bv32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6341, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i74;
  goto $bb28;
$bb25:
  assume !(($i67 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 42} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.bv8.bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 66} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.bv32($i68, 22bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6339, 9} true;
  assume {:verifier.code 0} true;
  assume ($i69 == 1bv1);
  goto $bb24;
$bb27:
  assume !(($i69 == 1bv1));
  assume {:verifier.code 0} true;
  $i75 := $sub.bv32(0bv32, 1bv32);
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6344, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.bv32($i75, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6344, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i76 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6345, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb30:
  assume !(($i76 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb32:
  assume ($i80 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6351, 65} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6351, 49} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6351, 5} true;
  assume {:verifier.code 0} true;
  call $i83 := printk.ref.ref(.str.89, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6352, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i80 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6355, 3} true;
  assume {:verifier.code 0} true;
  call $i84 := mpt_Soft_Hard_ResetHandler($p0, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6356, 3} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6357, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const kfree_sgl: ref;
axiom (kfree_sgl == $sub.ref(0, 211706));
procedure  kfree_sgl($p0: ref, $i1: bv64, $p2: ref, $p3: ref)
{
  var $p4: ref;
  var $i5: bv32;
  var $i6: bv32;
  var $i7: bv1;
  var $i8: bv32;
  var $p9: ref;
  var $i10: bv32;
  var $i11: bv32;
  var $i12: bv32;
  var $i13: bv1;
  var $i21: bv1;
  var $i22: bv1;
  var $p24: ref;
  var $i25: bv64;
  var $i26: bv1;
  var $p27: ref;
  var $i28: bv64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: bv32;
  var $p33: ref;
  var $p34: ref;
  var $i35: bv64;
  var $p36: ref;
  var $p37: ref;
  var $i38: bv64;
  var $i39: bv32;
  var $i40: bv32;
  var $i23: bv32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: bv32;
  var $i45: bv32;
  var $i46: bv32;
  var $i47: bv1;
  var $i17: bv32;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: bv32;
  var $p14: ref;
  var $p15: ref;
  var $i16: bv32;
  var $p51: ref;
  var $i52: bv64;
  var $i53: bv1;
  var $p54: ref;
  var $i55: bv64;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: bv32;
  var $p60: ref;
  var $p61: ref;
  var $i62: bv64;
  var $p63: ref;
  var $p64: ref;
  var $i65: bv64;
  var $i66: bv32;
  var $i67: bv32;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: bv32;
  var $i74: bv32;
  var $i75: bv1;
  var $p76: ref;
  var $p77: ref;
  var $i78: bv32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device_dma_parameters* %0, i64 0, metadata !8263, metadata !6788), !dbg !8264, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata %struct.buflist* %2, i64 0, metadata !8273, metadata !6788), !dbg !8274, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7075, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7075, 12} true;
  assume {:verifier.code 0} true;
  $i5 := $load.bytes.bv32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7075, 24} true;
  assume {:verifier.code 0} true;
  $i6 := $and.bv32($i5, 67108864bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7075, 37} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv32($i6, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7077, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 1bv32;
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  $i8 := 2bv32;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7080, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7080, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $load.bytes.bv32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7080, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $lshr.bv32($i10, 28bv32);
  // WARNING: %14 = lshr i32 %13, 28, !dbg !6816, !verifier.code !6792
  call {:cexpr "nib"} boogie_si_record_bv32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $and.bv32($i11, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.bv32($i12, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  $p14, $p15, $i16 := $p0, $p2, 0bv32;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  $i17, $i18, $p19, $p20 := 0bv32, $i11, $p2, $p0;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1bv1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7101, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.bv32($i18, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb9, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 17} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1bv1);
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7085, 3} true;
  assume {:verifier.code 0} true;
  $i23 := $i17;
  goto $bb14;
$bb11:
  assume !(($i21 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.bv32($i18, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7083, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1bv1);
  goto $bb10;
$bb13:
  assume !(($i22 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7086, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7086, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $load.bytes.bv64($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7086, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.bv64($i25, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7086, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb15, $bb16;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7096, 11} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p20, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7097, 11} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p19, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7098, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p20, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7098, 13} true;
  assume {:verifier.code 0} true;
  $i44 := $load.bytes.bv32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7098, 25} true;
  assume {:verifier.code 0} true;
  $i45 := $lshr.bv32($i44, 28bv32);
  // WARNING: %47 = lshr i32 %46, 28, !dbg !6856, !verifier.code !6792
  call {:cexpr "nib"} boogie_si_record_bv32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 12} true;
  assume {:verifier.code 0} true;
  $i46 := $and.bv32($i45, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 18} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.bv32($i46, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  $i17, $i18, $p19, $p20, $p48, $p49, $i50 := $i23, $i45, $p42, $p41, $p41, $p42, $i23;
  assume {:branchcond $i47} true;
  goto $bb18, $bb19;
$bb15:
  assume ($i26 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7087, 20} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7087, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $load.bytes.bv64($M.0, $p27);
  // WARNING: %28 = load i64, i64* %27, align 8, !dbg !6835, !verifier.code !6792
  call {:cexpr "dma_addr"} boogie_si_record_bv64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7088, 24} true;
  assume {:verifier.code 0} true;
  $p29 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7088, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $load.bytes.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7089, 15} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7089, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $load.bytes.bv32($M.0, $p31);
  // WARNING: %32 = load i32, i32* %31, align 8, !dbg !6842, !verifier.code !6792
  call {:cexpr "len"} boogie_si_record_bv32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7090, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p3, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7090, 27} true;
  assume {:verifier.code 0} true;
  $p34 := $load.bytes.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7090, 45} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.bv32.bv64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7090, 5} true;
  assume {:verifier.code 0} true;
  call pci_unmap_single($p34, $i28, $i35, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7091, 30} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p3, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7091, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $load.bytes.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7091, 38} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.bv32.bv64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7091, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p37, $i38, $p30, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7092, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $add.bv32($i17, 1bv32);
  // WARNING: %39 = add nsw i32 %.28, 1, !dbg !6851, !verifier.code !6792
  call {:cexpr "n"} boogie_si_record_bv32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7093, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $i39;
  goto $bb17;
$bb16:
  assume !(($i26 == 1bv1));
  assume {:verifier.code 0} true;
  $i40 := $i17;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i23 := $i40;
  goto $bb14;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  assume ($i47 == 1bv1);
  goto $bb7;
$bb19:
  assume !(($i47 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  $p14, $p15, $i16 := $p48, $p49, $i50;
  goto $bb6;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7106, 11} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p14, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7106, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $load.bytes.bv64($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7106, 19} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.bv64($i52, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7106, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i53 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7107, 24} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p14, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7107, 24} true;
  assume {:verifier.code 0} true;
  $i55 := $load.bytes.bv64($M.0, $p54);
  // WARNING: %58 = load i64, i64* %57, align 8, !dbg !6863, !verifier.code !6792
  call {:cexpr "dma_addr___0"} boogie_si_record_bv64($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7108, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7108, 28} true;
  assume {:verifier.code 0} true;
  $p57 := $load.bytes.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7109, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p15, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7109, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $load.bytes.bv32($M.0, $p58);
  // WARNING: %62 = load i32, i32* %61, align 8, !dbg !6870, !verifier.code !6792
  call {:cexpr "len___0"} boogie_si_record_bv32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7110, 27} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p3, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7110, 27} true;
  assume {:verifier.code 0} true;
  $p61 := $load.bytes.ref($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7110, 49} true;
  assume {:verifier.code 0} true;
  $i62 := $sext.bv32.bv64($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7110, 5} true;
  assume {:verifier.code 0} true;
  call pci_unmap_single($p61, $i55, $i62, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7111, 30} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p3, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7111, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $load.bytes.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7111, 38} true;
  assume {:verifier.code 0} true;
  $i65 := $sext.bv32.bv64($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7111, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p64, $i65, $p57, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7112, 11} true;
  assume {:verifier.code 0} true;
  $i66 := $add.bv32($i16, 1bv32);
  // WARNING: %69 = add nsw i32 %.2.lcssa, 1, !dbg !6879, !verifier.code !6792
  call {:cexpr "n"} boogie_si_record_bv32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7113, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i66;
  goto $bb23;
$bb22:
  assume !(($i53 == 1bv1));
  assume {:verifier.code 0} true;
  $i67 := $i16;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7116, 28} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p3, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7116, 28} true;
  assume {:verifier.code 0} true;
  $p69 := $load.bytes.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7116, 43} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7116, 3} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p69, 592bv64, $p70, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7117, 9} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7117, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7118, 13} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p3, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7118, 13} true;
  assume {:verifier.code 0} true;
  $i73 := $load.bytes.bv32($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7118, 25} true;
  assume {:verifier.code 0} true;
  $i74 := $and.bv32($i73, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7118, 35} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.bv32($i74, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7118, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i75 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7119, 84} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7119, 68} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7119, 5} true;
  assume {:verifier.code 0} true;
  call $i78 := printk.ref.ref.bv32(.str.96, $p77, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7121, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i75 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7124, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unmap_single: ref;
axiom (pci_unmap_single == $sub.ref(0, 212738));
procedure  pci_unmap_single($p0: ref, $i1: bv64, $i2: bv64, $i3: bv32)
{
  var $i4: bv64;
  var $i5: bv1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !8372, metadata !6788), !dbg !8373, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !8374, metadata !6788), !dbg !8375, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8376, metadata !6788), !dbg !8377, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 48} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.bv64($i4, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 100} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5800, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p7, $i1, $i2, $i3, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5802, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_free_consistent: ref;
axiom (pci_free_consistent == $sub.ref(0, 213770));
procedure  pci_free_consistent($p0: ref, $i1: bv64, $p2: ref, $i3: bv64)
{
  var $i4: bv64;
  var $i5: bv1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !8395, metadata !6788), !dbg !8396, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !8399, metadata !6788), !dbg !8400, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.bv64($i4, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 92} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5778, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p7, $i1, $p2, $i3, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5780, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 214802));
procedure  kfree($p0: ref);
const dma_free_attrs: ref;
axiom (dma_free_attrs == $sub.ref(0, 215834));
procedure  dma_free_attrs($p0: ref, $i1: bv64, $p2: ref, $i3: bv64, $p4: ref);
const dma_unmap_single_attrs: ref;
axiom (dma_unmap_single_attrs == $sub.ref(0, 216866));
procedure  dma_unmap_single_attrs($p0: ref, $i1: bv64, $i2: bv64, $i3: bv32, $p4: ref)
{
  var $p5: ref;
  var $i6: bv32;
  var $i7: bv1;
  var $i8: bv32;
  var $i9: bv64;
  var $i10: bv64;
  var $i11: bv1;
  var $p12: ref;
  var $p13: ref;
  var $i14: bv64;
  var $i15: bv1;
  var $p16: ref;
  var $p17: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8416, metadata !6788), !dbg !8417, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !8418, metadata !6788), !dbg !8419, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8420, metadata !6788), !dbg !8421, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5736, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5738, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i3);
  // WARNING: %7 = call i32 @valid_dma_direction(i32 %3), !dbg !6805, !verifier.code !6790
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5739, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.bv32($i6, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5739, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.bv1.bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5739, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.bv32.bv64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5739, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0bv64);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !6810, !verifier.code !6790
  call {:cexpr "tmp___1"} boogie_si_record_bv64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5740, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.bv64($i10, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5740, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1bv1);
  call devirtbounce(0, .str.86, 36bv32, 12bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5741, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5744, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5748, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5748, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.bytes.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5748, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.bv64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5748, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.bv64($i14, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5748, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5752, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5752, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.bytes.ref($M.0, $p16);
  call devirtbounce.1($p17, $p0, $i1, $i2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5753, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i15 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5756, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5757, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 217898));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: bv64;
  var $i2: bv1;
  var $i3: bv32;
  var $i4: bv64;
  var $i5: bv64;
  var $i6: bv1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: bv64;
  var $i11: bv1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5683, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5683, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.bv64($i1, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5683, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.bv1.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5683, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.bv32.bv64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5683, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0bv64);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !6796, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.bv64($i5, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1bv1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5686, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.bytes.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5686, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 1224);
  $p8 := $add.ref($p0, 1224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.bytes.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.bv64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.bv64($i10, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5685, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1bv1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5688, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1224);
  $p15 := $add.ref($p0, 1224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5688, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.bytes.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5688, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5691, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 218930));
procedure  valid_dma_direction($i0: bv32)
  returns ($r: bv32)
{
  var $i1: bv1;
  var $i3: bv1;
  var $i4: bv1;
  var $i2: bv1;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.bv32($i0, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 31} true;
  assume {:verifier.code 0} true;
  $i2 := 1bv1;
  assume {:branchcond $i1} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 31} true;
  assume {:verifier.code 0} true;
  assume ($i1 == 1bv1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 54} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.bv1.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.bv32($i0, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 54} true;
  assume {:verifier.code 0} true;
  $i2 := 1bv1;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 54} true;
  assume {:verifier.code 0} true;
  assume ($i3 == 1bv1);
  goto $bb2;
$bb5:
  assume !(($i3 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.bv32($i0, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5662, 54} true;
  assume {:verifier.code 0} true;
  $i2 := $i4;
  goto $bb2;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 219962));
procedure  ldv__builtin_expect($i0: bv64, $i1: bv64)
  returns ($r: bv64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8502, metadata !6788), !dbg !8503, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5550, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const debug_dma_unmap_page: ref;
axiom (debug_dma_unmap_page == $sub.ref(0, 220994));
procedure  debug_dma_unmap_page($p0: ref, $i1: bv64, $i2: bv64, $i3: bv32, $i4: bv1);
const mpt_halt_firmware: ref;
axiom (mpt_halt_firmware == $sub.ref(0, 222026));
procedure  mpt_halt_firmware($p0: ref);
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 223058));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5584, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5584, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5584, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 224090));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: bv64);
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 225122));
procedure  spin_unlock_irqrestore($p0: ref, $i1: bv64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !8520, metadata !6788), !dbg !8521, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5592, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5592, 58} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5592, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5593, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mptctl_do_taskmgmt: ref;
axiom (mptctl_do_taskmgmt == $sub.ref(0, 226154));
procedure  mptctl_do_taskmgmt($p0: ref, $i1: bv8, $i2: bv8, $i3: bv8)
  returns ($r: bv32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: bv32;
  var $i7: bv1;
  var $p8: ref;
  var $p9: ref;
  var $i11: bv8;
  var $i12: bv32;
  var $i13: bv8;
  var $p14: ref;
  var $i15: bv64;
  var $i16: bv1;
  var $p17: ref;
  var $i18: bv32;
  var $i19: bv32;
  var $i20: bv1;
  var $p21: ref;
  var $p22: ref;
  var $i23: bv32;
  var $p25: ref;
  var $i26: bv32;
  var $i27: bv32;
  var $i28: bv1;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: bv32;
  var $i37: bv1;
  var $p38: ref;
  var $i39: bv8;
  var $i40: bv32;
  var $i41: bv1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: bv8;
  var $i55: bv32;
  var $i56: bv1;
  var $i57: bv1;
  var $i58: bv1;
  var $i59: bv1;
  var $i60: bv64;
  var $p61: ref;
  var $i62: bv32;
  var $i63: bv32;
  var $i64: bv1;
  var $p65: ref;
  var $p66: ref;
  var $i67: bv32;
  var $i68: bv32;
  var $p69: ref;
  var $p70: ref;
  var $i71: bv64;
  var $p72: ref;
  var $p73: ref;
  var $i74: bv32;
  var $i75: bv32;
  var $i76: bv1;
  var $p77: ref;
  var $p78: ref;
  var $i79: bv16;
  var $i80: bv32;
  var $i81: bv1;
  var $i82: bv8;
  var $i83: bv32;
  var $i84: bv8;
  var $i85: bv8;
  var $i86: bv32;
  var $i87: bv8;
  var $p88: ref;
  var $i89: bv32;
  var $i90: bv1;
  var $p91: ref;
  var $i92: bv32;
  var $i93: bv32;
  var $i94: bv1;
  var $p95: ref;
  var $p96: ref;
  var $i97: bv32;
  var $p98: ref;
  var $p99: ref;
  var $i100: bv64;
  var $i101: bv64;
  var $p102: ref;
  var $p103: ref;
  var $i104: bv8;
  var $i105: bv32;
  var $i106: bv32;
  var $i107: bv1;
  var $p108: ref;
  var $i109: bv32;
  var $i110: bv32;
  var $i111: bv1;
  var $p112: ref;
  var $p113: ref;
  var $i114: bv32;
  var $p115: ref;
  var $p116: ref;
  var $i117: bv8;
  var $i118: bv32;
  var $i119: bv32;
  var $i120: bv1;
  var $i121: bv32;
  var $p122: ref;
  var $p123: ref;
  var $i124: bv8;
  var $i125: bv32;
  var $i126: bv32;
  var $i127: bv1;
  var $p128: ref;
  var $i129: bv32;
  var $i130: bv32;
  var $i131: bv1;
  var $p132: ref;
  var $p133: ref;
  var $i134: bv32;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: bv32;
  var $i140: bv32;
  var $i141: bv1;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $i145: bv8;
  var $i146: bv32;
  var $p147: ref;
  var $i148: bv8;
  var $i149: bv32;
  var $i150: bv32;
  var $p151: ref;
  var $i152: bv16;
  var $i153: bv32;
  var $p154: ref;
  var $i155: bv32;
  var $p156: ref;
  var $i157: bv8;
  var $i158: bv32;
  var $p159: ref;
  var $i160: bv32;
  var $i161: bv32;
  var $p162: ref;
  var $i163: bv16;
  var $i164: bv32;
  var $i165: bv32;
  var $i166: bv16;
  var $i167: bv32;
  var $i168: bv1;
  var $i169: bv32;
  var $i170: bv1;
  var $i171: bv32;
  var $i172: bv1;
  var $p174: ref;
  var $i175: bv32;
  var $i176: bv32;
  var $i177: bv1;
  var $p178: ref;
  var $p179: ref;
  var $i180: bv32;
  var $i173: bv32;
  var $i24: bv32;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $i10: bv32;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_ADAPTER* %0, i64 0, metadata !8532, metadata !6788), !dbg !8533, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !8534, metadata !6788), !dbg !8535, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !8536, metadata !6788), !dbg !8537, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6129, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 3768);
  $p5 := $add.ref($p0, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6129, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_14($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6130, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := mpt_set_taskmgmt_in_progress_flag($p0);
  // WARNING: %7 = call i32 @mpt_set_taskmgmt_in_progress_flag(%struct._MPT_ADAPTER* %0), !dbg !6802, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6131, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv32($i6, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6131, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6132, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 3768);
  $p9 := $add.ref($p0, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6132, 5} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_15($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6133, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.bv32(0bv32, 1bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6289, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6138, 32} true;
  assume {:verifier.code 0} true;
  $i11 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6138, 26} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.bv8.bv32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6138, 26} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.bv32.bv8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6138, 8} true;
  assume {:verifier.code 0} true;
  call $p14 := mpt_get_msg_frame($i13, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6139, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.bv64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6139, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.bv64($i15, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6139, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6140, 15} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6140, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $load.bytes.bv32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6140, 27} true;
  assume {:verifier.code 0} true;
  $i19 := $and.bv32($i18, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6140, 34} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.bv32($i19, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6140, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i16 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume ($i20 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6141, 85} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6141, 69} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6141, 7} true;
  assume {:verifier.code 0} true;
  call $i23 := printk.ref.ref(.str.90, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i20 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6145, 5} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p0);
  // WARNING: call void @mpt_clear_taskmgmt_in_progress_flag(%struct._MPT_ADAPTER* %0), !dbg !6834, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6147, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 12bv32);
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6285, 30} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p0, 3768);
  $p182 := $add.ref($p0, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6285, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_16($p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6286, 8} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p0, 3768);
  $p184 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6286, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p184, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6287, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i24;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6151, 13} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6151, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $load.bytes.bv32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6151, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $and.bv32($i26, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6151, 32} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.bv32($i27, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6151, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i28 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6152, 74} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6152, 58} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6152, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := printk.ref.ref.ref(.str.91, $p30, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6153, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i28 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6156, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6157, 3} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6157, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.bv8($M.0, $p33, 0bv8, $bv2int.64(52bv64), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6158, 12} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p32, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6158, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p34, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6159, 12} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p32, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6159, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p35, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.bv8.bv32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 30} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.bv32($i36, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i37 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 59} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 59} true;
  assume {:verifier.code 0} true;
  $i39 := $load.bytes.bv8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 39} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.bv8.bv32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 68} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.bv32($i40, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i37 == 1bv1));
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb18:
  assume ($i41 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6161, 14} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p32, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6161, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p42, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6162, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6160, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i41 == 1bv1));
  goto $bb17;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6165, 12} true;
  assume {:verifier.code 0} true;
  $p43 := $p32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6165, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p43, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6166, 12} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p32, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6166, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p44, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6167, 12} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p32, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6167, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p45, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6168, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6168, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p46, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6169, 12} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p32, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6169, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p47, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6170, 12} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p32, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6170, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p48, 0bv32);
  // WARNING: store i32 0, i32* %63, align 4, !dbg !6878, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6177, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p32, 12);
  $p50 := $add.ref($p32, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p50, 0bv8);
  // WARNING: store i8 0, i8* %66, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p32, 12);
  $p198 := $add.ref($add.ref($p32, 12), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p198, 0bv8);
  // WARNING: store i8 0, i8* %265, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6188, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p32, 20);
  $p52 := $add.ref($p32, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p52, 0bv32);
  // WARNING: store i32 0, i32* %71, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p32, 20);
  $p186 := $add.ref($add.ref($p32, 20), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p186, 0bv32);
  // WARNING: store i32 0, i32* %247, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6194, 22} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6194, 22} true;
  assume {:verifier.code 0} true;
  $i54 := $load.bytes.bv8($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6194, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.bv8.bv32($i54);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  $i56 := $slt.bv32($i55, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i56 == 1bv1);
  assume {:verifier.code 0} true;
  $i59 := $eq.bv32($i55, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb37, $bb38;
$bb31:
  assume !(($i56 == 1bv1));
  assume {:verifier.code 0} true;
  $i57 := $slt.bv32($i55, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i57 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6200, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb33:
  assume !(($i57 == 1bv1));
  assume {:verifier.code 0} true;
  $i58 := $eq.bv32($i55, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i58 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6200, 3} true;
  assume {:verifier.code 0} true;
  $i60 := 30bv64;
  goto $bb39;
$bb35:
  assume {:verifier.code 0} true;
  assume !(($i58 == 1bv1));
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb37:
  assume ($i59 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6197, 3} true;
  assume {:verifier.code 0} true;
  $i60 := 40bv64;
  goto $bb39;
$bb38:
  assume {:verifier.code 0} true;
  assume !(($i59 == 1bv1));
  goto $bb36;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6207, 13} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6207, 13} true;
  assume {:verifier.code 0} true;
  $i62 := $load.bytes.bv32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6207, 25} true;
  assume {:verifier.code 0} true;
  $i63 := $and.bv32($i62, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6207, 32} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.bv32($i63, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6207, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6204, 3} true;
  assume {:verifier.code 0} true;
  $i60 := 10bv64;
  goto $bb39;
$bb41:
  assume ($i64 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6208, 78} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6208, 62} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6209, 12} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.bv8.bv32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6208, 5} true;
  assume {:verifier.code 0} true;
  call $i68 := printk.ref.ref.bv32.bv64(.str.92, $p66, $i67, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6210, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i64 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6213, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 3768);
  $p70 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6213, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p70, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6214, 16} true;
  assume {:verifier.code 0} true;
  $i71 := $load.bytes.bv64($M.0, jiffies);
  // WARNING: %95 = load volatile i64, i64* @jiffies, align 8, !dbg !6916, !verifier.code !6792
  call {:cexpr "time_count"} boogie_si_record_bv64($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 18} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 1284);
  $p73 := $add.ref($add.ref($p0, 1284), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 24} true;
  assume {:verifier.code 0} true;
  $i74 := $load.bytes.bv32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 40} true;
  assume {:verifier.code 0} true;
  $i75 := $and.bv32($i74, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 40} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.bv32($i75, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i76 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 67} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 1284);
  $p78 := $add.ref($p0, 1284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 73} true;
  assume {:verifier.code 0} true;
  $i79 := $load.bytes.bv16($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 47} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.bv16.bv32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 84} true;
  assume {:verifier.code 0} true;
  $i81 := $ugt.bv32($i80, 260bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb47, $bb48;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 44} true;
  assume {:verifier.code 0} true;
  assume !(($i76 == 1bv1));
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6218, 47} true;
  assume {:verifier.code 0} true;
  $i85 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6218, 41} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.bv8.bv32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6218, 41} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.bv32.bv8($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6218, 76} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6218, 14} true;
  assume {:verifier.code 0} true;
  call $i89 := mpt_send_handshake_request($i87, $p0, 52bv32, $p88, 1bv32);
  // WARNING: %116 = call i32 @mpt_send_handshake_request(i8 zeroext %114, %struct._MPT_ADAPTER* %0, i32 52, i32* %115, i32 1), !dbg !6939, !verifier.code !6792
  call {:cexpr "retval"} boogie_si_record_bv32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6220, 16} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.bv32($i89, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6220, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb50, $bb51;
$bb47:
  assume ($i81 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6216, 36} true;
  assume {:verifier.code 0} true;
  $i82 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6216, 30} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.bv8.bv32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6216, 30} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.bv32.bv8($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6216, 5} true;
  assume {:verifier.code 0} true;
  call mpt_put_msg_frame_hi_pri($i84, $p0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6217, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6215, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1bv1));
  goto $bb46;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6234, 48} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p0, 3768);
  $p99 := $add.ref($add.ref($p0, 3768), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6234, 76} true;
  assume {:verifier.code 0} true;
  $i100 := $mul.bv64($i60, 250bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6234, 13} true;
  assume {:verifier.code 0} true;
  call $i101 := wait_for_completion_timeout($p99, $i100);
  // WARNING: %135 = call i64 @wait_for_completion_timeout(%struct.completion* %133, i64 %134), !dbg !6959, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 19} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 3768);
  $p103 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 33} true;
  assume {:verifier.code 0} true;
  $i104 := $load.bytes.bv8($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 8} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.bv8.bv32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 40} true;
  assume {:verifier.code 0} true;
  $i106 := $and.bv32($i105, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 45} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.bv32($i106, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb56, $bb57;
$bb50:
  assume ($i90 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6221, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6221, 17} true;
  assume {:verifier.code 0} true;
  $i92 := $load.bytes.bv32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6221, 29} true;
  assume {:verifier.code 0} true;
  $i93 := $and.bv32($i92, 128bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6221, 36} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.bv32($i93, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6221, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb52, $bb53;
$bb51:
  assume !(($i90 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb52:
  assume ($i94 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6223, 32} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6223, 16} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6222, 9} true;
  assume {:verifier.code 0} true;
  call $i97 := printk.ref.ref.ref.ref.bv32(.str.93, $p96, $p0, $p14, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6224, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i94 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6227, 7} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6228, 7} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6229, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $i89;
  goto $bb10;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb56:
  assume ($i107 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6237, 15} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6237, 15} true;
  assume {:verifier.code 0} true;
  $i109 := $load.bytes.bv32($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6237, 27} true;
  assume {:verifier.code 0} true;
  $i110 := $and.bv32($i109, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6237, 34} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.bv32($i110, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6237, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb58, $bb59;
$bb57:
  assume !(($i107 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb58:
  assume ($i111 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6238, 67} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6238, 51} true;
  assume {:verifier.code 0} true;
  $p113 := $bitcast.ref.ref($p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6238, 7} true;
  assume {:verifier.code 0} true;
  call $i114 := printk.ref.ref(.str.94, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6239, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume !(($i111 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6242, 5} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6243, 5} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 21} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 3768);
  $p116 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 35} true;
  assume {:verifier.code 0} true;
  $i117 := $load.bytes.bv8($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 10} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.bv8.bv32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 42} true;
  assume {:verifier.code 0} true;
  $i119 := $and.bv32($i118, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 47} true;
  assume {:verifier.code 0} true;
  $i120 := $ne.bv32($i119, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6244, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i120 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6246, 5} true;
  assume {:verifier.code 0} true;
  $i121 := 0bv32;
  goto $bb63;
$bb62:
  assume !(($i120 == 1bv1));
  assume {:verifier.code 0} true;
  $i121 := $sub.bv32(0bv32, 1bv32);
  goto $bb63;
$bb63:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6249, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $i121;
  goto $bb10;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 19} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0, 3768);
  $p123 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 33} true;
  assume {:verifier.code 0} true;
  $i124 := $load.bytes.bv8($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 8} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.bv8.bv32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 40} true;
  assume {:verifier.code 0} true;
  $i126 := $and.bv32($i125, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 45} true;
  assume {:verifier.code 0} true;
  $i127 := $eq.bv32($i126, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6253, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i127 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6254, 15} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6254, 15} true;
  assume {:verifier.code 0} true;
  $i129 := $load.bytes.bv32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6254, 27} true;
  assume {:verifier.code 0} true;
  $i130 := $and.bv32($i129, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6254, 34} true;
  assume {:verifier.code 0} true;
  $i131 := $ne.bv32($i130, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6254, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb67, $bb68;
$bb66:
  assume !(($i127 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb67:
  assume ($i131 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6255, 67} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6255, 51} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6255, 7} true;
  assume {:verifier.code 0} true;
  call $i134 := printk.ref.ref(.str.94, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6256, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb68:
  assume !(($i131 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6260, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 1bv32);
  goto $bb10;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6264, 49} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 3768);
  $p136 := $add.ref($add.ref($p0, 3768), 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6264, 18} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6265, 13} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6265, 13} true;
  assume {:verifier.code 0} true;
  $i139 := $load.bytes.bv32($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6265, 25} true;
  assume {:verifier.code 0} true;
  $i140 := $and.bv32($i139, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6265, 32} true;
  assume {:verifier.code 0} true;
  $i141 := $ne.bv32($i140, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6265, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i141 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 28} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 12} true;
  assume {:verifier.code 0} true;
  $p143 := $bitcast.ref.ref($p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 55} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p137, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 55} true;
  assume {:verifier.code 0} true;
  $i145 := $load.bytes.bv8($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 35} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.bv8.bv32($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 80} true;
  assume {:verifier.code 0} true;
  $p147 := $p137;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 80} true;
  assume {:verifier.code 0} true;
  $i148 := $load.bytes.bv8($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6267, 60} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.bv8.bv32($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 12} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.bv8.bv32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 47} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p137, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 47} true;
  assume {:verifier.code 0} true;
  $i152 := $load.bytes.bv16($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 27} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.bv16.bv32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 72} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p137, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6268, 72} true;
  assume {:verifier.code 0} true;
  $i155 := $load.bytes.bv32($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6269, 32} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p137, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6269, 32} true;
  assume {:verifier.code 0} true;
  $i157 := $load.bytes.bv8($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6269, 12} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.bv8.bv32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6269, 60} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p137, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6269, 60} true;
  assume {:verifier.code 0} true;
  $i160 := $load.bytes.bv32($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6266, 5} true;
  assume {:verifier.code 0} true;
  call $i161 := printk.ref.ref.bv32.bv32.bv32.bv32.bv32.bv32.bv32(.str.95, $p143, $i146, $i149, $i150, $i153, $i155, $i158, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6270, 3} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i141 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6273, 44} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p137, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6273, 44} true;
  assume {:verifier.code 0} true;
  $i163 := $load.bytes.bv16($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6273, 15} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.bv16.bv32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6273, 54} true;
  assume {:verifier.code 0} true;
  $i165 := $and.bv32($i164, 32767bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6273, 15} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.bv32.bv16($i165);
  // WARNING: %217 = trunc i32 %216 to i16, !dbg !7037, !verifier.code !6792
  call {:cexpr "iocstatus"} boogie_si_record_bv16($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 8} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.bv16.bv32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 33} true;
  assume {:verifier.code 0} true;
  $i168 := $eq.bv32($i167, 72bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb74, $bb76;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 40} true;
  assume {:verifier.code 0} true;
  assume ($i168 == 1bv1);
  goto $bb75;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6276, 3} true;
  assume {:verifier.code 0} true;
  $i173 := 0bv32;
  goto $bb81;
$bb76:
  assume !(($i168 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 43} true;
  assume {:verifier.code 0} true;
  $i169 := $zext.bv16.bv32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 68} true;
  assume {:verifier.code 0} true;
  $i170 := $eq.bv32($i169, 75bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 76} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb77, $bb78;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 76} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1bv1);
  goto $bb75;
$bb78:
  assume !(($i170 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 79} true;
  assume {:verifier.code 0} true;
  $i171 := $zext.bv16.bv32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 104} true;
  assume {:verifier.code 0} true;
  $i172 := $eq.bv32($i171, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 7} true;
  assume {:verifier.code 0} true;
  assume ($i172 == 1bv1);
  goto $bb75;
$bb80:
  assume !(($i172 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6277, 15} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6277, 15} true;
  assume {:verifier.code 0} true;
  $i175 := $load.bytes.bv32($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6277, 27} true;
  assume {:verifier.code 0} true;
  $i176 := $and.bv32($i175, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6277, 34} true;
  assume {:verifier.code 0} true;
  $i177 := $ne.bv32($i176, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6277, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb82, $bb83;
$bb81:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6274, 107} true;
  assume {:verifier.code 0} true;
  $i24 := $i173;
  goto $bb10;
$bb82:
  assume ($i177 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6278, 67} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6278, 51} true;
  assume {:verifier.code 0} true;
  $p179 := $bitcast.ref.ref($p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6278, 7} true;
  assume {:verifier.code 0} true;
  call $i180 := printk.ref.ref(.str.94, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6279, 5} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb83:
  assume !(($i177 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:verifier.code 0} true;
  $i173 := $sub.bv32(0bv32, 1bv32);
  goto $bb81;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p32, 20);
  $p188 := $add.ref($add.ref($p32, 20), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p188, 0bv32);
  // WARNING: store i32 0, i32* %250, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p32, 20);
  $p190 := $add.ref($add.ref($p32, 20), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p190, 0bv32);
  // WARNING: store i32 0, i32* %253, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p32, 20);
  $p192 := $add.ref($add.ref($p32, 20), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p192, 0bv32);
  // WARNING: store i32 0, i32* %256, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p32, 20);
  $p194 := $add.ref($add.ref($p32, 20), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p194, 0bv32);
  // WARNING: store i32 0, i32* %259, align 4, !dbg !6889, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 12} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p32, 20);
  $p196 := $add.ref($add.ref($p32, 20), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6185, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p196, 0bv32);
  // WARNING: store i32 0, i32* %262, align 4, !dbg !6889, !verifier.code !6792
  assume {:verifier.code 0} true;
  goto $bb28;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p32, 12);
  $p200 := $add.ref($add.ref($p32, 12), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p200, 0bv8);
  // WARNING: store i8 0, i8* %268, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p32, 12);
  $p202 := $add.ref($add.ref($p32, 12), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p202, 0bv8);
  // WARNING: store i8 0, i8* %271, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p32, 12);
  $p204 := $add.ref($add.ref($p32, 12), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p204, 0bv8);
  // WARNING: store i8 0, i8* %274, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p32, 12);
  $p206 := $add.ref($add.ref($p32, 12), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p206, 0bv8);
  // WARNING: store i8 0, i8* %277, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p32, 12);
  $p208 := $add.ref($add.ref($p32, 12), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p208, 0bv8);
  // WARNING: store i8 0, i8* %280, align 1, !dbg !6883, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 12} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p32, 12);
  $p210 := $add.ref($add.ref($p32, 12), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p210, 0bv8);
  // WARNING: store i8 0, i8* %283, align 1, !dbg !6883, !verifier.code !6792
  assume {:verifier.code 0} true;
  goto $bb24;
}
const mpt_Soft_Hard_ResetHandler: ref;
axiom (mpt_Soft_Hard_ResetHandler == $sub.ref(0, 227186));
procedure  mpt_Soft_Hard_ResetHandler($p0: ref, $i1: bv32)
  returns ($r: bv32);
const ldv_mutex_lock_14: ref;
axiom (ldv_mutex_lock_14 == $sub.ref(0, 228218));
procedure  ldv_mutex_lock_14($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9253, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9254, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9255, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mpt_set_taskmgmt_in_progress_flag: ref;
axiom (mpt_set_taskmgmt_in_progress_flag == $sub.ref(0, 229250));
procedure  mpt_set_taskmgmt_in_progress_flag($p0: ref)
  returns ($r: bv32);
const ldv_mutex_unlock_15: ref;
axiom (ldv_mutex_unlock_15 == $sub.ref(0, 230282));
procedure  ldv_mutex_unlock_15($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9263, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9264, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9265, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mpt_clear_taskmgmt_in_progress_flag: ref;
axiom (mpt_clear_taskmgmt_in_progress_flag == $sub.ref(0, 231314));
procedure  mpt_clear_taskmgmt_in_progress_flag($p0: ref);
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 232346));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: bv8, $i2: bv64, $i3: bv32, $i4: bv1);
const mpt_put_msg_frame_hi_pri: ref;
axiom (mpt_put_msg_frame_hi_pri == $sub.ref(0, 233378));
procedure  mpt_put_msg_frame_hi_pri($i0: bv8, $p1: ref, $p2: ref);
const mpt_send_handshake_request: ref;
axiom (mpt_send_handshake_request == $sub.ref(0, 234410));
procedure  mpt_send_handshake_request($i0: bv8, $p1: ref, $i2: bv32, $p3: ref, $i4: bv32)
  returns ($r: bv32);
const ldv_mutex_unlock_16: ref;
axiom (ldv_mutex_unlock_16 == $sub.ref(0, 235442));
procedure  ldv_mutex_unlock_16($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9273, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9274, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9275, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_lock_mutex_of__MPT_MGMT: ref;
axiom (ldv_mutex_lock_mutex_of__MPT_MGMT == $sub.ref(0, 236474));
procedure  ldv_mutex_lock_mutex_of__MPT_MGMT($p0: ref)
{
  var $i1: bv32;
  var $i2: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10087, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10087, 36} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10088, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10089, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10092, 32} true;
  assume {:verifier.code 0} true;
  $M.8 := 2bv32;
  call {:cexpr "ldv_mutex_mutex_of__MPT_MGMT"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10093, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 237506));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: bv64);
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 238538));
procedure  kzalloc($i0: bv64, $i1: bv32)
  returns ($r: ref)
{
  var $i2: bv32;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8852, metadata !6788), !dbg !8853, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5626, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $or.bv32($i1, 32768bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5626, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := kmalloc($i0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5627, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const pci_alloc_consistent: ref;
axiom (pci_alloc_consistent == $sub.ref(0, 239570));
procedure  pci_alloc_consistent($p0: ref, $i1: bv64, $p2: ref)
  returns ($r: ref)
{
  var $i3: bv64;
  var $i4: bv1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !8865, metadata !6788), !dbg !8866, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 47} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.bv64($i3, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 99} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  goto $bb3;
$bb2:
  assume !(($i4 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5767, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := dma_alloc_attrs($p6, $i1, $p2, 32bv32, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5769, 3} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
}
const pci_map_single: ref;
axiom (pci_map_single == $sub.ref(0, 240602));
procedure  pci_map_single($p0: ref, $p1: ref, $i2: bv64, $i3: bv32)
  returns ($r: bv64)
{
  var $i4: bv64;
  var $i5: bv1;
  var $p6: ref;
  var $p7: ref;
  var $i8: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8890, metadata !6788), !dbg !8891, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8892, metadata !6788), !dbg !8893, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.bv64($i4, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 30} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 104} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5789, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := dma_map_single_attrs($p7, $p1, $i2, $i3, $0.ref);
  // WARNING: %12 = call i64 @dma_map_single_attrs(%struct.device* %11, i8* %1, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_163* null), !dbg !6809, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5791, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 241634));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: bv64, $i3: bv32, $p4: ref)
  returns ($r: bv64)
{
  var $p5: ref;
  var $i6: bv32;
  var $i7: bv32;
  var $i8: bv1;
  var $i9: bv32;
  var $i10: bv64;
  var $i11: bv64;
  var $i12: bv1;
  var $i13: bv64;
  var $i14: bv64;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv64;
  var $p18: ref;
  var $i19: bv64;
  var $i20: bv64;
  var $i21: bv64;
  var $i22: bv64;
  var $i23: bv64;
  var $i24: bv64;
  var $p25: ref;
  var $i26: bv64;
  var $i27: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8915, metadata !6788), !dbg !8916, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8917, metadata !6788), !dbg !8918, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5704, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5706, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5706, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5707, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !6809, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5708, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.bv32($i7, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5708, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.bv1.bv32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5708, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.bv32.bv64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5708, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0bv64);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !6814, !verifier.code !6792
  call {:cexpr "tmp___1"} boogie_si_record_bv64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5709, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.bv64($i11, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5709, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1bv1);
  call devirtbounce(0, .str.86, 19bv32, 12bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5713, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5717, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5717, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  // WARNING: %19 = call i64 @__phys_addr(i64 %18), !dbg !6824, !verifier.code !6792
  call {:cexpr "tmp___2"} boogie_si_record_bv64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5718, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5718, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.bytes.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5718, 77} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.bv64($i14, 12bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5718, 66} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($i2p.bv64.ref($sub.bv64(0bv64, 24189255811072bv64)), $mul.ref($bv2int.64($i17), 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5719, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5719, 49} true;
  assume {:verifier.code 0} true;
  $i20 := $and.bv64($i19, 4095bv64);
  call $i21 := devirtbounce.2($p16, $p0, $p18, $i20, $i2, $i3, $p4);
  // WARNING: %26 = call i64 @devirtbounce.2(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_163*)* %21, %struct.device* %0, %struct.page* %23, i64 %25, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_163* %4)
  call {:cexpr "addr"} boogie_si_record_bv64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5720, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5720, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := __phys_addr($i22);
  // WARNING: %28 = call i64 @__phys_addr(i64 %27), !dbg !6835, !verifier.code !6792
  call {:cexpr "tmp___3"} boogie_si_record_bv64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5721, 70} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.bv64($i23, 12bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5721, 59} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($i2p.bv64.ref($sub.bv64(0bv64, 24189255811072bv64)), $mul.ref($bv2int.64($i24), 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5721, 78} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5721, 98} true;
  assume {:verifier.code 0} true;
  $i27 := $and.bv64($i26, 4095bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5721, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p25, $i27, $i2, $i3, $i21, 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5723, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 242666));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: bv32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !8969, metadata !6788), !dbg !8970, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5670, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 243698));
procedure  __phys_addr($i0: bv64)
  returns ($r: bv64);
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 244730));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: bv64, $i3: bv64, $i4: bv32, $i5: bv64, $i6: bv1);
const dma_alloc_attrs: ref;
axiom (dma_alloc_attrs == $sub.ref(0, 245762));
procedure  dma_alloc_attrs($p0: ref, $i1: bv64, $p2: ref, $i3: bv32, $p4: ref)
  returns ($r: ref);
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 246794));
procedure  kmalloc($i0: bv64, $i1: bv32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8976, metadata !6788), !dbg !8977, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5617, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5618, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 247826));
procedure  __kmalloc($i0: bv64, $i1: bv32)
  returns ($r: ref);
const ldv_mutex_trylock_12: ref;
axiom (ldv_mutex_trylock_12 == $sub.ref(0, 248858));
procedure  ldv_mutex_trylock_12($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
  var $i2: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9227, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := mutex_trylock($p0);
  // WARNING: %2 = call i32 @mutex_trylock(%struct.mutex* %0), !dbg !6793, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8992, metadata !6788), !dbg !8993, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9229, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_mutex_trylock_mutex_of__MPT_MGMT($p0);
  // WARNING: %3 = call i32 @ldv_mutex_trylock_mutex_of__MPT_MGMT(%struct.mutex* %0), !dbg !6800, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9230, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_mutex_lock_interruptible_13: ref;
axiom (ldv_mutex_lock_interruptible_13 == $sub.ref(0, 249890));
procedure  ldv_mutex_lock_interruptible_13($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
  var $i2: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9241, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := mutex_lock_interruptible($p0);
  // WARNING: %2 = call i32 @mutex_lock_interruptible(%struct.mutex* %0), !dbg !6793, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9006, metadata !6788), !dbg !9007, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9243, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_mutex_lock_interruptible_mutex_of__MPT_MGMT($p0);
  // WARNING: %3 = call i32 @ldv_mutex_lock_interruptible_mutex_of__MPT_MGMT(%struct.mutex* %0), !dbg !6800, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9244, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const mutex_lock_interruptible: ref;
axiom (mutex_lock_interruptible == $sub.ref(0, 250922));
procedure  mutex_lock_interruptible($p0: ref)
  returns ($r: bv32);
const ldv_mutex_lock_interruptible_mutex_of__MPT_MGMT: ref;
axiom (ldv_mutex_lock_interruptible_mutex_of__MPT_MGMT == $sub.ref(0, 251954));
procedure  ldv_mutex_lock_interruptible_mutex_of__MPT_MGMT($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
  var $i2: bv1;
  var $i3: bv32;
  var $i4: bv1;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10049, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10049, 36} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10050, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10051, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10054, 19} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %7 = call i32 @ldv_undef_int(), !dbg !6801, !verifier.code !6792
  call {:cexpr "nondetermined"} boogie_si_record_bv32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10055, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.bv32($i3, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10055, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10056, 34} true;
  assume {:verifier.code 0} true;
  $M.8 := 2bv32;
  call {:cexpr "ldv_mutex_mutex_of__MPT_MGMT"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10057, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb6;
$bb5:
  assume !(($i4 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10059, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.bv32(0bv32, 4bv32);
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10062, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const ldv_undef_int: ref;
axiom (ldv_undef_int == $sub.ref(0, 252986));
procedure  ldv_undef_int()
  returns ($r: bv32)
{
  var $i0: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5514, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !6787, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5515, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const mutex_trylock: ref;
axiom (mutex_trylock == $sub.ref(0, 254018));
procedure  mutex_trylock($p0: ref)
  returns ($r: bv32);
const ldv_mutex_trylock_mutex_of__MPT_MGMT: ref;
axiom (ldv_mutex_trylock_mutex_of__MPT_MGMT == $sub.ref(0, 255050));
procedure  ldv_mutex_trylock_mutex_of__MPT_MGMT($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
  var $i2: bv1;
  var $i3: bv32;
  var $i4: bv1;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10101, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10101, 36} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.bv32($i1, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10101, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10102, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10103, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10106, 37} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %7 = call i32 @ldv_undef_int(), !dbg !6801, !verifier.code !6792
  call {:cexpr "is_mutex_held_by_another_thread"} boogie_si_record_bv32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10107, 39} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.bv32($i3, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10108, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb6;
$bb5:
  assume !(($i4 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10110, 34} true;
  assume {:verifier.code 0} true;
  $M.8 := 2bv32;
  call {:cexpr "ldv_mutex_mutex_of__MPT_MGMT"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10111, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1bv32;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10114, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __builtinx_object_size: ref;
axiom (__builtinx_object_size == $sub.ref(0, 256082));
procedure  __builtinx_object_size.ref.bv32(p.0: ref, p.1: bv32)
  returns ($r: bv32);
const __might_fault: ref;
axiom (__might_fault == $sub.ref(0, 257114));
procedure  __might_fault($p0: ref, $i1: bv32);
const _copy_from_user: ref;
axiom (_copy_from_user == $sub.ref(0, 258146));
procedure  _copy_from_user($p0: ref, $p1: ref, $i2: bv32)
  returns ($r: bv64);
const __copy_from_user_overflow: ref;
axiom (__copy_from_user_overflow == $sub.ref(0, 259178));
procedure  __copy_from_user_overflow();
const mptctl_do_mpt_command: ref;
axiom (mptctl_do_mpt_command == $sub.ref(0, 260210));
procedure  mptctl_do_mpt_command($p0: ref, $p1: ref)
  returns ($r: bv32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: bv32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv32;
  var $i18: bv32;
  var $i19: bv1;
  var $p20: ref;
  var $i21: bv64;
  var $i22: bv1;
  var $i23: bv32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: bv64;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv8;
  var $i32: bv32;
  var $i33: bv1;
  var $p34: ref;
  var $p35: ref;
  var $i36: bv32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: bv32;
  var $i41: bv32;
  var $p42: ref;
  var $i43: bv32;
  var $i44: bv1;
  var $p45: ref;
  var $p46: ref;
  var $i47: bv8;
  var $i48: bv32;
  var $i49: bv32;
  var $i50: bv32;
  var $p51: ref;
  var $i52: bv32;
  var $i53: bv1;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv8;
  var $i57: bv32;
  var $i58: bv32;
  var $i59: bv32;
  var $p60: ref;
  var $p61: ref;
  var $i62: bv32;
  var $i63: bv1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: bv32;
  var $i70: bv32;
  var $i71: bv8;
  var $i72: bv32;
  var $i73: bv8;
  var $p74: ref;
  var $p75: ref;
  var $i76: bv64;
  var $i77: bv1;
  var $p78: ref;
  var $p79: ref;
  var $i80: bv32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: bv16;
  var $p88: ref;
  var $p89: ref;
  var $i90: bv32;
  var $i91: bv32;
  var $i92: bv64;
  var $i93: bv64;
  var $i94: bv1;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: bv32;
  var $p101: ref;
  var $p102: ref;
  var $i103: bv8;
  var $p104: ref;
  var $p105: ref;
  var $i106: bv32;
  var $i107: bv32;
  var $i108: bv1;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: bv8;
  var $i114: bv32;
  var $i115: bv32;
  var $i116: bv32;
  var $i117: bv1;
  var $i118: bv1;
  var $i119: bv1;
  var $i120: bv1;
  var $i121: bv1;
  var $i122: bv1;
  var $i123: bv1;
  var $i124: bv1;
  var $i125: bv1;
  var $i126: bv1;
  var $i127: bv1;
  var $i128: bv1;
  var $i129: bv1;
  var $i130: bv1;
  var $i131: bv1;
  var $i132: bv1;
  var $i133: bv1;
  var $i134: bv1;
  var $i135: bv1;
  var $i136: bv1;
  var $i137: bv1;
  var $i138: bv1;
  var $i139: bv1;
  var $p140: ref;
  var $p141: ref;
  var $i142: bv32;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $i147: bv32;
  var $i148: bv32;
  var $i149: bv1;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: bv8;
  var $i156: bv32;
  var $p157: ref;
  var $i158: bv8;
  var $i159: bv32;
  var $p160: ref;
  var $p161: ref;
  var $i162: bv8;
  var $i163: bv32;
  var $p164: ref;
  var $i165: bv8;
  var $i166: bv32;
  var $i167: bv32;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: bv64;
  var $i172: bv1;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $i176: bv32;
  var $i177: bv1;
  var $p178: ref;
  var $p179: ref;
  var $i180: bv32;
  var $i181: bv32;
  var $p182: ref;
  var $i183: bv8;
  var $i184: bv32;
  var $i185: bv1;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: bv32;
  var $p190: ref;
  var $i191: bv8;
  var $i192: bv32;
  var $p193: ref;
  var $p194: ref;
  var $i195: bv32;
  var $i196: bv1;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $i200: bv32;
  var $p201: ref;
  var $i202: bv8;
  var $i203: bv32;
  var $i204: bv32;
  var $i205: bv8;
  var $p206: ref;
  var $p207: ref;
  var $i208: bv8;
  var $i209: bv32;
  var $p210: ref;
  var $p211: ref;
  var $i212: bv8;
  var $i213: bv32;
  var $i214: bv1;
  var $i215: bv32;
  var $i216: bv32;
  var $i217: bv8;
  var $p218: ref;
  var $p219: ref;
  var $i220: bv32;
  var $i221: bv1;
  var $p222: ref;
  var $p223: ref;
  var $i224: bv32;
  var $i225: bv8;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $i229: bv32;
  var $i230: bv32;
  var $i231: bv32;
  var $i232: bv32;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $i238: bv64;
  var $i239: bv1;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $i247: bv64;
  var $i248: bv1;
  var $p250: ref;
  var $i251: bv8;
  var $i252: bv32;
  var $p253: ref;
  var $i254: bv8;
  var $i255: bv32;
  var $i256: bv1;
  var $p257: ref;
  var $i258: bv8;
  var $i259: bv32;
  var $p260: ref;
  var $i261: bv8;
  var $i262: bv32;
  var $i263: bv1;
  var $p264: ref;
  var $i265: bv8;
  var $i266: bv32;
  var $i267: bv32;
  var $i268: bv1;
  var $i269: bv32;
  var $i249: bv32;
  var $p270: ref;
  var $p271: ref;
  var $p272: ref;
  var $p273: ref;
  var $i274: bv64;
  var $i275: bv1;
  var $i241: bv32;
  var $p242: ref;
  var $i276: bv32;
  var $i240: bv32;
  var $p277: ref;
  var $i278: bv32;
  var $i279: bv1;
  var $p280: ref;
  var $i281: bv32;
  var $p284: ref;
  var $i285: bv32;
  var $i282: bv32;
  var $i283: bv32;
  var $i286: bv32;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $i292: bv32;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $i296: bv64;
  var $i297: bv1;
  var $p298: ref;
  var $p299: ref;
  var $p300: ref;
  var $i301: bv32;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $i305: bv64;
  var $i306: bv1;
  var $p307: ref;
  var $p308: ref;
  var $i309: bv8;
  var $i310: bv32;
  var $i311: bv32;
  var $i312: bv8;
  var $p313: ref;
  var $p314: ref;
  var $i315: bv8;
  var $i316: bv32;
  var $p317: ref;
  var $p318: ref;
  var $i319: bv8;
  var $i320: bv32;
  var $i321: bv1;
  var $i322: bv32;
  var $i323: bv32;
  var $i324: bv8;
  var $p325: ref;
  var $p326: ref;
  var $i327: bv32;
  var $i328: bv1;
  var $p329: ref;
  var $p330: ref;
  var $i331: bv32;
  var $i332: bv8;
  var $p333: ref;
  var $p334: ref;
  var $p335: ref;
  var $i336: bv32;
  var $i337: bv32;
  var $i338: bv32;
  var $i339: bv32;
  var $p340: ref;
  var $p341: ref;
  var $i342: bv32;
  var $i343: bv1;
  var $p344: ref;
  var $i345: bv32;
  var $p348: ref;
  var $i349: bv32;
  var $i346: bv32;
  var $i347: bv32;
  var $i350: bv32;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $p354: ref;
  var $p355: ref;
  var $i356: bv32;
  var $p357: ref;
  var $p358: ref;
  var $p359: ref;
  var $i360: bv32;
  var $i361: bv32;
  var $i362: bv1;
  var $p363: ref;
  var $p364: ref;
  var $p365: ref;
  var $p366: ref;
  var $i367: bv8;
  var $i368: bv32;
  var $p369: ref;
  var $i370: bv32;
  var $p371: ref;
  var $i372: bv8;
  var $i373: bv32;
  var $p374: ref;
  var $i375: bv8;
  var $i376: bv32;
  var $p377: ref;
  var $i378: bv8;
  var $i379: bv32;
  var $i380: bv32;
  var $p381: ref;
  var $p382: ref;
  var $p383: ref;
  var $i384: bv64;
  var $i385: bv64;
  var $i386: bv32;
  var $p387: ref;
  var $p388: ref;
  var $i389: bv64;
  var $i390: bv64;
  var $i391: bv32;
  var $p392: ref;
  var $i393: bv8;
  var $i394: bv32;
  var $i395: bv1;
  var $p396: ref;
  var $i397: bv8;
  var $i398: bv32;
  var $p399: ref;
  var $p400: ref;
  var $p401: ref;
  var $i402: bv8;
  var $i403: bv32;
  var $i404: bv1;
  var $p405: ref;
  var $i406: bv8;
  var $i407: bv32;
  var $p408: ref;
  var $p409: ref;
  var $p410: ref;
  var $i411: bv8;
  var $i412: bv32;
  var $i413: bv1;
  var $p414: ref;
  var $i415: bv16;
  var $i416: bv32;
  var $p417: ref;
  var $p418: ref;
  var $i419: bv32;
  var $i420: bv16;
  var $i421: bv32;
  var $i422: bv1;
  var $p423: ref;
  var $i424: bv32;
  var $i425: bv1;
  var $p426: ref;
  var $i427: bv32;
  var $i428: bv1;
  var $p429: ref;
  var $p430: ref;
  var $p431: ref;
  var $i432: bv32;
  var $p433: ref;
  var $p434: ref;
  var $p435: ref;
  var $p436: ref;
  var $i437: bv8;
  var $i438: bv32;
  var $i439: bv32;
  var $p440: ref;
  var $p441: ref;
  var $i442: bv32;
  var $i443: bv64;
  var $p444: ref;
  var $p445: ref;
  var $i446: bv32;
  var $i447: bv1;
  var $i448: bv32;
  var $i449: bv32;
  var $p450: ref;
  var $i451: bv32;
  var $i452: bv1;
  var $i453: bv32;
  var $i454: bv32;
  var $i455: bv1;
  var $p456: ref;
  var $i457: bv32;
  var $i458: bv1;
  var $p459: ref;
  var $i460: bv32;
  var $i461: bv1;
  var $i462: bv32;
  var $p463: ref;
  var $i464: bv32;
  var $i465: bv32;
  var $p466: ref;
  var $i467: bv32;
  var $p468: ref;
  var $p469: ref;
  var $p470: ref;
  var $p471: ref;
  var $p472: ref;
  var $i473: bv32;
  var $i474: bv64;
  var $p475: ref;
  var $p476: ref;
  var $p477: ref;
  var $p478: ref;
  var $i479: bv64;
  var $i480: bv1;
  var $p481: ref;
  var $p482: ref;
  var $p483: ref;
  var $i484: bv64;
  var $p485: ref;
  var $p486: ref;
  var $i487: bv8;
  var $i488: bv64;
  var $i489: bv64;
  var $p490: ref;
  var $p491: ref;
  var $p492: ref;
  var $p493: ref;
  var $p494: ref;
  var $p495: ref;
  var $i496: bv32;
  var $i497: bv64;
  var $i498: bv64;
  var $i499: bv1;
  var $p500: ref;
  var $p501: ref;
  var $p502: ref;
  var $p503: ref;
  var $p504: ref;
  var $i505: bv32;
  var $p506: ref;
  var $p507: ref;
  var $i508: bv32;
  var $i509: bv1;
  var $p510: ref;
  var $i511: bv32;
  var $i512: bv32;
  var $p513: ref;
  var $i514: bv32;
  var $p515: ref;
  var $p516: ref;
  var $p517: ref;
  var $p518: ref;
  var $p519: ref;
  var $i520: bv32;
  var $i521: bv64;
  var $p522: ref;
  var $p523: ref;
  var $p524: ref;
  var $p525: ref;
  var $i526: bv64;
  var $i527: bv1;
  var $p528: ref;
  var $p529: ref;
  var $p530: ref;
  var $i531: bv64;
  var $p532: ref;
  var $p533: ref;
  var $p534: ref;
  var $p535: ref;
  var $i536: bv32;
  var $p537: ref;
  var $p538: ref;
  var $p539: ref;
  var $p540: ref;
  var $p541: ref;
  var $p542: ref;
  var $p543: ref;
  var $i544: bv8;
  var $i545: bv32;
  var $i546: bv1;
  var $p547: ref;
  var $p548: ref;
  var $p549: ref;
  var $p550: ref;
  var $i551: bv32;
  var $i552: bv1;
  var $p553: ref;
  var $p554: ref;
  var $p555: ref;
  var $p556: ref;
  var $p557: ref;
  var $p558: ref;
  var $i559: bv32;
  var $i560: bv32;
  var $i561: bv1;
  var $p562: ref;
  var $p563: ref;
  var $p564: ref;
  var $i565: bv16;
  var $i566: bv32;
  var $i567: bv1;
  var $i568: bv8;
  var $i569: bv32;
  var $i570: bv8;
  var $p571: ref;
  var $i573: bv8;
  var $i574: bv32;
  var $i575: bv8;
  var $p576: ref;
  var $p577: ref;
  var $i578: bv32;
  var $i579: bv1;
  var $p580: ref;
  var $p581: ref;
  var $i582: bv32;
  var $i583: bv32;
  var $i584: bv1;
  var $p585: ref;
  var $p586: ref;
  var $p587: ref;
  var $p588: ref;
  var $i589: bv32;
  var $p590: ref;
  var $p591: ref;
  var $p592: ref;
  var $p593: ref;
  var $i572: bv32;
  var $i595: bv8;
  var $i596: bv32;
  var $i597: bv8;
  var $p598: ref;
  var $i594: bv32;
  var $p599: ref;
  var $i600: bv32;
  var $i601: bv1;
  var $p602: ref;
  var $i603: bv32;
  var $i604: bv64;
  var $i605: bv64;
  var $p606: ref;
  var $p607: ref;
  var $p608: ref;
  var $i609: bv64;
  var $i610: bv64;
  var $p611: ref;
  var $p612: ref;
  var $p613: ref;
  var $i614: bv8;
  var $i615: bv32;
  var $i616: bv32;
  var $i617: bv1;
  var $i620: bv32;
  var $p621: ref;
  var $p622: ref;
  var $p623: ref;
  var $i624: bv64;
  var $p625: ref;
  var $p626: ref;
  var $p627: ref;
  var $i628: bv8;
  var $i629: bv32;
  var $i630: bv32;
  var $i631: bv1;
  var $i619: bv64;
  var $p633: ref;
  var $p634: ref;
  var $i635: bv32;
  var $i636: bv32;
  var $i637: bv1;
  var $p638: ref;
  var $p639: ref;
  var $p640: ref;
  var $i641: bv32;
  var $p642: ref;
  var $p643: ref;
  var $p644: ref;
  var $i645: bv8;
  var $i646: bv32;
  var $i647: bv32;
  var $i648: bv1;
  var $i649: bv32;
  var $i650: bv1;
  var $p651: ref;
  var $p652: ref;
  var $p653: ref;
  var $i654: bv1;
  var $p655: ref;
  var $i656: bv32;
  var $p657: ref;
  var $p658: ref;
  var $p659: ref;
  var $i660: bv32;
  var $i661: bv32;
  var $i662: bv32;
  var $i663: bv1;
  var $p664: ref;
  var $p665: ref;
  var $p666: ref;
  var $p667: ref;
  var $i632: bv32;
  var $i618: bv32;
  var $i668: bv32;
  var $i669: bv1;
  var $p670: ref;
  var $p671: ref;
  var $p672: ref;
  var $p673: ref;
  var $p674: ref;
  var $p675: ref;
  var $i676: bv8;
  var $i677: bv32;
  var $i678: bv32;
  var $i679: bv1;
  var $p680: ref;
  var $i681: bv32;
  var $p682: ref;
  var $p683: ref;
  var $i684: bv32;
  var $i685: bv1;
  var $p686: ref;
  var $i687: bv32;
  var $p688: ref;
  var $p689: ref;
  var $p690: ref;
  var $p691: ref;
  var $i692: bv8;
  var $i693: bv32;
  var $i694: bv32;
  var $i695: bv1;
  var $i696: bv32;
  var $p698: ref;
  var $p699: ref;
  var $i700: bv32;
  var $p701: ref;
  var $p702: ref;
  var $p703: ref;
  var $p704: ref;
  var $i705: bv8;
  var $i706: bv32;
  var $i707: bv32;
  var $i708: bv1;
  var $i709: bv32;
  var $i697: bv32;
  var $i710: bv1;
  var $p711: ref;
  var $p712: ref;
  var $p713: ref;
  var $p714: ref;
  var $p715: ref;
  var $p716: ref;
  var $i717: bv64;
  var $i718: bv64;
  var $i719: bv1;
  var $p720: ref;
  var $p721: ref;
  var $p722: ref;
  var $p723: ref;
  var $p724: ref;
  var $i725: bv32;
  var $p726: ref;
  var $p727: ref;
  var $p728: ref;
  var $i729: bv8;
  var $i730: bv32;
  var $i731: bv32;
  var $i732: bv1;
  var $p733: ref;
  var $i734: bv32;
  var $i735: bv1;
  var $i736: bv32;
  var $i737: bv1;
  var $p738: ref;
  var $p739: ref;
  var $p740: ref;
  var $p741: ref;
  var $p742: ref;
  var $p743: ref;
  var $i744: bv64;
  var $i745: bv64;
  var $i746: bv1;
  var $p747: ref;
  var $p748: ref;
  var $p749: ref;
  var $p750: ref;
  var $p751: ref;
  var $i752: bv32;
  var $p753: ref;
  var $p754: ref;
  var $p755: ref;
  var $i756: bv8;
  var $i757: bv32;
  var $i758: bv32;
  var $i759: bv1;
  var $p760: ref;
  var $i761: bv32;
  var $i762: bv1;
  var $p763: ref;
  var $p764: ref;
  var $i765: bv64;
  var $i766: bv1;
  var $p767: ref;
  var $p768: ref;
  var $p769: ref;
  var $p770: ref;
  var $p771: ref;
  var $i772: bv32;
  var $i773: bv64;
  var $i774: bv64;
  var $i775: bv1;
  var $p776: ref;
  var $p777: ref;
  var $p778: ref;
  var $p779: ref;
  var $p780: ref;
  var $i781: bv32;
  var $i782: bv32;
  var $i783: bv32;
  var $i99: bv32;
  var $p100: ref;
  var $p784: ref;
  var $p785: ref;
  var $p786: ref;
  var $p787: ref;
  var $p788: ref;
  var $p789: ref;
  var $p790: ref;
  var $p791: ref;
  var $i792: bv64;
  var $i793: bv1;
  var $p794: ref;
  var $p795: ref;
  var $p796: ref;
  var $p797: ref;
  var $i798: bv32;
  var $i799: bv64;
  var $p800: ref;
  var $p801: ref;
  var $i802: bv64;
  var $p803: ref;
  var $p804: ref;
  var $i805: bv64;
  var $i806: bv1;
  var $p807: ref;
  var $p808: ref;
  var $p809: ref;
  var $p810: ref;
  var $i811: bv32;
  var $i812: bv64;
  var $p813: ref;
  var $p814: ref;
  var $i815: bv64;
  var $i816: bv64;
  var $i817: bv1;
  var $p818: ref;
  var $i24: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_FRAME_HDR* null, i64 0, metadata !9084, metadata !6788), !dbg !9085, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !9086, metadata !6788), !dbg !9087, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7776, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7776, 15} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p7, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7777, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7777, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.10, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7777, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7777, 14} true;
  assume {:verifier.code 0} true;
  $M.11 := $store.ref($M.11, $p10, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7778, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7778, 14} true;
  assume {:verifier.code 0} true;
  $M.12 := $store.bv32($M.12, $p11, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7779, 22} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7779, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $load.bv32($M.12, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7779, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7779, 13} true;
  assume {:verifier.code 0} true;
  $M.13 := $store.bv32($M.13, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7780, 42} true;
  assume {:verifier.code 0} true;
  $p15 := $p0;
  $p16 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7780, 46} true;
  assume {:verifier.code 0} true;
  $i17 := $load.bytes.bv32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7780, 12} true;
  assume {:verifier.code 0} true;
  call $i18 := mpt_verify_adapter($i17, $p2);
  // WARNING: %19 = call i32 @mpt_verify_adapter(i32 %18, %struct._MPT_ADAPTER** %3), !dbg !6824, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 14} true;
  assume {:verifier.code 0} true;
  $i19 := $slt.bv32($i18, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 18} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1bv1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7782, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := printk.ref.ref.bv32.bv32(.str.99, .str.27, 1849bv32, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7784, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 19bv32);
  goto $bb6;
$bb3:
  assume !(($i19 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.bv64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.bv64($i21, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7781, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1bv1);
  goto $bb2;
$bb5:
  assume !(($i22 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8246, 1} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7788, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7788, 31} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7788, 9} true;
  assume {:verifier.code 0} true;
  call $p27 := spinlock_check($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7789, 11} true;
  assume {:verifier.code 0} true;
  call $i28 := _raw_spin_lock_irqsave($p27);
  // WARNING: %32 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %31), !dbg !6844, !verifier.code !6789
  call {:cexpr "flags"} boogie_si_record_bv64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 22} true;
  assume {:verifier.code 0} true;
  $p29 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 27} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 4773);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 27} true;
  assume {:verifier.code 0} true;
  $i31 := $load.bytes.bv8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.bv8.bv32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 49} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.bv32($i32, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7790, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i33 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7791, 30} true;
  assume {:verifier.code 0} true;
  $p34 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7791, 35} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7791, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p35, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7792, 5} true;
  assume {:verifier.code 0} true;
  call $i36 := printk.ref.ref.bv32(.str.100, .str.27, 1857bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7795, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 16bv32);
  goto $bb6;
$bb9:
  assume !(($i33 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7799, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7799, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 4696);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7799, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p38, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7800, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7800, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $load.bytes.bv32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7800, 27} true;
  assume {:verifier.code 0} true;
  $i41 := $mul.bv32($i40, 4bv32);
  // WARNING: %48 = mul nsw i32 %47, 4, !dbg !6863, !verifier.code !6789
  call {:cexpr "sz"} boogie_si_record_bv32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7801, 12} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7801, 12} true;
  assume {:verifier.code 0} true;
  $i43 := $load.bytes.bv32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7801, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $sgt.bv32($i43, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i44 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7802, 16} true;
  assume {:verifier.code 0} true;
  $p45 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7802, 21} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7802, 21} true;
  assume {:verifier.code 0} true;
  $i47 := $load.bytes.bv8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7802, 10} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.bv8.bv32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7802, 30} true;
  assume {:verifier.code 0} true;
  $i49 := $add.bv32($i48, $i41);
  // WARNING: %57 = add nsw i32 %56, %48, !dbg !6874, !verifier.code !6789
  call {:cexpr "sz"} boogie_si_record_bv32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7803, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb13;
$bb12:
  assume !(($i44 == 1bv1));
  assume {:verifier.code 0} true;
  $i50 := $i41;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7806, 12} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7806, 12} true;
  assume {:verifier.code 0} true;
  $i52 := $load.bytes.bv32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7806, 24} true;
  assume {:verifier.code 0} true;
  $i53 := $sgt.bv32($i52, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7806, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i53 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7807, 16} true;
  assume {:verifier.code 0} true;
  $p54 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7807, 21} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7807, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $load.bytes.bv8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7807, 10} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.bv8.bv32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7807, 30} true;
  assume {:verifier.code 0} true;
  $i58 := $add.bv32($i57, $i50);
  // WARNING: %68 = add nsw i32 %67, %.050, !dbg !6884, !verifier.code !6789
  call {:cexpr "sz"} boogie_si_record_bv32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7808, 3} true;
  assume {:verifier.code 0} true;
  $i59 := $i58;
  goto $bb16;
$bb15:
  assume !(($i53 == 1bv1));
  assume {:verifier.code 0} true;
  $i59 := $i50;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7811, 7} true;
  assume {:verifier.code 0} true;
  $p60 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7811, 12} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7811, 12} true;
  assume {:verifier.code 0} true;
  $i62 := $load.bytes.bv32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7811, 19} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.bv32($i62, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7811, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i63 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7813, 23} true;
  assume {:verifier.code 0} true;
  $p64 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7813, 28} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7813, 12} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7814, 22} true;
  assume {:verifier.code 0} true;
  $p67 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7814, 27} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7814, 27} true;
  assume {:verifier.code 0} true;
  $i69 := $load.bytes.bv32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7812, 5} true;
  assume {:verifier.code 0} true;
  call $i70 := printk.ref.ref.ref.bv32.bv32.bv32(.str.101, $p66, .str.27, 1873bv32, $i59, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7815, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 14bv32);
  goto $bb6;
$bb18:
  assume !(($i63 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7819, 32} true;
  assume {:verifier.code 0} true;
  $i71 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7819, 26} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.bv8.bv32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7819, 26} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.bv32.bv8($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7819, 43} true;
  assume {:verifier.code 0} true;
  $p74 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7819, 8} true;
  assume {:verifier.code 0} true;
  call $p75 := mpt_get_msg_frame($i73, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7820, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.bv64($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7820, 26} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.bv64($i76, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7820, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i77 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7821, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.bv32(0bv32, 11bv32);
  goto $bb6;
$bb21:
  assume !(($i77 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7825, 9} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7826, 27} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7826, 27} true;
  assume {:verifier.code 0} true;
  $i80 := $load.bytes.bv32($M.0, $p79);
  // WARNING: %97 = load i32, i32* %96, align 4, !dbg !6912, !verifier.code !6789
  call {:cexpr "msgContext"} boogie_si_record_bv32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 25} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 39} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 43} true;
  assume {:verifier.code 0} true;
  $p86 := $p85;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7827, 43} true;
  assume {:verifier.code 0} true;
  $i87 := $load.bytes.bv16($M.0, $p86);
  // WARNING: %104 = load i16, i16* %103, align 8, !dbg !6920, !verifier.code !6789
  call {:cexpr "req_idx"} boogie_si_record_bv16($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 28} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 85} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 85} true;
  assume {:verifier.code 0} true;
  $i90 := $load.bytes.bv32($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 99} true;
  assume {:verifier.code 0} true;
  $i91 := $mul.bv32($i90, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 63} true;
  assume {:verifier.code 0} true;
  $i92 := $sext.bv32.bv64($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7828, 13} true;
  assume {:verifier.code 0} true;
  call $i93 := copy_from_user($p88, $p1, $i92);
  // WARNING: %110 = call i64 @copy_from_user(i8* %105, i8* %1, i64 %109), !dbg !6927, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7829, 15} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.bv64($i93, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7829, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i94 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7831, 23} true;
  assume {:verifier.code 0} true;
  $p95 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7831, 28} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7831, 12} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7830, 5} true;
  assume {:verifier.code 0} true;
  call $i98 := printk.ref.ref.ref.bv32.ref(.str.102, $p97, .str.27, 1893bv32, $p1);
  // WARNING: %116 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.102, i32 0, i32 0), i8* %115, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 1893, i8* %1), !dbg !6937, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !9216, metadata !6788), !dbg !9217, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7835, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb24:
  assume !(($i94 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8227, 3} true;
  assume {:verifier.code 0} true;
  $p784 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8227, 8} true;
  assume {:verifier.code 0} true;
  $p785 := $add.ref($p784, 4232);
  $p786 := $add.ref($add.ref($p784, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8227, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p786, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8228, 3} true;
  assume {:verifier.code 0} true;
  $p787 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8228, 8} true;
  assume {:verifier.code 0} true;
  $p788 := $add.ref($p787, 4232);
  $p789 := $add.ref($add.ref($p787, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8228, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p789, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8229, 30} true;
  assume {:verifier.code 0} true;
  $p790 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8229, 30} true;
  assume {:verifier.code 0} true;
  $p791 := $load.ref($M.10, $p790);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8229, 7} true;
  assume {:verifier.code 0} true;
  $i792 := $p2i.ref.bv64($p791);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8229, 35} true;
  assume {:verifier.code 0} true;
  $i793 := $ne.bv64($i792, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8229, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i793} true;
  goto $bb272, $bb273;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7839, 8} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p78, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7839, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p101, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7840, 19} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p78, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7840, 19} true;
  assume {:verifier.code 0} true;
  $i103 := $load.bytes.bv8($M.0, $p102);
  // WARNING: %121 = load i8, i8* %120, align 1, !dbg !6943, !verifier.code !6789
  call {:cexpr "function"} boogie_si_record_bv8($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 8} true;
  assume {:verifier.code 0} true;
  $p104 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 13} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p104, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 13} true;
  assume {:verifier.code 0} true;
  $i106 := $load.bytes.bv32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 25} true;
  assume {:verifier.code 0} true;
  $i107 := $and.bv32($i106, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 35} true;
  assume {:verifier.code 0} true;
  $i108 := $ne.bv32($i107, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7841, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i108 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7842, 82} true;
  assume {:verifier.code 0} true;
  $p109 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7842, 87} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p109, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7842, 71} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7843, 23} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p78, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7843, 23} true;
  assume {:verifier.code 0} true;
  $i113 := $load.bytes.bv8($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7843, 12} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.bv8.bv32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7842, 5} true;
  assume {:verifier.code 0} true;
  call $i115 := printk.ref.ref.bv32.ref(.str.103, $p111, $i114, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7844, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i108 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7847, 11} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.bv8.bv32($i103);
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  $i117 := $slt.bv32($i116, 19bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i117 == 1bv1);
  assume {:verifier.code 0} true;
  $i128 := $slt.bv32($i116, 4bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb58, $bb59;
$bb32:
  assume !(($i117 == 1bv1));
  assume {:verifier.code 0} true;
  $i118 := $slt.bv32($i116, 23bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i118 == 1bv1);
  assume {:verifier.code 0} true;
  $i125 := $slt.bv32($i116, 21bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb51, $bb52;
$bb34:
  assume !(($i118 == 1bv1));
  assume {:verifier.code 0} true;
  $i119 := $slt.bv32($i116, 26bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i119 == 1bv1);
  assume {:verifier.code 0} true;
  $i123 := $slt.bv32($i116, 24bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb45, $bb47;
$bb36:
  assume !(($i119 == 1bv1));
  assume {:verifier.code 0} true;
  $i120 := $slt.bv32($i116, 27bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i120 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7947, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb38:
  assume !(($i120 == 1bv1));
  assume {:verifier.code 0} true;
  $i121 := $slt.bv32($i116, 28bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb39, $bb41;
$bb39:
  assume {:verifier.code 0} true;
  assume ($i121 == 1bv1);
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7871, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb41:
  assume !(($i121 == 1bv1));
  assume {:verifier.code 0} true;
  $i122 := $eq.bv32($i116, 28bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i122 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 23} true;
  assume {:verifier.code 0} true;
  $p293 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 28} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p293, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 28} true;
  assume {:verifier.code 0} true;
  $p295 := $load.bytes.ref($M.0, $p294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $p2i.ref.bv64($p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 31} true;
  assume {:verifier.code 0} true;
  $i297 := $eq.bv64($i296, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i297} true;
  goto $bb128, $bb129;
$bb43:
  assume {:verifier.code 0} true;
  assume !(($i122 == 1bv1));
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb157;
$bb45:
  assume {:verifier.code 0} true;
  assume ($i123 == 1bv1);
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb47:
  assume !(($i123 == 1bv1));
  assume {:verifier.code 0} true;
  $i124 := $eq.bv32($i116, 24bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb48, $bb50;
$bb48:
  assume {:verifier.code 0} true;
  assume ($i124 == 1bv1);
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb50:
  assume {:verifier.code 0} true;
  assume !(($i124 == 1bv1));
  goto $bb44;
$bb51:
  assume ($i125 == 1bv1);
  assume {:verifier.code 0} true;
  $i127 := $slt.bv32($i116, 20bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb55, $bb56;
$bb52:
  assume !(($i125 == 1bv1));
  assume {:verifier.code 0} true;
  $i126 := $slt.bv32($i116, 22bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i126 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7960, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb54:
  assume !(($i126 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 23} true;
  assume {:verifier.code 0} true;
  $p302 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 28} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($p302, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 28} true;
  assume {:verifier.code 0} true;
  $p304 := $load.bytes.ref($M.0, $p303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 7} true;
  assume {:verifier.code 0} true;
  $i305 := $p2i.ref.bv64($p304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 31} true;
  assume {:verifier.code 0} true;
  $i306 := $ne.bv64($i305, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i306} true;
  goto $bb131, $bb132;
$bb55:
  assume ($i127 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb56:
  assume {:verifier.code 0} true;
  assume !(($i127 == 1bv1));
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb58:
  assume ($i128 == 1bv1);
  assume {:verifier.code 0} true;
  $i136 := $slt.bv32($i116, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb78, $bb79;
$bb59:
  assume !(($i128 == 1bv1));
  assume {:verifier.code 0} true;
  $i129 := $slt.bv32($i116, 9bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i129 == 1bv1);
  assume {:verifier.code 0} true;
  $i134 := $slt.bv32($i116, 5bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb73, $bb74;
$bb61:
  assume !(($i129 == 1bv1));
  assume {:verifier.code 0} true;
  $i130 := $slt.bv32($i116, 16bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i130 == 1bv1);
  assume {:verifier.code 0} true;
  $i133 := $eq.bv32($i116, 9bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb70, $bb72;
$bb63:
  assume !(($i130 == 1bv1));
  assume {:verifier.code 0} true;
  $i131 := $slt.bv32($i116, 18bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i131 == 1bv1);
  assume {:verifier.code 0} true;
  $i132 := $eq.bv32($i116, 16bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i132} true;
  goto $bb67, $bb69;
$bb65:
  assume {:verifier.code 0} true;
  assume !(($i131 == 1bv1));
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb67:
  assume {:verifier.code 0} true;
  assume ($i132 == 1bv1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb69:
  assume {:verifier.code 0} true;
  assume !(($i132 == 1bv1));
  goto $bb44;
$bb70:
  assume {:verifier.code 0} true;
  assume ($i133 == 1bv1);
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb72:
  assume {:verifier.code 0} true;
  assume !(($i133 == 1bv1));
  goto $bb44;
$bb73:
  assume ($i134 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7854, 18} true;
  assume {:verifier.code 0} true;
  $p144 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 8} true;
  assume {:verifier.code 0} true;
  $p145 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 13} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p145, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 13} true;
  assume {:verifier.code 0} true;
  $i147 := $load.bytes.bv32($M.0, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 25} true;
  assume {:verifier.code 0} true;
  $i148 := $and.bv32($i147, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 35} true;
  assume {:verifier.code 0} true;
  $i149 := $ne.bv32($i148, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7855, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb87, $bb88;
$bb74:
  assume !(($i134 == 1bv1));
  assume {:verifier.code 0} true;
  $i135 := $eq.bv32($i116, 5bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb75, $bb77;
$bb75:
  assume {:verifier.code 0} true;
  assume ($i135 == 1bv1);
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7850, 8} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7850, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p140, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7851, 27} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7851, 27} true;
  assume {:verifier.code 0} true;
  $i142 := $load.bytes.bv32($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7851, 8} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7851, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p143, $i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7852, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb77:
  assume {:verifier.code 0} true;
  assume !(($i135 == 1bv1));
  goto $bb44;
$bb78:
  assume ($i136 == 1bv1);
  assume {:verifier.code 0} true;
  $i138 := $slt.bv32($i116, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb82, $bb83;
$bb79:
  assume !(($i136 == 1bv1));
  assume {:verifier.code 0} true;
  $i137 := $slt.bv32($i116, 3bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i137 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8002, 11} true;
  assume {:verifier.code 0} true;
  $p381 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8003, 31} true;
  assume {:verifier.code 0} true;
  $p382 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8003, 36} true;
  assume {:verifier.code 0} true;
  $p383 := $add.ref($p382, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8003, 36} true;
  assume {:verifier.code 0} true;
  $i384 := $load.bytes.bv64($M.0, $p383);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8003, 51} true;
  assume {:verifier.code 0} true;
  $i385 := $lshr.bv64($i384, 32bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8003, 15} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.bv64.bv32($i385);
  // WARNING: %441 = trunc i64 %440 to i32, !dbg !7291, !verifier.code !6789
  call {:cexpr "high_addr"} boogie_si_record_bv32($i386);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8004, 32} true;
  assume {:verifier.code 0} true;
  $p387 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8004, 37} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p387, 584);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8004, 37} true;
  assume {:verifier.code 0} true;
  $i389 := $load.bytes.bv64($M.0, $p388);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8004, 56} true;
  assume {:verifier.code 0} true;
  $i390 := $lshr.bv64($i389, 32bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8004, 16} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.bv64.bv32($i390);
  // WARNING: %446 = trunc i64 %445 to i32, !dbg !7297, !verifier.code !6789
  call {:cexpr "sense_high"} boogie_si_record_bv32($i391);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 33} true;
  assume {:verifier.code 0} true;
  $p392 := $add.ref($p381, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 33} true;
  assume {:verifier.code 0} true;
  $i393 := $load.bytes.bv8($M.0, $p392);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 11} true;
  assume {:verifier.code 0} true;
  $i394 := $zext.bv8.bv32($i393);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 39} true;
  assume {:verifier.code 0} true;
  $i395 := $ne.bv32($i394, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb143, $bb145;
$bb81:
  assume !(($i137 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7847, 27} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb82:
  assume ($i138 == 1bv1);
  assume {:verifier.code 0} true;
  $i139 := $eq.bv32($i116, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb84, $bb85;
$bb83:
  assume !(($i138 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7992, 13} true;
  assume {:verifier.code 0} true;
  $p357 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 8} true;
  assume {:verifier.code 0} true;
  $p358 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 13} true;
  assume {:verifier.code 0} true;
  $p359 := $add.ref($p358, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 13} true;
  assume {:verifier.code 0} true;
  $i360 := $load.bytes.bv32($M.0, $p359);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 25} true;
  assume {:verifier.code 0} true;
  $i361 := $and.bv32($i360, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 35} true;
  assume {:verifier.code 0} true;
  $i362 := $ne.bv32($i361, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7993, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i362} true;
  goto $bb140, $bb141;
$bb84:
  assume ($i139 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 23} true;
  assume {:verifier.code 0} true;
  $p168 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 28} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p168, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 28} true;
  assume {:verifier.code 0} true;
  $p170 := $load.bytes.ref($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $p2i.ref.bv64($p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 31} true;
  assume {:verifier.code 0} true;
  $i172 := $ne.bv64($i171, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb90, $bb91;
$bb85:
  assume {:verifier.code 0} true;
  assume !(($i139 == 1bv1));
  goto $bb44;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8023, 10} true;
  assume {:verifier.code 0} true;
  $p440 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8023, 44} true;
  assume {:verifier.code 0} true;
  $p441 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8023, 44} true;
  assume {:verifier.code 0} true;
  $i442 := $load.bytes.bv32($M.0, $p441);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8023, 23} true;
  assume {:verifier.code 0} true;
  $i443 := $sext.bv32.bv64($i442);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8023, 21} true;
  assume {:verifier.code 0} true;
  $p444 := $add.ref($p440, $mul.ref($bv2int.64($i443), 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %509, i64 0, metadata !9636, metadata !6788), !dbg !9637, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8025, 12} true;
  assume {:verifier.code 0} true;
  $p445 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8025, 12} true;
  assume {:verifier.code 0} true;
  $i446 := $load.bytes.bv32($M.0, $p445);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8025, 24} true;
  assume {:verifier.code 0} true;
  $i447 := $sgt.bv32($i446, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8025, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i447} true;
  goto $bb158, $bb159;
$bb87:
  assume ($i149 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 23} true;
  assume {:verifier.code 0} true;
  $p150 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 28} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p150, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 12} true;
  assume {:verifier.code 0} true;
  $p152 := $bitcast.ref.ref($p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 55} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p144, 20);
  $p154 := $add.ref($add.ref($p144, 20), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 62} true;
  assume {:verifier.code 0} true;
  $i155 := $load.bytes.bv8($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $i156 := $zext.bv8.bv32($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 92} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p144, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 92} true;
  assume {:verifier.code 0} true;
  $i158 := $load.bytes.bv8($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7857, 72} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.bv8.bv32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 32} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p144, 20);
  $p161 := $add.ref($add.ref($p144, 20), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 39} true;
  assume {:verifier.code 0} true;
  $i162 := $load.bytes.bv8($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 12} true;
  assume {:verifier.code 0} true;
  $i163 := $zext.bv8.bv32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 71} true;
  assume {:verifier.code 0} true;
  $p164 := $p144;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 71} true;
  assume {:verifier.code 0} true;
  $i165 := $load.bytes.bv8($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7858, 51} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.bv8.bv32($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7856, 5} true;
  assume {:verifier.code 0} true;
  call $i167 := printk.ref.ref.bv32.bv32.bv32.bv32(.str.104, $p152, $i156, $i159, $i163, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7859, 3} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb88:
  assume !(($i149 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb90:
  assume ($i172 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7874, 16} true;
  assume {:verifier.code 0} true;
  $p173 := $bitcast.ref.ref($p75);
  // WARNING: call void @llvm.dbg.value(metadata %struct._MSG_SCSI_IO_REQUEST* %187, i64 0, metadata !9295, metadata !6788), !dbg !9296, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 1280, i64 0, metadata !9297, metadata !6788), !dbg !9298, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 10} true;
  assume {:verifier.code 0} true;
  $p174 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 15} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p174, 244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 15} true;
  assume {:verifier.code 0} true;
  $i176 := $load.bytes.bv32($M.0, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 31} true;
  assume {:verifier.code 0} true;
  $i177 := $ne.bv32($i176, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 10} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb92, $bb93;
$bb91:
  assume !(($i172 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7940, 23} true;
  assume {:verifier.code 0} true;
  $p289 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7940, 28} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p289, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7940, 12} true;
  assume {:verifier.code 0} true;
  $p291 := $bitcast.ref.ref($p290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7939, 5} true;
  assume {:verifier.code 0} true;
  call $i292 := printk.ref.ref.ref.bv32(.str.107, $p291, .str.27, 2011bv32);
  // WARNING: %327 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.107, i32 0, i32 0), i8* %326, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2011), !dbg !7169, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7943, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb92:
  assume ($i177 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 44} true;
  assume {:verifier.code 0} true;
  $p178 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 49} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p178, 244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 49} true;
  assume {:verifier.code 0} true;
  $i180 := $load.bytes.bv32($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 10} true;
  assume {:verifier.code 0} true;
  $i181 := $i180;
  goto $bb94;
$bb93:
  assume !(($i177 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 10} true;
  assume {:verifier.code 0} true;
  $i181 := 256bv32;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7877, 10} true;
  assume {:verifier.code 0} true;
  // WARNING: %198 = phi i32 [ %195, %192 ], [ 256, %196 ], !dbg !7032, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7878, 25} true;
  assume {:verifier.code 0} true;
  $p182 := $p173;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7878, 25} true;
  assume {:verifier.code 0} true;
  $i183 := $load.bytes.bv8($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7878, 9} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.bv8.bv32($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7878, 34} true;
  assume {:verifier.code 0} true;
  $i185 := $ugt.bv32($i184, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7878, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb95, $bb96;
$bb95:
  assume ($i185 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7880, 25} true;
  assume {:verifier.code 0} true;
  $p186 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7880, 30} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p186, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7880, 14} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7879, 7} true;
  assume {:verifier.code 0} true;
  call $i189 := printk.ref.ref.ref.bv32(.str.105, $p188, .str.27, 1948bv32);
  // WARNING: %207 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.105, i32 0, i32 0), i8* %206, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 1948), !dbg !7045, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7883, 7} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 19bv32), $p75;
  goto $bb25;
$bb96:
  assume !(($i185 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 25} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p173, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 25} true;
  assume {:verifier.code 0} true;
  $i191 := $load.bytes.bv8($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $zext.bv8.bv32($i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 32} true;
  assume {:verifier.code 0} true;
  $p193 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 37} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p193, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 37} true;
  assume {:verifier.code 0} true;
  $i195 := $load.bytes.bv32($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 29} true;
  assume {:verifier.code 0} true;
  $i196 := $sge.bv32($i192, $i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7887, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i196} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i196 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7889, 25} true;
  assume {:verifier.code 0} true;
  $p197 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7889, 30} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p197, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7889, 14} true;
  assume {:verifier.code 0} true;
  $p199 := $bitcast.ref.ref($p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7888, 7} true;
  assume {:verifier.code 0} true;
  call $i200 := printk.ref.ref.ref.bv32(.str.106, $p199, .str.27, 1956bv32);
  // WARNING: %221 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.106, i32 0, i32 0), i8* %220, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 1956), !dbg !7058, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7892, 7} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 19bv32), $p75;
  goto $bb25;
$bb99:
  assume !(($i196 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 51} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p173, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 51} true;
  assume {:verifier.code 0} true;
  $i202 := $load.bytes.bv8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 26} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.bv8.bv32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 60} true;
  assume {:verifier.code 0} true;
  $i204 := $and.bv32($i203, 254bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 26} true;
  assume {:verifier.code 0} true;
  $i205 := $trunc.bv32.bv8($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 15} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p173, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7896, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p206, $i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 63} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p173, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 63} true;
  assume {:verifier.code 0} true;
  $i208 := $load.bytes.bv8($M.0, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 32} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.bv8.bv32($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 91} true;
  assume {:verifier.code 0} true;
  $p210 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 96} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p210, 5608);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 96} true;
  assume {:verifier.code 0} true;
  $i212 := $load.bytes.bv8($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 76} true;
  assume {:verifier.code 0} true;
  $i213 := $zext.bv8.bv32($i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 109} true;
  assume {:verifier.code 0} true;
  $i214 := $eq.bv32($i213, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 109} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.bv1.bv32($i214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 73} true;
  assume {:verifier.code 0} true;
  $i216 := $or.bv32($i209, $i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 26} true;
  assume {:verifier.code 0} true;
  $i217 := $trunc.bv32.bv8($i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 15} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p173, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7897, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p218, $i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7898, 14} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7898, 14} true;
  assume {:verifier.code 0} true;
  $i220 := $load.bytes.bv32($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7898, 28} true;
  assume {:verifier.code 0} true;
  $i221 := $sgt.bv32($i220, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7898, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i221 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7899, 17} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p173, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7899, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p222, 64bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7900, 5} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i221 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7901, 47} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7901, 47} true;
  assume {:verifier.code 0} true;
  $i224 := $load.bytes.bv32($M.0, $p223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7901, 37} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.bv32.bv8($i224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7901, 17} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p173, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7901, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p226, $i225);
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 36} true;
  assume {:verifier.code 0} true;
  $p227 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 41} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 592);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 41} true;
  assume {:verifier.code 0} true;
  $i229 := $load.bytes.bv32($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 68} true;
  assume {:verifier.code 0} true;
  $i230 := $zext.bv16.bv32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 82} true;
  assume {:verifier.code 0} true;
  $i231 := $mul.bv32($i230, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 59} true;
  assume {:verifier.code 0} true;
  $i232 := $add.bv32($i229, $i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 15} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p173, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7903, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p233, $i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7904, 35} true;
  assume {:verifier.code 0} true;
  $p234 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7904, 40} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p234, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7904, 40} true;
  assume {:verifier.code 0} true;
  $p236 := $load.bytes.ref($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7904, 12} true;
  assume {:verifier.code 0} true;
  call $p237 := __scsi_iterate_devices($p236, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i238 := $p2i.ref.bv64($p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 30} true;
  assume {:verifier.code 0} true;
  $i239 := $ne.bv64($i238, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i240 := 1280bv32;
  assume {:branchcond $i239} true;
  goto $bb104, $bb105;
$bb104:
  assume ($i239 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i241, $p242 := 1280bv32, $p237;
  goto $bb107;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i239 == 1bv1));
  goto $bb106;
$bb106:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb123;
$bb107:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7924, 7} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7907, 15} true;
  assume {:verifier.code 0} true;
  call $p243 := scsi_target($p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7909, 38} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p243, 1504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7909, 38} true;
  assume {:verifier.code 0} true;
  $p245 := $load.bytes.ref($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7909, 15} true;
  assume {:verifier.code 0} true;
  $p246 := $bitcast.ref.ref($p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7910, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $p2i.ref.bv64($p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7910, 33} true;
  assume {:verifier.code 0} true;
  $i248 := $eq.bv64($i247, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7910, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i248} true;
  goto $bb109, $bb110;
$bb109:
  assume ($i248 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7911, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $i241;
  goto $bb111;
$bb110:
  assume !(($i248 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7921, 35} true;
  assume {:verifier.code 0} true;
  $p270 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7921, 40} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($p270, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7921, 40} true;
  assume {:verifier.code 0} true;
  $p272 := $load.bytes.ref($M.0, $p271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7921, 12} true;
  assume {:verifier.code 0} true;
  call $p273 := __scsi_iterate_devices($p272, $p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i274 := $p2i.ref.bv64($p273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 30} true;
  assume {:verifier.code 0} true;
  $i275 := $ne.bv64($i274, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i241, $p242, $i276 := $i249, $p273, $i249;
  assume {:branchcond $i275} true;
  goto $bb121, $bb122;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 26} true;
  assume {:verifier.code 0} true;
  $p250 := $p173;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 26} true;
  assume {:verifier.code 0} true;
  $i251 := $load.bytes.bv8($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 10} true;
  assume {:verifier.code 0} true;
  $i252 := $zext.bv8.bv32($i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 53} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p246, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 53} true;
  assume {:verifier.code 0} true;
  $i254 := $load.bytes.bv8($M.0, $p253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 38} true;
  assume {:verifier.code 0} true;
  $i255 := $zext.bv8.bv32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 35} true;
  assume {:verifier.code 0} true;
  $i256 := $eq.bv32($i252, $i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 56} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i256} true;
  goto $bb113, $bb114;
$bb113:
  assume ($i256 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 75} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($p173, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 75} true;
  assume {:verifier.code 0} true;
  $i258 := $load.bytes.bv8($M.0, $p257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 59} true;
  assume {:verifier.code 0} true;
  $i259 := $zext.bv8.bv32($i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 97} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p246, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 97} true;
  assume {:verifier.code 0} true;
  $i261 := $load.bytes.bv8($M.0, $p260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 82} true;
  assume {:verifier.code 0} true;
  $i262 := $zext.bv8.bv32($i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 79} true;
  assume {:verifier.code 0} true;
  $i263 := $eq.bv32($i259, $i262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 106} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb116, $bb117;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 56} true;
  assume {:verifier.code 0} true;
  assume !(($i256 == 1bv1));
  goto $bb115;
$bb115:
  assume {:verifier.code 0} true;
  $i269 := $i241;
  goto $bb120;
$bb116:
  assume ($i263 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 125} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p246, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 125} true;
  assume {:verifier.code 0} true;
  $i265 := $load.bytes.bv8($M.0, $p264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 110} true;
  assume {:verifier.code 0} true;
  $i266 := $zext.bv8.bv32($i265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 132} true;
  assume {:verifier.code 0} true;
  $i267 := $and.bv32($i266, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 137} true;
  assume {:verifier.code 0} true;
  $i268 := $ne.bv32($i267, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i268} true;
  goto $bb118, $bb119;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 106} true;
  assume {:verifier.code 0} true;
  assume !(($i263 == 1bv1));
  goto $bb115;
$bb118:
  assume ($i268 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7917, 5} true;
  assume {:verifier.code 0} true;
  $i269 := 0bv32;
  goto $bb120;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i268 == 1bv1));
  goto $bb115;
$bb120:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7915, 140} true;
  assume {:verifier.code 0} true;
  $i249 := $i269;
  goto $bb111;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  assume ($i275 == 1bv1);
  goto $bb107;
$bb122:
  assume !(($i275 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $i276;
  goto $bb106;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7929, 14} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7929, 14} true;
  assume {:verifier.code 0} true;
  $i278 := $load.bytes.bv32($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7929, 26} true;
  assume {:verifier.code 0} true;
  $i279 := $sgt.bv32($i278, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7929, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb124, $bb125;
$bb124:
  assume ($i279 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7931, 23} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7931, 23} true;
  assume {:verifier.code 0} true;
  $i281 := $load.bytes.bv32($M.0, $p280);
  // WARNING: %315 = load i32, i32* %314, align 8, !dbg !7152, !verifier.code !6789
  call {:cexpr "dataSize"} boogie_si_record_bv32($i281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7932, 5} true;
  assume {:verifier.code 0} true;
  $i282, $i283 := 16777216bv32, $i281;
  goto $bb126;
$bb125:
  assume !(($i279 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7934, 23} true;
  assume {:verifier.code 0} true;
  $p284 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7934, 23} true;
  assume {:verifier.code 0} true;
  $i285 := $load.bytes.bv32($M.0, $p284);
  // WARNING: %318 = load i32, i32* %317, align 4, !dbg !7157, !verifier.code !6789
  call {:cexpr "dataSize"} boogie_si_record_bv32($i285);
  assume {:verifier.code 0} true;
  $i282, $i283 := 33554432bv32, $i285;
  goto $bb126;
$bb126:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7936, 49} true;
  assume {:verifier.code 0} true;
  $i286 := $or.bv32($i282, $i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7936, 15} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p173, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7936, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p287, $i286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7937, 15} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($p173, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7937, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p288, $i283);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7938, 3} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7945, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb128:
  assume ($i297 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7951, 23} true;
  assume {:verifier.code 0} true;
  $p298 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7951, 28} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p298, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7951, 12} true;
  assume {:verifier.code 0} true;
  $p300 := $bitcast.ref.ref($p299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7950, 5} true;
  assume {:verifier.code 0} true;
  call $i301 := printk.ref.ref.ref.bv32(.str.107, $p300, .str.27, 2030bv32);
  // WARNING: %340 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.107, i32 0, i32 0), i8* %339, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2030), !dbg !7183, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7954, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb129:
  assume !(($i297 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7958, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb131:
  assume ($i306 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7963, 20} true;
  assume {:verifier.code 0} true;
  $p307 := $bitcast.ref.ref($p75);
  // WARNING: call void @llvm.dbg.value(metadata %struct._MSG_SCSI_IO_REQUEST* %351, i64 0, metadata !9473, metadata !6788), !dbg !9474, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !9475, metadata !6788), !dbg !9476, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 59} true;
  assume {:verifier.code 0} true;
  $p308 := $add.ref($p307, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 59} true;
  assume {:verifier.code 0} true;
  $i309 := $load.bytes.bv8($M.0, $p308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 30} true;
  assume {:verifier.code 0} true;
  $i310 := $zext.bv8.bv32($i309);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 68} true;
  assume {:verifier.code 0} true;
  $i311 := $and.bv32($i310, 254bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 30} true;
  assume {:verifier.code 0} true;
  $i312 := $trunc.bv32.bv8($i311);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p313 := $add.ref($p307, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7966, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p313, $i312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 71} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p307, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 71} true;
  assume {:verifier.code 0} true;
  $i315 := $load.bytes.bv8($M.0, $p314);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 36} true;
  assume {:verifier.code 0} true;
  $i316 := $sext.bv8.bv32($i315);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 99} true;
  assume {:verifier.code 0} true;
  $p317 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 104} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p317, 5608);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 104} true;
  assume {:verifier.code 0} true;
  $i319 := $load.bytes.bv8($M.0, $p318);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 84} true;
  assume {:verifier.code 0} true;
  $i320 := $zext.bv8.bv32($i319);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 117} true;
  assume {:verifier.code 0} true;
  $i321 := $eq.bv32($i320, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 117} true;
  assume {:verifier.code 0} true;
  $i322 := $zext.bv1.bv32($i321);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 81} true;
  assume {:verifier.code 0} true;
  $i323 := $or.bv32($i316, $i322);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 30} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.bv32.bv8($i323);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 19} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p307, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7967, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p325, $i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7968, 14} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7968, 14} true;
  assume {:verifier.code 0} true;
  $i327 := $load.bytes.bv32($M.0, $p326);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7968, 28} true;
  assume {:verifier.code 0} true;
  $i328 := $sgt.bv32($i327, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7968, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i328} true;
  goto $bb133, $bb134;
$bb132:
  assume !(($i306 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7985, 23} true;
  assume {:verifier.code 0} true;
  $p353 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7985, 28} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($p353, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7985, 12} true;
  assume {:verifier.code 0} true;
  $p355 := $bitcast.ref.ref($p354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7984, 5} true;
  assume {:verifier.code 0} true;
  call $i356 := printk.ref.ref.ref.bv32(.str.107, $p355, .str.27, 2087bv32);
  // WARNING: %405 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.107, i32 0, i32 0), i8* %404, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2087), !dbg !7257, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb133:
  assume ($i328 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7969, 21} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p307, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7969, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p329, 64bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7970, 5} true;
  assume {:verifier.code 0} true;
  goto $bb135;
$bb134:
  assume !(($i328 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7971, 51} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7971, 51} true;
  assume {:verifier.code 0} true;
  $i331 := $load.bytes.bv32($M.0, $p330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7971, 41} true;
  assume {:verifier.code 0} true;
  $i332 := $trunc.bv32.bv8($i331);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7971, 21} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p307, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7971, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p333, $i332);
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 40} true;
  assume {:verifier.code 0} true;
  $p334 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 45} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p334, 592);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 45} true;
  assume {:verifier.code 0} true;
  $i336 := $load.bytes.bv32($M.0, $p335);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 72} true;
  assume {:verifier.code 0} true;
  $i337 := $zext.bv16.bv32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 86} true;
  assume {:verifier.code 0} true;
  $i338 := $mul.bv32($i337, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 63} true;
  assume {:verifier.code 0} true;
  $i339 := $add.bv32($i336, $i338);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 19} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p307, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7973, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p340, $i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7974, 14} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7974, 14} true;
  assume {:verifier.code 0} true;
  $i342 := $load.bytes.bv32($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7974, 26} true;
  assume {:verifier.code 0} true;
  $i343 := $sgt.bv32($i342, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7974, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i343} true;
  goto $bb136, $bb137;
$bb136:
  assume ($i343 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7976, 27} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7976, 27} true;
  assume {:verifier.code 0} true;
  $i345 := $load.bytes.bv32($M.0, $p344);
  // WARNING: %393 = load i32, i32* %392, align 8, !dbg !7240, !verifier.code !6789
  call {:cexpr "dataSize___0"} boogie_si_record_bv32($i345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7977, 5} true;
  assume {:verifier.code 0} true;
  $i346, $i347 := 16777216bv32, $i345;
  goto $bb138;
$bb137:
  assume !(($i343 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7979, 27} true;
  assume {:verifier.code 0} true;
  $p348 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7979, 27} true;
  assume {:verifier.code 0} true;
  $i349 := $load.bytes.bv32($M.0, $p348);
  // WARNING: %396 = load i32, i32* %395, align 4, !dbg !7245, !verifier.code !6789
  call {:cexpr "dataSize___0"} boogie_si_record_bv32($i349);
  assume {:verifier.code 0} true;
  $i346, $i347 := 33554432bv32, $i349;
  goto $bb138;
$bb138:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7981, 57} true;
  assume {:verifier.code 0} true;
  $i350 := $or.bv32($i346, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7981, 19} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($p307, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7981, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p351, $i350);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7982, 19} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p307, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7982, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p352, $i347);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7983, 3} true;
  assume {:verifier.code 0} true;
  goto $bb139;
$bb139:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7990, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb140:
  assume ($i362 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 23} true;
  assume {:verifier.code 0} true;
  $p363 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 28} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p363, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 12} true;
  assume {:verifier.code 0} true;
  $p365 := $bitcast.ref.ref($p364);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 50} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p357, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 50} true;
  assume {:verifier.code 0} true;
  $i367 := $load.bytes.bv8($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 35} true;
  assume {:verifier.code 0} true;
  $i368 := $zext.bv8.bv32($i367);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 69} true;
  assume {:verifier.code 0} true;
  $p369 := $add.ref($p357, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7995, 69} true;
  assume {:verifier.code 0} true;
  $i370 := $load.bytes.bv32($M.0, $p369);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 27} true;
  assume {:verifier.code 0} true;
  $p371 := $add.ref($p357, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 27} true;
  assume {:verifier.code 0} true;
  $i372 := $load.bytes.bv8($M.0, $p371);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 12} true;
  assume {:verifier.code 0} true;
  $i373 := $zext.bv8.bv32($i372);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 52} true;
  assume {:verifier.code 0} true;
  $p374 := $p357;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 52} true;
  assume {:verifier.code 0} true;
  $i375 := $load.bytes.bv8($M.0, $p374);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 37} true;
  assume {:verifier.code 0} true;
  $i376 := $zext.bv8.bv32($i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 77} true;
  assume {:verifier.code 0} true;
  $p377 := $add.ref($p357, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 77} true;
  assume {:verifier.code 0} true;
  $i378 := $load.bytes.bv8($M.0, $p377);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7996, 62} true;
  assume {:verifier.code 0} true;
  $i379 := $zext.bv8.bv32($i378);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7994, 5} true;
  assume {:verifier.code 0} true;
  call $i380 := printk.ref.ref.bv32.bv32.bv32.bv32.bv32(.str.108, $p365, $i368, $i370, $i373, $i376, $i379);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7997, 3} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb141:
  assume !(($i362 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8000, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb143:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 45} true;
  assume {:verifier.code 0} true;
  assume ($i395 == 1bv1);
  goto $bb144;
$bb144:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8007, 23} true;
  assume {:verifier.code 0} true;
  $p429 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8007, 28} true;
  assume {:verifier.code 0} true;
  $p430 := $add.ref($p429, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8007, 12} true;
  assume {:verifier.code 0} true;
  $p431 := $bitcast.ref.ref($p430);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8006, 5} true;
  assume {:verifier.code 0} true;
  call $i432 := printk.ref.ref.ref.bv32(.str.109, $p431, .str.27, 2129bv32);
  // WARNING: %493 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.109, i32 0, i32 0), i8* %492, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2129), !dbg !7344, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8010, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb145:
  assume !(($i395 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 61} true;
  assume {:verifier.code 0} true;
  $p396 := $add.ref($p381, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 61} true;
  assume {:verifier.code 0} true;
  $i397 := $load.bytes.bv8($M.0, $p396);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 48} true;
  assume {:verifier.code 0} true;
  $i398 := $zext.bv8.bv32($i397);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 81} true;
  assume {:verifier.code 0} true;
  $p399 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 86} true;
  assume {:verifier.code 0} true;
  $p400 := $add.ref($p399, 1284);
  $p401 := $add.ref($add.ref($p399, 1284), 46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 92} true;
  assume {:verifier.code 0} true;
  $i402 := $load.bytes.bv8($M.0, $p401);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 75} true;
  assume {:verifier.code 0} true;
  $i403 := $zext.bv8.bv32($i402);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 72} true;
  assume {:verifier.code 0} true;
  $i404 := $ne.bv32($i398, $i403);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 104} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i404} true;
  goto $bb146, $bb147;
$bb146:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 104} true;
  assume {:verifier.code 0} true;
  assume ($i404 == 1bv1);
  goto $bb144;
$bb147:
  assume !(($i404 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 120} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($p381, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 120} true;
  assume {:verifier.code 0} true;
  $i406 := $load.bytes.bv8($M.0, $p405);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 107} true;
  assume {:verifier.code 0} true;
  $i407 := $zext.bv8.bv32($i406);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 138} true;
  assume {:verifier.code 0} true;
  $p408 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 143} true;
  assume {:verifier.code 0} true;
  $p409 := $add.ref($p408, 1284);
  $p410 := $add.ref($add.ref($p408, 1284), 47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 149} true;
  assume {:verifier.code 0} true;
  $i411 := $load.bytes.bv8($M.0, $p410);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 132} true;
  assume {:verifier.code 0} true;
  $i412 := $zext.bv8.bv32($i411);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 129} true;
  assume {:verifier.code 0} true;
  $i413 := $ne.bv32($i407, $i412);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 159} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i413} true;
  goto $bb148, $bb149;
$bb148:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 159} true;
  assume {:verifier.code 0} true;
  assume ($i413 == 1bv1);
  goto $bb144;
$bb149:
  assume !(($i413 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 175} true;
  assume {:verifier.code 0} true;
  $p414 := $add.ref($p381, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 175} true;
  assume {:verifier.code 0} true;
  $i415 := $load.bytes.bv16($M.0, $p414);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 162} true;
  assume {:verifier.code 0} true;
  $i416 := $zext.bv16.bv32($i415);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 217} true;
  assume {:verifier.code 0} true;
  $p417 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 222} true;
  assume {:verifier.code 0} true;
  $p418 := $add.ref($p417, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 222} true;
  assume {:verifier.code 0} true;
  $i419 := $load.bytes.bv32($M.0, $p418);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 200} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.bv32.bv16($i419);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 193} true;
  assume {:verifier.code 0} true;
  $i421 := $zext.bv16.bv32($i420);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 190} true;
  assume {:verifier.code 0} true;
  $i422 := $ne.bv32($i416, $i421);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 233} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i422} true;
  goto $bb150, $bb151;
$bb150:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 233} true;
  assume {:verifier.code 0} true;
  assume ($i422 == 1bv1);
  goto $bb144;
$bb151:
  assume !(($i422 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 243} true;
  assume {:verifier.code 0} true;
  $p423 := $add.ref($p381, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 243} true;
  assume {:verifier.code 0} true;
  $i424 := $load.bytes.bv32($M.0, $p423);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 259} true;
  assume {:verifier.code 0} true;
  $i425 := $ne.bv32($i424, $i386);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 273} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i425} true;
  goto $bb152, $bb153;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 273} true;
  assume {:verifier.code 0} true;
  assume ($i425 == 1bv1);
  goto $bb144;
$bb153:
  assume !(($i425 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 283} true;
  assume {:verifier.code 0} true;
  $p426 := $add.ref($p381, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 283} true;
  assume {:verifier.code 0} true;
  $i427 := $load.bytes.bv32($M.0, $p426);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 303} true;
  assume {:verifier.code 0} true;
  $i428 := $ne.bv32($i427, $i391);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i428} true;
  goto $bb154, $bb155;
$bb154:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8005, 7} true;
  assume {:verifier.code 0} true;
  assume ($i428 == 1bv1);
  goto $bb144;
$bb155:
  assume !(($i428 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb156;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8014, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8017, 21} true;
  assume {:verifier.code 0} true;
  $p433 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8017, 26} true;
  assume {:verifier.code 0} true;
  $p434 := $add.ref($p433, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8017, 10} true;
  assume {:verifier.code 0} true;
  $p435 := $bitcast.ref.ref($p434);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8018, 27} true;
  assume {:verifier.code 0} true;
  $p436 := $add.ref($p78, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8018, 27} true;
  assume {:verifier.code 0} true;
  $i437 := $load.bytes.bv8($M.0, $p436);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8018, 16} true;
  assume {:verifier.code 0} true;
  $i438 := $zext.bv8.bv32($i437);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8016, 3} true;
  assume {:verifier.code 0} true;
  call $i439 := printk.ref.ref.ref.bv32.bv32(.str.110, $p435, .str.27, 2162bv32, $i438);
  // WARNING: %503 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.110, i32 0, i32 0), i8* %499, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2162, i32 %502), !dbg !7352, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8020, 3} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb158:
  assume ($i447 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8026, 21} true;
  assume {:verifier.code 0} true;
  $i448 := $add.bv32(0bv32, 1bv32);
  // WARNING: %514 = add nsw i32 0, 1, !dbg !7366, !verifier.code !6789
  call {:cexpr "sgSize"} boogie_si_record_bv32($i448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8027, 3} true;
  assume {:verifier.code 0} true;
  $i449 := $i448;
  goto $bb160;
$bb159:
  assume !(($i447 == 1bv1));
  assume {:verifier.code 0} true;
  $i449 := 0bv32;
  goto $bb160;
$bb160:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8030, 12} true;
  assume {:verifier.code 0} true;
  $p450 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8030, 12} true;
  assume {:verifier.code 0} true;
  $i451 := $load.bytes.bv32($M.0, $p450);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8030, 23} true;
  assume {:verifier.code 0} true;
  $i452 := $sgt.bv32($i451, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8030, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i452} true;
  goto $bb161, $bb162;
$bb161:
  assume ($i452 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8031, 21} true;
  assume {:verifier.code 0} true;
  $i453 := $add.bv32($i449, 1bv32);
  // WARNING: %521 = add nsw i32 %.047, 1, !dbg !7373, !verifier.code !6789
  call {:cexpr "sgSize"} boogie_si_record_bv32($i453);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8032, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $i453;
  goto $bb163;
$bb162:
  assume !(($i452 == 1bv1));
  assume {:verifier.code 0} true;
  $i454 := $i449;
  goto $bb163;
$bb163:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8035, 14} true;
  assume {:verifier.code 0} true;
  $i455 := $sgt.bv32($i454, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8035, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb164, $bb165;
$bb164:
  assume ($i455 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8036, 14} true;
  assume {:verifier.code 0} true;
  $p456 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8036, 14} true;
  assume {:verifier.code 0} true;
  $i457 := $load.bytes.bv32($M.0, $p456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8036, 26} true;
  assume {:verifier.code 0} true;
  $i458 := $sgt.bv32($i457, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8036, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i458} true;
  goto $bb166, $bb167;
$bb165:
  assume !(($i455 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8083, 8} true;
  assume {:verifier.code 0} true;
  $p532 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8083, 13} true;
  assume {:verifier.code 0} true;
  $p533 := $add.ref($p532, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8083, 13} true;
  assume {:verifier.code 0} true;
  $p534 := $load.bytes.ref($M.0, $p533);
  call devirtbounce($p534, $p444, 0bv32, $sub.bv64(0bv64, 1bv64));
  assume {:verifier.code 0} true;
  goto $bb184;
$bb166:
  assume ($i458 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8037, 16} true;
  assume {:verifier.code 0} true;
  $p459 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8037, 16} true;
  assume {:verifier.code 0} true;
  $i460 := $load.bytes.bv32($M.0, $p459);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8037, 27} true;
  assume {:verifier.code 0} true;
  $i461 := $sgt.bv32($i460, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8037, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i461} true;
  goto $bb168, $bb169;
$bb167:
  assume !(($i458 == 1bv1));
  assume {:verifier.code 0} true;
  $p506 := $p444;
  goto $bb177;
$bb168:
  assume ($i461 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8039, 7} true;
  assume {:verifier.code 0} true;
  $i462 := 1409286144bv32;
  goto $bb170;
$bb169:
  assume !(($i461 == 1bv1));
  assume {:verifier.code 0} true;
  $i462 := $sub.bv32(0bv32, 721420288bv32);
  goto $bb170;
$bb170:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8042, 26} true;
  assume {:verifier.code 0} true;
  $p463 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8042, 26} true;
  assume {:verifier.code 0} true;
  $i464 := $load.bytes.bv32($M.0, $p463);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8042, 38} true;
  assume {:verifier.code 0} true;
  $i465 := $or.bv32($i464, $i462);
  // WARNING: %538 = or i32 %537, %.049, !dbg !7392, !verifier.code !6789
  call {:cexpr "flagsLength"} boogie_si_record_bv32($i465);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8043, 25} true;
  assume {:verifier.code 0} true;
  $p466 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8043, 25} true;
  assume {:verifier.code 0} true;
  $i467 := $load.bytes.bv32($M.0, $p466);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8043, 14} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8043, 18} true;
  assume {:verifier.code 0} true;
  $M.12 := $store.bv32($M.12, $p468, $i467);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 38} true;
  assume {:verifier.code 0} true;
  $p469 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 43} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($p469, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 43} true;
  assume {:verifier.code 0} true;
  $p471 := $load.bytes.ref($M.0, $p470);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 67} true;
  assume {:verifier.code 0} true;
  $p472 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 67} true;
  assume {:verifier.code 0} true;
  $i473 := $load.bv32($M.12, $p472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 51} true;
  assume {:verifier.code 0} true;
  $i474 := $sext.bv32.bv64($i473);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8044, 17} true;
  assume {:verifier.code 0} true;
  call $p475 := pci_alloc_consistent($p471, $i474, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8045, 14} true;
  assume {:verifier.code 0} true;
  $p476 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8045, 19} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p476, $p475);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8046, 34} true;
  assume {:verifier.code 0} true;
  $p477 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8046, 34} true;
  assume {:verifier.code 0} true;
  $p478 := $load.ref($M.10, $p477);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8046, 11} true;
  assume {:verifier.code 0} true;
  $i479 := $p2i.ref.bv64($p478);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8046, 39} true;
  assume {:verifier.code 0} true;
  $i480 := $eq.bv64($i479, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8046, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i480} true;
  goto $bb171, $bb172;
$bb171:
  assume ($i480 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8048, 9} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 12bv32), $p75;
  goto $bb25;
$bb172:
  assume !(($i480 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8050, 12} true;
  assume {:verifier.code 0} true;
  $p481 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8050, 17} true;
  assume {:verifier.code 0} true;
  $p482 := $add.ref($p481, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8050, 17} true;
  assume {:verifier.code 0} true;
  $p483 := $load.bytes.ref($M.0, $p482);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8050, 60} true;
  assume {:verifier.code 0} true;
  $i484 := $load.bytes.bv64($M.0, $p6);
  call devirtbounce($p483, $p444, $i465, $i484);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8051, 39} true;
  assume {:verifier.code 0} true;
  $p485 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8051, 44} true;
  assume {:verifier.code 0} true;
  $p486 := $add.ref($p485, 5610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8051, 44} true;
  assume {:verifier.code 0} true;
  $i487 := $load.bytes.bv8($M.0, $p486);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8051, 23} true;
  assume {:verifier.code 0} true;
  $i488 := $zext.bv8.bv64($i487);
  $i489 := $add.bv64($i443, $i488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8051, 21} true;
  assume {:verifier.code 0} true;
  $p490 := $add.ref($p440, $mul.ref($bv2int.64($i489), 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8052, 49} true;
  assume {:verifier.code 0} true;
  $p491 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8052, 49} true;
  assume {:verifier.code 0} true;
  $p492 := $load.ref($M.10, $p491);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8052, 76} true;
  assume {:verifier.code 0} true;
  $p493 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8052, 76} true;
  assume {:verifier.code 0} true;
  $p494 := $load.bytes.ref($M.0, $p493);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8053, 57} true;
  assume {:verifier.code 0} true;
  $p495 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8053, 57} true;
  assume {:verifier.code 0} true;
  $i496 := $load.bv32($M.12, $p495);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8053, 34} true;
  assume {:verifier.code 0} true;
  $i497 := $sext.bv32.bv64($i496);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8052, 19} true;
  assume {:verifier.code 0} true;
  call $i498 := copy_from_user($p492, $p494, $i497);
  // WARNING: %572 = call i64 @copy_from_user(i8* %566, i8* %568, i64 %571), !dbg !7424, !verifier.code !6789
  call {:cexpr "tmp___3"} boogie_si_record_bv64($i498);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8054, 21} true;
  assume {:verifier.code 0} true;
  $i499 := $ne.bv64($i498, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8054, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i499} true;
  goto $bb173, $bb174;
$bb173:
  assume ($i499 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8056, 29} true;
  assume {:verifier.code 0} true;
  $p500 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8056, 34} true;
  assume {:verifier.code 0} true;
  $p501 := $add.ref($p500, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8056, 18} true;
  assume {:verifier.code 0} true;
  $p502 := $bitcast.ref.ref($p501);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8057, 29} true;
  assume {:verifier.code 0} true;
  $p503 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8057, 29} true;
  assume {:verifier.code 0} true;
  $p504 := $load.bytes.ref($M.0, $p503);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8055, 11} true;
  assume {:verifier.code 0} true;
  call $i505 := printk.ref.ref.ref.bv32.ref(.str.111, $p502, .str.27, 2217bv32, $p504);
  // WARNING: %580 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.111, i32 0, i32 0), i8* %577, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2217, i8* %579), !dbg !7435, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8059, 11} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 14bv32), $p75;
  goto $bb25;
$bb174:
  assume !(($i499 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb175;
$bb175:
  assume {:verifier.code 0} true;
  goto $bb176;
$bb176:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8064, 5} true;
  assume {:verifier.code 0} true;
  $p506 := $p490;
  goto $bb177;
$bb177:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8067, 14} true;
  assume {:verifier.code 0} true;
  $p507 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8067, 14} true;
  assume {:verifier.code 0} true;
  $i508 := $load.bytes.bv32($M.0, $p507);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8067, 25} true;
  assume {:verifier.code 0} true;
  $i509 := $sgt.bv32($i508, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8067, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i509} true;
  goto $bb178, $bb179;
$bb178:
  assume ($i509 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8069, 26} true;
  assume {:verifier.code 0} true;
  $p510 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8069, 26} true;
  assume {:verifier.code 0} true;
  $i511 := $load.bytes.bv32($M.0, $p510);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8069, 37} true;
  assume {:verifier.code 0} true;
  $i512 := $or.bv32($i511, $sub.bv32(0bv32, 788529152bv32));
  // WARNING: %592 = or i32 %591, -788529152, !dbg !7444, !verifier.code !6789
  call {:cexpr "flagsLength"} boogie_si_record_bv32($i512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8070, 24} true;
  assume {:verifier.code 0} true;
  $p513 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8070, 24} true;
  assume {:verifier.code 0} true;
  $i514 := $load.bytes.bv32($M.0, $p513);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8070, 13} true;
  assume {:verifier.code 0} true;
  $p515 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8070, 17} true;
  assume {:verifier.code 0} true;
  $M.13 := $store.bv32($M.13, $p515, $i514);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 38} true;
  assume {:verifier.code 0} true;
  $p516 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 43} true;
  assume {:verifier.code 0} true;
  $p517 := $add.ref($p516, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 43} true;
  assume {:verifier.code 0} true;
  $p518 := $load.bytes.ref($M.0, $p517);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 66} true;
  assume {:verifier.code 0} true;
  $p519 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 66} true;
  assume {:verifier.code 0} true;
  $i520 := $load.bv32($M.13, $p519);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 51} true;
  assume {:verifier.code 0} true;
  $i521 := $sext.bv32.bv64($i520);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8071, 17} true;
  assume {:verifier.code 0} true;
  call $p522 := pci_alloc_consistent($p518, $i521, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8072, 13} true;
  assume {:verifier.code 0} true;
  $p523 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8072, 18} true;
  assume {:verifier.code 0} true;
  $M.11 := $store.ref($M.11, $p523, $p522);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8073, 33} true;
  assume {:verifier.code 0} true;
  $p524 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8073, 33} true;
  assume {:verifier.code 0} true;
  $p525 := $load.ref($M.11, $p524);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8073, 11} true;
  assume {:verifier.code 0} true;
  $i526 := $p2i.ref.bv64($p525);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8073, 38} true;
  assume {:verifier.code 0} true;
  $i527 := $eq.bv64($i526, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8073, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i527} true;
  goto $bb180, $bb181;
$bb179:
  assume !(($i509 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb183;
$bb180:
  assume ($i527 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8075, 9} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 12bv32), $p75;
  goto $bb25;
$bb181:
  assume !(($i527 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8077, 12} true;
  assume {:verifier.code 0} true;
  $p528 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8077, 17} true;
  assume {:verifier.code 0} true;
  $p529 := $add.ref($p528, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8077, 17} true;
  assume {:verifier.code 0} true;
  $p530 := $load.bytes.ref($M.0, $p529);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8077, 60} true;
  assume {:verifier.code 0} true;
  $i531 := $load.bytes.bv64($M.0, $p5);
  call devirtbounce($p530, $p506, $i512, $i531);
  assume {:verifier.code 0} true;
  goto $bb182;
$bb182:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8079, 5} true;
  assume {:verifier.code 0} true;
  goto $bb183;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8082, 3} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8085, 38} true;
  assume {:verifier.code 0} true;
  $p535 := $add.ref($p78, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8085, 38} true;
  assume {:verifier.code 0} true;
  $i536 := $load.bytes.bv32($M.0, $p535);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8085, 3} true;
  assume {:verifier.code 0} true;
  $p537 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8085, 8} true;
  assume {:verifier.code 0} true;
  $p538 := $add.ref($p537, 4232);
  $p539 := $add.ref($add.ref($p537, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8085, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p539, $i536);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8086, 3} true;
  assume {:verifier.code 0} true;
  $p540 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8086, 8} true;
  assume {:verifier.code 0} true;
  $p541 := $add.ref($p540, 4232);
  $p542 := $add.ref($add.ref($p540, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8086, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p542, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8087, 27} true;
  assume {:verifier.code 0} true;
  $p543 := $add.ref($p78, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8087, 27} true;
  assume {:verifier.code 0} true;
  $i544 := $load.bytes.bv8($M.0, $p543);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8087, 7} true;
  assume {:verifier.code 0} true;
  $i545 := $zext.bv8.bv32($i544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8087, 36} true;
  assume {:verifier.code 0} true;
  $i546 := $eq.bv32($i545, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i546} true;
  goto $bb185, $bb186;
$bb185:
  assume ($i546 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8088, 25} true;
  assume {:verifier.code 0} true;
  $p547 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8088, 30} true;
  assume {:verifier.code 0} true;
  $p548 := $add.ref($p547, 3768);
  $p549 := $add.ref($p547, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8088, 5} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_22($p549);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8089, 49} true;
  assume {:verifier.code 0} true;
  $p550 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8089, 15} true;
  assume {:verifier.code 0} true;
  call $i551 := mpt_set_taskmgmt_in_progress_flag($p550);
  // WARNING: %639 = call i32 @mpt_set_taskmgmt_in_progress_flag(%struct._MPT_ADAPTER* %638), !dbg !7490, !verifier.code !6789
  call {:cexpr "tmp___5"} boogie_si_record_bv32($i551);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8090, 17} true;
  assume {:verifier.code 0} true;
  $i552 := $ne.bv32($i551, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8090, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i552} true;
  goto $bb187, $bb188;
$bb186:
  assume !(($i546 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8116, 29} true;
  assume {:verifier.code 0} true;
  $i595 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8116, 23} true;
  assume {:verifier.code 0} true;
  $i596 := $zext.bv8.bv32($i595);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8116, 23} true;
  assume {:verifier.code 0} true;
  $i597 := $trunc.bv32.bv8($i596);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8116, 40} true;
  assume {:verifier.code 0} true;
  $p598 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8116, 5} true;
  assume {:verifier.code 0} true;
  call mpt_put_msg_frame($i597, $p598, $p75);
  assume {:verifier.code 0} true;
  $i594 := 0bv32;
  goto $bb202;
$bb187:
  assume ($i552 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8091, 29} true;
  assume {:verifier.code 0} true;
  $p553 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8091, 34} true;
  assume {:verifier.code 0} true;
  $p554 := $add.ref($p553, 3768);
  $p555 := $add.ref($p553, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8091, 7} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_23($p555);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8092, 7} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := 0bv32, $p75;
  goto $bb25;
$bb188:
  assume !(($i552 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb189;
$bb189:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 15} true;
  assume {:verifier.code 0} true;
  $p556 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 20} true;
  assume {:verifier.code 0} true;
  $p557 := $add.ref($p556, 1284);
  $p558 := $add.ref($add.ref($p556, 1284), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 26} true;
  assume {:verifier.code 0} true;
  $i559 := $load.bytes.bv32($M.0, $p558);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 42} true;
  assume {:verifier.code 0} true;
  $i560 := $and.bv32($i559, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 42} true;
  assume {:verifier.code 0} true;
  $i561 := $ne.bv32($i560, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i561} true;
  goto $bb190, $bb191;
$bb190:
  assume ($i561 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 64} true;
  assume {:verifier.code 0} true;
  $p562 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 69} true;
  assume {:verifier.code 0} true;
  $p563 := $add.ref($p562, 1284);
  $p564 := $add.ref($p562, 1284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 75} true;
  assume {:verifier.code 0} true;
  $i565 := $load.bytes.bv16($M.0, $p564);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 49} true;
  assume {:verifier.code 0} true;
  $i566 := $zext.bv16.bv32($i565);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 86} true;
  assume {:verifier.code 0} true;
  $i567 := $ugt.bv32($i566, 260bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i567} true;
  goto $bb193, $bb194;
$bb191:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i561 == 1bv1));
  goto $bb192;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 45} true;
  assume {:verifier.code 0} true;
  $i573 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 39} true;
  assume {:verifier.code 0} true;
  $i574 := $zext.bv8.bv32($i573);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 39} true;
  assume {:verifier.code 0} true;
  $i575 := $trunc.bv32.bv8($i574);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 56} true;
  assume {:verifier.code 0} true;
  $p576 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 65} true;
  assume {:verifier.code 0} true;
  $p577 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8099, 12} true;
  assume {:verifier.code 0} true;
  call $i578 := mpt_send_handshake_request($i575, $p576, 52bv32, $p577, 1bv32);
  // WARNING: %671 = call i32 @mpt_send_handshake_request(i8 zeroext %668, %struct._MPT_ADAPTER* %669, i32 52, i32* %670, i32 1), !dbg !7525, !verifier.code !6789
  call {:cexpr "rc"} boogie_si_record_bv32($i578);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8100, 14} true;
  assume {:verifier.code 0} true;
  $i579 := $ne.bv32($i578, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8100, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i579} true;
  goto $bb196, $bb197;
$bb193:
  assume ($i567 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8097, 38} true;
  assume {:verifier.code 0} true;
  $i568 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8097, 32} true;
  assume {:verifier.code 0} true;
  $i569 := $zext.bv8.bv32($i568);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8097, 32} true;
  assume {:verifier.code 0} true;
  $i570 := $trunc.bv32.bv8($i569);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8097, 49} true;
  assume {:verifier.code 0} true;
  $p571 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8097, 7} true;
  assume {:verifier.code 0} true;
  call mpt_put_msg_frame_hi_pri($i570, $p571, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8098, 5} true;
  assume {:verifier.code 0} true;
  $i572 := 0bv32;
  goto $bb195;
$bb194:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8096, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i567 == 1bv1));
  goto $bb192;
$bb195:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8115, 3} true;
  assume {:verifier.code 0} true;
  $i594 := $i572;
  goto $bb202;
$bb196:
  assume ($i579 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 14} true;
  assume {:verifier.code 0} true;
  $p580 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 19} true;
  assume {:verifier.code 0} true;
  $p581 := $add.ref($p580, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 19} true;
  assume {:verifier.code 0} true;
  $i582 := $load.bytes.bv32($M.0, $p581);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 31} true;
  assume {:verifier.code 0} true;
  $i583 := $and.bv32($i582, 128bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 38} true;
  assume {:verifier.code 0} true;
  $i584 := $ne.bv32($i583, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8101, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i584} true;
  goto $bb198, $bb199;
$bb197:
  assume !(($i579 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb201;
$bb198:
  assume ($i584 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8103, 29} true;
  assume {:verifier.code 0} true;
  $p585 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8103, 34} true;
  assume {:verifier.code 0} true;
  $p586 := $add.ref($p585, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8103, 18} true;
  assume {:verifier.code 0} true;
  $p587 := $bitcast.ref.ref($p586);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8103, 41} true;
  assume {:verifier.code 0} true;
  $p588 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8102, 11} true;
  assume {:verifier.code 0} true;
  call $i589 := printk.ref.ref.ref.ref(.str.112, $p587, $p588, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8104, 9} true;
  assume {:verifier.code 0} true;
  goto $bb200;
$bb199:
  assume !(($i584 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb200;
$bb200:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8107, 45} true;
  assume {:verifier.code 0} true;
  $p590 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8107, 9} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p590);
  // WARNING: call void @mpt_clear_taskmgmt_in_progress_flag(%struct._MPT_ADAPTER* %687), !dbg !7544, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8109, 31} true;
  assume {:verifier.code 0} true;
  $p591 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8109, 36} true;
  assume {:verifier.code 0} true;
  $p592 := $add.ref($p591, 3768);
  $p593 := $add.ref($p591, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8109, 9} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_24($p593);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8110, 9} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 61bv32), $p75;
  goto $bb25;
$bb201:
  assume {:verifier.code 0} true;
  $i572 := $i578;
  goto $bb195;
$bb202:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 18} true;
  assume {:verifier.code 0} true;
  $p599 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 18} true;
  assume {:verifier.code 0} true;
  $i600 := $load.bytes.bv32($M.0, $p599);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 26} true;
  assume {:verifier.code 0} true;
  $i601 := $sgt.bv32($i600, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i601} true;
  goto $bb203, $bb204;
$bb203:
  assume ($i601 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 45} true;
  assume {:verifier.code 0} true;
  $p602 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 45} true;
  assume {:verifier.code 0} true;
  $i603 := $load.bytes.bv32($M.0, $p602);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 32} true;
  assume {:verifier.code 0} true;
  $i604 := $sext.bv32.bv64($i603);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 13} true;
  assume {:verifier.code 0} true;
  $i605 := $i604;
  goto $bb205;
$bb204:
  assume !(($i601 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 13} true;
  assume {:verifier.code 0} true;
  $i605 := 10bv64;
  goto $bb205;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8118, 13} true;
  assume {:verifier.code 0} true;
  // WARNING: %709 = phi i64 [ %706, %703 ], [ 10, %707 ], !dbg !7563, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 44} true;
  assume {:verifier.code 0} true;
  $p606 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 49} true;
  assume {:verifier.code 0} true;
  $p607 := $add.ref($p606, 4232);
  $p608 := $add.ref($add.ref($p606, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 74} true;
  assume {:verifier.code 0} true;
  $i609 := $mul.bv64($i605, 250bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 14} true;
  assume {:verifier.code 0} true;
  call $i610 := wait_for_completion_timeout($p608, $i609);
  // WARNING: %714 = call i64 @wait_for_completion_timeout(%struct.completion* %712, i64 %713), !dbg !7570, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 14} true;
  assume {:verifier.code 0} true;
  $p611 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 19} true;
  assume {:verifier.code 0} true;
  $p612 := $add.ref($p611, 4232);
  $p613 := $add.ref($add.ref($p611, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 30} true;
  assume {:verifier.code 0} true;
  $i614 := $load.bytes.bv8($M.0, $p613);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 8} true;
  assume {:verifier.code 0} true;
  $i615 := $zext.bv8.bv32($i614);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 37} true;
  assume {:verifier.code 0} true;
  $i616 := $and.bv32($i615, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 42} true;
  assume {:verifier.code 0} true;
  $i617 := $eq.bv32($i616, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  $i618 := $i594;
  assume {:branchcond $i617} true;
  goto $bb206, $bb207;
$bb206:
  assume ($i617 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  $i619 := $i610;
  goto $bb209;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i617 == 1bv1));
  goto $bb208;
$bb208:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb227;
$bb209:
  assume {:verifier.code 0} true;
  // WARNING: %735 = phi i64 [ %714, %.lr.ph ], [ %726, %722 ], !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 10} true;
  assume {:verifier.code 0} true;
  $p633 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 15} true;
  assume {:verifier.code 0} true;
  $p634 := $add.ref($p633, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 15} true;
  assume {:verifier.code 0} true;
  $i635 := $load.bytes.bv32($M.0, $p634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 27} true;
  assume {:verifier.code 0} true;
  $i636 := $and.bv32($i635, 128bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 34} true;
  assume {:verifier.code 0} true;
  $i637 := $ne.bv32($i636, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8123, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i637} true;
  goto $bb213, $bb214;
$bb210:
  assume !(($i654 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 44} true;
  assume {:verifier.code 0} true;
  $p621 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 49} true;
  assume {:verifier.code 0} true;
  $p622 := $add.ref($p621, 4232);
  $p623 := $add.ref($add.ref($p621, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8120, 14} true;
  assume {:verifier.code 0} true;
  call $i624 := wait_for_completion_timeout($p623, $i609);
  // WARNING: %726 = call i64 @wait_for_completion_timeout(%struct.completion* %725, i64 %713), !dbg !7570, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 14} true;
  assume {:verifier.code 0} true;
  $p625 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 19} true;
  assume {:verifier.code 0} true;
  $p626 := $add.ref($p625, 4232);
  $p627 := $add.ref($add.ref($p625, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 30} true;
  assume {:verifier.code 0} true;
  $i628 := $load.bytes.bv8($M.0, $p627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 8} true;
  assume {:verifier.code 0} true;
  $i629 := $zext.bv8.bv32($i628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 37} true;
  assume {:verifier.code 0} true;
  $i630 := $and.bv32($i629, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 42} true;
  assume {:verifier.code 0} true;
  $i631 := $eq.bv32($i630, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  $i619, $i632 := $i624, $i620;
  assume {:branchcond $i631} true;
  goto $bb211, $bb212;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  assume ($i631 == 1bv1);
  goto $bb209;
$bb212:
  assume !(($i631 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8121, 7} true;
  assume {:verifier.code 0} true;
  $i618 := $i632;
  goto $bb208;
$bb213:
  assume ($i637 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8124, 71} true;
  assume {:verifier.code 0} true;
  $p638 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8124, 76} true;
  assume {:verifier.code 0} true;
  $p639 := $add.ref($p638, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8124, 60} true;
  assume {:verifier.code 0} true;
  $p640 := $bitcast.ref.ref($p639);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8124, 7} true;
  assume {:verifier.code 0} true;
  call $i641 := printk.ref.ref.ref(.str.113, $p640, .str.114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8125, 5} true;
  assume {:verifier.code 0} true;
  goto $bb215;
$bb214:
  assume !(($i637 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb215;
$bb215:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 16} true;
  assume {:verifier.code 0} true;
  $p642 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 21} true;
  assume {:verifier.code 0} true;
  $p643 := $add.ref($p642, 4232);
  $p644 := $add.ref($add.ref($p642, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 32} true;
  assume {:verifier.code 0} true;
  $i645 := $load.bytes.bv8($M.0, $p644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 10} true;
  assume {:verifier.code 0} true;
  $i646 := $zext.bv8.bv32($i645);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 39} true;
  assume {:verifier.code 0} true;
  $i647 := $and.bv32($i646, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 44} true;
  assume {:verifier.code 0} true;
  $i648 := $ne.bv32($i647, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8128, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i648} true;
  goto $bb216, $bb217;
$bb216:
  assume ($i648 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8129, 11} true;
  assume {:verifier.code 0} true;
  $i649 := $zext.bv8.bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8129, 35} true;
  assume {:verifier.code 0} true;
  $i650 := $eq.bv32($i649, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8129, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i650} true;
  goto $bb218, $bb219;
$bb217:
  assume !(($i648 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb221;
$bb218:
  assume ($i650 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8130, 31} true;
  assume {:verifier.code 0} true;
  $p651 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8130, 36} true;
  assume {:verifier.code 0} true;
  $p652 := $add.ref($p651, 3768);
  $p653 := $add.ref($p651, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8130, 9} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_25($p653);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8131, 7} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb219:
  assume !(($i650 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb220;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8134, 7} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 62bv32), $p75;
  goto $bb25;
$bb221:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8138, 18} true;
  assume {:verifier.code 0} true;
  $i654 := $eq.bv64($i619, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8138, 9} true;
  assume {:verifier.code 0} true;
  $i620 := $sub.bv32(0bv32, 62bv32);
  assume {:branchcond $i654} true;
  goto $bb222, $bb210;
$bb222:
  assume ($i654 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8139, 33} true;
  assume {:verifier.code 0} true;
  $p655 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8139, 17} true;
  assume {:verifier.code 0} true;
  call $i656 := mpt_GetIocState($p655, 0bv32);
  // WARNING: %769 = call i32 @mpt_GetIocState(%struct._MPT_ADAPTER* %768, i32 0), !dbg !7618, !verifier.code !6789
  call {:cexpr "tmp___6"} boogie_si_record_bv32($i656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8141, 25} true;
  assume {:verifier.code 0} true;
  $p657 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8141, 30} true;
  assume {:verifier.code 0} true;
  $p658 := $add.ref($p657, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8141, 14} true;
  assume {:verifier.code 0} true;
  $p659 := $bitcast.ref.ref($p658);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8141, 46} true;
  assume {:verifier.code 0} true;
  $i660 := $zext.bv8.bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8140, 7} true;
  assume {:verifier.code 0} true;
  call $i661 := printk.ref.ref.bv32.bv32(.str.115, $p659, $i656, $i660);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8142, 11} true;
  assume {:verifier.code 0} true;
  $i662 := $zext.bv8.bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8142, 35} true;
  assume {:verifier.code 0} true;
  $i663 := $eq.bv32($i662, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8142, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i663} true;
  goto $bb223, $bb224;
$bb223:
  assume ($i663 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8143, 31} true;
  assume {:verifier.code 0} true;
  $p664 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8143, 36} true;
  assume {:verifier.code 0} true;
  $p665 := $add.ref($p664, 3768);
  $p666 := $add.ref($p664, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8143, 9} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_26($p666);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8144, 7} true;
  assume {:verifier.code 0} true;
  goto $bb225;
$bb224:
  assume !(($i663 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb225;
$bb225:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8147, 30} true;
  assume {:verifier.code 0} true;
  $p667 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8147, 7} true;
  assume {:verifier.code 0} true;
  call mptctl_timeout_expired($p667, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb226;
$bb226:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8152, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 62bv32), $0.ref;
  goto $bb25;
$bb227:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8156, 7} true;
  assume {:verifier.code 0} true;
  $i668 := $zext.bv8.bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8156, 31} true;
  assume {:verifier.code 0} true;
  $i669 := $eq.bv32($i668, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8156, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i669} true;
  goto $bb228, $bb229;
$bb228:
  assume ($i669 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8157, 27} true;
  assume {:verifier.code 0} true;
  $p670 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8157, 32} true;
  assume {:verifier.code 0} true;
  $p671 := $add.ref($p670, 3768);
  $p672 := $add.ref($p670, 3768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8157, 5} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_27($p672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8158, 3} true;
  assume {:verifier.code 0} true;
  goto $bb230;
$bb229:
  assume !(($i669 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb230;
$bb230:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 13} true;
  assume {:verifier.code 0} true;
  $p673 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 18} true;
  assume {:verifier.code 0} true;
  $p674 := $add.ref($p673, 4232);
  $p675 := $add.ref($add.ref($p673, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 29} true;
  assume {:verifier.code 0} true;
  $i676 := $load.bytes.bv8($M.0, $p675);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 7} true;
  assume {:verifier.code 0} true;
  $i677 := $zext.bv8.bv32($i676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 36} true;
  assume {:verifier.code 0} true;
  $i678 := $and.bv32($i677, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 36} true;
  assume {:verifier.code 0} true;
  $i679 := $ne.bv32($i678, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8162, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i679} true;
  goto $bb231, $bb232;
$bb231:
  assume ($i679 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 14} true;
  assume {:verifier.code 0} true;
  $p680 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 14} true;
  assume {:verifier.code 0} true;
  $i681 := $load.bytes.bv32($M.0, $p680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 30} true;
  assume {:verifier.code 0} true;
  $p682 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 35} true;
  assume {:verifier.code 0} true;
  $p683 := $add.ref($p682, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 35} true;
  assume {:verifier.code 0} true;
  $i684 := $load.bytes.bv32($M.0, $p683);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 28} true;
  assume {:verifier.code 0} true;
  $i685 := $slt.bv32($i681, $i684);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8163, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i685} true;
  goto $bb233, $bb234;
$bb232:
  assume !(($i679 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb248;
$bb233:
  assume ($i685 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8164, 20} true;
  assume {:verifier.code 0} true;
  $p686 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8164, 20} true;
  assume {:verifier.code 0} true;
  $i687 := $load.bytes.bv32($M.0, $p686);
  // WARNING: %811 = load i32, i32* %810, align 8, !dbg !7662, !verifier.code !6789
  call {:cexpr "_min1"} boogie_si_record_bv32($i687);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8165, 21} true;
  assume {:verifier.code 0} true;
  $p688 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8165, 26} true;
  assume {:verifier.code 0} true;
  $p689 := $add.ref($p688, 4232);
  $p690 := $add.ref($add.ref($p688, 4232), 256);
  $p691 := $add.ref($add.ref($add.ref($p688, 4232), 256), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8165, 21} true;
  assume {:verifier.code 0} true;
  $i692 := $load.bytes.bv8($M.0, $p691);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8165, 15} true;
  assume {:verifier.code 0} true;
  $i693 := $zext.bv8.bv32($i692);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8165, 46} true;
  assume {:verifier.code 0} true;
  $i694 := $mul.bv32($i693, 4bv32);
  // WARNING: %818 = mul nsw i32 %817, 4, !dbg !7669, !verifier.code !6789
  call {:cexpr "_min2"} boogie_si_record_bv32($i694);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8166, 18} true;
  assume {:verifier.code 0} true;
  $i695 := $slt.bv32($i687, $i694);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8166, 12} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb235, $bb236;
$bb234:
  assume !(($i685 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8168, 19} true;
  assume {:verifier.code 0} true;
  $p698 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8168, 24} true;
  assume {:verifier.code 0} true;
  $p699 := $add.ref($p698, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8168, 24} true;
  assume {:verifier.code 0} true;
  $i700 := $load.bytes.bv32($M.0, $p699);
  // WARNING: %827 = load i32, i32* %826, align 8, !dbg !7683, !verifier.code !6789
  call {:cexpr "_min1___0"} boogie_si_record_bv32($i700);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8169, 25} true;
  assume {:verifier.code 0} true;
  $p701 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8169, 30} true;
  assume {:verifier.code 0} true;
  $p702 := $add.ref($p701, 4232);
  $p703 := $add.ref($add.ref($p701, 4232), 256);
  $p704 := $add.ref($add.ref($add.ref($p701, 4232), 256), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8169, 25} true;
  assume {:verifier.code 0} true;
  $i705 := $load.bytes.bv8($M.0, $p704);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8169, 19} true;
  assume {:verifier.code 0} true;
  $i706 := $zext.bv8.bv32($i705);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8169, 50} true;
  assume {:verifier.code 0} true;
  $i707 := $mul.bv32($i706, 4bv32);
  // WARNING: %834 = mul nsw i32 %833, 4, !dbg !7689, !verifier.code !6789
  call {:cexpr "_min2___0"} boogie_si_record_bv32($i707);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8170, 22} true;
  assume {:verifier.code 0} true;
  $i708 := $slt.bv32($i700, $i707);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8170, 12} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i708} true;
  goto $bb239, $bb240;
$bb235:
  assume ($i695 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8166, 12} true;
  assume {:verifier.code 0} true;
  $i696 := $i687;
  goto $bb237;
$bb236:
  assume !(($i695 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8166, 12} true;
  assume {:verifier.code 0} true;
  $i696 := $i694;
  goto $bb237;
$bb237:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8166, 12} true;
  assume {:verifier.code 0} true;
  // WARNING: %823 = phi i32 [ %811, %820 ], [ %818, %821 ], !dbg !7678, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8167, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $i696;
  goto $bb238;
$bb238:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8172, 12} true;
  assume {:verifier.code 0} true;
  $i710 := $sgt.bv32($i697, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb242, $bb243;
$bb239:
  assume ($i708 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8170, 12} true;
  assume {:verifier.code 0} true;
  $i709 := $i700;
  goto $bb241;
$bb240:
  assume !(($i708 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8170, 12} true;
  assume {:verifier.code 0} true;
  $i709 := $i707;
  goto $bb241;
$bb241:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8170, 12} true;
  assume {:verifier.code 0} true;
  // WARNING: %839 = phi i32 [ %827, %836 ], [ %834, %837 ], !dbg !7698, !verifier.code !6789
  assume {:verifier.code 0} true;
  $i697 := $i709;
  goto $bb238;
$bb242:
  assume ($i710 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 43} true;
  assume {:verifier.code 0} true;
  $p711 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 43} true;
  assume {:verifier.code 0} true;
  $p712 := $load.bytes.ref($M.0, $p711);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 80} true;
  assume {:verifier.code 0} true;
  $p713 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 85} true;
  assume {:verifier.code 0} true;
  $p714 := $add.ref($p713, 4232);
  $p715 := $add.ref($add.ref($p713, 4232), 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 61} true;
  assume {:verifier.code 0} true;
  $p716 := $bitcast.ref.ref($p715);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8174, 30} true;
  assume {:verifier.code 0} true;
  $i717 := $sext.bv32.bv64($i697);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8173, 17} true;
  assume {:verifier.code 0} true;
  call $i718 := copy_to_user($p712, $p716, $i717);
  // WARNING: %850 = call i64 @copy_to_user(i8* %844, i8* %848, i64 %849), !dbg !7709, !verifier.code !6789
  call {:cexpr "tmp___7"} boogie_si_record_bv64($i718);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8175, 19} true;
  assume {:verifier.code 0} true;
  $i719 := $ne.bv64($i718, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8175, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i719} true;
  goto $bb244, $bb245;
$bb243:
  assume !(($i710 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb247;
$bb244:
  assume ($i719 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8177, 27} true;
  assume {:verifier.code 0} true;
  $p720 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8177, 32} true;
  assume {:verifier.code 0} true;
  $p721 := $add.ref($p720, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8177, 16} true;
  assume {:verifier.code 0} true;
  $p722 := $bitcast.ref.ref($p721);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8178, 27} true;
  assume {:verifier.code 0} true;
  $p723 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8178, 27} true;
  assume {:verifier.code 0} true;
  $p724 := $load.bytes.ref($M.0, $p723);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8176, 9} true;
  assume {:verifier.code 0} true;
  call $i725 := printk.ref.ref.ref.bv32.ref(.str.116, $p722, .str.27, 2330bv32, $p724);
  // WARNING: %858 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.116, i32 0, i32 0), i8* %855, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2330, i8* %857), !dbg !7720, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8180, 9} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 61bv32), $0.ref;
  goto $bb25;
$bb245:
  assume !(($i719 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8184, 5} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8187, 3} true;
  assume {:verifier.code 0} true;
  goto $bb248;
$bb248:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 14} true;
  assume {:verifier.code 0} true;
  $p726 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 19} true;
  assume {:verifier.code 0} true;
  $p727 := $add.ref($p726, 4232);
  $p728 := $add.ref($add.ref($p726, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 30} true;
  assume {:verifier.code 0} true;
  $i729 := $load.bytes.bv8($M.0, $p728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 8} true;
  assume {:verifier.code 0} true;
  $i730 := $zext.bv8.bv32($i729);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 37} true;
  assume {:verifier.code 0} true;
  $i731 := $and.bv32($i730, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 43} true;
  assume {:verifier.code 0} true;
  $i732 := $ne.bv32($i731, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8190, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i732} true;
  goto $bb249, $bb250;
$bb249:
  assume ($i732 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8191, 22} true;
  assume {:verifier.code 0} true;
  $p733 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8191, 22} true;
  assume {:verifier.code 0} true;
  $i734 := $load.bytes.bv32($M.0, $p733);
  // WARNING: %874 = load i32, i32* %873, align 4, !dbg !7732, !verifier.code !6789
  call {:cexpr "_min1___1"} boogie_si_record_bv32($i734);
  // WARNING: call void @llvm.dbg.value(metadata i32 %874, i64 0, metadata !10012, metadata !6788), !dbg !10013, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8193, 20} true;
  assume {:verifier.code 0} true;
  $i735 := $slt.bv32($i734, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8193, 10} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i735} true;
  goto $bb251, $bb252;
$bb250:
  assume !(($i732 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb260;
$bb251:
  assume ($i735 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8193, 10} true;
  assume {:verifier.code 0} true;
  $i736 := $i734;
  goto $bb253;
$bb252:
  assume !(($i735 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8193, 10} true;
  assume {:verifier.code 0} true;
  $i736 := 64bv32;
  goto $bb253;
$bb253:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8193, 10} true;
  assume {:verifier.code 0} true;
  // WARNING: %879 = phi i32 [ %874, %876 ], [ 64, %877 ], !dbg !7744, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8194, 12} true;
  assume {:verifier.code 0} true;
  $i737 := $sgt.bv32($i736, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8194, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i737} true;
  goto $bb254, $bb255;
$bb254:
  assume ($i737 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 43} true;
  assume {:verifier.code 0} true;
  $p738 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 43} true;
  assume {:verifier.code 0} true;
  $p739 := $load.bytes.ref($M.0, $p738);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 76} true;
  assume {:verifier.code 0} true;
  $p740 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 81} true;
  assume {:verifier.code 0} true;
  $p741 := $add.ref($p740, 4232);
  $p742 := $add.ref($add.ref($p740, 4232), 384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 57} true;
  assume {:verifier.code 0} true;
  $p743 := $bitcast.ref.ref($p742);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8196, 30} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.bv32.bv64($i736);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8195, 17} true;
  assume {:verifier.code 0} true;
  call $i745 := copy_to_user($p739, $p743, $i744);
  // WARNING: %889 = call i64 @copy_to_user(i8* %883, i8* %887, i64 %888), !dbg !7755, !verifier.code !6789
  call {:cexpr "tmp___8"} boogie_si_record_bv64($i745);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8197, 19} true;
  assume {:verifier.code 0} true;
  $i746 := $ne.bv64($i745, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8197, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i746} true;
  goto $bb256, $bb257;
$bb255:
  assume !(($i737 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb259;
$bb256:
  assume ($i746 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8199, 27} true;
  assume {:verifier.code 0} true;
  $p747 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8199, 32} true;
  assume {:verifier.code 0} true;
  $p748 := $add.ref($p747, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8199, 16} true;
  assume {:verifier.code 0} true;
  $p749 := $bitcast.ref.ref($p748);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8200, 27} true;
  assume {:verifier.code 0} true;
  $p750 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8200, 27} true;
  assume {:verifier.code 0} true;
  $p751 := $load.bytes.ref($M.0, $p750);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8198, 9} true;
  assume {:verifier.code 0} true;
  call $i752 := printk.ref.ref.ref.bv32.ref(.str.117, $p749, .str.27, 2346bv32, $p751);
  // WARNING: %897 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.117, i32 0, i32 0), i8* %894, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2346, i8* %896), !dbg !7766, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8202, 9} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.bv32(0bv32, 61bv32), $0.ref;
  goto $bb25;
$bb257:
  assume !(($i746 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb258;
$bb258:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8206, 5} true;
  assume {:verifier.code 0} true;
  goto $bb259;
$bb259:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8209, 3} true;
  assume {:verifier.code 0} true;
  goto $bb260;
$bb260:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 15} true;
  assume {:verifier.code 0} true;
  $p753 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 20} true;
  assume {:verifier.code 0} true;
  $p754 := $add.ref($p753, 4232);
  $p755 := $add.ref($add.ref($p753, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 31} true;
  assume {:verifier.code 0} true;
  $i756 := $load.bytes.bv8($M.0, $p755);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 9} true;
  assume {:verifier.code 0} true;
  $i757 := $zext.bv8.bv32($i756);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 38} true;
  assume {:verifier.code 0} true;
  $i758 := $and.bv32($i757, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 43} true;
  assume {:verifier.code 0} true;
  $i759 := $ne.bv32($i758, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 48} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i759} true;
  goto $bb261, $bb262;
$bb261:
  assume ($i759 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 56} true;
  assume {:verifier.code 0} true;
  $p760 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 56} true;
  assume {:verifier.code 0} true;
  $i761 := $load.bytes.bv32($M.0, $p760);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 67} true;
  assume {:verifier.code 0} true;
  $i762 := $sgt.bv32($i761, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 72} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i762} true;
  goto $bb264, $bb265;
$bb262:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 48} true;
  assume {:verifier.code 0} true;
  assume !(($i759 == 1bv1));
  goto $bb263;
$bb263:
  assume {:verifier.code 0} true;
  $i783 := $i618;
  goto $bb271;
$bb264:
  assume ($i762 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 97} true;
  assume {:verifier.code 0} true;
  $p763 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 97} true;
  assume {:verifier.code 0} true;
  $p764 := $load.ref($M.11, $p763);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 75} true;
  assume {:verifier.code 0} true;
  $i765 := $p2i.ref.bv64($p764);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 102} true;
  assume {:verifier.code 0} true;
  $i766 := $ne.bv64($i765, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i766} true;
  goto $bb266, $bb267;
$bb265:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 72} true;
  assume {:verifier.code 0} true;
  assume !(($i762 == 1bv1));
  goto $bb263;
$bb266:
  assume ($i766 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8213, 41} true;
  assume {:verifier.code 0} true;
  $p767 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8213, 41} true;
  assume {:verifier.code 0} true;
  $p768 := $load.bytes.ref($M.0, $p767);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8213, 77} true;
  assume {:verifier.code 0} true;
  $p769 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8213, 77} true;
  assume {:verifier.code 0} true;
  $p770 := $load.ref($M.11, $p769);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8214, 49} true;
  assume {:verifier.code 0} true;
  $p771 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8214, 49} true;
  assume {:verifier.code 0} true;
  $i772 := $load.bytes.bv32($M.0, $p771);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8214, 28} true;
  assume {:verifier.code 0} true;
  $i773 := $sext.bv32.bv64($i772);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8213, 15} true;
  assume {:verifier.code 0} true;
  call $i774 := copy_to_user($p768, $p770, $i773);
  // WARNING: %928 = call i64 @copy_to_user(i8* %922, i8* %924, i64 %927), !dbg !7792, !verifier.code !6789
  call {:cexpr "tmp___9"} boogie_si_record_bv64($i774);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8215, 17} true;
  assume {:verifier.code 0} true;
  $i775 := $ne.bv64($i774, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8215, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i775} true;
  goto $bb268, $bb269;
$bb267:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i766 == 1bv1));
  goto $bb263;
$bb268:
  assume ($i775 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8217, 25} true;
  assume {:verifier.code 0} true;
  $p776 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8217, 30} true;
  assume {:verifier.code 0} true;
  $p777 := $add.ref($p776, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8217, 14} true;
  assume {:verifier.code 0} true;
  $p778 := $bitcast.ref.ref($p777);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8218, 25} true;
  assume {:verifier.code 0} true;
  $p779 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8218, 25} true;
  assume {:verifier.code 0} true;
  $p780 := $load.bytes.ref($M.0, $p779);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8216, 7} true;
  assume {:verifier.code 0} true;
  call $i781 := printk.ref.ref.ref.bv32.ref(.str.118, $p778, .str.27, 2364bv32, $p780);
  // WARNING: %936 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.118, i32 0, i32 0), i8* %933, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.27, i32 0, i32 0), i32 2364, i8* %935), !dbg !7803, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8220, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $sub.bv32(0bv32, 61bv32);
  goto $bb270;
$bb269:
  assume !(($i775 == 1bv1));
  assume {:verifier.code 0} true;
  $i782 := $i618;
  goto $bb270;
$bb270:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8223, 3} true;
  assume {:verifier.code 0} true;
  $i783 := $i782;
  goto $bb271;
$bb271:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8212, 130} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $i783, $0.ref;
  goto $bb25;
$bb272:
  assume ($i793 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 25} true;
  assume {:verifier.code 0} true;
  $p794 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 30} true;
  assume {:verifier.code 0} true;
  $p795 := $add.ref($p794, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 30} true;
  assume {:verifier.code 0} true;
  $p796 := $load.bytes.ref($M.0, $p795);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 54} true;
  assume {:verifier.code 0} true;
  $p797 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 54} true;
  assume {:verifier.code 0} true;
  $i798 := $load.bv32($M.12, $p797);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 38} true;
  assume {:verifier.code 0} true;
  $i799 := $sext.bv32.bv64($i798);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 74} true;
  assume {:verifier.code 0} true;
  $p800 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 74} true;
  assume {:verifier.code 0} true;
  $p801 := $load.ref($M.10, $p800);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 80} true;
  assume {:verifier.code 0} true;
  $i802 := $load.bytes.bv64($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8230, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p796, $i799, $p801, $i802);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8231, 3} true;
  assume {:verifier.code 0} true;
  goto $bb274;
$bb273:
  assume !(($i793 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb274;
$bb274:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8234, 29} true;
  assume {:verifier.code 0} true;
  $p803 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8234, 29} true;
  assume {:verifier.code 0} true;
  $p804 := $load.ref($M.11, $p803);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8234, 7} true;
  assume {:verifier.code 0} true;
  $i805 := $p2i.ref.bv64($p804);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8234, 34} true;
  assume {:verifier.code 0} true;
  $i806 := $ne.bv64($i805, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i806} true;
  goto $bb275, $bb276;
$bb275:
  assume ($i806 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 25} true;
  assume {:verifier.code 0} true;
  $p807 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 30} true;
  assume {:verifier.code 0} true;
  $p808 := $add.ref($p807, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 30} true;
  assume {:verifier.code 0} true;
  $p809 := $load.bytes.ref($M.0, $p808);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 53} true;
  assume {:verifier.code 0} true;
  $p810 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 53} true;
  assume {:verifier.code 0} true;
  $i811 := $load.bv32($M.13, $p810);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 38} true;
  assume {:verifier.code 0} true;
  $i812 := $sext.bv32.bv64($i811);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 72} true;
  assume {:verifier.code 0} true;
  $p813 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 72} true;
  assume {:verifier.code 0} true;
  $p814 := $load.ref($M.11, $p813);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 78} true;
  assume {:verifier.code 0} true;
  $i815 := $load.bytes.bv64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8235, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p809, $i812, $p814, $i815);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb277;
$bb276:
  assume !(($i806 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb277;
$bb277:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8239, 7} true;
  assume {:verifier.code 0} true;
  $i816 := $p2i.ref.bv64($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8239, 26} true;
  assume {:verifier.code 0} true;
  $i817 := $ne.bv64($i816, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8239, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i817} true;
  goto $bb278, $bb279;
$bb278:
  assume ($i817 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8240, 24} true;
  assume {:verifier.code 0} true;
  $p818 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8240, 5} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p818, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8241, 3} true;
  assume {:verifier.code 0} true;
  goto $bb280;
$bb279:
  assume !(($i817 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb280;
$bb280:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8244, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i99;
  goto $bb6;
}
const ldv_mutex_unlock_29: ref;
axiom (ldv_mutex_unlock_29 == $sub.ref(0, 261242));
procedure  ldv_mutex_unlock_29($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9403, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9404, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9405, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __scsi_iterate_devices: ref;
axiom (__scsi_iterate_devices == $sub.ref(0, 262274));
procedure  __scsi_iterate_devices($p0: ref, $p1: ref)
  returns ($r: ref);
const scsi_target: ref;
axiom (scsi_target == $sub.ref(0, 263306));
procedure  scsi_target($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5878, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 472);
  $p2 := $add.ref($p0, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5878, 55} true;
  assume {:verifier.code 0} true;
  $p3 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5879, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5879, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref($sub.ref(0, 40), 1512));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5879, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const ldv_mutex_lock_22: ref;
axiom (ldv_mutex_lock_22 == $sub.ref(0, 264338));
procedure  ldv_mutex_lock_22($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9333, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9334, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9335, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_23: ref;
axiom (ldv_mutex_unlock_23 == $sub.ref(0, 265370));
procedure  ldv_mutex_unlock_23($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9343, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9344, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9345, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_24: ref;
axiom (ldv_mutex_unlock_24 == $sub.ref(0, 266402));
procedure  ldv_mutex_unlock_24($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9353, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9354, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9355, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_25: ref;
axiom (ldv_mutex_unlock_25 == $sub.ref(0, 267434));
procedure  ldv_mutex_unlock_25($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9363, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9364, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9365, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_26: ref;
axiom (ldv_mutex_unlock_26 == $sub.ref(0, 268466));
procedure  ldv_mutex_unlock_26($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9373, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9374, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9375, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_27: ref;
axiom (ldv_mutex_unlock_27 == $sub.ref(0, 269498));
procedure  ldv_mutex_unlock_27($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9383, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9384, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9385, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const copy_to_user: ref;
axiom (copy_to_user == $sub.ref(0, 270530));
procedure  copy_to_user($p0: ref, $p1: ref, $i2: bv64)
  returns ($r: bv64)
{
  var $i3: bv32;
  var $i4: bv64;
  var $i5: bv32;
  var $i6: bv1;
  var $i8: bv64;
  var $i9: bv1;
  var $i7: bv1;
  var $i10: bv32;
  var $i11: bv64;
  var $i12: bv64;
  var $i13: bv1;
  var $i14: bv32;
  var $i15: bv64;
  var $i16: bv64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10195, metadata !6788), !dbg !10196, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5861, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.bv32($p1, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5861, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.bv32.bv64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !6797, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5862, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.bv64.bv32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !6801, !verifier.code !6792
  call {:cexpr "sz"} boogie_si_record_bv32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5863, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.29, 732bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.bv32($i5, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1bv1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1bv1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.bv1.bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.bv32.bv64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1bv64);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !6814, !verifier.code !6792
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5865, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.bv64($i12, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5865, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.bv32.bv64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.bv64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5864, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5866, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.bv64.bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5866, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_to_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_to_user(i8* %0, i8* %1, i32 %18), !dbg !6822, !verifier.code !6792
  call {:cexpr "n"} boogie_si_record_bv64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5867, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5868, 5} true;
  assume {:verifier.code 0} true;
  call __copy_to_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5870, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const _copy_to_user: ref;
axiom (_copy_to_user == $sub.ref(0, 271562));
procedure  _copy_to_user($p0: ref, $p1: ref, $i2: bv32)
  returns ($r: bv64);
const __copy_to_user_overflow: ref;
axiom (__copy_to_user_overflow == $sub.ref(0, 272594));
procedure  __copy_to_user_overflow();
const mptctl_getiocinfo: ref;
axiom (mptctl_getiocinfo == $sub.ref(0, 273626));
procedure  mptctl_getiocinfo($i0: bv64, $i1: bv32)
  returns ($r: bv32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: bv1;
  var $i6: bv1;
  var $i8: bv1;
  var $i10: bv1;
  var $i9: bv32;
  var $i7: bv32;
  var $i5: bv32;
  var $p12: ref;
  var $i13: bv64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv1;
  var $i18: bv8;
  var $i19: bv1;
  var $p20: ref;
  var $i21: bv64;
  var $i22: bv32;
  var $p23: ref;
  var $i24: bv64;
  var $i25: bv32;
  var $p26: ref;
  var $p27: ref;
  var $i28: bv32;
  var $i29: bv32;
  var $i30: bv1;
  var $p31: ref;
  var $i32: bv64;
  var $i33: bv1;
  var $i34: bv32;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: bv32;
  var $i39: bv1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: bv32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: bv32;
  var $i48: bv32;
  var $i49: bv1;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: bv32;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv8;
  var $i57: bv32;
  var $i58: bv1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: bv8;
  var $i63: bv32;
  var $i64: bv1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: bv32;
  var $i70: bv1;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: bv32;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: bv16;
  var $i81: bv32;
  var $p82: ref;
  var $p83: ref;
  var $i84: bv8;
  var $i85: bv32;
  var $p86: ref;
  var $p87: ref;
  var $i88: bv16;
  var $i89: bv32;
  var $p90: ref;
  var $p91: ref;
  var $i92: bv16;
  var $i93: bv32;
  var $p94: ref;
  var $i95: bv1;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: bv8;
  var $i100: bv32;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: bv32;
  var $i106: bv32;
  var $i107: bv32;
  var $i108: bv32;
  var $i109: bv32;
  var $p110: ref;
  var $i111: bv32;
  var $i112: bv32;
  var $i113: bv8;
  var $i114: bv32;
  var $i115: bv32;
  var $i116: bv8;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: bv32;
  var $i122: bv32;
  var $i123: bv32;
  var $i124: bv32;
  var $i125: bv32;
  var $p126: ref;
  var $i127: bv32;
  var $i128: bv8;
  var $i129: bv32;
  var $i130: bv32;
  var $i131: bv8;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: bv32;
  var $i137: bv32;
  var $i138: bv32;
  var $i139: bv32;
  var $i140: bv32;
  var $i141: bv32;
  var $i142: bv1;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: bv8;
  var $i147: bv32;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: bv32;
  var $i153: bv32;
  var $i154: bv32;
  var $i155: bv32;
  var $i156: bv32;
  var $p157: ref;
  var $i158: bv32;
  var $i159: bv32;
  var $i160: bv8;
  var $i161: bv32;
  var $i162: bv32;
  var $i163: bv8;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: bv32;
  var $i169: bv32;
  var $i170: bv32;
  var $i171: bv32;
  var $i172: bv32;
  var $p173: ref;
  var $i174: bv32;
  var $i175: bv8;
  var $i176: bv32;
  var $i177: bv32;
  var $i178: bv8;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: bv32;
  var $i184: bv32;
  var $i185: bv32;
  var $i186: bv32;
  var $i187: bv32;
  var $i188: bv32;
  var $p189: ref;
  var $p190: ref;
  var $i191: bv32;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $i198: bv64;
  var $i199: bv1;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $i204: bv64;
  var $i205: bv1;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $i210: bv64;
  var $i211: bv1;
  var $p212: ref;
  var $p213: ref;
  var $i214: bv64;
  var $i215: bv1;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $i219: bv8;
  var $i220: bv32;
  var $i221: bv32;
  var $i222: bv1;
  var $p223: ref;
  var $i224: bv32;
  var $i225: bv32;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $i231: bv64;
  var $i232: bv1;
  var $p206: ref;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $i237: bv32;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $i241: bv32;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: bv64;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $i254: bv16;
  var $i255: bv8;
  var $p256: ref;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $i263: bv64;
  var $i264: bv64;
  var $i265: bv1;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $i269: bv32;
  var $p270: ref;
  var $p271: ref;
  var $i11: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !10232, metadata !6788), !dbg !10233, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7146, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7147, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.bv32($i1, 84bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7147, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7149, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb3;
$bb2:
  assume !(($i4 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7150, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.bv32($i1, 88bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7150, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7161, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7161, 43} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.bv32.bv64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7161, 9} true;
  assume {:verifier.code 0} true;
  call $p14 := memdup_user($p12, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7162, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7163, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7163, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := IS_ERR($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7163, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.bv1.bv8($i17);
  // WARNING: %27 = zext i1 %26 to i8, !dbg !6835, !verifier.code !6789
  call {:cexpr "tmp___2"} boogie_si_record_bv8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7164, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.bv8.bv1($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb14, $bb15;
$bb4:
  assume ($i6 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7152, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 1bv32;
  goto $bb6;
$bb5:
  assume !(($i6 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7153, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.bv32($i1, 92bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7153, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb3;
$bb7:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7155, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 2bv32;
  goto $bb9;
$bb8:
  assume !(($i8 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7156, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.bv32($i1, 96bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7156, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb6;
$bb10:
  assume ($i10 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7158, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i10 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7159, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb9;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7282, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb14:
  assume ($i19 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7165, 23} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7165, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := PTR_ERR($p20);
  // WARNING: %31 = call i64 @PTR_ERR(i8* %30), !dbg !6843, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7166, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref.ref.bv32.bv64(.str.30, .str.27, 1267bv32, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7169, 23} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7169, 15} true;
  assume {:verifier.code 0} true;
  call $i24 := PTR_ERR($p23);
  // WARNING: %34 = call i64 @PTR_ERR(i8* %33), !dbg !6848, !verifier.code !6789
  call {:cexpr "tmp___1"} boogie_si_record_bv64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7170, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.bv64.bv32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7170, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $i25;
  goto $bb13;
$bb15:
  assume !(($i19 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7174, 43} true;
  assume {:verifier.code 0} true;
  $p26 := $p15;
  $p27 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7174, 47} true;
  assume {:verifier.code 0} true;
  $i28 := $load.bytes.bv32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7174, 12} true;
  assume {:verifier.code 0} true;
  call $i29 := mpt_verify_adapter($i28, $p2);
  // WARNING: %41 = call i32 @mpt_verify_adapter(i32 %40, %struct._MPT_ADAPTER** %3), !dbg !6855, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 14} true;
  assume {:verifier.code 0} true;
  $i30 := $slt.bv32($i29, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb17, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 18} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1bv1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7176, 5} true;
  assume {:verifier.code 0} true;
  call $i34 := printk.ref.ref.bv32.bv32(.str.31, .str.27, 1274bv32, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7178, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7178, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7179, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 19bv32);
  goto $bb13;
$bb19:
  assume !(($i30 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 37} true;
  assume {:verifier.code 0} true;
  $p31 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 21} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.bv64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 41} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.bv64($i32, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7175, 7} true;
  assume {:verifier.code 0} true;
  assume ($i33 == 1bv1);
  goto $bb18;
$bb21:
  assume !(($i33 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7183, 28} true;
  assume {:verifier.code 0} true;
  $p36 := $p15;
  $p37 := $add.ref($p15, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7183, 32} true;
  assume {:verifier.code 0} true;
  $i38 := $load.bytes.bv32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7183, 44} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.bv32($i38, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7183, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i39 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7185, 23} true;
  assume {:verifier.code 0} true;
  $p40 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7185, 28} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7185, 12} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7184, 5} true;
  assume {:verifier.code 0} true;
  call $i43 := printk.ref.ref.ref.bv32(.str.32, $p42, .str.27, 1283bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7187, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7187, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7188, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb13;
$bb24:
  assume !(($i39 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 8} true;
  assume {:verifier.code 0} true;
  $p45 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 13} true;
  assume {:verifier.code 0} true;
  $i47 := $load.bytes.bv32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 25} true;
  assume {:verifier.code 0} true;
  $i48 := $and.bv32($i47, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 35} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.bv32($i48, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i49 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7193, 70} true;
  assume {:verifier.code 0} true;
  $p50 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7193, 75} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7193, 59} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7193, 5} true;
  assume {:verifier.code 0} true;
  call $i53 := printk.ref.ref(.str.33, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7194, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i49 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 22} true;
  assume {:verifier.code 0} true;
  $p54 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 27} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 27} true;
  assume {:verifier.code 0} true;
  $i56 := $load.bytes.bv8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.bv8.bv32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 36} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.bv32($i57, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7197, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i58 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7198, 11} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7198, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p59, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7199, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i58 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 22} true;
  assume {:verifier.code 0} true;
  $p60 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 27} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 27} true;
  assume {:verifier.code 0} true;
  $i62 := $load.bytes.bv8($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.bv8.bv32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 36} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.bv32($i63, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7200, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7205, 13} true;
  assume {:verifier.code 0} true;
  $p67 := $p15;
  $p68 := $add.ref($p15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7205, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $load.bytes.bv32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7205, 22} true;
  assume {:verifier.code 0} true;
  $i70 := $ugt.bv32($i69, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7205, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb35, $bb36;
$bb32:
  assume ($i64 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7201, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7201, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p65, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7202, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i64 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7203, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7203, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p66, 0bv32);
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb35:
  assume ($i70 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7206, 11} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7206, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7207, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 22bv32);
  goto $bb13;
$bb36:
  assume !(($i70 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7211, 16} true;
  assume {:verifier.code 0} true;
  $p72 := $p15;
  $p73 := $add.ref($p15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7211, 20} true;
  assume {:verifier.code 0} true;
  $i74 := $load.bytes.bv32($M.0, $p73);
  // WARNING: %105 = load i32, i32* %104, align 4, !dbg !6929, !verifier.code !6789
  call {:cexpr "port"} boogie_si_record_bv32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7212, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7212, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7213, 10} true;
  assume {:verifier.code 0} true;
  $p76 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7213, 15} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p76, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7213, 15} true;
  assume {:verifier.code 0} true;
  $p78 := $load.bytes.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7214, 29} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7214, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $load.bytes.bv16($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7214, 17} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.bv16.bv32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7214, 9} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p15, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7214, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7215, 29} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p78, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7215, 29} true;
  assume {:verifier.code 0} true;
  $i84 := $load.bytes.bv8($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7215, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.bv8.bv32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7215, 9} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p15, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7215, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p86, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7216, 39} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p78, 66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7216, 39} true;
  assume {:verifier.code 0} true;
  $i88 := $load.bytes.bv16($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7216, 27} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.bv16.bv32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7216, 9} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p15, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7216, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p90, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7217, 39} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p78, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7217, 39} true;
  assume {:verifier.code 0} true;
  $i92 := $load.bytes.bv16($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7217, 27} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.bv16.bv32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7217, 9} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p15, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7217, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7218, 15} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.bv32($i5, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7218, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i95 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 60} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p78, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 60} true;
  assume {:verifier.code 0} true;
  $p97 := $load.bytes.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 66} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p97, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 66} true;
  assume {:verifier.code 0} true;
  $i99 := $load.bytes.bv8($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 38} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.bv8.bv32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 11} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p15, 84);
  $p102 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 21} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 26} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $i105 := $load.bytes.bv32($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $i106 := $and.bv32($i100, 16777215bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $i107 := $shl.bv32($i106, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $i108 := $and.bv32($i105, 255bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $i109 := $or.bv32($i108, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7219, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p104, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 80} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p78, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 80} true;
  assume {:verifier.code 0} true;
  $i111 := $load.bytes.bv32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 86} true;
  assume {:verifier.code 0} true;
  $i112 := $lshr.bv32($i111, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 57} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.bv32.bv8($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 41} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.bv8.bv32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 93} true;
  assume {:verifier.code 0} true;
  $i115 := $and.bv32($i114, 31bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 41} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.bv32.bv8($i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 11} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p15, 84);
  $p118 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 21} true;
  assume {:verifier.code 0} true;
  $p119 := $bitcast.ref.ref($p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 26} true;
  assume {:verifier.code 0} true;
  $p120 := $bitcast.ref.ref($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.bv8.bv32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $i122 := $load.bytes.bv32($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $i123 := $and.bv32($i121, 31bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $i124 := $and.bv32($i122, $sub.bv32(0bv32, 32bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $i125 := $or.bv32($i124, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7220, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p120, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 81} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p78, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 81} true;
  assume {:verifier.code 0} true;
  $i127 := $load.bytes.bv32($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 59} true;
  assume {:verifier.code 0} true;
  $i128 := $trunc.bv32.bv8($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 43} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.bv8.bv32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 88} true;
  assume {:verifier.code 0} true;
  $i130 := $and.bv32($i129, 7bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 43} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.bv32.bv8($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 11} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p15, 84);
  $p133 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 21} true;
  assume {:verifier.code 0} true;
  $p134 := $bitcast.ref.ref($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 26} true;
  assume {:verifier.code 0} true;
  $p135 := $bitcast.ref.ref($p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i136 := $zext.bv8.bv32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i137 := $load.bytes.bv32($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i138 := $and.bv32($i136, 7bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i139 := $shl.bv32($i138, 5bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i140 := $and.bv32($i137, $sub.bv32(0bv32, 225bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $i141 := $or.bv32($i140, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7221, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p135, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7222, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i95 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7223, 15} true;
  assume {:verifier.code 0} true;
  $i142 := $eq.bv32($i5, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7223, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7231, 9} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p15, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7231, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p194, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 23} true;
  assume {:verifier.code 0} true;
  $p195 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 28} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p195, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 28} true;
  assume {:verifier.code 0} true;
  $p197 := $load.bytes.ref($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $p2i.ref.bv64($p197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 31} true;
  assume {:verifier.code 0} true;
  $i199 := $ne.bv64($i198, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7232, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb44, $bb45;
$bb41:
  assume ($i142 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 60} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p78, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 60} true;
  assume {:verifier.code 0} true;
  $p144 := $load.bytes.ref($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 66} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 66} true;
  assume {:verifier.code 0} true;
  $i146 := $load.bytes.bv8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 38} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.bv8.bv32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 11} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p15, 84);
  $p149 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 21} true;
  assume {:verifier.code 0} true;
  $p150 := $bitcast.ref.ref($p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 26} true;
  assume {:verifier.code 0} true;
  $p151 := $bitcast.ref.ref($p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $i152 := $load.bytes.bv32($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $i153 := $and.bv32($i147, 16777215bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $i154 := $shl.bv32($i153, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $i155 := $and.bv32($i152, 255bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $i156 := $or.bv32($i155, $i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7224, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p151, $i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 80} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p78, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 80} true;
  assume {:verifier.code 0} true;
  $i158 := $load.bytes.bv32($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 86} true;
  assume {:verifier.code 0} true;
  $i159 := $lshr.bv32($i158, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 57} true;
  assume {:verifier.code 0} true;
  $i160 := $trunc.bv32.bv8($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 41} true;
  assume {:verifier.code 0} true;
  $i161 := $zext.bv8.bv32($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 93} true;
  assume {:verifier.code 0} true;
  $i162 := $and.bv32($i161, 31bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 41} true;
  assume {:verifier.code 0} true;
  $i163 := $trunc.bv32.bv8($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 11} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p15, 84);
  $p165 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 21} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 26} true;
  assume {:verifier.code 0} true;
  $p167 := $bitcast.ref.ref($p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.bv8.bv32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $i169 := $load.bytes.bv32($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $i170 := $and.bv32($i168, 31bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $i171 := $and.bv32($i169, $sub.bv32(0bv32, 32bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $i172 := $or.bv32($i171, $i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7225, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p167, $i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 81} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p78, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 81} true;
  assume {:verifier.code 0} true;
  $i174 := $load.bytes.bv32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 59} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.bv32.bv8($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 43} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.bv8.bv32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 88} true;
  assume {:verifier.code 0} true;
  $i177 := $and.bv32($i176, 7bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 43} true;
  assume {:verifier.code 0} true;
  $i178 := $trunc.bv32.bv8($i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 11} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p15, 84);
  $p180 := $add.ref($p15, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 21} true;
  assume {:verifier.code 0} true;
  $p181 := $bitcast.ref.ref($p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 26} true;
  assume {:verifier.code 0} true;
  $p182 := $bitcast.ref.ref($p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.bv8.bv32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i184 := $load.bytes.bv32($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i185 := $and.bv32($i183, 7bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i186 := $shl.bv32($i185, 5bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i187 := $and.bv32($i184, $sub.bv32(0bv32, 225bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $i188 := $or.bv32($i187, $i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7226, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p182, $i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7227, 51} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p78, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7227, 51} true;
  assume {:verifier.code 0} true;
  $p190 := $load.bytes.ref($M.0, $p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7227, 31} true;
  assume {:verifier.code 0} true;
  call $i191 := pci_domain_nr($p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7227, 11} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p15, 84);
  $p193 := $add.ref($add.ref($p15, 84), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7227, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p193, $i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7228, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i142 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb44:
  assume ($i199 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7233, 35} true;
  assume {:verifier.code 0} true;
  $p200 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7233, 40} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p200, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7233, 40} true;
  assume {:verifier.code 0} true;
  $p202 := $load.bytes.ref($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7233, 12} true;
  assume {:verifier.code 0} true;
  call $p203 := __scsi_iterate_devices($p202, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  $i204 := $p2i.ref.bv64($p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 30} true;
  assume {:verifier.code 0} true;
  $i205 := $ne.bv64($i204, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i205} true;
  goto $bb46, $bb47;
$bb45:
  assume !(($i199 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb46:
  assume ($i205 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  $p206 := $p203;
  goto $bb49;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i205 == 1bv1));
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb63;
$bb49:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7252, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7236, 35} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p206, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7236, 35} true;
  assume {:verifier.code 0} true;
  $p208 := $load.bytes.ref($M.0, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7236, 15} true;
  assume {:verifier.code 0} true;
  $p209 := $bitcast.ref.ref($p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $p2i.ref.bv64($p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 33} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.bv64($i210, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 70} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb51, $bb53;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 70} true;
  assume {:verifier.code 0} true;
  assume ($i211 == 1bv1);
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7238, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb53:
  assume !(($i211 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 98} true;
  assume {:verifier.code 0} true;
  $p212 := $p209;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 98} true;
  assume {:verifier.code 0} true;
  $p213 := $load.bytes.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 73} true;
  assume {:verifier.code 0} true;
  $i214 := $p2i.ref.bv64($p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 106} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.bv64($i214, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb54, $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7237, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1bv1);
  goto $bb52;
$bb55:
  assume !(($i215 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7249, 35} true;
  assume {:verifier.code 0} true;
  $p227 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7249, 40} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7249, 40} true;
  assume {:verifier.code 0} true;
  $p229 := $load.bytes.ref($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7249, 12} true;
  assume {:verifier.code 0} true;
  call $p230 := __scsi_iterate_devices($p229, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  $i231 := $p2i.ref.bv64($p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 30} true;
  assume {:verifier.code 0} true;
  $i232 := $ne.bv64($i231, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  $p206 := $p230;
  assume {:branchcond $i232} true;
  goto $bb61, $bb62;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 26} true;
  assume {:verifier.code 0} true;
  $p216 := $p209;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 26} true;
  assume {:verifier.code 0} true;
  $p217 := $load.bytes.ref($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 36} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p217, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 36} true;
  assume {:verifier.code 0} true;
  $i219 := $load.bytes.bv8($M.0, $p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 10} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.bv8.bv32($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 43} true;
  assume {:verifier.code 0} true;
  $i221 := $and.bv32($i220, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 49} true;
  assume {:verifier.code 0} true;
  $i222 := $ne.bv32($i221, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7242, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i222} true;
  goto $bb58, $bb59;
$bb58:
  assume ($i222 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7243, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb59:
  assume !(($i222 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 30} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p15, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 30} true;
  assume {:verifier.code 0} true;
  $i224 := $load.bytes.bv32($M.0, $p223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 41} true;
  assume {:verifier.code 0} true;
  $i225 := $add.bv32($i224, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 11} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p15, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p226, $i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  assume ($i232 == 1bv1);
  goto $bb49;
$bb62:
  assume !(($i232 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7251, 9} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7257, 3} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 27} true;
  assume {:verifier.code 0} true;
  $p233 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 32} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p233, 1284);
  $p235 := $add.ref($add.ref($p233, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 48} true;
  assume {:verifier.code 0} true;
  $p236 := $bitcast.ref.ref($p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 48} true;
  assume {:verifier.code 0} true;
  $i237 := $load.bytes.bv32($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 9} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7260, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p238, $i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7261, 29} true;
  assume {:verifier.code 0} true;
  $p239 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7261, 34} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p239, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7261, 34} true;
  assume {:verifier.code 0} true;
  $i241 := $load.bytes.bv32($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7261, 9} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7261, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p242, $i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7262, 28} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7262, 11} true;
  assume {:verifier.code 0} true;
  $p244 := $bitcast.ref.ref($p243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7262, 3} true;
  assume {:verifier.code 0} true;
  call $p245 := strncpy($p244, .str.34, 32bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7263, 9} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p15, 48);
  $p247 := $add.ref($add.ref($p15, 48), 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7263, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p247, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7264, 9} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p15, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7264, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p248, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 25} true;
  assume {:verifier.code 0} true;
  $i249 := $zext.bv32.bv64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 25} true;
  assume {:verifier.code 0} true;
  $p250 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 30} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p250, 1364);
  $p252 := $add.ref($add.ref($p250, 1364), $mul.ref($bv2int.64($i249), 40));
  $p253 := $add.ref($add.ref($add.ref($p250, 1364), $mul.ref($bv2int.64($i249), 40)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 43} true;
  assume {:verifier.code 0} true;
  $i254 := $load.bytes.bv16($M.0, $p253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 18} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.bv16.bv8($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 9} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p15, 81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7265, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p256, $i255);
  // WARNING: store i8 %306, i8* %307, align 1, !dbg !7090, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7267, 9} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($p15, 82);
  $p258 := $add.ref($add.ref($p15, 82), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7267, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p258, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7268, 9} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p15, 82);
  $p260 := $add.ref($p15, 82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7268, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p260, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7269, 26} true;
  assume {:verifier.code 0} true;
  $p261 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7269, 39} true;
  assume {:verifier.code 0} true;
  $p262 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7269, 61} true;
  assume {:verifier.code 0} true;
  $i263 := $zext.bv32.bv64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7269, 13} true;
  assume {:verifier.code 0} true;
  call $i264 := copy_to_user($p261, $p262, $i263);
  // WARNING: %315 = call i64 @copy_to_user(i8* %312, i8* %313, i64 %314), !dbg !7100, !verifier.code !6789
  call {:cexpr "tmp___4"} boogie_si_record_bv64($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7270, 15} true;
  assume {:verifier.code 0} true;
  $i265 := $ne.bv64($i264, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7270, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i265} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i265 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7272, 23} true;
  assume {:verifier.code 0} true;
  $p266 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7272, 28} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p266, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7272, 12} true;
  assume {:verifier.code 0} true;
  $p268 := $bitcast.ref.ref($p267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7271, 5} true;
  assume {:verifier.code 0} true;
  call $i269 := printk.ref.ref.ref.bv32.ref(.str.35, $p268, .str.27, 1364bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7274, 11} true;
  assume {:verifier.code 0} true;
  $p270 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7274, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7275, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb13;
$bb66:
  assume !(($i265 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7279, 9} true;
  assume {:verifier.code 0} true;
  $p271 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7279, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7280, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0bv32;
  goto $bb13;
}
const mptctl_gettargetinfo: ref;
axiom (mptctl_gettargetinfo == $sub.ref(0, 274658));
procedure  mptctl_gettargetinfo($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $i30: bv32;
  var $i31: bv32;
  var $i32: bv64;
  var $i33: bv64;
  var $i34: bv32;
  var $i35: bv1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: bv32;
  var $i40: bv64;
  var $p41: ref;
  var $i42: bv64;
  var $i43: bv1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: bv32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: bv64;
  var $i53: bv1;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: bv64;
  var $i59: bv1;
  var $i66: bv1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: bv64;
  var $i74: bv1;
  var $p75: ref;
  var $p76: ref;
  var $i77: bv64;
  var $i78: bv1;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: bv8;
  var $i83: bv32;
  var $i84: bv32;
  var $i85: bv1;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: bv8;
  var $i90: bv32;
  var $i91: bv1;
  var $p92: ref;
  var $i93: bv64;
  var $i94: bv32;
  var $i95: bv32;
  var $i96: bv8;
  var $i97: bv32;
  var $i98: bv32;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: bv8;
  var $i103: bv32;
  var $i104: bv32;
  var $i105: bv32;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: bv8;
  var $i110: bv32;
  var $i111: bv32;
  var $p112: ref;
  var $i113: bv32;
  var $i114: bv32;
  var $p67: ref;
  var $i68: bv32;
  var $i69: bv32;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: bv64;
  var $i120: bv1;
  var $p62: ref;
  var $i63: bv32;
  var $i64: bv32;
  var $p65: ref;
  var $p121: ref;
  var $i122: bv32;
  var $p60: ref;
  var $i61: bv32;
  var $p123: ref;
  var $i124: bv32;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $i128: bv64;
  var $i129: bv1;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: bv32;
  var $p134: ref;
  var $p135: ref;
  var $i136: bv64;
  var $i137: bv64;
  var $i138: bv1;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(20, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7304, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.mpt_ioctl_targetinfo* %4, i64 0, metadata !10570, metadata !6788), !dbg !10571, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7306, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7306, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7306, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 20bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 20), !dbg !6805, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7307, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7308, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.36, .str.27, 1403bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7311, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7411, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7315, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7315, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7315, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6816, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7317, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.37, .str.27, 1410bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7319, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7316, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7323, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7324, 73} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7324, 78} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7324, 62} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7324, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.38, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7325, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7328, 41} true;
  assume {:verifier.code 0} true;
  $p28 := $p1;
  $p29 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7328, 45} true;
  assume {:verifier.code 0} true;
  $i30 := $load.bytes.bv32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7328, 57} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.bv32($i30, 12bv32);
  // WARNING: %41 = sub i32 %40, 12, !dbg !6844, !verifier.code !6789
  call {:cexpr "numBytes"} boogie_si_record_bv32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7329, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.bv32.bv64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7329, 50} true;
  assume {:verifier.code 0} true;
  $i33 := $udiv.bv64($i32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7329, 18} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.bv64.bv32($i33);
  // WARNING: %44 = trunc i64 %43 to i32, !dbg !6849, !verifier.code !6789
  call {:cexpr "maxWordsLeft"} boogie_si_record_bv32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7331, 20} true;
  assume {:verifier.code 0} true;
  $i35 := $sle.bv32($i34, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7331, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i35 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7333, 23} true;
  assume {:verifier.code 0} true;
  $p36 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7333, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7333, 12} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7332, 5} true;
  assume {:verifier.code 0} true;
  call $i39 := printk.ref.ref.ref.bv32(.str.39, $p38, .str.27, 1426bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7335, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 12bv32);
  goto $bb3;
$bb15:
  assume !(($i35 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7339, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.bv32.bv64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7339, 13} true;
  assume {:verifier.code 0} true;
  call $p41 := kzalloc($i40, 208bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7341, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.bv64($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7341, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.bv64($i42, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7341, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i43 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7343, 23} true;
  assume {:verifier.code 0} true;
  $p44 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7343, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7343, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7342, 5} true;
  assume {:verifier.code 0} true;
  call $i47 := printk.ref.ref.ref.bv32(.str.39, $p46, .str.27, 1447bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7345, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 12bv32);
  goto $bb3;
$bb18:
  assume !(($i43 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7349, 11} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 23} true;
  assume {:verifier.code 0} true;
  $p49 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 28} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 28} true;
  assume {:verifier.code 0} true;
  $p51 := $load.bytes.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.bv64($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 31} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.bv64($i52, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7350, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i53 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7351, 35} true;
  assume {:verifier.code 0} true;
  $p54 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7351, 40} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7351, 40} true;
  assume {:verifier.code 0} true;
  $p56 := $load.bytes.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7351, 12} true;
  assume {:verifier.code 0} true;
  call $p57 := __scsi_iterate_devices($p56, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.bv64($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 30} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.bv64($i58, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $p60, $i61 := $p41, 0bv32;
  assume {:branchcond $i59} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i53 == 1bv1));
  assume {:verifier.code 0} true;
  $p123, $i124 := $p41, 0bv32;
  goto $bb46;
$bb22:
  assume ($i59 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $p62, $i63, $i64, $p65 := $p57, $i34, 0bv32, $p41;
  goto $bb25;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i59 == 1bv1));
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb25:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7379, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7354, 22} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.bv32($i63, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7354, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i66 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7355, 7} true;
  assume {:verifier.code 0} true;
  $p67, $i68, $i69 := $p65, $i64, $i63;
  goto $bb29;
$bb28:
  assume !(($i66 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7376, 35} true;
  assume {:verifier.code 0} true;
  $p115 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7376, 40} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7376, 40} true;
  assume {:verifier.code 0} true;
  $p117 := $load.bytes.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7376, 12} true;
  assume {:verifier.code 0} true;
  call $p118 := __scsi_iterate_devices($p117, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.bv64($p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 30} true;
  assume {:verifier.code 0} true;
  $i120 := $ne.bv64($i119, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $p62, $i63, $i64, $p65, $p121, $i122 := $p118, $i69, $i68, $p67, $p67, $i68;
  assume {:branchcond $i120} true;
  goto $bb43, $bb44;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7359, 35} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p62, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7359, 35} true;
  assume {:verifier.code 0} true;
  $p71 := $load.bytes.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7359, 15} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.bv64($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 33} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.bv64($i73, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 70} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb31, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 70} true;
  assume {:verifier.code 0} true;
  assume ($i74 == 1bv1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7361, 7} true;
  assume {:verifier.code 0} true;
  $p67, $i68, $i69 := $p65, $i64, $i63;
  goto $bb29;
$bb33:
  assume !(($i74 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 98} true;
  assume {:verifier.code 0} true;
  $p75 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 98} true;
  assume {:verifier.code 0} true;
  $p76 := $load.bytes.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 73} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.bv64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 106} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.bv64($i77, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7360, 9} true;
  assume {:verifier.code 0} true;
  assume ($i78 == 1bv1);
  goto $bb32;
$bb35:
  assume !(($i78 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 26} true;
  assume {:verifier.code 0} true;
  $p79 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 26} true;
  assume {:verifier.code 0} true;
  $p80 := $load.bytes.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 36} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p80, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 36} true;
  assume {:verifier.code 0} true;
  $i82 := $load.bytes.bv8($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 10} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.bv8.bv32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 43} true;
  assume {:verifier.code 0} true;
  $i84 := $and.bv32($i83, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 49} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.bv32($i84, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7365, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i85 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7366, 7} true;
  assume {:verifier.code 0} true;
  $p67, $i68, $i69 := $p65, $i64, $i63;
  goto $bb29;
$bb38:
  assume !(($i85 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 36} true;
  assume {:verifier.code 0} true;
  $p86 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 36} true;
  assume {:verifier.code 0} true;
  $p87 := $load.bytes.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 46} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 46} true;
  assume {:verifier.code 0} true;
  $i89 := $load.bytes.bv8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 11} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.bv8.bv32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 57} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.bv32($i90, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i91 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 80} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p72, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 80} true;
  assume {:verifier.code 0} true;
  $i93 := $load.bytes.bv64($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 65} true;
  assume {:verifier.code 0} true;
  $i94 := $trunc.bv64.bv32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb42;
$bb41:
  assume !(($i91 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 11} true;
  assume {:verifier.code 0} true;
  $i95 := 128bv32;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7370, 11} true;
  assume {:verifier.code 0} true;
  // WARNING: %117 = phi i32 [ %114, %111 ], [ 128, %115 ], !dbg !6935, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 23} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.bv32.bv8($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 16} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.bv8.bv32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 44} true;
  assume {:verifier.code 0} true;
  $i98 := $shl.bv32($i97, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 70} true;
  assume {:verifier.code 0} true;
  $p99 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 70} true;
  assume {:verifier.code 0} true;
  $p100 := $load.bytes.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 80} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p100, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 80} true;
  assume {:verifier.code 0} true;
  $i102 := $load.bytes.bv8($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 54} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.bv8.bv32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 88} true;
  assume {:verifier.code 0} true;
  $i104 := $shl.bv32($i103, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 51} true;
  assume {:verifier.code 0} true;
  $i105 := $add.bv32($i98, $i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 113} true;
  assume {:verifier.code 0} true;
  $p106 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 113} true;
  assume {:verifier.code 0} true;
  $p107 := $load.bytes.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 123} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 123} true;
  assume {:verifier.code 0} true;
  $i109 := $load.bytes.bv8($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 97} true;
  assume {:verifier.code 0} true;
  $i110 := $zext.bv8.bv32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 95} true;
  assume {:verifier.code 0} true;
  $i111 := $add.bv32($i105, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7371, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p65, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7372, 19} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p65, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7373, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $add.bv32($i64, 1bv32);
  // WARNING: %135 = add nsw i32 %.149, 1, !dbg !6953, !verifier.code !6789
  call {:cexpr "numDevices"} boogie_si_record_bv32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7374, 33} true;
  assume {:verifier.code 0} true;
  $i114 := $sub.bv32($i63, 1bv32);
  // WARNING: %136 = sub nsw i32 %.110, 1, !dbg !6954, !verifier.code !6789
  call {:cexpr "maxWordsLeft"} boogie_si_record_bv32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7374, 5} true;
  assume {:verifier.code 0} true;
  $p67, $i68, $i69 := $p112, $i113, $i114;
  goto $bb29;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  assume ($i120 == 1bv1);
  goto $bb25;
$bb44:
  assume !(($i120 == 1bv1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7378, 9} true;
  assume {:verifier.code 0} true;
  $p60, $i61 := $p121, $i122;
  goto $bb24;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7384, 3} true;
  assume {:verifier.code 0} true;
  $p123, $i124 := $p60, $i61;
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7387, 8} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7387, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p125, $i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7388, 26} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7388, 39} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7388, 13} true;
  assume {:verifier.code 0} true;
  call $i128 := copy_to_user($p126, $p127, 20bv64);
  // WARNING: %152 = call i64 @copy_to_user(i8* %150, i8* %151, i64 20), !dbg !6966, !verifier.code !6789
  call {:cexpr "tmp___1"} boogie_si_record_bv64($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7389, 15} true;
  assume {:verifier.code 0} true;
  $i129 := $ne.bv64($i128, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7389, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i129 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7391, 23} true;
  assume {:verifier.code 0} true;
  $p130 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7391, 28} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p130, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7391, 12} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7390, 5} true;
  assume {:verifier.code 0} true;
  call $i133 := printk.ref.ref.ref.bv32.ref(.str.40, $p132, .str.27, 1480bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7393, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7394, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb48:
  assume !(($i129 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7398, 43} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7398, 26} true;
  assume {:verifier.code 0} true;
  $p135 := $bitcast.ref.ref($p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7398, 78} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.bv32.bv64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7398, 13} true;
  assume {:verifier.code 0} true;
  call $i137 := copy_to_user($p135, $p41, $i136);
  // WARNING: %164 = call i64 @copy_to_user(i8* %162, i8* %54, i64 %163), !dbg !6982, !verifier.code !6789
  call {:cexpr "tmp___2"} boogie_si_record_bv64($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7399, 15} true;
  assume {:verifier.code 0} true;
  $i138 := $ne.bv64($i137, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7399, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i138 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7401, 23} true;
  assume {:verifier.code 0} true;
  $p139 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7401, 28} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p139, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7401, 12} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7400, 5} true;
  assume {:verifier.code 0} true;
  call $i142 := printk.ref.ref.ref.bv32.ref(.str.40, $p141, .str.27, 1490bv32, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7403, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7404, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb51:
  assume !(($i138 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7408, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7409, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_readtest: ref;
axiom (mptctl_readtest == $sub.ref(0, 275690));
procedure  mptctl_readtest($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: bv16;
  var $i33: bv32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: bv64;
  var $i54: bv1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(60, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7422, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7423, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7423, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7423, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 60bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 60), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7424, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7424, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7425, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.41, .str.27, 1519bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7428, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7461, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7432, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7432, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7432, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7434, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.42, .str.27, 1526bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7436, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7433, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7440, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7441, 68} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7441, 73} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7441, 57} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7441, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.43, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7442, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 27} true;
  assume {:verifier.code 0} true;
  $p28 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 32} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 32} true;
  assume {:verifier.code 0} true;
  $p30 := $load.bytes.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 41} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 41} true;
  assume {:verifier.code 0} true;
  $i32 := $load.bytes.bv16($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 20} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.bv16.bv32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7445, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 27} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 11} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 53} true;
  assume {:verifier.code 0} true;
  $p37 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 58} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 34} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7446, 3} true;
  assume {:verifier.code 0} true;
  call $p40 := strncpy($p36, $p39, 32bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7447, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 12);
  $p42 := $add.ref($add.ref($p1, 12), 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7447, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p42, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 27} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 37} true;
  assume {:verifier.code 0} true;
  $p45 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 42} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 42} true;
  assume {:verifier.code 0} true;
  $p47 := $load.bytes.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7448, 3} true;
  assume {:verifier.code 0} true;
  call $p48 := strncpy($p44, $p47, 12bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7449, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p1, 48);
  $p50 := $add.ref($add.ref($p1, 48), 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7449, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p50, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7450, 26} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7450, 39} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7450, 13} true;
  assume {:verifier.code 0} true;
  call $i53 := copy_to_user($p51, $p52, 60bv64);
  // WARNING: %63 = call i64 @copy_to_user(i8* %61, i8* %62, i64 60), !dbg !6863, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7451, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.bv64($i53, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i54 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7453, 23} true;
  assume {:verifier.code 0} true;
  $p55 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7453, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7453, 12} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7452, 5} true;
  assume {:verifier.code 0} true;
  call $i58 := printk.ref.ref.ref.bv32.ref(.str.44, $p57, .str.27, 1551bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7455, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb15:
  assume !(($i54 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7459, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_eventquery: ref;
axiom (mptctl_eventquery == $sub.ref(0, 276722));
procedure  mptctl_eventquery($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: bv64;
  var $i36: bv1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(20, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7472, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7473, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7473, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7473, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 20bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 20), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7474, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7474, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7475, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.45, .str.27, 1580bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7478, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7508, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7482, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7482, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7482, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7484, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.46, .str.27, 1587bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7486, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7483, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7490, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7491, 70} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7491, 75} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7491, 59} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7491, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.47, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7492, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7495, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7495, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p28, 50bv16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7496, 36} true;
  assume {:verifier.code 0} true;
  $p29 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7496, 41} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7496, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $load.bytes.bv32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7496, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7496, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7497, 26} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7497, 39} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7497, 13} true;
  assume {:verifier.code 0} true;
  call $i35 := copy_to_user($p33, $p34, 20bv64);
  // WARNING: %45 = call i64 @copy_to_user(i8* %43, i8* %44, i64 20), !dbg !6848, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7498, 15} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.bv64($i35, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7498, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i36 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7500, 23} true;
  assume {:verifier.code 0} true;
  $p37 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7500, 28} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7500, 12} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7499, 5} true;
  assume {:verifier.code 0} true;
  call $i40 := printk.ref.ref.ref.bv32.ref(.str.48, $p39, .str.27, 1601bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7502, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb15:
  assume !(($i36 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7506, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_eventenable: ref;
axiom (mptctl_eventenable == $sub.ref(0, 277754));
procedure  mptctl_eventenable($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv64;
  var $i32: bv1;
  var $i33: bv64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: bv64;
  var $i42: bv1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: bv32;
  var $p47: ref;
  var $p48: ref;
  var $i49: bv32;
  var $i50: bv32;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv32;
  var $p57: ref;
  var $p58: ref;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7520, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7521, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7521, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7521, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 16bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 16), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7522, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7523, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.49, .str.27, 1619bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7526, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7562, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7530, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7530, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7530, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7532, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.50, .str.27, 1626bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7534, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7531, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7538, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7539, 71} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7539, 76} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7539, 60} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7539, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.51, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7540, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 23} true;
  assume {:verifier.code 0} true;
  $p28 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 28} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $load.bytes.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.bv64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.bv64($i31, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7543, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i32 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7545, 23} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.bv32.bv64(800bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7545, 15} true;
  assume {:verifier.code 0} true;
  call $p34 := kzalloc($i33, 208bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7546, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7546, 5} true;
  assume {:verifier.code 0} true;
  $p36 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7546, 10} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7546, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p37, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 25} true;
  assume {:verifier.code 0} true;
  $p38 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 30} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 30} true;
  assume {:verifier.code 0} true;
  $p40 := $load.bytes.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.bv64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 37} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.bv64($i41, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7547, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i32 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i42 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7549, 25} true;
  assume {:verifier.code 0} true;
  $p43 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7549, 30} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7549, 14} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7548, 7} true;
  assume {:verifier.code 0} true;
  call $i46 := printk.ref.ref(.str.52, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7550, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 12bv32);
  goto $bb3;
$bb17:
  assume !(($i42 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 24} true;
  assume {:verifier.code 0} true;
  $p47 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 29} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $load.bytes.bv32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 41} true;
  assume {:verifier.code 0} true;
  $i50 := $add.bv32($i49, 800bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 5} true;
  assume {:verifier.code 0} true;
  $p51 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 10} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7554, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p52, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7555, 5} true;
  assume {:verifier.code 0} true;
  $p53 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7555, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 984);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7555, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p54, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7556, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7559, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7559, 32} true;
  assume {:verifier.code 0} true;
  $i56 := $load.bytes.bv32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7559, 3} true;
  assume {:verifier.code 0} true;
  $p57 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7559, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7559, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p58, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7560, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_eventreport: ref;
axiom (mptctl_eventreport == $sub.ref(0, 278786));
procedure  mptctl_eventreport($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $i30: bv32;
  var $i31: bv32;
  var $i32: bv64;
  var $i33: bv64;
  var $i34: bv32;
  var $i35: bv1;
  var $i36: bv32;
  var $i37: bv1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: bv64;
  var $i42: bv1;
  var $p43: ref;
  var $p44: ref;
  var $i45: bv32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: bv64;
  var $i53: bv64;
  var $i54: bv1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(28, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7576, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7577, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7577, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7577, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 28bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 28), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7578, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7578, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7579, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.53, .str.27, 1668bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7582, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7621, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7586, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7586, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7586, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7588, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.54, .str.27, 1675bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7590, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7587, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7594, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7595, 71} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7595, 76} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7595, 60} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7595, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.55, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7596, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7599, 41} true;
  assume {:verifier.code 0} true;
  $p28 := $p1;
  $p29 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7599, 45} true;
  assume {:verifier.code 0} true;
  $i30 := $load.bytes.bv32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7599, 57} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.bv32($i30, 12bv32);
  // WARNING: %41 = sub i32 %40, 12, !dbg !6842, !verifier.code !6789
  call {:cexpr "numBytes"} boogie_si_record_bv32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7600, 22} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.bv32.bv64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7600, 47} true;
  assume {:verifier.code 0} true;
  $i33 := $udiv.bv64($i32, 16bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7600, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.bv64.bv32($i33);
  // WARNING: %44 = trunc i64 %43 to i32, !dbg !6847, !verifier.code !6789
  call {:cexpr "maxEvents"} boogie_si_record_bv32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7601, 12} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.bv32(50bv32, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7601, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i35 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7601, 9} true;
  assume {:verifier.code 0} true;
  $i36 := 50bv32;
  goto $bb16;
$bb15:
  assume !(($i35 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7601, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $i34;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7601, 9} true;
  assume {:verifier.code 0} true;
  // WARNING: %49 = phi i32 [ 50, %46 ], [ %44, %47 ], !dbg !6856, !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $sle.bv32($i36, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb17, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 16} true;
  assume {:verifier.code 0} true;
  assume ($i37 == 1bv1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7603, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 61bv32);
  goto $bb3;
$bb19:
  assume !(($i37 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 35} true;
  assume {:verifier.code 0} true;
  $p38 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 40} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 40} true;
  assume {:verifier.code 0} true;
  $p40 := $load.bytes.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.bv64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 47} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.bv64($i41, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  assume ($i42 == 1bv1);
  goto $bb18;
$bb21:
  assume !(($i42 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7607, 3} true;
  assume {:verifier.code 0} true;
  $p43 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7607, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 1664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7607, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p44, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7608, 40} true;
  assume {:verifier.code 0} true;
  $i45 := $mul.bv32($i36, 16bv32);
  // WARNING: %62 = mul i32 %49, 16, !dbg !6874, !verifier.code !6789
  call {:cexpr "numBytes"} boogie_si_record_bv32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 43} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 71} true;
  assume {:verifier.code 0} true;
  $p48 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 76} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 76} true;
  assume {:verifier.code 0} true;
  $p50 := $load.bytes.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 55} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7610, 26} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.bv32.bv64($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7609, 13} true;
  assume {:verifier.code 0} true;
  call $i53 := copy_to_user($p47, $p51, $i52);
  // WARNING: %70 = call i64 @copy_to_user(i8* %64, i8* %68, i64 %69), !dbg !6881, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7611, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.bv64($i53, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7611, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i54 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7613, 23} true;
  assume {:verifier.code 0} true;
  $p55 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7613, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7613, 12} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7614, 18} true;
  assume {:verifier.code 0} true;
  $p58 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7614, 23} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7614, 23} true;
  assume {:verifier.code 0} true;
  $p60 := $load.bytes.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7612, 5} true;
  assume {:verifier.code 0} true;
  call $i61 := printk.ref.ref.ref.bv32.ref(.str.56, $p57, .str.27, 1702bv32, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7615, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb24:
  assume !(($i54 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7619, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_replace_fw: ref;
axiom (mptctl_replace_fw == $sub.ref(0, 279818));
procedure  mptctl_replace_fw($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv64;
  var $i32: bv1;
  var $p33: ref;
  var $p34: ref;
  var $i35: bv32;
  var $i36: bv32;
  var $i37: bv32;
  var $p38: ref;
  var $i39: bv32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: bv64;
  var $i44: bv1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: bv64;
  var $i51: bv64;
  var $i52: bv1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(20, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7633, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7634, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7634, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7634, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 20bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 20), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7635, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7635, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7636, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.57, .str.27, 1722bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7639, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7683, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7643, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7643, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7643, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7645, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.58, .str.27, 1729bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7647, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7644, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7651, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7652, 70} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7652, 75} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7652, 59} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7652, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.59, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 23} true;
  assume {:verifier.code 0} true;
  $p28 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 28} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $load.bytes.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.bv64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 38} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.bv64($i31, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7656, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i32 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7657, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
$bb15:
  assume !(($i32 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7661, 22} true;
  assume {:verifier.code 0} true;
  $p33 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7661, 3} true;
  assume {:verifier.code 0} true;
  call mpt_free_fw_memory($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7662, 21} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7662, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $load.bytes.bv32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7662, 34} true;
  assume {:verifier.code 0} true;
  $i36 := $add.bv32($i35, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7662, 39} true;
  assume {:verifier.code 0} true;
  $i37 := $and.bv32($i36, $sub.bv32(0bv32, 4bv32));
  // WARNING: %50 = and i32 %49, -4, !dbg !6852, !verifier.code !6789
  call {:cexpr "newFwSize"} boogie_si_record_bv32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7663, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7663, 3} true;
  assume {:verifier.code 0} true;
  call $i39 := mpt_alloc_fw_memory($p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 23} true;
  assume {:verifier.code 0} true;
  $p40 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 28} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $load.bytes.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.bv64($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.bv64($i43, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7664, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i44 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7665, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 12bv32);
  goto $bb3;
$bb18:
  assume !(($i44 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 36} true;
  assume {:verifier.code 0} true;
  $p45 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 41} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 41} true;
  assume {:verifier.code 0} true;
  $p47 := $load.bytes.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 77} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 52} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7670, 28} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.bv32.bv64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7669, 13} true;
  assume {:verifier.code 0} true;
  call $i51 := copy_from_user($p47, $p49, $i50);
  // WARNING: %67 = call i64 @copy_from_user(i8* %63, i8* %65, i64 %66), !dbg !6870, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7671, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.bv64($i51, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7671, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i52 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7673, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7673, 28} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7673, 12} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7672, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := printk.ref.ref.ref.bv32.ref(.str.60, $p55, .str.27, 1755bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7675, 24} true;
  assume {:verifier.code 0} true;
  $p57 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7675, 5} true;
  assume {:verifier.code 0} true;
  call mpt_free_fw_memory($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7676, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb21:
  assume !(($i52 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7680, 3} true;
  assume {:verifier.code 0} true;
  $p58 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7680, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 1284);
  $p60 := $add.ref($add.ref($p58, 1284), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7680, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p60, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7681, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_fw_download: ref;
axiom (mptctl_fw_download == $sub.ref(0, 280850));
procedure  mptctl_fw_download($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: bv64;
  var $i6: bv1;
  var $i7: bv32;
  var $p9: ref;
  var $i10: bv32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: bv32;
  var $i15: bv64;
  var $i16: bv32;
  var $i8: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %2 = alloca %struct.mpt_fw_xfer, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6651, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6652, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6652, 43} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6652, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := copy_from_user($p3, $p4, 16bv64);
  // WARNING: %6 = call i64 @copy_from_user(i8* %4, i8* %5, i64 16), !dbg !6801, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6653, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.bv64($i5, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6653, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6654, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := printk.ref.ref.bv32.ref(.str.61, .str.27, 765bv32, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6657, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i6 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6664, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 47} true;
  assume {:verifier.code 0} true;
  $p9 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $load.bytes.bv32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 69} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 69} true;
  assume {:verifier.code 0} true;
  $p12 := $load.bytes.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 90} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 90} true;
  assume {:verifier.code 0} true;
  $i14 := $load.bytes.bv32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 75} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.bv32.bv64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6661, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := mptctl_do_fw_download($i10, $p12, $i15);
  // WARNING: %19 = call i32 @mptctl_do_fw_download(i32 %13, i8* %15, i64 %18), !dbg !6814, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6662, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i16;
  goto $bb3;
}
const mptctl_mpt_command: ref;
axiom (mptctl_mpt_command == $sub.ref(0, 281882));
procedure  mptctl_mpt_command($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $i16: bv64;
  var $i17: bv1;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(72, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7694, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7695, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7695, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7695, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 72bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 72), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7696, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7696, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7697, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.97, .str.27, 1791bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7700, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7715, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7704, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7704, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7704, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 18} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7706, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.98, .str.27, 1798bv32, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7708, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i14 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.bv64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.bv64($i16, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7705, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7712, 53} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7712, 36} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7712, 8} true;
  assume {:verifier.code 0} true;
  call $i21 := mptctl_do_mpt_command($p1, $p20);
  // WARNING: %28 = call i32 @mptctl_do_mpt_command(%struct.mpt_ioctl_command* byval align 8 %2, i8* %27), !dbg !6830, !verifier.code !6789
  call {:cexpr "rc"} boogie_si_record_bv32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 7713, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i21;
  goto $bb3;
}
const mptctl_do_reset: ref;
axiom (mptctl_do_reset == $sub.ref(0, 282914));
procedure  mptctl_do_reset($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: bv64;
  var $i7: bv1;
  var $i8: bv32;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $i13: bv32;
  var $i14: bv1;
  var $p15: ref;
  var $p16: ref;
  var $i17: bv32;
  var $i18: bv32;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: bv32;
  var $p28: ref;
  var $i29: bv32;
  var $i30: bv1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: bv32;
  var $i9: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %3 = alloca %struct._MPT_ADAPTER*, align 8, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6608, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6609, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6609, 44} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6609, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 12bv64);
  // WARNING: %7 = call i64 @copy_from_user(i8* %5, i8* %6, i64 12), !dbg !6803, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6610, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv64($i6, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6610, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6611, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.bv32.ref(.str.119, .str.27, 717bv32, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6614, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6642, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6618, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6618, 49} true;
  assume {:verifier.code 0} true;
  $i12 := $load.bytes.bv32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6618, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := mpt_verify_adapter($i12, $p2);
  // WARNING: %16 = call i32 @mpt_verify_adapter(i32 %15, %struct._MPT_ADAPTER** %3), !dbg !6814, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6619, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.bv32($i13, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6619, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6621, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  $p16 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6621, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $load.bytes.bv32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6620, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.bv32.bv32(.str.120, .str.27, 723bv32, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6622, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb6:
  assume !(($i14 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 26} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6626, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6627, 68} true;
  assume {:verifier.code 0} true;
  $p24 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6627, 74} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6627, 57} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6627, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.ref(.str.121, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6628, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6631, 34} true;
  assume {:verifier.code 0} true;
  $p28 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6631, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := mpt_HardResetHandler($p28, 1bv32);
  // WARNING: %38 = call i32 @mpt_HardResetHandler(%struct._MPT_ADAPTER* %37, i32 1), !dbg !6838, !verifier.code !6789
  call {:cexpr "tmp___1"} boogie_si_record_bv32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6632, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.bv32($i29, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6632, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i30 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6633, 93} true;
  assume {:verifier.code 0} true;
  $p31 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6633, 99} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6633, 82} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6633, 5} true;
  assume {:verifier.code 0} true;
  call $i34 := printk.ref.ref.ref.bv32(.str.122, $p33, .str.27, 732bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6636, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.bv32(0bv32, 1bv32);
  goto $bb3;
$bb12:
  assume !(($i30 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6640, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
}
const mptctl_hp_hostinfo: ref;
axiom (mptctl_hp_hostinfo == $sub.ref(0, 283946));
procedure  mptctl_hp_hostinfo($i0: bv64, $i1: bv32)
  returns ($r: bv32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: bv1;
  var $i10: bv1;
  var $i9: bv32;
  var $p12: ref;
  var $p13: ref;
  var $i14: bv64;
  var $i15: bv1;
  var $i16: bv32;
  var $p17: ref;
  var $p18: ref;
  var $i19: bv32;
  var $i20: bv32;
  var $i21: bv1;
  var $p22: ref;
  var $i23: bv64;
  var $i24: bv1;
  var $i25: bv32;
  var $p26: ref;
  var $p27: ref;
  var $i28: bv32;
  var $i29: bv32;
  var $i30: bv1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: bv32;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: bv16;
  var $p40: ref;
  var $p41: ref;
  var $i42: bv16;
  var $p43: ref;
  var $p44: ref;
  var $i45: bv16;
  var $p46: ref;
  var $p47: ref;
  var $i48: bv16;
  var $p49: ref;
  var $p50: ref;
  var $i51: bv32;
  var $i52: bv8;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: bv8;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: bv64;
  var $i63: bv1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: bv32;
  var $i69: bv16;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: bv8;
  var $i78: bv32;
  var $i79: bv1;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: bv8;
  var $i86: bv32;
  var $i87: bv32;
  var $i88: bv8;
  var $i89: bv32;
  var $i90: bv32;
  var $i91: bv32;
  var $i92: bv8;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: bv8;
  var $i101: bv32;
  var $i102: bv32;
  var $i103: bv8;
  var $i104: bv32;
  var $i105: bv32;
  var $i106: bv8;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $i116: bv8;
  var $i117: bv32;
  var $i118: bv1;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: bv8;
  var $i125: bv32;
  var $i126: bv32;
  var $i127: bv8;
  var $i128: bv32;
  var $i129: bv32;
  var $i130: bv32;
  var $i131: bv8;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: bv8;
  var $i140: bv32;
  var $i141: bv32;
  var $i142: bv8;
  var $i143: bv32;
  var $i144: bv32;
  var $i145: bv8;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: bv8;
  var $i156: bv32;
  var $i157: bv1;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: bv8;
  var $i164: bv32;
  var $i165: bv32;
  var $i166: bv8;
  var $i167: bv32;
  var $i168: bv32;
  var $i169: bv32;
  var $i170: bv8;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $i178: bv8;
  var $i179: bv32;
  var $i180: bv32;
  var $i181: bv8;
  var $i182: bv32;
  var $i183: bv32;
  var $i184: bv8;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: bv8;
  var $i195: bv32;
  var $i196: bv1;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: bv8;
  var $i203: bv32;
  var $i204: bv32;
  var $i205: bv8;
  var $i206: bv32;
  var $i207: bv32;
  var $i208: bv32;
  var $i209: bv8;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: bv8;
  var $i218: bv32;
  var $i219: bv32;
  var $i220: bv8;
  var $i221: bv32;
  var $i222: bv32;
  var $i223: bv8;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $i243: bv32;
  var $i244: bv1;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: bv8;
  var $i250: bv32;
  var $i251: bv1;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
  var $i257: bv8;
  var $i258: bv32;
  var $i259: bv32;
  var $i260: bv64;
  var $p261: ref;
  var $i262: bv64;
  var $i263: bv1;
  var $i264: bv64;
  var $p265: ref;
  var $p266: ref;
  var $i267: bv32;
  var $i268: bv1;
  var $p269: ref;
  var $p270: ref;
  var $p271: ref;
  var $i272: bv64;
  var $i273: bv1;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $p280: ref;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $p284: ref;
  var $i285: bv8;
  var $i286: bv32;
  var $i287: bv32;
  var $i288: bv64;
  var $i289: bv64;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $i294: bv32;
  var $i295: bv1;
  var $i296: bv1;
  var $i297: bv1;
  var $i298: bv1;
  var $i299: bv1;
  var $i300: bv1;
  var $i301: bv1;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $p305: ref;
  var $p306: ref;
  var $p307: ref;
  var $i308: bv64;
  var $i309: bv32;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $i313: bv8;
  var $i314: bv32;
  var $i315: bv1;
  var $p316: ref;
  var $p317: ref;
  var $i318: bv8;
  var $i319: bv32;
  var $i320: bv1;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $p326: ref;
  var $p327: ref;
  var $p328: ref;
  var $i329: bv64;
  var $i330: bv1;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $p334: ref;
  var $p335: ref;
  var $i336: bv64;
  var $i337: bv1;
  var $i338: bv1;
  var $p339: ref;
  var $p340: ref;
  var $i341: bv64;
  var $i342: bv32;
  var $p343: ref;
  var $p344: ref;
  var $p345: ref;
  var $i346: bv64;
  var $i347: bv32;
  var $p348: ref;
  var $p349: ref;
  var $p350: ref;
  var $i351: bv64;
  var $i352: bv32;
  var $p353: ref;
  var $i354: bv8;
  var $i355: bv32;
  var $i356: bv8;
  var $p357: ref;
  var $p358: ref;
  var $i359: bv64;
  var $i360: bv1;
  var $p361: ref;
  var $p362: ref;
  var $i363: bv32;
  var $i364: bv32;
  var $i365: bv1;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $i369: bv32;
  var $p371: ref;
  var $p372: ref;
  var $i373: bv32;
  var $p374: ref;
  var $p375: ref;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $p379: ref;
  var $p380: ref;
  var $p381: ref;
  var $i382: bv32;
  var $i383: bv32;
  var $i384: bv1;
  var $p385: ref;
  var $p386: ref;
  var $p387: ref;
  var $p388: ref;
  var $p389: ref;
  var $p390: ref;
  var $i391: bv64;
  var $i392: bv1;
  var $p393: ref;
  var $p394: ref;
  var $p395: ref;
  var $p396: ref;
  var $p397: ref;
  var $i398: bv64;
  var $p399: ref;
  var $i400: bv32;
  var $p401: ref;
  var $p402: ref;
  var $p403: ref;
  var $p404: ref;
  var $p405: ref;
  var $p406: ref;
  var $i407: bv8;
  var $i408: bv32;
  var $i409: bv8;
  var $p410: ref;
  var $p411: ref;
  var $p412: ref;
  var $p413: ref;
  var $i414: bv64;
  var $p415: ref;
  var $p416: ref;
  var $p417: ref;
  var $i418: bv8;
  var $i419: bv32;
  var $i420: bv32;
  var $i421: bv1;
  var $p423: ref;
  var $p424: ref;
  var $p425: ref;
  var $i426: bv64;
  var $p427: ref;
  var $p428: ref;
  var $p429: ref;
  var $i430: bv8;
  var $i431: bv32;
  var $i432: bv32;
  var $i433: bv1;
  var $i422: bv64;
  var $p434: ref;
  var $p435: ref;
  var $p436: ref;
  var $i437: bv32;
  var $p438: ref;
  var $p439: ref;
  var $p440: ref;
  var $i441: bv8;
  var $i442: bv32;
  var $i443: bv32;
  var $i444: bv1;
  var $p445: ref;
  var $i446: bv1;
  var $p447: ref;
  var $i448: bv32;
  var $p449: ref;
  var $p450: ref;
  var $p451: ref;
  var $i452: bv32;
  var $p453: ref;
  var $p454: ref;
  var $p455: ref;
  var $p456: ref;
  var $i457: bv8;
  var $i458: bv32;
  var $i459: bv32;
  var $i460: bv1;
  var $p461: ref;
  var $i462: bv32;
  var $p463: ref;
  var $p370: ref;
  var $p464: ref;
  var $p465: ref;
  var $p466: ref;
  var $p467: ref;
  var $p468: ref;
  var $p469: ref;
  var $i470: bv64;
  var $i471: bv1;
  var $p472: ref;
  var $p473: ref;
  var $p474: ref;
  var $i475: bv64;
  var $p476: ref;
  var $p477: ref;
  var $i478: bv64;
  var $i479: bv1;
  var $p480: ref;
  var $p481: ref;
  var $p482: ref;
  var $i483: bv32;
  var $i11: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(100, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %7 = alloca %struct._CONFIG_PAGE_HEADER, align 1, !verifier.code !6789
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11366, metadata !6788), !dbg !11367, !verifier.code !6790
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8279, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8282, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.bv32($i1, 100bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8282, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8284, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 1bv32;
  goto $bb3;
$bb2:
  assume !(($i8 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8285, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.bv32($i1, 112bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8285, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8290, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8290, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8290, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := copy_from_user($p12, $p13, 100bv64);
  // WARNING: %19 = call i64 @copy_from_user(i8* %17, i8* %18, i64 100), !dbg !6855, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8291, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.bv64($i14, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb4:
  assume ($i10 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8287, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i10 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8288, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  $i9 := 0bv32;
  goto $bb3;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8505, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb8:
  assume ($i15 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8292, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := printk.ref.ref.bv32.ref(.str.123, .str.27, 2438bv32, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8295, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb7;
$bb9:
  assume !(($i15 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8299, 42} true;
  assume {:verifier.code 0} true;
  $p17 := $p4;
  $p18 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8299, 46} true;
  assume {:verifier.code 0} true;
  $i19 := $load.bytes.bv32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8299, 12} true;
  assume {:verifier.code 0} true;
  call $i20 := mpt_verify_adapter($i19, $p2);
  // WARNING: %28 = call i32 @mpt_verify_adapter(i32 %27, %struct._MPT_ADAPTER** %3), !dbg !6866, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.bv32($i20, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb11, $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 18} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1bv1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8301, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := printk.ref.ref.bv32.bv32(.str.124, .str.27, 2445bv32, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8303, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 19bv32);
  goto $bb7;
$bb13:
  assume !(($i21 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 37} true;
  assume {:verifier.code 0} true;
  $p22 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.bv64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 41} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.bv64($i23, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8300, 7} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1bv1);
  goto $bb12;
$bb15:
  assume !(($i24 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $load.bytes.bv32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 25} true;
  assume {:verifier.code 0} true;
  $i29 := $and.bv32($i28, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 35} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.bv32($i29, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i30 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8308, 73} true;
  assume {:verifier.code 0} true;
  $p31 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8308, 78} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8308, 62} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8308, 5} true;
  assume {:verifier.code 0} true;
  call $i34 := printk.ref.ref(.str.125, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8309, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i30 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8312, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8312, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8312, 15} true;
  assume {:verifier.code 0} true;
  $p37 := $load.bytes.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8313, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8313, 23} true;
  assume {:verifier.code 0} true;
  $i39 := $load.bytes.bv16($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8313, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8313, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8314, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p37, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8314, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $load.bytes.bv16($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8314, 8} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8314, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p43, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8315, 29} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p37, 66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8315, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $load.bytes.bv16($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8315, 8} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8315, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p46, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8316, 33} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p37, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8316, 33} true;
  assume {:verifier.code 0} true;
  $i48 := $load.bytes.bv16($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8316, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8316, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8317, 27} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p37, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8317, 27} true;
  assume {:verifier.code 0} true;
  $i51 := $load.bytes.bv32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8317, 16} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.bv32.bv8($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8317, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8317, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 21} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p37, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 21} true;
  assume {:verifier.code 0} true;
  $p55 := $load.bytes.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 27} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 27} true;
  assume {:verifier.code 0} true;
  $i57 := $load.bytes.bv8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8318, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 23} true;
  assume {:verifier.code 0} true;
  $p59 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 28} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 28} true;
  assume {:verifier.code 0} true;
  $p61 := $load.bytes.ref($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.bv64($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.bv64($i62, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8319, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i63 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 35} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 35} true;
  assume {:verifier.code 0} true;
  $p66 := $load.bytes.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 40} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 40} true;
  assume {:verifier.code 0} true;
  $i68 := $load.bytes.bv32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 20} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.bv32.bv16($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 10} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p4, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8320, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8321, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i63 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8322, 10} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p4, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8322, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p71, $sub.bv16(0bv16, 1bv16));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 39} true;
  assume {:verifier.code 0} true;
  $p72 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 44} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 1284);
  $p74 := $add.ref($add.ref($p72, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 60} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 67} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 67} true;
  assume {:verifier.code 0} true;
  $i77 := $load.bytes.bv8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.bv8.bv32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 73} true;
  assume {:verifier.code 0} true;
  $i79 := $ugt.bv32($i78, 9bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i79 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 117} true;
  assume {:verifier.code 0} true;
  $p80 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 122} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p80, 1284);
  $p82 := $add.ref($add.ref($p80, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 138} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 145} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 145} true;
  assume {:verifier.code 0} true;
  $i85 := $load.bytes.bv8($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 102} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.bv8.bv32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 151} true;
  assume {:verifier.code 0} true;
  $i87 := $udiv.bv32($i86, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 96} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.bv32.bv8($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 80} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.bv8.bv32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 159} true;
  assume {:verifier.code 0} true;
  $i90 := $add.bv32($i89, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  $i91 := $i90;
  goto $bb25;
$bb24:
  assume !(($i79 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  $i91 := 48bv32;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.bv32.bv8($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 8} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p4, 32);
  $p94 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8324, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p94, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 61} true;
  assume {:verifier.code 0} true;
  $p95 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 66} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 1284);
  $p97 := $add.ref($add.ref($p95, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 82} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 89} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 89} true;
  assume {:verifier.code 0} true;
  $i100 := $load.bytes.bv8($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 46} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.bv8.bv32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 95} true;
  assume {:verifier.code 0} true;
  $i102 := $urem.bv32($i101, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 40} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.bv32.bv8($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 24} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.bv8.bv32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 103} true;
  assume {:verifier.code 0} true;
  $i105 := $add.bv32($i104, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 24} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.bv32.bv8($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 8} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p4, 32);
  $p108 := $add.ref($add.ref($p4, 32), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8325, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p108, $i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8326, 8} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p4, 32);
  $p110 := $add.ref($add.ref($p4, 32), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8326, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p110, 46bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 39} true;
  assume {:verifier.code 0} true;
  $p111 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 44} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 1284);
  $p113 := $add.ref($add.ref($p111, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 60} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 67} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p114, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 67} true;
  assume {:verifier.code 0} true;
  $i116 := $load.bytes.bv8($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.bv8.bv32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 73} true;
  assume {:verifier.code 0} true;
  $i118 := $ugt.bv32($i117, 9bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i118 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 117} true;
  assume {:verifier.code 0} true;
  $p119 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 122} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p119, 1284);
  $p121 := $add.ref($add.ref($p119, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 138} true;
  assume {:verifier.code 0} true;
  $p122 := $bitcast.ref.ref($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 145} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p122, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 145} true;
  assume {:verifier.code 0} true;
  $i124 := $load.bytes.bv8($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 102} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.bv8.bv32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 151} true;
  assume {:verifier.code 0} true;
  $i126 := $udiv.bv32($i125, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 96} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.bv32.bv8($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 80} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.bv8.bv32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 159} true;
  assume {:verifier.code 0} true;
  $i129 := $add.bv32($i128, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  $i130 := $i129;
  goto $bb28;
$bb27:
  assume !(($i118 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  $i130 := 48bv32;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 24} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.bv32.bv8($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 8} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p4, 32);
  $p133 := $add.ref($add.ref($p4, 32), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8327, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p133, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 61} true;
  assume {:verifier.code 0} true;
  $p134 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 66} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p134, 1284);
  $p136 := $add.ref($add.ref($p134, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 82} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 89} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 89} true;
  assume {:verifier.code 0} true;
  $i139 := $load.bytes.bv8($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 46} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.bv8.bv32($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 95} true;
  assume {:verifier.code 0} true;
  $i141 := $urem.bv32($i140, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 40} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.bv32.bv8($i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 24} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.bv8.bv32($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 103} true;
  assume {:verifier.code 0} true;
  $i144 := $add.bv32($i143, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 24} true;
  assume {:verifier.code 0} true;
  $i145 := $trunc.bv32.bv8($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 8} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p4, 32);
  $p147 := $add.ref($add.ref($p4, 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8328, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p147, $i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8329, 8} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p4, 32);
  $p149 := $add.ref($add.ref($p4, 32), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8329, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p149, 46bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 39} true;
  assume {:verifier.code 0} true;
  $p150 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 44} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p150, 1284);
  $p152 := $add.ref($add.ref($p150, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 60} true;
  assume {:verifier.code 0} true;
  $p153 := $bitcast.ref.ref($p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 67} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p153, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 67} true;
  assume {:verifier.code 0} true;
  $i155 := $load.bytes.bv8($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  $i156 := $zext.bv8.bv32($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 72} true;
  assume {:verifier.code 0} true;
  $i157 := $ugt.bv32($i156, 9bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i157} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i157 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 116} true;
  assume {:verifier.code 0} true;
  $p158 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 121} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p158, 1284);
  $p160 := $add.ref($add.ref($p158, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 137} true;
  assume {:verifier.code 0} true;
  $p161 := $bitcast.ref.ref($p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 144} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p161, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 144} true;
  assume {:verifier.code 0} true;
  $i163 := $load.bytes.bv8($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 101} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.bv8.bv32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 149} true;
  assume {:verifier.code 0} true;
  $i165 := $udiv.bv32($i164, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 95} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.bv32.bv8($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 79} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.bv8.bv32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 157} true;
  assume {:verifier.code 0} true;
  $i168 := $add.bv32($i167, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  $i169 := $i168;
  goto $bb31;
$bb30:
  assume !(($i157 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  $i169 := 48bv32;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 24} true;
  assume {:verifier.code 0} true;
  $i170 := $trunc.bv32.bv8($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 8} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p4, 32);
  $p172 := $add.ref($add.ref($p4, 32), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8330, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p172, $i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 61} true;
  assume {:verifier.code 0} true;
  $p173 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 66} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p173, 1284);
  $p175 := $add.ref($add.ref($p173, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 82} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 89} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p176, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 89} true;
  assume {:verifier.code 0} true;
  $i178 := $load.bytes.bv8($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 46} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.bv8.bv32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 94} true;
  assume {:verifier.code 0} true;
  $i180 := $urem.bv32($i179, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 40} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.bv32.bv8($i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 24} true;
  assume {:verifier.code 0} true;
  $i182 := $zext.bv8.bv32($i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 102} true;
  assume {:verifier.code 0} true;
  $i183 := $add.bv32($i182, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 24} true;
  assume {:verifier.code 0} true;
  $i184 := $trunc.bv32.bv8($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 8} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p4, 32);
  $p186 := $add.ref($add.ref($p4, 32), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8331, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p186, $i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8332, 8} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p4, 32);
  $p188 := $add.ref($add.ref($p4, 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8332, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p188, 46bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 39} true;
  assume {:verifier.code 0} true;
  $p189 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 44} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p189, 1284);
  $p191 := $add.ref($add.ref($p189, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 60} true;
  assume {:verifier.code 0} true;
  $p192 := $bitcast.ref.ref($p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 67} true;
  assume {:verifier.code 0} true;
  $p193 := $p192;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 67} true;
  assume {:verifier.code 0} true;
  $i194 := $load.bytes.bv8($M.0, $p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.bv8.bv32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 71} true;
  assume {:verifier.code 0} true;
  $i196 := $ugt.bv32($i195, 9bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i196} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i196 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 115} true;
  assume {:verifier.code 0} true;
  $p197 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 120} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p197, 1284);
  $p199 := $add.ref($add.ref($p197, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 136} true;
  assume {:verifier.code 0} true;
  $p200 := $bitcast.ref.ref($p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 143} true;
  assume {:verifier.code 0} true;
  $p201 := $p200;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 143} true;
  assume {:verifier.code 0} true;
  $i202 := $load.bytes.bv8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 100} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.bv8.bv32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 147} true;
  assume {:verifier.code 0} true;
  $i204 := $udiv.bv32($i203, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 94} true;
  assume {:verifier.code 0} true;
  $i205 := $trunc.bv32.bv8($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 78} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.bv8.bv32($i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 155} true;
  assume {:verifier.code 0} true;
  $i207 := $add.bv32($i206, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  $i208 := $i207;
  goto $bb34;
$bb33:
  assume !(($i196 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  $i208 := 48bv32;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 24} true;
  assume {:verifier.code 0} true;
  $i209 := $trunc.bv32.bv8($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 8} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p4, 32);
  $p211 := $add.ref($add.ref($p4, 32), 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8333, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p211, $i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 62} true;
  assume {:verifier.code 0} true;
  $p212 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 67} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p212, 1284);
  $p214 := $add.ref($add.ref($p212, 1284), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 83} true;
  assume {:verifier.code 0} true;
  $p215 := $bitcast.ref.ref($p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 90} true;
  assume {:verifier.code 0} true;
  $p216 := $p215;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 90} true;
  assume {:verifier.code 0} true;
  $i217 := $load.bytes.bv8($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 47} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.bv8.bv32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 94} true;
  assume {:verifier.code 0} true;
  $i219 := $urem.bv32($i218, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 41} true;
  assume {:verifier.code 0} true;
  $i220 := $trunc.bv32.bv8($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 25} true;
  assume {:verifier.code 0} true;
  $i221 := $zext.bv8.bv32($i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 102} true;
  assume {:verifier.code 0} true;
  $i222 := $add.bv32($i221, 48bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 25} true;
  assume {:verifier.code 0} true;
  $i223 := $trunc.bv32.bv8($i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 8} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p4, 32);
  $p225 := $add.ref($add.ref($p4, 32), 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8334, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p225, $i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8335, 8} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p4, 32);
  $p227 := $add.ref($add.ref($p4, 32), 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8335, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p227, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8336, 7} true;
  assume {:verifier.code 0} true;
  $p228 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8336, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p228, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8337, 7} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8337, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p229, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8338, 7} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p6, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8338, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p230, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8339, 7} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8339, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p231, 9bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8340, 7} true;
  assume {:verifier.code 0} true;
  $p232 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8340, 14} true;
  assume {:verifier.code 0} true;
  $p233 := $bitcast.ref.ref($p232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8340, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p233, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8341, 7} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8341, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p234, $sub.bv64(0bv64, 1bv64));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8342, 7} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8342, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p235, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8343, 7} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p5, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8343, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p236, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8344, 7} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p5, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8344, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p237, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8345, 7} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8345, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p238, 10bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8346, 27} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8346, 11} true;
  assume {:verifier.code 0} true;
  $p240 := $bitcast.ref.ref($p239);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8346, 3} true;
  assume {:verifier.code 0} true;
  call $p241 := strncpy($p240, .str.126, 24bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8347, 24} true;
  assume {:verifier.code 0} true;
  $p242 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8347, 13} true;
  assume {:verifier.code 0} true;
  call $i243 := mpt_config($p242, $p5);
  // WARNING: %273 = call i32 @mpt_config(%struct._MPT_ADAPTER* %272, %struct._x_config_parms* %6), !dbg !7093, !verifier.code !6789
  call {:cexpr "tmp___3"} boogie_si_record_bv32($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8348, 15} true;
  assume {:verifier.code 0} true;
  $i244 := $eq.bv32($i243, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i244} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i244 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 29} true;
  assume {:verifier.code 0} true;
  $p245 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 36} true;
  assume {:verifier.code 0} true;
  $p246 := $bitcast.ref.ref($p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 36} true;
  assume {:verifier.code 0} true;
  $p247 := $load.bytes.ref($M.0, $p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 42} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p247, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 42} true;
  assume {:verifier.code 0} true;
  $i249 := $load.bytes.bv8($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $zext.bv8.bv32($i249);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 53} true;
  assume {:verifier.code 0} true;
  $i251 := $ne.bv32($i250, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8349, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i244 == 1bv1));
  assume {:verifier.code 0} true;
  $p292 := $0.ref;
  goto $bb49;
$bb37:
  assume ($i251 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8350, 11} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p5, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8350, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p252, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 38} true;
  assume {:verifier.code 0} true;
  $p253 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 43} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p253, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 43} true;
  assume {:verifier.code 0} true;
  $p255 := $load.bytes.ref($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 71} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 71} true;
  assume {:verifier.code 0} true;
  $i257 := $load.bytes.bv8($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 61} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.bv8.bv32($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 82} true;
  assume {:verifier.code 0} true;
  $i259 := $mul.bv32($i258, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 51} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.bv32.bv64($i259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8351, 17} true;
  assume {:verifier.code 0} true;
  call $p261 := pci_alloc_consistent($p255, $i260, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8354, 11} true;
  assume {:verifier.code 0} true;
  $i262 := $p2i.ref.bv64($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8354, 32} true;
  assume {:verifier.code 0} true;
  $i263 := $ne.bv64($i262, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8354, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb39, $bb40;
$bb38:
  assume !(($i251 == 1bv1));
  assume {:verifier.code 0} true;
  $p291 := $0.ref;
  goto $bb48;
$bb39:
  assume ($i263 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8355, 24} true;
  assume {:verifier.code 0} true;
  $i264 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8355, 13} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8355, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p265, $i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8356, 30} true;
  assume {:verifier.code 0} true;
  $p266 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8356, 19} true;
  assume {:verifier.code 0} true;
  call $i267 := mpt_config($p266, $p5);
  // WARNING: %300 = call i32 @mpt_config(%struct._MPT_ADAPTER* %299, %struct._x_config_parms* %6), !dbg !7128, !verifier.code !6789
  call {:cexpr "tmp___2"} boogie_si_record_bv32($i267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8357, 21} true;
  assume {:verifier.code 0} true;
  $i268 := $eq.bv32($i267, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8357, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i268} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i263 == 1bv1));
  assume {:verifier.code 0} true;
  $p290 := $p261;
  goto $bb47;
$bb41:
  assume ($i268 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8358, 19} true;
  assume {:verifier.code 0} true;
  $p269 := $bitcast.ref.ref($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8359, 54} true;
  assume {:verifier.code 0} true;
  $p270 := $add.ref($p269, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8359, 28} true;
  assume {:verifier.code 0} true;
  $p271 := $bitcast.ref.ref($p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8359, 21} true;
  assume {:verifier.code 0} true;
  call $i272 := strlen($p271);
  // WARNING: %306 = call i64 @strlen(i8* %305), !dbg !7140, !verifier.code !6789
  call {:cexpr "tmp___1"} boogie_si_record_bv64($i272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8360, 23} true;
  assume {:verifier.code 0} true;
  $i273 := $ugt.bv64($i272, 1bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8360, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb43, $bb44;
$bb42:
  assume !(($i268 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb43:
  assume ($i273 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8361, 37} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8361, 21} true;
  assume {:verifier.code 0} true;
  $p275 := $bitcast.ref.ref($p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8361, 79} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p269, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8361, 53} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8361, 13} true;
  assume {:verifier.code 0} true;
  call $p278 := strncpy($p275, $p277, 24bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8363, 18} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p4, 48);
  $p280 := $add.ref($add.ref($p4, 48), 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8363, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p280, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8364, 11} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i273 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8367, 9} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 29} true;
  assume {:verifier.code 0} true;
  $p281 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 34} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p281, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 34} true;
  assume {:verifier.code 0} true;
  $p283 := $load.bytes.ref($M.0, $p282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 62} true;
  assume {:verifier.code 0} true;
  $p284 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 62} true;
  assume {:verifier.code 0} true;
  $i285 := $load.bytes.bv8($M.0, $p284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 52} true;
  assume {:verifier.code 0} true;
  $i286 := $zext.bv8.bv32($i285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 73} true;
  assume {:verifier.code 0} true;
  $i287 := $mul.bv32($i286, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 42} true;
  assume {:verifier.code 0} true;
  $i288 := $sext.bv32.bv64($i287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8371, 29} true;
  assume {:verifier.code 0} true;
  $i289 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8370, 9} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p283, $i288, $p261, $i289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8373, 7} true;
  assume {:verifier.code 0} true;
  $p290 := $0.ref;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8376, 5} true;
  assume {:verifier.code 0} true;
  $p291 := $p290;
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8379, 3} true;
  assume {:verifier.code 0} true;
  $p292 := $p291;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8382, 29} true;
  assume {:verifier.code 0} true;
  $p293 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8382, 13} true;
  assume {:verifier.code 0} true;
  call $i294 := mpt_GetIocState($p293, 1bv32);
  // WARNING: %336 = call i32 @mpt_GetIocState(%struct._MPT_ADAPTER* %335, i32 1), !dbg !7168, !verifier.code !6789
  call {:cexpr "tmp___4"} boogie_si_record_bv32($i294);
  // WARNING: call void @llvm.dbg.value(metadata i32 %336, i64 0, metadata !11744, metadata !6788), !dbg !11745, !verifier.code !6790
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:verifier.code 0} true;
  $i295 := $slt.bv32($i294, 536870912bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i295} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i295 == 1bv1);
  assume {:verifier.code 0} true;
  $i299 := $slt.bv32($i294, 268435456bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i299} true;
  goto $bb60, $bb61;
$bb52:
  assume !(($i295 == 1bv1));
  assume {:verifier.code 0} true;
  $i296 := $slt.bv32($i294, 1073741824bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i296} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i296 == 1bv1);
  assume {:verifier.code 0} true;
  $i298 := $eq.bv32($i294, 536870912bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i298} true;
  goto $bb58, $bb59;
$bb54:
  assume !(($i296 == 1bv1));
  assume {:verifier.code 0} true;
  $i297 := $eq.bv32($i294, 1073741824bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i297} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i297 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8389, 8} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8389, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p303, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb56:
  assume {:verifier.code 0} true;
  assume !(($i297 == 1bv1));
  goto $bb57;
$bb57:
  assume {:verifier.code 0} true;
  goto $bb68;
$bb58:
  assume ($i298 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8386, 8} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8386, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p302, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb59:
  assume {:verifier.code 0} true;
  assume !(($i298 == 1bv1));
  goto $bb57;
$bb60:
  assume ($i299 == 1bv1);
  assume {:verifier.code 0} true;
  $i301 := $eq.bv32($i294, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i301} true;
  goto $bb65, $bb66;
$bb61:
  assume !(($i299 == 1bv1));
  assume {:verifier.code 0} true;
  $i300 := $eq.bv32($i294, 268435456bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb62, $bb64;
$bb62:
  assume {:verifier.code 0} true;
  assume ($i300 == 1bv1);
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb64:
  assume {:verifier.code 0} true;
  assume !(($i300 == 1bv1));
  goto $bb57;
$bb65:
  assume ($i301 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb66:
  assume {:verifier.code 0} true;
  assume !(($i301 == 1bv1));
  goto $bb57;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8398, 35} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p37, 1584);
  $p306 := $add.ref($p37, 1584);
  $p307 := $add.ref($p37, 1584);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8398, 47} true;
  assume {:verifier.code 0} true;
  $i308 := $load.bytes.bv64($M.0, $p307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8398, 23} true;
  assume {:verifier.code 0} true;
  $i309 := $trunc.bv64.bv32($i308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8398, 8} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p4, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8398, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p310, $i309);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 22} true;
  assume {:verifier.code 0} true;
  $p311 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 27} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p311, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 27} true;
  assume {:verifier.code 0} true;
  $i313 := $load.bytes.bv8($M.0, $p312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.bv8.bv32($i313);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 36} true;
  assume {:verifier.code 0} true;
  $i315 := $eq.bv32($i314, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i315} true;
  goto $bb69, $bb71;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8394, 8} true;
  assume {:verifier.code 0} true;
  $p304 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8394, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p304, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8395, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 42} true;
  assume {:verifier.code 0} true;
  assume ($i315 == 1bv1);
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8400, 10} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8400, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p321, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8401, 3} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb71:
  assume !(($i315 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 60} true;
  assume {:verifier.code 0} true;
  $p316 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 65} true;
  assume {:verifier.code 0} true;
  $p317 := $add.ref($p316, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 65} true;
  assume {:verifier.code 0} true;
  $i318 := $load.bytes.bv8($M.0, $p317);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 45} true;
  assume {:verifier.code 0} true;
  $i319 := $zext.bv8.bv32($i318);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 74} true;
  assume {:verifier.code 0} true;
  $i320 := $eq.bv32($i319, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i320} true;
  goto $bb72, $bb73;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8399, 7} true;
  assume {:verifier.code 0} true;
  assume ($i320 == 1bv1);
  goto $bb70;
$bb73:
  assume !(($i320 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8402, 10} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8402, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p322, 3bv32);
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8404, 8} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8404, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p323, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8405, 8} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p4, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8405, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p324, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8406, 8} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p4, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8406, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p325, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 23} true;
  assume {:verifier.code 0} true;
  $p326 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 28} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p326, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 28} true;
  assume {:verifier.code 0} true;
  $p328 := $load.bytes.ref($M.0, $p327);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $p2i.ref.bv64($p328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 31} true;
  assume {:verifier.code 0} true;
  $i330 := $ne.bv64($i329, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i330} true;
  goto $bb75, $bb76;
$bb75:
  assume ($i330 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8408, 26} true;
  assume {:verifier.code 0} true;
  $p331 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8408, 31} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($p331, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8408, 31} true;
  assume {:verifier.code 0} true;
  $p333 := $load.bytes.ref($M.0, $p332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8408, 15} true;
  assume {:verifier.code 0} true;
  call $p334 := shost_priv($p333);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8409, 10} true;
  assume {:verifier.code 0} true;
  $p335 := $bitcast.ref.ref($p334);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 9} true;
  assume {:verifier.code 0} true;
  $i336 := $p2i.ref.bv64($p335);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 28} true;
  assume {:verifier.code 0} true;
  $i337 := $ne.bv64($i336, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 68} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i337} true;
  goto $bb77, $bb78;
$bb76:
  assume !(($i330 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb77:
  assume ($i337 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 79} true;
  assume {:verifier.code 0} true;
  $i338 := $eq.bv32($i9, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i338} true;
  goto $bb80, $bb81;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 68} true;
  assume {:verifier.code 0} true;
  assume !(($i337 == 1bv1));
  goto $bb79;
$bb79:
  assume {:verifier.code 0} true;
  goto $bb82;
$bb80:
  assume ($i338 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 41} true;
  assume {:verifier.code 0} true;
  $p339 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 46} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p339, 5240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 46} true;
  assume {:verifier.code 0} true;
  $i341 := $load.bytes.bv64($M.0, $p340);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 26} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.bv64.bv32($i341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 12} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8411, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p343, $i342);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 41} true;
  assume {:verifier.code 0} true;
  $p344 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 46} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p344, 5248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 46} true;
  assume {:verifier.code 0} true;
  $i346 := $load.bytes.bv64($M.0, $p345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 26} true;
  assume {:verifier.code 0} true;
  $i347 := $trunc.bv64.bv32($i346);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 12} true;
  assume {:verifier.code 0} true;
  $p348 := $add.ref($p4, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8412, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p348, $i347);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 38} true;
  assume {:verifier.code 0} true;
  $p349 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 43} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p349, 5256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 43} true;
  assume {:verifier.code 0} true;
  $i351 := $load.bytes.bv64($M.0, $p350);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 23} true;
  assume {:verifier.code 0} true;
  $i352 := $trunc.bv64.bv32($i351);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 12} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p4, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8413, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p353, $i352);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8414, 5} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8410, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i338 == 1bv1));
  goto $bb79;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8417, 3} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8420, 32} true;
  assume {:verifier.code 0} true;
  $i354 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8420, 26} true;
  assume {:verifier.code 0} true;
  $i355 := $zext.bv8.bv32($i354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8420, 26} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.bv32.bv8($i355);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8420, 43} true;
  assume {:verifier.code 0} true;
  $p357 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8420, 8} true;
  assume {:verifier.code 0} true;
  call $p358 := mpt_get_msg_frame($i356, $p357);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  $i359 := $p2i.ref.bv64($p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8421, 26} true;
  assume {:verifier.code 0} true;
  $i360 := $eq.bv64($i359, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i360} true;
  goto $bb84, $bb85;
$bb84:
  assume ($i360 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 10} true;
  assume {:verifier.code 0} true;
  $p361 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 15} true;
  assume {:verifier.code 0} true;
  $p362 := $add.ref($p361, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 15} true;
  assume {:verifier.code 0} true;
  $i363 := $load.bytes.bv32($M.0, $p362);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 27} true;
  assume {:verifier.code 0} true;
  $i364 := $and.bv32($i363, 128bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 34} true;
  assume {:verifier.code 0} true;
  $i365 := $ne.bv32($i364, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8422, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb86, $bb87;
$bb85:
  assume !(($i360 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb86:
  assume ($i365 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8423, 74} true;
  assume {:verifier.code 0} true;
  $p366 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8423, 79} true;
  assume {:verifier.code 0} true;
  $p367 := $add.ref($p366, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8423, 63} true;
  assume {:verifier.code 0} true;
  $p368 := $bitcast.ref.ref($p367);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8423, 7} true;
  assume {:verifier.code 0} true;
  call $i369 := printk.ref.ref.ref(.str.127, $p368, .str.128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8425, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i365 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8428, 5} true;
  assume {:verifier.code 0} true;
  $p370 := $p292;
  goto $bb89;
$bb89:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8487, 3} true;
  assume {:verifier.code 0} true;
  $p464 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8487, 8} true;
  assume {:verifier.code 0} true;
  $p465 := $add.ref($p464, 4232);
  $p466 := $add.ref($add.ref($p464, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8487, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p466, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8488, 3} true;
  assume {:verifier.code 0} true;
  $p467 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8488, 8} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($p467, 4232);
  $p469 := $add.ref($add.ref($p467, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8488, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p469, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8489, 7} true;
  assume {:verifier.code 0} true;
  $i470 := $p2i.ref.bv64($p370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8489, 28} true;
  assume {:verifier.code 0} true;
  $i471 := $ne.bv64($i470, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8489, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i471} true;
  goto $bb113, $bb114;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8432, 20} true;
  assume {:verifier.code 0} true;
  $p371 := $bitcast.ref.ref($p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8433, 32} true;
  assume {:verifier.code 0} true;
  $p372 := $add.ref($p371, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8433, 32} true;
  assume {:verifier.code 0} true;
  $i373 := $load.bytes.bv32($M.0, $p372);
  // WARNING: %430 = load i32, i32* %429, align 4, !dbg !7282, !verifier.code !6789
  call {:cexpr "msgcontext"} boogie_si_record_bv32($i373);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8434, 3} true;
  assume {:verifier.code 0} true;
  $p374 := $bitcast.ref.ref($p371);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8434, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.bv8($M.0, $p374, 0bv8, $bv2int.64(40bv64), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8435, 19} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($p371, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8435, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p375, $i373);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8436, 19} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p371, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8436, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p376, 23bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8437, 19} true;
  assume {:verifier.code 0} true;
  $p377 := $p371;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8437, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p377, 3bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8438, 19} true;
  assume {:verifier.code 0} true;
  $p378 := $add.ref($p371, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8438, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p378, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8439, 19} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($p371, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8439, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p379, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8440, 19} true;
  assume {:verifier.code 0} true;
  $p380 := $add.ref($p371, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8440, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv16($M.0, $p380, 4bv16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8441, 19} true;
  assume {:verifier.code 0} true;
  $p381 := $add.ref($p37, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8441, 19} true;
  assume {:verifier.code 0} true;
  $i382 := $load.bytes.bv32($M.0, $p381);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8441, 25} true;
  assume {:verifier.code 0} true;
  $i383 := $and.bv32($i382, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8441, 25} true;
  assume {:verifier.code 0} true;
  $i384 := $ne.bv32($i383, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8441, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i384} true;
  goto $bb91, $bb92;
$bb91:
  assume ($i384 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8442, 21} true;
  assume {:verifier.code 0} true;
  $p385 := $add.ref($p371, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8442, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p385, $sub.bv8(0bv8, 78bv8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8443, 3} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i384 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8444, 21} true;
  assume {:verifier.code 0} true;
  $p386 := $add.ref($p371, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8444, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p386, $sub.bv8(0bv8, 80bv8));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8446, 34} true;
  assume {:verifier.code 0} true;
  $p387 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8446, 39} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p387, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8446, 39} true;
  assume {:verifier.code 0} true;
  $p389 := $load.bytes.ref($M.0, $p388);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8446, 13} true;
  assume {:verifier.code 0} true;
  call $p390 := pci_alloc_consistent($p389, 4bv64, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8448, 7} true;
  assume {:verifier.code 0} true;
  $i391 := $p2i.ref.bv64($p390);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8448, 28} true;
  assume {:verifier.code 0} true;
  $i392 := $eq.bv64($i391, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8448, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i392} true;
  goto $bb94, $bb95;
$bb94:
  assume ($i392 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8449, 5} true;
  assume {:verifier.code 0} true;
  $p370 := $p390;
  goto $bb89;
$bb95:
  assume !(($i392 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 6} true;
  assume {:verifier.code 0} true;
  $p393 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 11} true;
  assume {:verifier.code 0} true;
  $p394 := $add.ref($p393, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 11} true;
  assume {:verifier.code 0} true;
  $p395 := $load.bytes.ref($M.0, $p394);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 48} true;
  assume {:verifier.code 0} true;
  $p396 := $add.ref($p371, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 21} true;
  assume {:verifier.code 0} true;
  $p397 := $bitcast.ref.ref($p396);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8453, 67} true;
  assume {:verifier.code 0} true;
  $i398 := $load.bytes.bv64($M.0, $p3);
  call devirtbounce($p395, $p397, $sub.bv32(0bv32, 788529148bv32), $i398);
  // WARNING: call void @devirtbounce(void (i8*, i32, i64)* %458, i8* %460, i32 -788529148, i64 %461)
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8455, 49} true;
  assume {:verifier.code 0} true;
  $p399 := $add.ref($p371, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8455, 49} true;
  assume {:verifier.code 0} true;
  $i400 := $load.bytes.bv32($M.0, $p399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8455, 3} true;
  assume {:verifier.code 0} true;
  $p401 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8455, 8} true;
  assume {:verifier.code 0} true;
  $p402 := $add.ref($p401, 4232);
  $p403 := $add.ref($add.ref($p401, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8455, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p403, $i400);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8456, 3} true;
  assume {:verifier.code 0} true;
  $p404 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8456, 8} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($p404, 4232);
  $p406 := $add.ref($add.ref($p404, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8456, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p406, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8457, 27} true;
  assume {:verifier.code 0} true;
  $i407 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8457, 21} true;
  assume {:verifier.code 0} true;
  $i408 := $zext.bv8.bv32($i407);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8457, 21} true;
  assume {:verifier.code 0} true;
  $i409 := $trunc.bv32.bv8($i408);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8457, 38} true;
  assume {:verifier.code 0} true;
  $p410 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8457, 3} true;
  assume {:verifier.code 0} true;
  call mpt_put_msg_frame($i409, $p410, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 44} true;
  assume {:verifier.code 0} true;
  $p411 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 49} true;
  assume {:verifier.code 0} true;
  $p412 := $add.ref($p411, 4232);
  $p413 := $add.ref($add.ref($p411, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 14} true;
  assume {:verifier.code 0} true;
  call $i414 := wait_for_completion_timeout($p413, 2500bv64);
  // WARNING: %477 = call i64 @wait_for_completion_timeout(%struct.completion* %476, i64 2500), !dbg !7340, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i414);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 14} true;
  assume {:verifier.code 0} true;
  $p415 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 19} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($p415, 4232);
  $p417 := $add.ref($add.ref($p415, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 30} true;
  assume {:verifier.code 0} true;
  $i418 := $load.bytes.bv8($M.0, $p417);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 8} true;
  assume {:verifier.code 0} true;
  $i419 := $zext.bv8.bv32($i418);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 37} true;
  assume {:verifier.code 0} true;
  $i420 := $and.bv32($i419, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 42} true;
  assume {:verifier.code 0} true;
  $i421 := $eq.bv32($i420, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i421} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i421 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  $i422 := $i414;
  goto $bb100;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i421 == 1bv1));
  goto $bb99;
$bb99:
  assume {:verifier.code 0} true;
  goto $bb109;
$bb100:
  assume {:verifier.code 0} true;
  // WARNING: %498 = phi i64 [ %477, %.lr.ph ], [ %489, %485 ], !verifier.code !6789
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8462, 63} true;
  assume {:verifier.code 0} true;
  $p434 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8462, 68} true;
  assume {:verifier.code 0} true;
  $p435 := $add.ref($p434, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8462, 52} true;
  assume {:verifier.code 0} true;
  $p436 := $bitcast.ref.ref($p435);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8462, 5} true;
  assume {:verifier.code 0} true;
  call $i437 := printk.ref.ref.ref(.str.69, $p436, .str.128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 16} true;
  assume {:verifier.code 0} true;
  $p438 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 21} true;
  assume {:verifier.code 0} true;
  $p439 := $add.ref($p438, 4232);
  $p440 := $add.ref($add.ref($p438, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 32} true;
  assume {:verifier.code 0} true;
  $i441 := $load.bytes.bv8($M.0, $p440);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 10} true;
  assume {:verifier.code 0} true;
  $i442 := $zext.bv8.bv32($i441);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 39} true;
  assume {:verifier.code 0} true;
  $i443 := $and.bv32($i442, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 44} true;
  assume {:verifier.code 0} true;
  $i444 := $ne.bv32($i443, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8463, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i444} true;
  goto $bb104, $bb105;
$bb101:
  assume !(($i446 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 44} true;
  assume {:verifier.code 0} true;
  $p423 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 49} true;
  assume {:verifier.code 0} true;
  $p424 := $add.ref($p423, 4232);
  $p425 := $add.ref($add.ref($p423, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8459, 14} true;
  assume {:verifier.code 0} true;
  call $i426 := wait_for_completion_timeout($p425, 2500bv64);
  // WARNING: %489 = call i64 @wait_for_completion_timeout(%struct.completion* %488, i64 2500), !dbg !7340, !verifier.code !6789
  call {:cexpr "timeleft"} boogie_si_record_bv64($i426);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 14} true;
  assume {:verifier.code 0} true;
  $p427 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 19} true;
  assume {:verifier.code 0} true;
  $p428 := $add.ref($p427, 4232);
  $p429 := $add.ref($add.ref($p427, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 30} true;
  assume {:verifier.code 0} true;
  $i430 := $load.bytes.bv8($M.0, $p429);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 8} true;
  assume {:verifier.code 0} true;
  $i431 := $zext.bv8.bv32($i430);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 37} true;
  assume {:verifier.code 0} true;
  $i432 := $and.bv32($i431, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 42} true;
  assume {:verifier.code 0} true;
  $i433 := $eq.bv32($i432, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  $i422 := $i426;
  assume {:branchcond $i433} true;
  goto $bb102, $bb103;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  assume ($i433 == 1bv1);
  goto $bb100;
$bb103:
  assume !(($i433 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8460, 7} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb104:
  assume ($i444 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8464, 26} true;
  assume {:verifier.code 0} true;
  $p445 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8464, 7} true;
  assume {:verifier.code 0} true;
  call mpt_free_msg_frame($p445, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8465, 7} true;
  assume {:verifier.code 0} true;
  $p370 := $p390;
  goto $bb89;
$bb105:
  assume !(($i444 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb106;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8469, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $eq.bv64($i422, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8469, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i446} true;
  goto $bb107, $bb101;
$bb107:
  assume ($i446 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8470, 33} true;
  assume {:verifier.code 0} true;
  $p447 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8470, 17} true;
  assume {:verifier.code 0} true;
  call $i448 := mpt_GetIocState($p447, 0bv32);
  // WARNING: %517 = call i32 @mpt_GetIocState(%struct._MPT_ADAPTER* %516, i32 0), !dbg !7373, !verifier.code !6789
  call {:cexpr "tmp___7"} boogie_si_record_bv32($i448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8472, 25} true;
  assume {:verifier.code 0} true;
  $p449 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8472, 30} true;
  assume {:verifier.code 0} true;
  $p450 := $add.ref($p449, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8472, 14} true;
  assume {:verifier.code 0} true;
  $p451 := $bitcast.ref.ref($p450);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8471, 7} true;
  assume {:verifier.code 0} true;
  call $i452 := printk.ref.ref.bv32(.str.129, $p451, $i448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8473, 30} true;
  assume {:verifier.code 0} true;
  $p453 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8473, 7} true;
  assume {:verifier.code 0} true;
  call mptctl_timeout_expired($p453, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8474, 5} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8477, 5} true;
  assume {:verifier.code 0} true;
  $p370 := $p390;
  goto $bb89;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 13} true;
  assume {:verifier.code 0} true;
  $p454 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 18} true;
  assume {:verifier.code 0} true;
  $p455 := $add.ref($p454, 4232);
  $p456 := $add.ref($add.ref($p454, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 29} true;
  assume {:verifier.code 0} true;
  $i457 := $load.bytes.bv8($M.0, $p456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  $i458 := $zext.bv8.bv32($i457);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 36} true;
  assume {:verifier.code 0} true;
  $i459 := $and.bv32($i458, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 36} true;
  assume {:verifier.code 0} true;
  $i460 := $ne.bv32($i459, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i460} true;
  goto $bb110, $bb111;
$bb110:
  assume ($i460 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8482, 17} true;
  assume {:verifier.code 0} true;
  $p461 := $bitcast.ref.ref($p390);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8482, 17} true;
  assume {:verifier.code 0} true;
  $i462 := $load.bytes.bv32($M.0, $p461);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8482, 10} true;
  assume {:verifier.code 0} true;
  $p463 := $add.ref($p4, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8482, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p463, $i462);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8483, 3} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume !(($i460 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8481, 38} true;
  assume {:verifier.code 0} true;
  $p370 := $p390;
  goto $bb89;
$bb113:
  assume ($i471 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8490, 25} true;
  assume {:verifier.code 0} true;
  $p472 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8490, 30} true;
  assume {:verifier.code 0} true;
  $p473 := $add.ref($p472, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8490, 30} true;
  assume {:verifier.code 0} true;
  $p474 := $load.bytes.ref($M.0, $p473);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8490, 57} true;
  assume {:verifier.code 0} true;
  $i475 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8490, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p474, 4bv64, $p370, $i475);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8491, 3} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb114:
  assume !(($i471 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb115;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8494, 26} true;
  assume {:verifier.code 0} true;
  $p476 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8494, 39} true;
  assume {:verifier.code 0} true;
  $p477 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8494, 13} true;
  assume {:verifier.code 0} true;
  call $i478 := copy_to_user($p476, $p477, 100bv64);
  // WARNING: %557 = call i64 @copy_to_user(i8* %555, i8* %556, i64 100), !dbg !7416, !verifier.code !6789
  call {:cexpr "tmp___8"} boogie_si_record_bv64($i478);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8495, 15} true;
  assume {:verifier.code 0} true;
  $i479 := $ne.bv64($i478, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8495, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i479} true;
  goto $bb116, $bb117;
$bb116:
  assume ($i479 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8497, 23} true;
  assume {:verifier.code 0} true;
  $p480 := $load.bytes.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8497, 28} true;
  assume {:verifier.code 0} true;
  $p481 := $add.ref($p480, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8497, 12} true;
  assume {:verifier.code 0} true;
  $p482 := $bitcast.ref.ref($p481);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8496, 5} true;
  assume {:verifier.code 0} true;
  call $i483 := printk.ref.ref.ref.bv32.ref(.str.130, $p482, .str.27, 2640bv32, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8499, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.bv32(0bv32, 14bv32);
  goto $bb7;
$bb117:
  assume !(($i479 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8503, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0bv32;
  goto $bb7;
}
const mptctl_hp_targetinfo: ref;
axiom (mptctl_hp_targetinfo == $sub.ref(0, 284978));
procedure  mptctl_hp_targetinfo($i0: bv64)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: bv64;
  var $i10: bv1;
  var $i11: bv32;
  var $p13: ref;
  var $p14: ref;
  var $i15: bv32;
  var $i16: bv32;
  var $i17: bv1;
  var $p18: ref;
  var $i19: bv64;
  var $i20: bv1;
  var $i21: bv32;
  var $p22: ref;
  var $p23: ref;
  var $i24: bv32;
  var $i25: bv32;
  var $i26: bv1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: bv32;
  var $p31: ref;
  var $p32: ref;
  var $i33: bv8;
  var $i34: bv32;
  var $i35: bv1;
  var $p36: ref;
  var $p37: ref;
  var $i38: bv8;
  var $i39: bv32;
  var $i40: bv1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: bv8;
  var $i45: bv32;
  var $i46: bv1;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: bv64;
  var $i51: bv1;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: bv32;
  var $p57: ref;
  var $p58: ref;
  var $i59: bv32;
  var $i60: bv1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: bv8;
  var $i65: bv32;
  var $i66: bv32;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: bv64;
  var $p71: ref;
  var $p72: ref;
  var $i73: bv64;
  var $i74: bv1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: bv8;
  var $p79: ref;
  var $i80: bv8;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: bv64;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: bv32;
  var $i94: bv32;
  var $p95: ref;
  var $p96: ref;
  var $i97: bv32;
  var $i98: bv32;
  var $p99: ref;
  var $p100: ref;
  var $i101: bv32;
  var $i102: bv1;
  var $p103: ref;
  var $i104: bv32;
  var $i105: bv32;
  var $i106: bv1;
  var $i107: bv32;
  var $i108: bv8;
  var $p109: ref;
  var $i110: bv32;
  var $i111: bv1;
  var $i112: bv32;
  var $i113: bv32;
  var $i114: bv1;
  var $p115: ref;
  var $i116: bv1;
  var $p117: ref;
  var $i118: bv1;
  var $p119: ref;
  var $i120: bv1;
  var $p121: ref;
  var $i122: bv1;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: bv64;
  var $p130: ref;
  var $i131: bv64;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $i147: bv32;
  var $i148: bv1;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: bv8;
  var $i154: bv32;
  var $i155: bv1;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: bv8;
  var $i162: bv32;
  var $i163: bv32;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $i167: bv64;
  var $p168: ref;
  var $p169: ref;
  var $i170: bv64;
  var $i171: bv1;
  var $i172: bv64;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $i176: bv32;
  var $i177: bv32;
  var $p178: ref;
  var $p179: ref;
  var $i180: bv32;
  var $i181: bv32;
  var $p182: ref;
  var $p183: ref;
  var $i184: bv32;
  var $i185: bv1;
  var $p186: ref;
  var $i187: bv16;
  var $i188: bv32;
  var $p189: ref;
  var $p190: ref;
  var $i191: bv16;
  var $i192: bv32;
  var $p193: ref;
  var $p194: ref;
  var $i195: bv16;
  var $i196: bv32;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $i201: bv64;
  var $p202: ref;
  var $i203: bv64;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: bv64;
  var $i210: bv1;
  var $p211: ref;
  var $p212: ref;
  var $i213: bv32;
  var $i214: bv64;
  var $p215: ref;
  var $p216: ref;
  var $i217: bv16;
  var $i218: bv32;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $i222: bv64;
  var $i223: bv1;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $i227: bv32;
  var $i12: bv32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(48, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(32, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: %6 = alloca %struct._CONFIG_PAGE_HEADER, align 1, !verifier.code !6789
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8530, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.bv64.ref($i0);
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_SCSI_HOST* null, i64 0, metadata !12022, metadata !6788), !dbg !12023, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8533, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8533, 46} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8533, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := copy_from_user($p7, $p8, 48bv64);
  // WARNING: %10 = call i64 @copy_from_user(i8* %8, i8* %9, i64 48), !dbg !6839, !verifier.code !6789
  call {:cexpr "tmp___0"} boogie_si_record_bv64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8534, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.bv64($i9, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8534, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8535, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := printk.ref.ref.bv32.ref(.str.131, .str.27, 2678bv32, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8538, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb2:
  assume !(($i10 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8672, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8542, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $p2;
  $p14 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8542, 46} true;
  assume {:verifier.code 0} true;
  $i15 := $load.bytes.bv32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8542, 12} true;
  assume {:verifier.code 0} true;
  call $i16 := mpt_verify_adapter($i15, $p1);
  // WARNING: %19 = call i32 @mpt_verify_adapter(i32 %18, %struct._MPT_ADAPTER** %2), !dbg !6850, !verifier.code !6789
  call {:cexpr "iocnum"} boogie_si_record_bv32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $slt.bv32($i16, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 18} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8544, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := printk.ref.ref.bv32.bv32(.str.132, .str.27, 2685bv32, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8546, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb7:
  assume !(($i17 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 37} true;
  assume {:verifier.code 0} true;
  $p18 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.bv64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 41} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.bv64($i19, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8543, 7} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i20 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $load.bytes.bv32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $and.bv32($i24, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 35} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.bv32($i25, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8551, 73} true;
  assume {:verifier.code 0} true;
  $p27 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8551, 78} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8551, 62} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8551, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := printk.ref.ref(.str.133, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8552, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i26 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 27} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 27} true;
  assume {:verifier.code 0} true;
  $i33 := $load.bytes.bv8($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.bv8.bv32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 36} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.bv32($i34, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 42} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1bv1);
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8556, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 0bv32;
  goto $bb3;
$bb16:
  assume !(($i35 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 60} true;
  assume {:verifier.code 0} true;
  $p36 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 65} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 65} true;
  assume {:verifier.code 0} true;
  $i38 := $load.bytes.bv8($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 45} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.bv8.bv32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 74} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.bv32($i39, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8555, 7} true;
  assume {:verifier.code 0} true;
  assume ($i40 == 1bv1);
  goto $bb15;
$bb18:
  assume !(($i40 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 22} true;
  assume {:verifier.code 0} true;
  $p41 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 27} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 656);
  $p43 := $add.ref($add.ref($p41, 656), 43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 36} true;
  assume {:verifier.code 0} true;
  $i44 := $load.bytes.bv8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.bv8.bv32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 47} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.bv32($i45, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 53} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb20, $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 53} true;
  assume {:verifier.code 0} true;
  assume ($i46 == 1bv1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8561, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 0bv32;
  goto $bb3;
$bb22:
  assume !(($i46 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 72} true;
  assume {:verifier.code 0} true;
  $p47 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 77} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 77} true;
  assume {:verifier.code 0} true;
  $p49 := $load.bytes.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 56} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.bv64($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 80} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.bv64($i50, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8560, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1bv1);
  goto $bb21;
$bb24:
  assume !(($i51 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 13} true;
  assume {:verifier.code 0} true;
  $p54 := $load.bytes.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 18} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 18} true;
  assume {:verifier.code 0} true;
  $i56 := $load.bytes.bv32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 34} true;
  assume {:verifier.code 0} true;
  $p57 := $p2;
  $p58 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 38} true;
  assume {:verifier.code 0} true;
  $i59 := $load.bytes.bv32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 26} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.bv32($i56, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8565, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i60 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8566, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.bv32(0bv32, 19bv32);
  goto $bb3;
$bb27:
  assume !(($i60 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8570, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8570, 24} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, 656);
  $p63 := $add.ref($add.ref($p61, 656), 43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8570, 33} true;
  assume {:verifier.code 0} true;
  $i64 := $load.bytes.bv8($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8570, 13} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.bv8.bv32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8570, 44} true;
  assume {:verifier.code 0} true;
  $i66 := $mul.bv32($i65, 4bv32);
  // WARNING: %87 = mul nsw i32 %86, 4, !dbg !6919, !verifier.code !6789
  call {:cexpr "data_sz"} boogie_si_record_bv32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8571, 34} true;
  assume {:verifier.code 0} true;
  $p67 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8571, 39} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8571, 39} true;
  assume {:verifier.code 0} true;
  $p69 := $load.bytes.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8571, 47} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.bv32.bv64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8571, 13} true;
  assume {:verifier.code 0} true;
  call $p71 := pci_alloc_consistent($p69, $i70, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8572, 15} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8573, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.bv64($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8573, 33} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.bv64($i73, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8573, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i74 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8574, 23} true;
  assume {:verifier.code 0} true;
  $p75 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8574, 28} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 656);
  $p77 := $add.ref($add.ref($p75, 656), 42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8574, 37} true;
  assume {:verifier.code 0} true;
  $i78 := $load.bytes.bv8($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8574, 9} true;
  assume {:verifier.code 0} true;
  $p79 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8574, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8575, 22} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.bv32.bv8($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8575, 9} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8575, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8576, 9} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8576, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p82, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8577, 9} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p5, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8577, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p83, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8578, 9} true;
  assume {:verifier.code 0} true;
  $p84 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8578, 16} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8578, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p85, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8579, 9} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p4, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8579, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p86, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8580, 9} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p4, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8580, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p87, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8581, 9} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8581, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p88, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8582, 20} true;
  assume {:verifier.code 0} true;
  $i89 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8582, 9} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8582, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p90, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $p2;
  $p92 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 30} true;
  assume {:verifier.code 0} true;
  $i93 := $load.bytes.bv32($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 38} true;
  assume {:verifier.code 0} true;
  $i94 := $shl.bv32($i93, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 51} true;
  assume {:verifier.code 0} true;
  $p95 := $p2;
  $p96 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 55} true;
  assume {:verifier.code 0} true;
  $i97 := $load.bytes.bv32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 44} true;
  assume {:verifier.code 0} true;
  $i98 := $or.bv32($i94, $i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 9} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8583, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8584, 21} true;
  assume {:verifier.code 0} true;
  $p100 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8584, 10} true;
  assume {:verifier.code 0} true;
  call $i101 := mpt_config($p100, $p4);
  // WARNING: %123 = call i32 @mpt_config(%struct._MPT_ADAPTER* %122, %struct._x_config_parms* %5), !dbg !6969, !verifier.code !6789
  call {:cexpr "rc"} boogie_si_record_bv32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8585, 12} true;
  assume {:verifier.code 0} true;
  $i102 := $eq.bv32($i101, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8585, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb31, $bb32;
$bb30:
  assume !(($i74 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb31:
  assume ($i102 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8586, 29} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p72, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8586, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $load.bytes.bv32($M.0, $p103);
  // WARNING: %127 = load i32, i32* %126, align 4, !dbg !6973, !verifier.code !6789
  call {:cexpr "np"} boogie_si_record_bv32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 35} true;
  assume {:verifier.code 0} true;
  $i105 := $and.bv32($i104, 536870912bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 48} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.bv32($i105, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 31} true;
  assume {:verifier.code 0} true;
  havoc $i107;
  assume ((($i106 == 1bv1) ==> ($i107 == 3bv32)) && (($i106 != 1bv1) ==> ($i107 == 2bv32)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 31} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.bv32.bv8($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 12} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8587, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8588, 15} true;
  assume {:verifier.code 0} true;
  $i110 := $and.bv32($i104, 16711680bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8588, 27} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.bv32($i110, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8588, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb33, $bb34;
$bb32:
  assume !(($i102 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb33:
  assume ($i111 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8589, 19} true;
  assume {:verifier.code 0} true;
  $i112 := $and.bv32($i104, 65280bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8589, 28} true;
  assume {:verifier.code 0} true;
  $i113 := $ashr.bv32($i112, 8bv32);
  // WARNING: %137 = ashr i32 %136, 8, !dbg !6988, !verifier.code !6789
  call {:cexpr "tmp"} boogie_si_record_bv32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8590, 17} true;
  assume {:verifier.code 0} true;
  $i114 := $sle.bv32($i113, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8590, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb35, $bb36;
$bb34:
  assume !(($i111 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8608, 14} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8608, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p125, 2bv32);
  assume {:verifier.code 0} true;
  goto $bb50;
$bb35:
  assume ($i114 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8591, 16} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8591, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p115, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8592, 9} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i114 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8593, 17} true;
  assume {:verifier.code 0} true;
  $i116 := $sle.bv32($i113, 9bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8593, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb38, $bb39;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8607, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb38:
  assume ($i116 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8594, 16} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8594, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p117, 6bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8595, 9} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i116 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8596, 17} true;
  assume {:verifier.code 0} true;
  $i118 := $sle.bv32($i113, 10bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8596, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb41, $bb42;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb41:
  assume ($i118 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8597, 16} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8597, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p119, 5bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8598, 9} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i118 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8599, 17} true;
  assume {:verifier.code 0} true;
  $i120 := $sle.bv32($i113, 12bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8599, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb44, $bb45;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb44:
  assume ($i120 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8600, 16} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8600, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p121, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8601, 9} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i120 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8602, 17} true;
  assume {:verifier.code 0} true;
  $i122 := $sle.bv32($i113, 37bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8602, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb47, $bb48;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb47:
  assume ($i122 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8603, 16} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8603, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p123, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8604, 9} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i122 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8605, 16} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8605, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p124, 2bv32);
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8610, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 25} true;
  assume {:verifier.code 0} true;
  $p126 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p126, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  $p128 := $load.bytes.ref($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 38} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.bv32.bv64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 56} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 75} true;
  assume {:verifier.code 0} true;
  $i131 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8613, 5} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p128, $i129, $p130, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8614, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8617, 8} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8617, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p132, $sub.bv32(0bv32, 1bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8618, 8} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8618, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p133, $sub.bv32(0bv32, 1bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8619, 8} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8619, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p134, $sub.bv32(0bv32, 1bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8620, 8} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p2, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8620, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p135, $sub.bv32(0bv32, 1bv32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8621, 7} true;
  assume {:verifier.code 0} true;
  $p136 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8621, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p136, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8622, 7} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8622, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p137, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8623, 7} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8623, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p138, 3bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8624, 7} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p5, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8624, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p139, 4bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8625, 7} true;
  assume {:verifier.code 0} true;
  $p140 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8625, 14} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8625, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.ref($M.0, $p141, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8626, 7} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p4, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8626, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p142, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8627, 7} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p4, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8627, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p143, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8628, 7} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8628, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p144, 0bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8629, 7} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8629, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p145, $sub.bv64(0bv64, 1bv64));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8630, 24} true;
  assume {:verifier.code 0} true;
  $p146 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8630, 13} true;
  assume {:verifier.code 0} true;
  call $i147 := mpt_config($p146, $p4);
  // WARNING: %192 = call i32 @mpt_config(%struct._MPT_ADAPTER* %191, %struct._x_config_parms* %5), !dbg !7069, !verifier.code !6789
  call {:cexpr "tmp___3"} boogie_si_record_bv32($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 15} true;
  assume {:verifier.code 0} true;
  $i148 := $eq.bv32($i147, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i148 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 43} true;
  assume {:verifier.code 0} true;
  $p149 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 50} true;
  assume {:verifier.code 0} true;
  $p150 := $bitcast.ref.ref($p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 50} true;
  assume {:verifier.code 0} true;
  $p151 := $load.bytes.ref($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 56} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p151, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 56} true;
  assume {:verifier.code 0} true;
  $i153 := $load.bytes.bv8($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 23} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.bv8.bv32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 67} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.bv32($i154, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb56, $bb57;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i148 == 1bv1));
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb64;
$bb56:
  assume ($i155 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8632, 9} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p4, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8632, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p156, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 26} true;
  assume {:verifier.code 0} true;
  $p157 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 33} true;
  assume {:verifier.code 0} true;
  $p158 := $bitcast.ref.ref($p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 33} true;
  assume {:verifier.code 0} true;
  $p159 := $load.bytes.ref($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 39} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p159, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 39} true;
  assume {:verifier.code 0} true;
  $i161 := $load.bytes.bv8($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 15} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.bv8.bv32($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8633, 50} true;
  assume {:verifier.code 0} true;
  $i163 := $mul.bv32($i162, 4bv32);
  // WARNING: %210 = mul nsw i32 %209, 4, !dbg !7089, !verifier.code !6789
  call {:cexpr "data_sz"} boogie_si_record_bv32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8634, 36} true;
  assume {:verifier.code 0} true;
  $p164 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8634, 41} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p164, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8634, 41} true;
  assume {:verifier.code 0} true;
  $p166 := $load.bytes.ref($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8634, 49} true;
  assume {:verifier.code 0} true;
  $i167 := $sext.bv32.bv64($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8634, 15} true;
  assume {:verifier.code 0} true;
  call $p168 := pci_alloc_consistent($p166, $i167, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8635, 17} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8636, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $p2i.ref.bv64($p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8636, 35} true;
  assume {:verifier.code 0} true;
  $i171 := $ne.bv64($i170, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8636, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8631, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i155 == 1bv1));
  goto $bb55;
$bb58:
  assume ($i171 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8637, 22} true;
  assume {:verifier.code 0} true;
  $i172 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8637, 11} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8637, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv64($M.0, $p173, $i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 28} true;
  assume {:verifier.code 0} true;
  $p174 := $p2;
  $p175 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 32} true;
  assume {:verifier.code 0} true;
  $i176 := $load.bytes.bv32($M.0, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 40} true;
  assume {:verifier.code 0} true;
  $i177 := $shl.bv32($i176, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 53} true;
  assume {:verifier.code 0} true;
  $p178 := $p2;
  $p179 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 57} true;
  assume {:verifier.code 0} true;
  $i180 := $load.bytes.bv32($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 46} true;
  assume {:verifier.code 0} true;
  $i181 := $or.bv32($i177, $i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 11} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8638, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p182, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8639, 23} true;
  assume {:verifier.code 0} true;
  $p183 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8639, 12} true;
  assume {:verifier.code 0} true;
  call $i184 := mpt_config($p183, $p4);
  // WARNING: %232 = call i32 @mpt_config(%struct._MPT_ADAPTER* %231, %struct._x_config_parms* %5), !dbg !7116, !verifier.code !6789
  call {:cexpr "rc"} boogie_si_record_bv32($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8640, 14} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.bv32($i184, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8640, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb60, $bb61;
$bb59:
  assume !(($i171 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb60:
  assume ($i185 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8641, 58} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p169, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8641, 58} true;
  assume {:verifier.code 0} true;
  $i187 := $load.bytes.bv16($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8641, 32} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.bv16.bv32($i187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8641, 14} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8641, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p189, $i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8642, 55} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p169, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8642, 55} true;
  assume {:verifier.code 0} true;
  $i191 := $load.bytes.bv16($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8642, 29} true;
  assume {:verifier.code 0} true;
  $i192 := $zext.bv16.bv32($i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8642, 14} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8642, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p193, $i192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8643, 56} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p169, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8643, 56} true;
  assume {:verifier.code 0} true;
  $i195 := $load.bytes.bv16($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8643, 30} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.bv16.bv32($i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8643, 14} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8643, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p197, $i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8644, 7} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i185 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 27} true;
  assume {:verifier.code 0} true;
  $p198 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 32} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p198, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 32} true;
  assume {:verifier.code 0} true;
  $p200 := $load.bytes.ref($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 40} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.bv32.bv64($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 58} true;
  assume {:verifier.code 0} true;
  $p202 := $bitcast.ref.ref($p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 77} true;
  assume {:verifier.code 0} true;
  $i203 := $load.bytes.bv64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8647, 7} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($p200, $i201, $p202, $i203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8648, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8651, 3} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8654, 24} true;
  assume {:verifier.code 0} true;
  $p204 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8654, 29} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p204, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8654, 29} true;
  assume {:verifier.code 0} true;
  $p206 := $load.bytes.ref($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8654, 13} true;
  assume {:verifier.code 0} true;
  call $p207 := shost_priv($p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8655, 8} true;
  assume {:verifier.code 0} true;
  $p208 := $bitcast.ref.ref($p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8656, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $p2i.ref.bv64($p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8656, 26} true;
  assume {:verifier.code 0} true;
  $i210 := $ne.bv64($i209, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8656, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i210 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 55} true;
  assume {:verifier.code 0} true;
  $p211 := $p2;
  $p212 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 59} true;
  assume {:verifier.code 0} true;
  $i213 := $load.bytes.bv32($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 34} true;
  assume {:verifier.code 0} true;
  $i214 := $zext.bv32.bv64($i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 38} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p208, 8);
  $p216 := $add.ref($add.ref($p208, 8), $mul.ref($bv2int.64($i214), 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 34} true;
  assume {:verifier.code 0} true;
  $i217 := $load.bytes.bv16($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 28} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.bv16.bv32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 10} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p2, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8657, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p219, $i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8658, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i210 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8661, 26} true;
  assume {:verifier.code 0} true;
  $p220 := $i2p.bv64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8661, 39} true;
  assume {:verifier.code 0} true;
  $p221 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8661, 13} true;
  assume {:verifier.code 0} true;
  call $i222 := copy_to_user($p220, $p221, 48bv64);
  // WARNING: %280 = call i64 @copy_to_user(i8* %278, i8* %279, i64 48), !dbg !7163, !verifier.code !6789
  call {:cexpr "tmp___5"} boogie_si_record_bv64($i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8662, 15} true;
  assume {:verifier.code 0} true;
  $i223 := $ne.bv64($i222, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i223 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8664, 23} true;
  assume {:verifier.code 0} true;
  $p224 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8664, 28} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p224, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8664, 12} true;
  assume {:verifier.code 0} true;
  $p226 := $bitcast.ref.ref($p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8663, 5} true;
  assume {:verifier.code 0} true;
  call $i227 := printk.ref.ref.ref.bv32.ref(.str.134, $p226, .str.27, 2791bv32, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8666, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.bv32(0bv32, 14bv32);
  goto $bb3;
$bb69:
  assume !(($i223 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8670, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0bv32;
  goto $bb3;
}
const ldv_mutex_unlock_19: ref;
axiom (ldv_mutex_unlock_19 == $sub.ref(0, 286010));
procedure  ldv_mutex_unlock_19($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9303, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mutex_of__MPT_MGMT($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9304, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9305, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mpt_config: ref;
axiom (mpt_config == $sub.ref(0, 287042));
procedure  mpt_config($p0: ref, $p1: ref)
  returns ($r: bv32);
const shost_priv: ref;
axiom (shost_priv == $sub.ref(0, 288074));
procedure  shost_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5888, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5888, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5888, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const strncpy: ref;
axiom (strncpy == $sub.ref(0, 289106));
procedure  strncpy($p0: ref, $p1: ref, $i2: bv64)
  returns ($r: ref);
const strlen: ref;
axiom (strlen == $sub.ref(0, 290138));
procedure  strlen($p0: ref)
  returns ($r: bv64);
const mpt_HardResetHandler: ref;
axiom (mpt_HardResetHandler == $sub.ref(0, 291170));
procedure  mpt_HardResetHandler($p0: ref, $i1: bv32)
  returns ($r: bv32);
const mpt_free_fw_memory: ref;
axiom (mpt_free_fw_memory == $sub.ref(0, 292202));
procedure  mpt_free_fw_memory($p0: ref);
const mpt_alloc_fw_memory: ref;
axiom (mpt_alloc_fw_memory == $sub.ref(0, 293234));
procedure  mpt_alloc_fw_memory($p0: ref, $i1: bv32)
  returns ($r: bv32);
const memdup_user: ref;
axiom (memdup_user == $sub.ref(0, 294266));
procedure  memdup_user($p0: ref, $i1: bv64)
  returns ($r: ref);
const IS_ERR: ref;
axiom (IS_ERR == $sub.ref(0, 295298));
procedure  IS_ERR($p0: ref)
  returns ($r: bv1)
{
  var $i1: bv1;
  var $i2: bv8;
  var $i3: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9142, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_is_err($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9142, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.bv1.bv8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !6795, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9143, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.bv8.bv1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9143, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const PTR_ERR: ref;
axiom (PTR_ERR == $sub.ref(0, 296330));
procedure  PTR_ERR($p0: ref)
  returns ($r: bv64)
{
  var $i1: bv64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9133, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_ptr_err($p0);
  // WARNING: %2 = call i64 @ldv_ptr_err(i8* %0), !dbg !6793, !verifier.code !6792
  call {:cexpr "tmp"} boogie_si_record_bv64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9134, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const pci_domain_nr: ref;
axiom (pci_domain_nr == $sub.ref(0, 297362));
procedure  pci_domain_nr($p0: ref)
  returns ($r: bv32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5653, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5653, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5653, 8} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5654, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5654, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $load.bytes.bv32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5654, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const ldv_ptr_err: ref;
axiom (ldv_ptr_err == $sub.ref(0, 298394));
procedure  ldv_ptr_err($p0: ref)
  returns ($r: bv64)
{
  var $i1: bv64;
  var $i2: bv64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9523, 28} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9523, 26} true;
  assume {:verifier.code 0} true;
  $i2 := $sub.bv64(2012bv64, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9523, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_is_err: ref;
axiom (ldv_is_err == $sub.ref(0, 299426));
procedure  ldv_is_err($p0: ref)
  returns ($r: bv1)
{
  var $i1: bv64;
  var $i2: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9507, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.bv64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9507, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.bv64($i1, 2012bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9507, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_mutex_lock_20: ref;
axiom (ldv_mutex_lock_20 == $sub.ref(0, 300458));
procedure  ldv_mutex_lock_20($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9313, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_lock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9314, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9315, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mutex_unlock_21: ref;
axiom (ldv_mutex_unlock_21 == $sub.ref(0, 301490));
procedure  ldv_mutex_unlock_21($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9323, 3} true;
  assume {:verifier.code 0} true;
  call ldv_mutex_unlock_mpctl_mutex($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9324, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9325, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mptctl_probe: ref;
axiom (mptctl_probe == $sub.ref(0, 302522));
procedure  mptctl_probe($p0: ref, $p1: ref)
  returns ($r: bv32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8829, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8830, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8831, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 4232);
  $p6 := $add.ref($p4, 4232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8831, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p6, .str, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8832, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 4232);
  $p8 := $add.ref($add.ref($p4, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8832, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8833, 3} true;
  assume {:verifier.code 0} true;
  $r := 0bv32;
  $exn := false;
  return;
}
const mptctl_remove: ref;
axiom (mptctl_remove == $sub.ref(0, 303554));
procedure  mptctl_remove($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8841, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_get_drvdata: ref;
axiom (pci_get_drvdata == $sub.ref(0, 304586));
procedure  pci_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5810, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5810, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5811, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 305618));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref);
const init_completion: ref;
axiom (init_completion == $sub.ref(0, 306650));
procedure  init_completion($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5602, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5602, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p2, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5603, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5603, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p3, .str.1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5604, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 307682));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 308714));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5645, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5645, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.bytes.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5645, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv_init_zalloc: ref;
axiom (ldv_init_zalloc == $sub.ref(0, 309746));
procedure  ldv_init_zalloc($i0: bv64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: bv64;
  var $i3: bv1;
  var $i4: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5494, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := calloc(1bv64, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5496, 21} true;
  assume {:verifier.code 1} true;
  $i2 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5496, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $ne.bv64($i2, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5496, 39} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.bv1.bv32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5496, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5497, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_memset: ref;
axiom (ldv_memset == $sub.ref(0, 310778));
procedure  ldv_memset($p0: ref, $i1: bv32, $i2: bv64)
  returns ($r: ref)
{
  var $i3: bv8;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !12518, metadata !6788), !dbg !12519, !verifier.code !6790
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !12520, metadata !6788), !dbg !12521, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5505, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.bv32.bv8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5505, 9} true;
  assume {:verifier.code 0} true;
  call $M.14 := $memset.bv8($M.14, $p0, $i3, $bv2int.64($i2), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5506, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_file_operations_2: ref;
axiom (ldv_file_operations_2 == $sub.ref(0, 311810));
procedure  ldv_file_operations_2()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8919, 24} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_init_zalloc(1000bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8919, 22} true;
  assume {:verifier.code 0} true;
  $M.15 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8920, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_init_zalloc(504bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8921, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8921, 22} true;
  assume {:verifier.code 0} true;
  $M.16 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8922, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_initialize_mpt_pci_driver_1: ref;
axiom (ldv_initialize_mpt_pci_driver_1 == $sub.ref(0, 312842));
procedure  ldv_initialize_mpt_pci_driver_1()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8930, 9} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8931, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8931, 24} true;
  assume {:verifier.code 0} true;
  $M.17 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8932, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 313874));
procedure {:entrypoint} main()
  returns ($r: bv32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: bv32;
  var $i27: bv1;
  var $i28: bv1;
  var $i29: bv1;
  var $i30: bv1;
  var $i31: bv32;
  var $i32: bv1;
  var $i33: bv32;
  var $i34: bv1;
  var $i35: bv1;
  var $i36: bv1;
  var $i37: bv32;
  var $i38: bv1;
  var $p39: ref;
  var $i40: bv32;
  var $i41: bv32;
  var $i42: bv1;
  var $i43: bv32;
  var $i44: bv32;
  var $i45: bv32;
  var $i46: bv1;
  var $p47: ref;
  var $i48: bv32;
  var $i49: bv32;
  var $i50: bv32;
  var $i51: bv1;
  var $i52: bv32;
  var $i53: bv1;
  var $i54: bv1;
  var $i55: bv1;
  var $i56: bv32;
  var $i57: bv1;
  var $i58: bv32;
  var $i59: bv1;
  var $i60: bv32;
  var $i61: bv1;
  var $i62: bv32;
  var $i63: bv32;
  var $i64: bv1;
  var $i65: bv32;
  var $i66: bv1;
  var $i67: bv32;
  var $i68: bv1;
  var $i69: bv32;
  var $i70: bv1;
  var $i71: bv1;
  var $i72: bv1;
  var $i73: bv1;
  var $i74: bv1;
  var $i75: bv1;
  var $i76: bv1;
  var $i77: bv32;
  var $i78: bv1;
  var $p79: ref;
  var $i80: bv32;
  var $i81: bv64;
  var $i82: bv64;
  var $i83: bv32;
  var $i84: bv1;
  var $i85: bv32;
  var $p86: ref;
  var $i87: bv32;
  var $i88: bv32;
  var $i89: bv32;
  var $i90: bv1;
  var $i91: bv32;
  var $p92: ref;
  var $i93: bv32;
  var $i94: bv32;
  var $i95: bv32;
  var $i96: bv1;
  var $p97: ref;
  var $i98: bv64;
  var $i99: bv32;
  var $i100: bv64;
  var $i101: bv32;
  var $i102: bv1;
  var $p103: ref;
  var $i104: bv32;
  var $i105: bv64;
  var $i106: bv64;
  var $i107: bv32;
  var $i108: bv1;
  var $i109: bv32;
  var $i110: bv32;
  var $i111: bv1;
  var $i112: bv32;
  var $i113: bv32;
  var $i114: bv32;
  var $i115: bv1;
  var $i116: bv32;
  var $i117: bv32;
  var $i118: bv32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8953, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $bv2int.64($zext.bv32.bv64(1bv32))));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(4, $bv2int.64($zext.bv32.bv64(1bv32))));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8953, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := ldv_init_zalloc(32bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8954, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8955, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8956, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8956, 3} true;
  assume {:verifier.code 0} true;
  call $p11 := ldv_memset($p10, 0bv32, 8bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8957, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8957, 3} true;
  assume {:verifier.code 0} true;
  call $p13 := ldv_memset($p12, 0bv32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8958, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8958, 3} true;
  assume {:verifier.code 0} true;
  call $p15 := ldv_memset($p14, 0bv32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8959, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8959, 3} true;
  assume {:verifier.code 0} true;
  call $p17 := ldv_memset($p16, 0bv32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8960, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8960, 3} true;
  assume {:verifier.code 0} true;
  call $p19 := ldv_memset($p18, 0bv32, 8bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8961, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8961, 3} true;
  assume {:verifier.code 0} true;
  call $p21 := ldv_memset($p20, 0bv32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8962, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8962, 3} true;
  assume {:verifier.code 0} true;
  call $p23 := ldv_memset($p22, 0bv32, 8bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8963, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8963, 3} true;
  assume {:verifier.code 0} true;
  call $p25 := ldv_memset($p24, 0bv32, 4bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8964, 24} true;
  assume {:verifier.code 0} true;
  $M.18 := 0bv32;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8965, 11} true;
  assume {:verifier.code 0} true;
  $M.19 := 0bv32;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8966, 24} true;
  assume {:verifier.code 0} true;
  $M.20 := 1bv32;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8967, 24} true;
  assume {:verifier.code 0} true;
  $M.21 := 0bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8967, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8969, 13} true;
  assume {:verifier.code 1} true;
  call $i26 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i26);
  // WARNING: %28 = call i32 @__VERIFIER_nondet_int(), !dbg !6834, !verifier.code !6835
  call {:cexpr "tmp___0"} boogie_si_record_bv32($i26);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i27 := $slt.bv32($i26, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i27 == 1bv1);
  assume {:verifier.code 0} true;
  $i30 := $eq.bv32($i26, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb10, $bb11;
$bb4:
  assume !(($i27 == 1bv1));
  assume {:verifier.code 0} true;
  $i28 := $slt.bv32($i26, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9006, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9006, 28} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.bv32($i50, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9006, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb36, $bb37;
$bb6:
  assume !(($i28 == 1bv1));
  assume {:verifier.code 0} true;
  $i29 := $eq.bv32($i26, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i29 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9047, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9047, 28} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.bv32($i67, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9047, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb66, $bb67;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i29 == 1bv1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb112;
$bb10:
  assume ($i30 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8972, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8972, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.bv32($i31, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8972, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb12, $bb13;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i30 == 1bv1));
  goto $bb9;
$bb12:
  assume ($i32 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8973, 15} true;
  assume {:verifier.code 1} true;
  call $i33 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i33);
  // WARNING: %33 = call i32 @__VERIFIER_nondet_int(), !dbg !6843, !verifier.code !6835
  call {:cexpr "tmp___1"} boogie_si_record_bv32($i33);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i32 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb14:
  assume {:verifier.code 0} true;
  $i34 := $slt.bv32($i33, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i34 == 1bv1);
  assume {:verifier.code 0} true;
  $i36 := $eq.bv32($i33, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb20, $bb21;
$bb16:
  assume !(($i34 == 1bv1));
  assume {:verifier.code 0} true;
  $i35 := $eq.bv32($i33, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i35 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8989, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8989, 30} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.bv32($i45, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8989, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb29, $bb30;
$bb18:
  assume {:verifier.code 0} true;
  assume !(($i35 == 1bv1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb20:
  assume ($i36 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8976, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8976, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.bv32($i37, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8976, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb22, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume !(($i36 == 1bv1));
  goto $bb19;
$bb22:
  assume ($i38 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8977, 35} true;
  assume {:verifier.code 0} true;
  $p39 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8977, 22} true;
  assume {:verifier.code 0} true;
  call $i40 := mptctl_probe($p39, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8977, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $i40;
  call {:cexpr "ldv_retval_0"} boogie_si_record_bv32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8978, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8978, 24} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.bv32($i41, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8978, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i38 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i42 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8979, 30} true;
  assume {:verifier.code 0} true;
  $M.18 := 2bv32;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8980, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8980, 27} true;
  assume {:verifier.code 0} true;
  $i44 := $add.bv32($i43, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8980, 17} true;
  assume {:verifier.code 0} true;
  $M.19 := $i44;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8981, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i42 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8984, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8987, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9001, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb29:
  assume ($i46 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8990, 21} true;
  assume {:verifier.code 0} true;
  $p47 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8990, 7} true;
  assume {:verifier.code 0} true;
  call mptctl_remove($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8991, 28} true;
  assume {:verifier.code 0} true;
  $M.18 := 1bv32;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8992, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8992, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.bv32($i48, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8992, 15} true;
  assume {:verifier.code 0} true;
  $M.19 := $i49;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8993, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i46 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8996, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8998, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8999, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8999, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9004, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9122, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb36:
  assume ($i51 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9007, 15} true;
  assume {:verifier.code 1} true;
  call $i52 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i52);
  // WARNING: %67 = call i32 @__VERIFIER_nondet_int(), !dbg !6891, !verifier.code !6835
  call {:cexpr "tmp___2"} boogie_si_record_bv32($i52);
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i51 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb38:
  assume {:verifier.code 0} true;
  $i53 := $slt.bv32($i52, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i53 == 1bv1);
  assume {:verifier.code 0} true;
  $i55 := $eq.bv32($i52, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb44, $bb45;
$bb40:
  assume !(($i53 == 1bv1));
  assume {:verifier.code 0} true;
  $i54 := $eq.bv32($i52, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i54 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9019, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9019, 30} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.bv32($i60, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9019, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb54, $bb55;
$bb42:
  assume {:verifier.code 0} true;
  assume !(($i54 == 1bv1));
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb63;
$bb44:
  assume ($i55 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 30} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.bv32($i56, 3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb46, $bb47;
$bb45:
  assume {:verifier.code 0} true;
  assume !(($i55 == 1bv1));
  goto $bb43;
$bb46:
  assume ($i57 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 38} true;
  assume {:verifier.code 0} true;
  $i58 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 46} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.bv32($i58, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb49, $bb50;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i57 == 1bv1));
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb52;
$bb49:
  assume ($i59 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9011, 7} true;
  assume {:verifier.code 0} true;
  call mptctl_exit();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9012, 28} true;
  assume {:verifier.code 0} true;
  $M.20 := 2bv32;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9013, 7} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9010, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i59 == 1bv1));
  goto $bb48;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9124, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9125, 3} true;
  assume {:verifier.code 0} true;
  $r := 0bv32;
  $exn := false;
  return;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9017, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9042, 3} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb54:
  assume ($i61 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9020, 22} true;
  assume {:verifier.code 0} true;
  call $i62 := mptctl_init();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9020, 20} true;
  assume {:verifier.code 0} true;
  $M.23 := $i62;
  call {:cexpr "ldv_retval_1"} boogie_si_record_bv32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9021, 11} true;
  assume {:verifier.code 0} true;
  $i63 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9021, 24} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.bv32($i63, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9021, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb56, $bb57;
$bb55:
  assume !(($i61 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb56:
  assume ($i64 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9022, 30} true;
  assume {:verifier.code 0} true;
  $M.20 := 3bv32;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_bv32(3bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9023, 30} true;
  assume {:verifier.code 0} true;
  $M.18 := 1bv32;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9024, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_mpt_pci_driver_1();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9025, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i64 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9028, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9028, 24} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.bv32($i65, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9028, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb59, $bb60;
$bb59:
  assume ($i66 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9029, 30} true;
  assume {:verifier.code 0} true;
  $M.20 := 2bv32;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9030, 9} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb60:
  assume !(($i66 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9034, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9037, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9039, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9040, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9040, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9045, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb66:
  assume ($i68 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9048, 15} true;
  assume {:verifier.code 1} true;
  call $i69 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i69);
  // WARNING: %103 = call i32 @__VERIFIER_nondet_int(), !dbg !6944, !verifier.code !6835
  call {:cexpr "tmp___3"} boogie_si_record_bv32($i69);
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i68 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb111;
$bb68:
  assume {:verifier.code 0} true;
  $i70 := $slt.bv32($i69, 3bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i70 == 1bv1);
  assume {:verifier.code 0} true;
  $i74 := $slt.bv32($i69, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb78, $bb79;
$bb70:
  assume !(($i70 == 1bv1));
  assume {:verifier.code 0} true;
  $i71 := $slt.bv32($i69, 4bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i71 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9081, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9081, 30} true;
  assume {:verifier.code 0} true;
  $i102 := $eq.bv32($i101, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9081, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb97, $bb98;
$bb72:
  assume !(($i71 == 1bv1));
  assume {:verifier.code 0} true;
  $i72 := $slt.bv32($i69, 5bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i72 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9089, 9} true;
  assume {:verifier.code 0} true;
  $i107 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9089, 30} true;
  assume {:verifier.code 0} true;
  $i108 := $eq.bv32($i107, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9089, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb100, $bb101;
$bb74:
  assume !(($i72 == 1bv1));
  assume {:verifier.code 0} true;
  $i73 := $eq.bv32($i69, 5bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb75, $bb76;
$bb75:
  assume ($i73 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9102, 9} true;
  assume {:verifier.code 0} true;
  $i114 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9102, 30} true;
  assume {:verifier.code 0} true;
  $i115 := $eq.bv32($i114, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9102, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb106, $bb107;
$bb76:
  assume {:verifier.code 0} true;
  assume !(($i73 == 1bv1));
  goto $bb77;
$bb77:
  assume {:verifier.code 0} true;
  goto $bb109;
$bb78:
  assume ($i74 == 1bv1);
  assume {:verifier.code 0} true;
  $i76 := $eq.bv32($i69, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb82, $bb83;
$bb79:
  assume !(($i74 == 1bv1));
  assume {:verifier.code 0} true;
  $i75 := $slt.bv32($i69, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i75 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9059, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9059, 30} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.bv32($i83, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9059, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb88, $bb89;
$bb81:
  assume !(($i75 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9073, 9} true;
  assume {:verifier.code 0} true;
  $i95 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9073, 30} true;
  assume {:verifier.code 0} true;
  $i96 := $eq.bv32($i95, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9073, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb94, $bb95;
$bb82:
  assume ($i76 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9051, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9051, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.bv32($i77, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9051, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb84, $bb85;
$bb83:
  assume {:verifier.code 0} true;
  assume !(($i76 == 1bv1));
  goto $bb77;
$bb84:
  assume ($i78 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9052, 26} true;
  assume {:verifier.code 0} true;
  $p79 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9052, 46} true;
  assume {:verifier.code 0} true;
  $i80 := $load.bytes.bv32($M.14, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9052, 55} true;
  assume {:verifier.code 0} true;
  $i81 := $load.bytes.bv64($M.14, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9052, 7} true;
  assume {:verifier.code 0} true;
  call $i82 := compat_mpctl_ioctl($p79, $i80, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9053, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 2bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9054, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i78 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9057, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9114, 3} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb88:
  assume ($i84 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9060, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $load.bytes.bv32($M.14, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9060, 30} true;
  assume {:verifier.code 0} true;
  $p86 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9060, 50} true;
  assume {:verifier.code 0} true;
  $i87 := $load.bytes.bv32($M.14, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9060, 7} true;
  assume {:verifier.code 0} true;
  call $i88 := mptctl_fasync($i85, $p86, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9061, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 1bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9062, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i84 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9065, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9065, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $eq.bv32($i89, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9065, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb91, $bb92;
$bb91:
  assume ($i90 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9066, 21} true;
  assume {:verifier.code 0} true;
  $i91 := $load.bytes.bv32($M.14, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9066, 30} true;
  assume {:verifier.code 0} true;
  $p92 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9066, 50} true;
  assume {:verifier.code 0} true;
  $i93 := $load.bytes.bv32($M.14, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9066, 7} true;
  assume {:verifier.code 0} true;
  call $i94 := mptctl_fasync($i91, $p92, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9067, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 2bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9068, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i90 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9071, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb94:
  assume ($i96 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9074, 17} true;
  assume {:verifier.code 0} true;
  $p97 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9074, 37} true;
  assume {:verifier.code 0} true;
  $i98 := $load.bytes.bv64($M.14, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9074, 46} true;
  assume {:verifier.code 0} true;
  $i99 := $load.bytes.bv32($M.14, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9074, 7} true;
  assume {:verifier.code 0} true;
  call $i100 := no_llseek($p97, $i98, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9075, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 2bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9076, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i96 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9079, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb97:
  assume ($i102 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9082, 20} true;
  assume {:verifier.code 0} true;
  $p103 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9082, 40} true;
  assume {:verifier.code 0} true;
  $i104 := $load.bytes.bv32($M.14, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9082, 49} true;
  assume {:verifier.code 0} true;
  $i105 := $load.bytes.bv64($M.14, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9082, 7} true;
  assume {:verifier.code 0} true;
  call $i106 := mptctl_ioctl($p103, $i104, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9083, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 2bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9084, 5} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i102 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9087, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb100:
  assume ($i108 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9090, 22} true;
  assume {:verifier.code 0} true;
  call $i109 := ldv_open_2();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9090, 20} true;
  assume {:verifier.code 0} true;
  $M.24 := $i109;
  call {:cexpr "ldv_retval_2"} boogie_si_record_bv32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9091, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9091, 24} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.bv32($i110, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9091, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb102, $bb103;
$bb101:
  assume !(($i108 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb105;
$bb102:
  assume ($i111 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9092, 30} true;
  assume {:verifier.code 0} true;
  $M.21 := 2bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9093, 19} true;
  assume {:verifier.code 0} true;
  $i112 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9093, 27} true;
  assume {:verifier.code 0} true;
  $i113 := $add.bv32($i112, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9093, 17} true;
  assume {:verifier.code 0} true;
  $M.19 := $i113;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume !(($i111 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9097, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9100, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb106:
  assume ($i115 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9103, 7} true;
  assume {:verifier.code 0} true;
  call $i116 := ldv_release_2();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9104, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := 1bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9105, 17} true;
  assume {:verifier.code 0} true;
  $i117 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9105, 25} true;
  assume {:verifier.code 0} true;
  $i118 := $sub.bv32($i117, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9105, 15} true;
  assume {:verifier.code 0} true;
  $M.19 := $i118;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9106, 5} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb107:
  assume !(($i115 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9109, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9111, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9112, 5} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9112, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9117, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9119, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9120, 3} true;
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9120, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 314906));
procedure  ldv_initialize();
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 315938));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5540, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5542, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mptctl_exit: ref;
axiom (mptctl_exit == $sub.ref(0, 316970));
procedure  mptctl_exit()
{
  var $i0: bv32;
  var $p1: ref;
  var $i2: bv32;
  var $i3: bv32;
  var $i4: bv8;
  var $i5: bv32;
  var $i6: bv8;
  var $i7: bv8;
  var $i8: bv32;
  var $i9: bv8;
  var $i10: bv8;
  var $i11: bv32;
  var $i12: bv8;
  var $i13: bv8;
  var $i14: bv32;
  var $i15: bv8;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8896, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv_misc_deregister_35(mptctl_miscdev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8897, 85} true;
  assume {:verifier.code 0} true;
  $p1 := $load.bytes.ref($M.0, $add.ref(mptctl_miscdev, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8898, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $load.bytes.bv32($M.0, mptctl_miscdev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8897, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref.bv32.bv32(.str.2, $p1, 10bv32, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8899, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8899, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.bv8.bv32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8899, 24} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.bv32.bv8($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8899, 3} true;
  assume {:verifier.code 0} true;
  call mpt_event_deregister($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8900, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8900, 24} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.bv8.bv32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8900, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.bv32.bv8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8900, 3} true;
  assume {:verifier.code 0} true;
  call mpt_reset_deregister($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8901, 24} true;
  assume {:verifier.code 0} true;
  $i10 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8901, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.bv8.bv32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8901, 18} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.bv32.bv8($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8901, 3} true;
  assume {:verifier.code 0} true;
  call mpt_deregister($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8902, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8902, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.bv8.bv32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8902, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.bv32.bv8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8902, 3} true;
  assume {:verifier.code 0} true;
  call mpt_deregister($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8903, 3} true;
  assume {:verifier.code 0} true;
  call mpt_device_driver_deregister(1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8904, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mptctl_init: ref;
axiom (mptctl_init == $sub.ref(0, 318002));
procedure  mptctl_init()
  returns ($r: bv32)
{
  var $i0: bv32;
  var $i1: bv32;
  var $i2: bv32;
  var $i3: bv1;
  var $i4: bv32;
  var $i6: bv32;
  var $p7: ref;
  var $i8: bv32;
  var $i9: bv32;
  var $i10: bv8;
  var $i11: bv8;
  var $i12: bv32;
  var $i13: bv1;
  var $i14: bv8;
  var $i15: bv32;
  var $i16: bv1;
  var $i17: bv32;
  var $i18: bv32;
  var $i19: bv8;
  var $i20: bv8;
  var $i21: bv32;
  var $i22: bv1;
  var $i23: bv8;
  var $i24: bv32;
  var $i25: bv1;
  var $i26: bv32;
  var $i27: bv8;
  var $i28: bv32;
  var $i29: bv8;
  var $i30: bv32;
  var $i31: bv8;
  var $i32: bv32;
  var $i33: bv8;
  var $i34: bv32;
  var $i35: bv8;
  var $i36: bv32;
  var $i37: bv8;
  var $i38: bv32;
  var $i5: bv32;
  var $i39: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8852, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := printk.ref.ref.ref(.str.4, .str.5, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8853, 3} true;
  assume {:verifier.code 0} true;
  call $i1 := mpt_device_driver_register(mptctl_driver, 1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8854, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_misc_register_32(mptctl_miscdev);
  // WARNING: %3 = call i32 @ldv_misc_register_32(%struct.miscdevice* @mptctl_miscdev), !dbg !6794, !verifier.code !6790
  call {:cexpr "err"} boogie_si_record_bv32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8855, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.bv32($i2, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8855, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8856, 5} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.bv32(.str.7, 220bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8857, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $i2;
  goto $bb3;
$bb2:
  assume !(($i3 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8887, 3} true;
  assume {:verifier.code 0} true;
  call mpt_device_driver_deregister(1bv8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8888, 3} true;
  assume {:verifier.code 0} true;
  $i39 := $i5;
  goto $bb17;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8861, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := printk.ref(.str.8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8862, 72} true;
  assume {:verifier.code 0} true;
  $p7 := $load.bytes.ref($M.0, $add.ref(mptctl_miscdev, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8862, 97} true;
  assume {:verifier.code 0} true;
  $i8 := $load.bytes.bv32($M.0, mptctl_miscdev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8862, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := printk.ref.ref.bv32.bv32(.str.9, $p7, 10bv32, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8864, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := mpt_register(mptctl_reply, 1bv32, .str.10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8864, 13} true;
  assume {:verifier.code 0} true;
  $M.6 := $i10;
  call {:cexpr "mptctl_id"} boogie_si_record_bv8($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 22} true;
  assume {:verifier.code 0} true;
  $i11 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.bv8.bv32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 32} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.bv32($i12, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 38} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1bv1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8866, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := printk.ref(.str.11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8867, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv_misc_deregister_33(mptctl_miscdev);
  // WARNING: %23 = call i32 @ldv_misc_deregister_33(%struct.miscdevice* @mptctl_miscdev), !dbg !6821, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8869, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.bv32(0bv32, 16bv32);
  goto $bb3;
$bb7:
  assume !(($i13 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 56} true;
  assume {:verifier.code 0} true;
  $i14 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 41} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.bv8.bv32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 66} true;
  assume {:verifier.code 0} true;
  $i16 := $ugt.bv32($i15, 15bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8865, 7} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1bv1);
  goto $bb6;
$bb9:
  assume !(($i16 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8873, 24} true;
  assume {:verifier.code 0} true;
  call $i19 := mpt_register(mptctl_taskmgmt_reply, 1bv32, .str.12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8873, 22} true;
  assume {:verifier.code 0} true;
  $M.9 := $i19;
  call {:cexpr "mptctl_taskmgmt_id"} boogie_si_record_bv8($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 22} true;
  assume {:verifier.code 0} true;
  $i20 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.bv8.bv32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.bv32($i21, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 47} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1bv1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8875, 5} true;
  assume {:verifier.code 0} true;
  call $i26 := printk.ref(.str.11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8876, 26} true;
  assume {:verifier.code 0} true;
  $i27 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8876, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.bv8.bv32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8876, 20} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.bv32.bv8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8876, 5} true;
  assume {:verifier.code 0} true;
  call mpt_deregister($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8877, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := ldv_misc_deregister_34(mptctl_miscdev);
  // WARNING: %39 = call i32 @ldv_misc_deregister_34(%struct.miscdevice* @mptctl_miscdev), !dbg !6840, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8879, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.bv32(0bv32, 16bv32);
  goto $bb3;
$bb13:
  assume !(($i22 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 65} true;
  assume {:verifier.code 0} true;
  $i23 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 50} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.bv8.bv32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 84} true;
  assume {:verifier.code 0} true;
  $i25 := $ugt.bv32($i24, 15bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8874, 7} true;
  assume {:verifier.code 0} true;
  assume ($i25 == 1bv1);
  goto $bb12;
$bb15:
  assume !(($i25 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8883, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8883, 22} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.bv8.bv32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8883, 22} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.bv32.bv8($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8883, 3} true;
  assume {:verifier.code 0} true;
  call $i34 := mpt_reset_register($i33, mptctl_ioc_reset);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8884, 28} true;
  assume {:verifier.code 0} true;
  $i35 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8884, 22} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.bv8.bv32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8884, 22} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.bv32.bv8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8884, 3} true;
  assume {:verifier.code 0} true;
  call $i38 := mpt_event_register($i37, mptctl_event_process);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8885, 3} true;
  assume {:verifier.code 0} true;
  $i39 := 0bv32;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 8890, 1} true;
  assume {:verifier.code 0} true;
  $r := $i39;
  $exn := false;
  return;
}
const ldv_open_2: ref;
axiom (ldv_open_2 == $sub.ref(0, 319034));
procedure  ldv_open_2()
  returns ($r: bv32);
const ldv_release_2: ref;
axiom (ldv_release_2 == $sub.ref(0, 320066));
procedure  ldv_release_2()
  returns ($r: bv32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 321098));
procedure  ldv_check_final_state()
{
  var $i0: bv32;
  var $i1: bv1;
  var $i2: bv32;
  var $i3: bv1;
  var $i4: bv32;
  var $i5: bv1;
  var $i6: bv32;
  var $i7: bv1;
  var $i8: bv32;
  var $i9: bv1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10380, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10380, 34} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.bv32($i0, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10380, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10381, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10382, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10385, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10385, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.bv32($i2, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10385, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i3 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10386, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i3 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10390, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10390, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.bv32($i4, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10390, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i5 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10391, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10392, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i5 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10395, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10395, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.bv32($i6, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i7 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10396, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i7 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10400, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $M.27;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10400, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.bv32($i8, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10400, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i9 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10401, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10402, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i9 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 10405, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mpt_device_driver_register: ref;
axiom (mpt_device_driver_register == $sub.ref(0, 322130));
procedure  mpt_device_driver_register($p0: ref, $i1: bv8)
  returns ($r: bv32);
const ldv_misc_register_32: ref;
axiom (ldv_misc_register_32 == $sub.ref(0, 323162));
procedure  ldv_misc_register_32($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9434, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := misc_register($p0);
  // WARNING: %2 = call i32 @misc_register(%struct.miscdevice* %0), !dbg !6794, !verifier.code !6793
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !12945, metadata !6788), !dbg !12946, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9436, 24} true;
  assume {:verifier.code 0} true;
  $M.21 := 1bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9437, 3} true;
  assume {:verifier.code 0} true;
  call ldv_file_operations_2();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9438, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const mptctl_reply: ref;
axiom (mptctl_reply == $sub.ref(0, 324194));
procedure  mptctl_reply($p0: ref, $p1: ref, $p2: ref)
  returns ($r: bv32)
{
  var $i3: bv64;
  var $i4: bv1;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv32;
  var $i9: bv1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: bv8;
  var $i16: bv32;
  var $i17: bv32;
  var $p18: ref;
  var $p19: ref;
  var $i20: bv32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: bv32;
  var $i25: bv1;
  var $p26: ref;
  var $p27: ref;
  var $i28: bv8;
  var $i29: bv32;
  var $i30: bv32;
  var $i31: bv8;
  var $p32: ref;
  var $p33: ref;
  var $i34: bv64;
  var $i35: bv1;
  var $p36: ref;
  var $p37: ref;
  var $i38: bv8;
  var $i39: bv32;
  var $i40: bv32;
  var $i41: bv8;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: bv32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: bv8;
  var $i50: bv32;
  var $i51: bv32;
  var $i52: bv1;
  var $i53: bv32;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: bv64;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: bv16;
  var $i63: bv32;
  var $i64: bv1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: bv32;
  var $i69: bv1;
  var $p70: ref;
  var $i71: bv32;
  var $i72: bv32;
  var $i73: bv1;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: bv16;
  var $i80: bv32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: bv32;
  var $i85: bv32;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: bv8;
  var $i90: bv32;
  var $i91: bv1;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: bv8;
  var $i96: bv32;
  var $i97: bv1;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: bv8;
  var $i102: bv32;
  var $i103: bv1;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: bv8;
  var $i108: bv32;
  var $i109: bv1;
  var $p110: ref;
  var $i111: bv32;
  var $i112: bv32;
  var $i113: bv1;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: bv8;
  var $i120: bv32;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: bv8;
  var $i125: bv32;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: bv16;
  var $i130: bv32;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: bv32;
  var $i135: bv32;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: bv8;
  var $i140: bv32;
  var $i141: bv32;
  var $i142: bv1;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: bv8;
  var $i147: bv32;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: bv16;
  var $i155: bv32;
  var $p156: ref;
  var $p157: ref;
  var $i158: bv32;
  var $i159: bv64;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: bv64;
  var $p165: ref;
  var $p166: ref;
  var $i167: bv8;
  var $i168: bv32;
  var $i169: bv32;
  var $i170: bv8;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $i175: bv8;
  var $i176: bv32;
  var $i177: bv32;
  var $i178: bv1;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: bv8;
  var $i183: bv32;
  var $i184: bv1;
  var $p185: ref;
  var $p186: ref;
  var $i187: bv8;
  var $i188: bv32;
  var $i189: bv32;
  var $i190: bv8;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $i196: bv8;
  var $i197: bv32;
  var $i198: bv1;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $i204: bv8;
  var $i205: bv32;
  var $i206: bv32;
  var $i207: bv8;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: bv64;
  var $i213: bv1;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: bv8;
  var $i218: bv32;
  var $i219: bv1;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5983, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5983, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.bv64($i3, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5984, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb3;
$bb2:
  assume !(($i4 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6070, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5988, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5988, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $load.bytes.bv32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5988, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $and.bv32($i7, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5988, 35} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.bv32($i8, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5988, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 46} true;
  assume {:verifier.code 0} true;
  $p12 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 48} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 52} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 52} true;
  assume {:verifier.code 0} true;
  $i15 := $load.bytes.bv8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5990, 35} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.bv8.bv32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5989, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := printk.ref.ref.bv32.ref.ref(.str.13, $p11, $i16, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5991, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 12} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 4232);
  $p19 := $add.ref($add.ref($p0, 4232), 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 23} true;
  assume {:verifier.code 0} true;
  $i20 := $load.bytes.bv32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 45} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 49} true;
  assume {:verifier.code 0} true;
  $i24 := $load.bytes.bv32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 35} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.bv32($i20, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5994, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i25 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 7} true;
  assume {:verifier.code 0} true;
  $i212 := $p2i.ref.bv64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 29} true;
  assume {:verifier.code 0} true;
  $i213 := $ne.bv64($i212, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 69} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb55, $bb56;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 54} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 4232);
  $p27 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 65} true;
  assume {:verifier.code 0} true;
  $i28 := $load.bytes.bv8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 34} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.bv8.bv32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 72} true;
  assume {:verifier.code 0} true;
  $i30 := $or.bv32($i29, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.bv32.bv8($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 4232);
  $p33 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 5999, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p33, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6000, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.bv64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6000, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.bv64($i34, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6000, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i35 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6001, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i35 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 19} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p0, 4232);
  $p174 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 30} true;
  assume {:verifier.code 0} true;
  $i175 := $load.bytes.bv8($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.bv8.bv32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 37} true;
  assume {:verifier.code 0} true;
  $i177 := $and.bv32($i176, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 42} true;
  assume {:verifier.code 0} true;
  $i178 := $ne.bv32($i177, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i178} true;
  goto $bb46, $bb47;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 54} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 4232);
  $p37 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 65} true;
  assume {:verifier.code 0} true;
  $i38 := $load.bytes.bv8($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 34} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.bv8.bv32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 72} true;
  assume {:verifier.code 0} true;
  $i40 := $or.bv32($i39, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 28} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.bv32.bv8($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 4232);
  $p43 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6005, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p43, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6006, 16} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6006, 16} true;
  assume {:verifier.code 0} true;
  $i45 := $load.bytes.bv32($M.0, $p44);
  // WARNING: %57 = load i32, i32* %56, align 8, !dbg !6848, !verifier.code !6792
  call {:cexpr "_min1"} boogie_si_record_bv32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 24} true;
  assume {:verifier.code 0} true;
  $p46 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 32} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 32} true;
  assume {:verifier.code 0} true;
  $i49 := $load.bytes.bv8($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.bv8.bv32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6007, 42} true;
  assume {:verifier.code 0} true;
  $i51 := $mul.bv32($i50, 4bv32);
  // WARNING: %63 = mul nsw i32 %62, 4, !dbg !6855, !verifier.code !6792
  call {:cexpr "_min2"} boogie_si_record_bv32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6008, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $slt.bv32($i45, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6008, 8} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i52 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6008, 8} true;
  assume {:verifier.code 0} true;
  $i53 := $i45;
  goto $bb18;
$bb17:
  assume !(($i52 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6008, 8} true;
  assume {:verifier.code 0} true;
  $i53 := $i51;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6008, 8} true;
  assume {:verifier.code 0} true;
  // WARNING: %68 = phi i32 [ %57, %65 ], [ %63, %66 ], !dbg !6864, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6009, 26} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 4232);
  $p55 := $add.ref($add.ref($p0, 4232), 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6009, 3} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6009, 3} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6009, 68} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.bv32.bv64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6009, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.bv8($M.0, $M.0, $p56, $p57, $bv2int.64($i58), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 29} true;
  assume {:verifier.code 0} true;
  $p59 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 31} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 37} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 37} true;
  assume {:verifier.code 0} true;
  $i62 := $load.bytes.bv16($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.bv16.bv32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 47} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.bv32($i63, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 53} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb19, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 53} true;
  assume {:verifier.code 0} true;
  assume ($i64 == 1bv1);
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6011, 15} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6011, 15} true;
  assume {:verifier.code 0} true;
  $i71 := $load.bytes.bv32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6011, 27} true;
  assume {:verifier.code 0} true;
  $i72 := $and.bv32($i71, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6011, 37} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.bv32($i72, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb24, $bb25;
$bb21:
  assume !(($i64 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 63} true;
  assume {:verifier.code 0} true;
  $p65 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 65} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 71} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 71} true;
  assume {:verifier.code 0} true;
  $i68 := $load.bytes.bv32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 82} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.bv32($i68, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6010, 7} true;
  assume {:verifier.code 0} true;
  assume ($i69 == 1bv1);
  goto $bb20;
$bb23:
  assume !(($i69 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i73 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6012, 88} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6012, 72} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 27} true;
  assume {:verifier.code 0} true;
  $p76 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 29} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 35} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 35} true;
  assume {:verifier.code 0} true;
  $i79 := $load.bytes.bv16($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 14} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.bv16.bv32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 53} true;
  assume {:verifier.code 0} true;
  $p81 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 55} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 61} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p82, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6013, 61} true;
  assume {:verifier.code 0} true;
  $i84 := $load.bytes.bv32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6012, 7} true;
  assume {:verifier.code 0} true;
  call $i85 := printk.ref.ref.bv32.bv32(.str.14, $p75, $i80, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6014, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i73 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6017, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 27} true;
  assume {:verifier.code 0} true;
  $p86 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 29} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 33} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 33} true;
  assume {:verifier.code 0} true;
  $i89 := $load.bytes.bv8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.bv8.bv32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 42} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.bv32($i90, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 48} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb28, $bb30;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 48} true;
  assume {:verifier.code 0} true;
  assume ($i91 == 1bv1);
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 31} true;
  assume {:verifier.code 0} true;
  $p98 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 33} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 40} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p99, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 40} true;
  assume {:verifier.code 0} true;
  $i101 := $load.bytes.bv8($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.bv8.bv32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 51} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.bv32($i102, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 57} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb33, $bb35;
$bb30:
  assume !(($i91 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 71} true;
  assume {:verifier.code 0} true;
  $p92 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 73} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 77} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 77} true;
  assume {:verifier.code 0} true;
  $i95 := $load.bytes.bv8($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 51} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.bv8.bv32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 86} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.bv32($i96, 22bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 7} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1bv1);
  goto $bb29;
$bb32:
  assume !(($i97 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 57} true;
  assume {:verifier.code 0} true;
  assume ($i103 == 1bv1);
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6022, 17} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6022, 17} true;
  assume {:verifier.code 0} true;
  $i111 := $load.bytes.bv32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6022, 29} true;
  assume {:verifier.code 0} true;
  $i112 := $and.bv32($i111, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6022, 39} true;
  assume {:verifier.code 0} true;
  $i113 := $ne.bv32($i112, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6022, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb38, $bb39;
$bb35:
  assume !(($i103 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 82} true;
  assume {:verifier.code 0} true;
  $p104 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 84} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 91} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 91} true;
  assume {:verifier.code 0} true;
  $i107 := $load.bytes.bv8($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 60} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.bv8.bv32($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 101} true;
  assume {:verifier.code 0} true;
  $i109 := $ne.bv32($i108, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb36, $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6021, 9} true;
  assume {:verifier.code 0} true;
  assume ($i109 == 1bv1);
  goto $bb34;
$bb37:
  assume !(($i109 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb38:
  assume ($i113 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 32} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 16} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 52} true;
  assume {:verifier.code 0} true;
  $p116 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 54} true;
  assume {:verifier.code 0} true;
  $p117 := $bitcast.ref.ref($p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 61} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 61} true;
  assume {:verifier.code 0} true;
  $i119 := $load.bytes.bv8($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 39} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.bv8.bv32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 86} true;
  assume {:verifier.code 0} true;
  $p121 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 88} true;
  assume {:verifier.code 0} true;
  $p122 := $bitcast.ref.ref($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 95} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p122, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 95} true;
  assume {:verifier.code 0} true;
  $i124 := $load.bytes.bv8($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6024, 73} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.bv8.bv32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 29} true;
  assume {:verifier.code 0} true;
  $p126 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 31} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 38} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 38} true;
  assume {:verifier.code 0} true;
  $i129 := $load.bytes.bv16($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 16} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.bv16.bv32($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 54} true;
  assume {:verifier.code 0} true;
  $p131 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 56} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 63} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p132, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6025, 63} true;
  assume {:verifier.code 0} true;
  $i134 := $load.bytes.bv32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6023, 9} true;
  assume {:verifier.code 0} true;
  call $i135 := printk.ref.ref.bv32.bv32.bv32.bv32(.str.15, $p115, $i120, $i125, $i130, $i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i113 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6029, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 22} true;
  assume {:verifier.code 0} true;
  $p136 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 24} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 31} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 31} true;
  assume {:verifier.code 0} true;
  $i139 := $load.bytes.bv8($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 9} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.bv8.bv32($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 41} true;
  assume {:verifier.code 0} true;
  $i141 := $and.bv32($i140, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 41} true;
  assume {:verifier.code 0} true;
  $i142 := $ne.bv32($i141, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6032, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i142 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6033, 23} true;
  assume {:verifier.code 0} true;
  $p143 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6033, 25} true;
  assume {:verifier.code 0} true;
  $p144 := $bitcast.ref.ref($p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6033, 33} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6033, 33} true;
  assume {:verifier.code 0} true;
  $i146 := $load.bytes.bv8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6033, 12} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.bv8.bv32($i146);
  // WARNING: %179 = zext i8 %178 to i32, !dbg !6970, !verifier.code !6792
  call {:cexpr "sz"} boogie_si_record_bv32($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 30} true;
  assume {:verifier.code 0} true;
  $p148 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 32} true;
  assume {:verifier.code 0} true;
  $p149 := $bitcast.ref.ref($p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 38} true;
  assume {:verifier.code 0} true;
  $p150 := $bitcast.ref.ref($p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 44} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p150, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 52} true;
  assume {:verifier.code 0} true;
  $p152 := $bitcast.ref.ref($p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 56} true;
  assume {:verifier.code 0} true;
  $p153 := $p152;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 56} true;
  assume {:verifier.code 0} true;
  $i154 := $load.bytes.bv16($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6034, 19} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.bv16.bv32($i154);
  // WARNING: %187 = zext i16 %186 to i32, !dbg !6977, !verifier.code !6792
  call {:cexpr "req_index"} boogie_si_record_bv32($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6035, 33} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6035, 33} true;
  assume {:verifier.code 0} true;
  $p157 := $load.bytes.ref($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6035, 77} true;
  assume {:verifier.code 0} true;
  $i158 := $mul.bv32($i155, 64bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6035, 50} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.bv32.bv64($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6035, 48} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p157, $mul.ref($bv2int.64($i159), 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6036, 30} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p0, 4232);
  $p162 := $add.ref($add.ref($p0, 4232), 384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6036, 7} true;
  assume {:verifier.code 0} true;
  $p163 := $bitcast.ref.ref($p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6036, 77} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.bv32.bv64($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6036, 7} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.bv8($M.0, $M.0, $p163, $p160, $bv2int.64($i164), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 58} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p0, 4232);
  $p166 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 69} true;
  assume {:verifier.code 0} true;
  $i167 := $load.bytes.bv8($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 38} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.bv8.bv32($i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 76} true;
  assume {:verifier.code 0} true;
  $i169 := $or.bv32($i168, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 32} true;
  assume {:verifier.code 0} true;
  $i170 := $trunc.bv32.bv8($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 12} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p0, 4232);
  $p172 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6037, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p172, $i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6038, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume !(($i142 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6041, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6020, 89} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb46:
  assume ($i178 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 29} true;
  assume {:verifier.code 0} true;
  $p179 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 31} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 35} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p180, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 35} true;
  assume {:verifier.code 0} true;
  $i182 := $load.bytes.bv8($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.bv8.bv32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 44} true;
  assume {:verifier.code 0} true;
  $i184 := $eq.bv32($i183, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6046, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb48, $bb49;
$bb47:
  assume !(($i178 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb48:
  assume ($i184 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6047, 7} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 52} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 4232);
  $p186 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 63} true;
  assume {:verifier.code 0} true;
  $i187 := $load.bytes.bv8($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 32} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.bv8.bv32($i187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 70} true;
  assume {:verifier.code 0} true;
  $i189 := $and.bv32($i188, 251bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 32} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.bv32.bv8($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 12} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p0, 4232);
  $p192 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6048, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p192, $i190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6049, 23} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p0, 4232);
  $p194 := $add.ref($add.ref($p0, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6049, 7} true;
  assume {:verifier.code 0} true;
  call complete_($p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6050, 31} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p0, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6050, 31} true;
  assume {:verifier.code 0} true;
  $i196 := $load.bytes.bv8($M.0, $p195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6050, 11} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.bv8.bv32($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6050, 40} true;
  assume {:verifier.code 0} true;
  $i198 := $eq.bv32($i197, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6050, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb50, $bb51;
$bb49:
  assume !(($i184 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 52} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0, 4232);
  $p203 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 63} true;
  assume {:verifier.code 0} true;
  $i204 := $load.bytes.bv8($M.0, $p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 32} true;
  assume {:verifier.code 0} true;
  $i205 := $zext.bv8.bv32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 70} true;
  assume {:verifier.code 0} true;
  $i206 := $and.bv32($i205, 251bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 32} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.bv32.bv8($i206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 12} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p0, 4232);
  $p209 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6056, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p209, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6057, 23} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p0, 4232);
  $p211 := $add.ref($add.ref($p0, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6057, 7} true;
  assume {:verifier.code 0} true;
  call complete_($p211);
  assume {:verifier.code 0} true;
  goto $bb53;
$bb50:
  assume ($i198 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6051, 17} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p0, 4776);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6051, 17} true;
  assume {:verifier.code 0} true;
  $p200 := $load.bytes.ref($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6051, 41} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p0);
  call devirtbounce.3($p200, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6052, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i198 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6055, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6059, 3} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6045, 45} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb55:
  assume ($i213 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 100} true;
  assume {:verifier.code 0} true;
  $p214 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 102} true;
  assume {:verifier.code 0} true;
  $p215 := $bitcast.ref.ref($p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 108} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p215, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 108} true;
  assume {:verifier.code 0} true;
  $i217 := $load.bytes.bv8($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 72} true;
  assume {:verifier.code 0} true;
  $i218 := $sext.bv8.bv32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 118} true;
  assume {:verifier.code 0} true;
  $i219 := $slt.bv32($i218, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb58, $bb59;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 69} true;
  assume {:verifier.code 0} true;
  assume !(($i213 == 1bv1));
  goto $bb57;
$bb57:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb58:
  assume ($i219 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6064, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb3;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6063, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i219 == 1bv1));
  goto $bb57;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6068, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 1bv32;
  goto $bb3;
}
const mpt_register: ref;
axiom (mpt_register == $sub.ref(0, 325226));
procedure  mpt_register($p0: ref, $i1: bv32, $p2: ref)
  returns ($r: bv8);
const ldv_misc_deregister_33: ref;
axiom (ldv_misc_deregister_33 == $sub.ref(0, 326258));
procedure  ldv_misc_deregister_33($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9447, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := misc_deregister($p0);
  // WARNING: %2 = call i32 @misc_deregister(%struct.miscdevice* %0), !dbg !6794, !verifier.code !6793
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13232, metadata !6788), !dbg !13233, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9449, 24} true;
  assume {:verifier.code 0} true;
  $M.21 := 0bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9450, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const mptctl_taskmgmt_reply: ref;
axiom (mptctl_taskmgmt_reply == $sub.ref(0, 327290));
procedure  mptctl_taskmgmt_reply($p0: ref, $p1: ref, $p2: ref)
  returns ($r: bv32)
{
  var $i3: bv64;
  var $i4: bv1;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv32;
  var $i9: bv1;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $p13: ref;
  var $p14: ref;
  var $i15: bv8;
  var $i16: bv32;
  var $i17: bv32;
  var $i18: bv8;
  var $p19: ref;
  var $p20: ref;
  var $i21: bv64;
  var $i22: bv1;
  var $p23: ref;
  var $p24: ref;
  var $i25: bv8;
  var $i26: bv32;
  var $i27: bv32;
  var $i28: bv8;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: bv8;
  var $i35: bv32;
  var $i36: bv32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: bv1;
  var $i42: bv32;
  var $i43: bv64;
  var $p44: ref;
  var $p45: ref;
  var $i46: bv8;
  var $i47: bv32;
  var $i48: bv32;
  var $i49: bv1;
  var $p50: ref;
  var $p51: ref;
  var $i52: bv8;
  var $i53: bv32;
  var $i54: bv32;
  var $i55: bv8;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: bv8;
  var $i62: bv32;
  var $i63: bv1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i5: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6077, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.bv64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6077, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.bv64($i3, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6077, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6078, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb3;
$bb2:
  assume !(($i4 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6114, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6082, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6082, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $load.bytes.bv32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6082, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $and.bv32($i7, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6082, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.bv32($i8, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6083, 83} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6083, 67} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6083, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.ref.ref.ref(.str.16, $p11, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6085, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 57} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 3768);
  $p14 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 71} true;
  assume {:verifier.code 0} true;
  $i15 := $load.bytes.bv8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.bv8.bv32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 78} true;
  assume {:verifier.code 0} true;
  $i17 := $or.bv32($i16, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.bv32.bv8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 3768);
  $p20 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6088, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p20, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6089, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.bv64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6089, 26} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.bv64($i21, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6089, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6090, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i22 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 3768);
  $p45 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 33} true;
  assume {:verifier.code 0} true;
  $i46 := $load.bytes.bv8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 8} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.bv8.bv32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 40} true;
  assume {:verifier.code 0} true;
  $i48 := $and.bv32($i47, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 45} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.bv32($i48, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6099, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 57} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 3768);
  $p24 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 71} true;
  assume {:verifier.code 0} true;
  $i25 := $load.bytes.bv8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 37} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.bv8.bv32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 78} true;
  assume {:verifier.code 0} true;
  $i27 := $or.bv32($i26, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 31} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.bv32.bv8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 3768);
  $p30 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6094, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p30, $i28);
  // WARNING: store i8 %37, i8* %39, align 8, !dbg !6833, !verifier.code !6792
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 21} true;
  assume {:verifier.code 0} true;
  $p31 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 23} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 29} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $load.bytes.bv8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.bv8.bv32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6096, 39} true;
  assume {:verifier.code 0} true;
  $i36 := $mul.bv32($i35, 4bv32);
  // WARNING: %45 = mul nsw i32 %44, 4, !dbg !6840, !verifier.code !6792
  call {:cexpr "_min2"} boogie_si_record_bv32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 26} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 3768);
  $p38 := $add.ref($add.ref($p0, 3768), 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 3} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 3} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 84} true;
  assume {:verifier.code 0} true;
  $i41 := $slt.bv32(128bv32, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 78} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i41 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 78} true;
  assume {:verifier.code 0} true;
  $i42 := 128bv32;
  goto $bb14;
$bb13:
  assume !(($i41 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 78} true;
  assume {:verifier.code 0} true;
  $i42 := $i36;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 78} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 68} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.bv32.bv64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.bv8($M.0, $M.0, $p39, $p40, $bv2int.64($i43), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6097, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  assume ($i49 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6100, 5} true;
  assume {:verifier.code 0} true;
  call mpt_clear_taskmgmt_in_progress_flag($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 53} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 3768);
  $p51 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 67} true;
  assume {:verifier.code 0} true;
  $i52 := $load.bytes.bv8($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 33} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.bv8.bv32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 74} true;
  assume {:verifier.code 0} true;
  $i54 := $and.bv32($i53, 251bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 33} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.bv32.bv8($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 10} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 3768);
  $p57 := $add.ref($add.ref($p0, 3768), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6101, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p57, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6102, 21} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 3768);
  $p59 := $add.ref($add.ref($p0, 3768), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6102, 5} true;
  assume {:verifier.code 0} true;
  call complete_($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6103, 29} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6103, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $load.bytes.bv8($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6103, 9} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.bv8.bv32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6103, 38} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.bv32($i62, 2bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6103, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i49 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb17:
  assume ($i63 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6104, 15} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 4776);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6104, 15} true;
  assume {:verifier.code 0} true;
  $p65 := $load.bytes.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6104, 39} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p0);
  call devirtbounce.3($p65, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6105, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i63 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6108, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1bv32;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6112, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0bv32;
  goto $bb3;
}
const mpt_deregister: ref;
axiom (mpt_deregister == $sub.ref(0, 328322));
procedure  mpt_deregister($i0: bv8);
const ldv_misc_deregister_34: ref;
axiom (ldv_misc_deregister_34 == $sub.ref(0, 329354));
procedure  ldv_misc_deregister_34($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9459, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := misc_deregister($p0);
  // WARNING: %2 = call i32 @misc_deregister(%struct.miscdevice* %0), !dbg !6794, !verifier.code !6793
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13338, metadata !6788), !dbg !13339, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9461, 24} true;
  assume {:verifier.code 0} true;
  $M.21 := 0bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9462, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const mptctl_ioc_reset: ref;
axiom (mptctl_ioc_reset == $sub.ref(0, 330386));
procedure  mptctl_ioc_reset($p0: ref, $i1: bv32)
  returns ($r: bv32)
{
  var $i2: bv1;
  var $i3: bv1;
  var $i4: bv1;
  var $i5: bv1;
  var $p6: ref;
  var $i7: bv32;
  var $i8: bv32;
  var $i9: bv1;
  var $p10: ref;
  var $p11: ref;
  var $i12: bv32;
  var $p13: ref;
  var $i14: bv32;
  var $i15: bv32;
  var $i16: bv1;
  var $p17: ref;
  var $p18: ref;
  var $i19: bv32;
  var $p20: ref;
  var $i21: bv32;
  var $i22: bv32;
  var $i23: bv1;
  var $p24: ref;
  var $p25: ref;
  var $i26: bv32;
  var $p27: ref;
  var $p28: ref;
  var $i29: bv8;
  var $i30: bv32;
  var $i31: bv32;
  var $i32: bv1;
  var $p33: ref;
  var $p34: ref;
  var $i35: bv8;
  var $i36: bv32;
  var $i37: bv32;
  var $i38: bv8;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct._MPT_ADAPTER* %0, i64 0, metadata !13346, metadata !6788), !dbg !13347, !verifier.code !6790
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i2 := $slt.bv32($i1, 1bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1bv1);
  assume {:verifier.code 0} true;
  $i5 := $eq.bv32($i1, 0bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i2 == 1bv1));
  assume {:verifier.code 0} true;
  $i3 := $slt.bv32($i1, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i3 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6381, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6381, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $load.bytes.bv32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6381, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $and.bv32($i21, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6381, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.bv32($i22, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6381, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb18, $bb19;
$bb5:
  assume !(($i3 == 1bv1));
  assume {:verifier.code 0} true;
  $i4 := $eq.bv32($i1, 2bv32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i4 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6367, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6367, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $load.bytes.bv32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6367, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $and.bv32($i7, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6367, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.bv32($i8, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6367, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i4 == 1bv1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb9:
  assume ($i5 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6374, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6374, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $load.bytes.bv32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6374, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $and.bv32($i14, 256bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6374, 32} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.bv32($i15, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6374, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb15, $bb16;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1bv1));
  goto $bb8;
$bb11:
  assume ($i9 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6368, 73} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6368, 57} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6368, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.ref.ref(.str.17, $p11, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6369, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i9 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6372, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6397, 3} true;
  assume {:verifier.code 0} true;
  $r := 1bv32;
  $exn := false;
  return;
$bb15:
  assume ($i16 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6375, 71} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6375, 55} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6375, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref.ref.ref(.str.19, $p18, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6376, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i16 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6379, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb18:
  assume ($i23 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6382, 72} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6382, 56} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6382, 5} true;
  assume {:verifier.code 0} true;
  call $i26 := printk.ref.ref.ref(.str.20, $p25, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6383, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i23 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 4232);
  $p28 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $load.bytes.bv8($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 8} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.bv8.bv32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 37} true;
  assume {:verifier.code 0} true;
  $i31 := $and.bv32($i30, 4bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 42} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.bv32($i31, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6386, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i32 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 56} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 4232);
  $p34 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 67} true;
  assume {:verifier.code 0} true;
  $i35 := $load.bytes.bv8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.bv8.bv32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 74} true;
  assume {:verifier.code 0} true;
  $i37 := $or.bv32($i36, 8bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.bv32.bv8($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 10} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 4232);
  $p40 := $add.ref($add.ref($p0, 4232), 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6387, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv8($M.0, $p40, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6388, 21} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 4232);
  $p42 := $add.ref($add.ref($p0, 4232), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6388, 5} true;
  assume {:verifier.code 0} true;
  call complete_($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6389, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i32 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6392, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6394, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const mpt_reset_register: ref;
axiom (mpt_reset_register == $sub.ref(0, 331418));
procedure  mpt_reset_register($i0: bv8, $p1: ref)
  returns ($r: bv32);
const mptctl_event_process: ref;
axiom (mptctl_event_process == $sub.ref(0, 332450));
procedure  mptctl_event_process($p0: ref, $p1: ref)
  returns ($r: bv32)
{
  var $p2: ref;
  var $i3: bv32;
  var $i4: bv8;
  var $p5: ref;
  var $i6: bv32;
  var $i7: bv32;
  var $i8: bv1;
  var $p9: ref;
  var $p10: ref;
  var $i11: bv32;
  var $p12: ref;
  var $i13: bv64;
  var $i14: bv1;
  var $i15: bv32;
  var $i16: bv1;
  var $p17: ref;
  var $p18: ref;
  var $i19: bv32;
  var $i20: bv32;
  var $i21: bv1;
  var $p22: ref;
  var $p23: ref;
  var $i24: bv32;
  var $p25: ref;
  var $i26: bv32;
  var $i27: bv32;
  var $i28: bv1;
  var $p29: ref;
  var $p30: ref;
  var $i31: bv32;
  var $p32: ref;
  var $i33: bv32;
  var $i34: bv1;
  var $p35: ref;
  var $p36: ref;
  var $i37: bv64;
  var $i38: bv1;
  var $p39: ref;
  var $i40: bv32;
  var $i41: bv32;
  var $i42: bv32;
  var $i43: bv32;
  var $i44: bv1;
  var $p45: ref;
  var $p46: ref;
  var $i47: bv32;
  var $i48: bv32;
  var $i49: bv1;
  var $p50: ref;
  var $p51: ref;
  var $i52: bv32;
  var $p53: ref;
  var $i54: bv32;
  var $i55: bv32;
  var $i56: bv1;
  var $p57: ref;
  var $p58: ref;
  var $i59: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6405, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6405, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $load.bytes.bv32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6405, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.bv32.bv8($i3);
  // WARNING: %5 = trunc i32 %4 to i8, !dbg !6814, !verifier.code !6809
  call {:cexpr "event"} boogie_si_record_bv8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6406, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6406, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $load.bytes.bv32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6406, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $and.bv32($i6, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6406, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.bv32($i7, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6406, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6407, 61} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6407, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6407, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := printk.ref.ref.ref(.str.21, $p10, .str.22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6408, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6411, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $load.bytes.ref($M.0, async_queue);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6411, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.bv64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6411, 35} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.bv64($i13, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6411, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6412, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i14 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6456, 1} true;
  assume {:verifier.code 0} true;
  $r := 1bv32;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6416, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.bv8.bv32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6416, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.bv32($i15, 33bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6416, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6417, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 1664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6417, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p17, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6418, 15} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6418, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $load.bytes.bv32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6418, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $and.bv32($i19, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6418, 37} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.bv32($i20, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6418, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i16 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb10:
  assume ($i21 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6419, 79} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6419, 63} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6419, 7} true;
  assume {:verifier.code 0} true;
  call $i24 := printk.ref.ref(.str.23, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6420, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i21 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6423, 15} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6423, 15} true;
  assume {:verifier.code 0} true;
  $i26 := $load.bytes.bv32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6423, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $and.bv32($i26, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6423, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.bv32($i27, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6423, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i28 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6424, 79} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6424, 63} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6424, 7} true;
  assume {:verifier.code 0} true;
  call $i31 := printk.ref.ref(.str.23, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6425, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i28 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6428, 5} true;
  assume {:verifier.code 0} true;
  call kill_fasync(async_queue, 29bv32, 131073bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6429, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6433, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 1664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6433, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $load.bytes.bv32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6433, 32} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.bv32($i33, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6433, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i34 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6434, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume !(($i34 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 28} true;
  assume {:verifier.code 0} true;
  $p36 := $load.bytes.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.bv64($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 35} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.bv64($i37, 0bv64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i38 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 95} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 95} true;
  assume {:verifier.code 0} true;
  $i40 := $load.bytes.bv32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 109} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.bv8.bv32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 106} true;
  assume {:verifier.code 0} true;
  $i42 := $ashr.bv32($i40, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 122} true;
  assume {:verifier.code 0} true;
  $i43 := $and.bv32($i42, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 122} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.bv32($i43, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 86} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1bv1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb23:
  assume ($i44 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6439, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 1664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6439, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.bytes.bv32($M.0, $p45, 1bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6440, 15} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6440, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $load.bytes.bv32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6440, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $and.bv32($i47, 131072bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6440, 37} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.bv32($i48, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6440, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb25, $bb26;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6438, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i44 == 1bv1));
  goto $bb22;
$bb25:
  assume ($i49 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6441, 79} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6441, 63} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6441, 7} true;
  assume {:verifier.code 0} true;
  call $i52 := printk.ref.ref(.str.23, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6442, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i49 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6445, 15} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6445, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $load.bytes.bv32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6445, 27} true;
  assume {:verifier.code 0} true;
  $i55 := $and.bv32($i54, 16bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6445, 33} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.bv32($i55, 0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6445, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i56 == 1bv1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6446, 79} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6446, 63} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6446, 7} true;
  assume {:verifier.code 0} true;
  call $i59 := printk.ref.ref(.str.23, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6447, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i56 == 1bv1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6450, 5} true;
  assume {:verifier.code 0} true;
  call kill_fasync(async_queue, 29bv32, 131073bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6451, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 6454, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const mpt_event_register: ref;
axiom (mpt_event_register == $sub.ref(0, 333482));
procedure  mpt_event_register($i0: bv8, $p1: ref)
  returns ($r: bv32);
const mpt_device_driver_deregister: ref;
axiom (mpt_device_driver_deregister == $sub.ref(0, 334514));
procedure  mpt_device_driver_deregister($i0: bv8);
const kill_fasync: ref;
axiom (kill_fasync == $sub.ref(0, 335546));
procedure  kill_fasync($p0: ref, $i1: bv32, $i2: bv32);
const complete_: ref;
axiom (complete_ == $sub.ref(0, 336578));
procedure  complete_($p0: ref);
const misc_deregister: ref;
axiom (misc_deregister == $sub.ref(0, 337610));
procedure  misc_deregister($p0: ref)
  returns ($r: bv32);
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 338642));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: bv64, $i3: bv32, $i4: bv1);
const misc_register: ref;
axiom (misc_register == $sub.ref(0, 339674));
procedure  misc_register($p0: ref)
  returns ($r: bv32);
const ldv_misc_deregister_35: ref;
axiom (ldv_misc_deregister_35 == $sub.ref(0, 340706));
procedure  ldv_misc_deregister_35($p0: ref)
  returns ($r: bv32)
{
  var $i1: bv32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9471, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := misc_deregister($p0);
  // WARNING: %2 = call i32 @misc_deregister(%struct.miscdevice* %0), !dbg !6794, !verifier.code !6793
  call {:cexpr "tmp"} boogie_si_record_bv32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13529, metadata !6788), !dbg !13530, !verifier.code !6790
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9473, 24} true;
  assume {:verifier.code 0} true;
  $M.21 := 0bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(0bv32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-32_7a-drivers--message--fusion--mptctl.ko-entry_point_true-unreach-call.cil.out-n_f0mC.c", 9474, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const mpt_event_deregister: ref;
axiom (mpt_event_deregister == $sub.ref(0, 341738));
procedure  mpt_event_deregister($i0: bv8);
const mpt_reset_deregister: ref;
axiom (mpt_reset_deregister == $sub.ref(0, 342770));
procedure  mpt_reset_deregister($i0: bv8);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 343802));
procedure  __VERIFIER_assume($i0: bv32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !13537, metadata !6788), !dbg !13538, !verifier.code !6790
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 344834));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.bv32($p0: ref, p.1: bv32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 345866));
procedure  __SMACK_dummy($i0: bv32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 346898));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 347930));
procedure  __SMACK_nondet_char()
  returns ($r: bv8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 348962));
procedure  __SMACK_nondet_signed_char()
  returns ($r: bv8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 349994));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: bv8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 351026));
procedure  __SMACK_nondet_short()
  returns ($r: bv16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 352058));
procedure  __SMACK_nondet_signed_short()
  returns ($r: bv16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 353090));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: bv16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 354122));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: bv16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 355154));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: bv16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 356186));
procedure  __VERIFIER_nondet_int()
  returns ($r: bv32)
{
  var $i0: bv32;
  var $i1: bv1;
  var $i3: bv1;
  var $i2: bv1;
  var $i4: bv32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_bv32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !6787, !verifier.code !6788
  call {:cexpr "x"} boogie_si_record_bv32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.bv32($i0, $sub.bv32(0bv32, 2147483648bv32));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0bv1;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1bv1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.bv32($i0, 2147483647bv32);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1bv1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.bv1.bv32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 357218));
procedure  __SMACK_nondet_int()
  returns ($r: bv32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 358250));
procedure  __SMACK_nondet_signed_int()
  returns ($r: bv32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 359282));
procedure  __SMACK_nondet_unsigned()
  returns ($r: bv32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 360314));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: bv32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 361346));
procedure  __SMACK_nondet_long()
  returns ($r: bv64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 362378));
procedure  __SMACK_nondet_long_int()
  returns ($r: bv64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 363410));
procedure  __SMACK_nondet_signed_long()
  returns ($r: bv64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 364442));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: bv64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 365474));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: bv64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 366506));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: bv64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 367538));
procedure  __SMACK_nondet_long_long()
  returns ($r: bv64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 368570));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: bv64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 369602));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: bv64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 370634));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: bv64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 371666));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: bv64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 372698));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: bv64);
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 373730));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 374762));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const calloc: ref;
axiom (calloc == $sub.ref(0, 375794));
procedure  calloc($i0: bv64, $i1: bv64)
  returns ($r: ref)
{
  var $i2: bv32;
  var $i3: bv1;
  var $i5: bv64;
  var $p6: ref;
  var $i7: bv64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !13573, metadata !6788), !dbg !13574, !verifier.code !6790
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_bv32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.bv32($i2, 0bv32);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1bv1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1bv1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.bv64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.bv64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.bv8($M.0, $p6, 0bv8, $bv2int.64($i7), $bv2int.64($zext.bv32.bv64(1bv32)), (0bv1 == 1bv1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 376826));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 377858));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 378890));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 379922));
procedure  llvm.dbg.value($p0: ref, $i1: bv64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 380954));
procedure  __SMACK_static_init()
{
$bb0:
  $M.28 := 1bv32;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_bv32(1bv32);
  $M.15 := $0.ref;
  $M.16 := $0.ref;
  $M.17 := $0.ref;
  $M.18 := 0bv32;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_bv32(0bv32);
  $M.19 := 0bv32;
  call {:cexpr "ref_cnt"} boogie_si_record_bv32(0bv32);
  $M.20 := 0bv32;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_bv32(0bv32);
  $M.21 := 0bv32;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_bv32(0bv32);
  $M.22 := 0bv32;
  call {:cexpr "ldv_retval_0"} boogie_si_record_bv32(0bv32);
  $M.23 := 0bv32;
  call {:cexpr "ldv_retval_1"} boogie_si_record_bv32(0bv32);
  $M.24 := 0bv32;
  call {:cexpr "ldv_retval_2"} boogie_si_record_bv32(0bv32);
  $M.27 := 1bv32;
  call {:cexpr "ldv_mutex_mutex_of_device"} boogie_si_record_bv32(1bv32);
  $M.8 := 1bv32;
  call {:cexpr "ldv_mutex_mutex_of__MPT_MGMT"} boogie_si_record_bv32(1bv32);
  $M.1 := 1bv32;
  call {:cexpr "ldv_mutex_mpctl_mutex"} boogie_si_record_bv32(1bv32);
  $M.26 := 1bv32;
  call {:cexpr "ldv_mutex_lock"} boogie_si_record_bv32(1bv32);
  $M.25 := 1bv32;
  call {:cexpr "ldv_mutex_i_mutex_of_inode"} boogie_si_record_bv32(1bv32);
  $M.0 := $store.bytes.bv32($M.0, mpctl_mutex, 1bv32);
  $M.0 := $store.bytes.bv32($M.0, $add.ref(mpctl_mutex, 8), 0bv32);
  $M.0 := $store.bytes.bv32($M.0, $add.ref($add.ref(mpctl_mutex, 8), 4), $sub.bv32(0bv32, 559067475bv32));
  $M.0 := $store.bytes.bv32($M.0, $add.ref($add.ref(mpctl_mutex, 8), 8), $sub.bv32(0bv32, 1bv32));
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mpctl_mutex, 8), 16), $i2p.bv64.ref($sub.bv64(0bv64, 1bv64)));
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mpctl_mutex, 8), 24), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref($add.ref(mpctl_mutex, 8), 24), 8), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref($add.ref($add.ref(mpctl_mutex, 8), 24), 8), 8), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref($add.ref(mpctl_mutex, 8), 24), 24), .str.24);
  $M.0 := $store.bytes.bv32($M.0, $add.ref($add.ref($add.ref(mpctl_mutex, 8), 24), 32), 0bv32);
  $M.0 := $store.bytes.bv64($M.0, $add.ref($add.ref($add.ref(mpctl_mutex, 8), 24), 40), 0bv64);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mpctl_mutex, 80), $add.ref(mpctl_mutex, 80));
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mpctl_mutex, 80), 8), $add.ref(mpctl_mutex, 80));
  $M.0 := $store.bytes.ref($M.0, $add.ref(mpctl_mutex, 96), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mpctl_mutex, 104), mpctl_mutex);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mpctl_mutex, 112), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mpctl_mutex, 112), 8), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref($add.ref(mpctl_mutex, 112), 8), 8), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mpctl_mutex, 112), 24), .str.25);
  $M.0 := $store.bytes.bv32($M.0, $add.ref($add.ref(mpctl_mutex, 112), 32), 0bv32);
  $M.0 := $store.bytes.bv64($M.0, $add.ref($add.ref(mpctl_mutex, 112), 40), 0bv64);
  $M.0 := $store.bytes.ref($M.0, async_queue, $0.ref);
  $M.0 := $store.bytes.ref($M.0, mptctl_driver, mptctl_probe);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_driver, 8), mptctl_remove);
  $M.9 := 16bv8;
  call {:cexpr "mptctl_taskmgmt_id"} boogie_si_record_bv8(16bv8);
  $M.6 := 16bv8;
  call {:cexpr "mptctl_id"} boogie_si_record_bv8(16bv8);
  $M.0 := $store.bytes.ref($M.0, mptctl_fops, __this_module);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 8), no_llseek);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 16), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 24), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 32), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 40), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 48), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 56), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 64), mptctl_ioctl);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 72), compat_mpctl_ioctl);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 80), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 88), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 96), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 104), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 112), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 120), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 128), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 136), mptctl_fasync);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 144), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 152), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 160), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 168), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 176), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 184), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 192), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 200), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 208), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_fops, 216), $0.ref);
  $M.0 := $store.bytes.bv32($M.0, mptctl_miscdev, 220bv32);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 8), .str.3);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 16), mptctl_fops);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 24), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref($add.ref(mptctl_miscdev, 24), 8), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 40), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 48), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 56), $0.ref);
  $M.0 := $store.bytes.ref($M.0, $add.ref(mptctl_miscdev, 64), $0.ref);
  $M.0 := $store.bytes.bv16($M.0, $add.ref(mptctl_miscdev, 72), 0bv16);
  $M.0 := $store.bytes.bv8($M.0, .str.27, 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 1), 119bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 2), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 3), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 4), 107bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 5), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 6), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 7), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 8), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 9), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 10), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 11), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 12), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 13), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 14), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 15), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 16), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 17), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 18), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 19), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 20), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 21), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 22), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 23), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 24), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 25), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 26), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 27), 104bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 28), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 29), 119bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 30), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 31), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 32), 107bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 33), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 34), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 35), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 36), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 37), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 38), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 39), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 40), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 41), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 42), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 43), 88bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 44), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 45), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 46), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 47), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 48), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 49), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 50), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 51), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 52), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 53), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 54), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 55), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 56), 88bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 57), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 58), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 59), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 60), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 61), 102bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 62), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 63), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 64), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 65), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 66), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 67), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 68), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 69), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 70), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 71), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 72), 52bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 73), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 74), 50bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 75), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 76), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 77), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 78), 49bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 79), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 80), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 81), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 82), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 83), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 84), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 85), 122bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 86), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 87), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 88), 88bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 89), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 90), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 91), 51bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 92), 50bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 93), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 94), 55bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 95), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 96), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 97), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 98), 88bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 99), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 100), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 101), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 102), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 103), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 104), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 105), 104bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 106), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 107), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 108), 107bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 109), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 110), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 111), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 112), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 113), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 114), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 115), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 116), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 117), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 118), 52bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 119), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 120), 50bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 121), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 122), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 123), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 124), 49bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 125), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 126), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 127), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 128), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 129), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 130), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 131), 122bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 132), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 133), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 134), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 135), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 136), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 137), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 138), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 139), 103bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 140), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 141), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 142), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 143), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 144), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 145), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 146), 56bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 147), 55bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 148), 57bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 149), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 150), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 151), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 152), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 153), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 154), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 155), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 156), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 157), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 158), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 159), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 160), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 161), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 162), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 163), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 164), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 165), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 166), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 167), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 168), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 169), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 170), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 171), 51bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 172), 50bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 173), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 174), 55bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 175), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 176), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 177), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 178), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 179), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 180), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 181), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 182), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 183), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 184), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 185), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 186), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 187), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 188), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 189), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 190), 103bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 191), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 192), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 193), 102bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 194), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 195), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 196), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 197), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 198), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 199), 47bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 200), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 201), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 202), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 203), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 204), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 205), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 206), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 207), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.27, 208), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.70, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 7), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 8), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 9), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 10), 102bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 11), 119bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 12), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 13), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 14), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 15), 119bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 16), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 17), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 18), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 19), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 20), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.70, 21), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.88, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 7), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 8), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 9), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 10), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 11), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 12), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 13), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 14), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 15), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 16), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 17), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 18), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 19), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 20), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 21), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.88, 22), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.114, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 7), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 8), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 9), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 10), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 11), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 12), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 13), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 14), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 15), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 16), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 17), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 18), 97bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 19), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 20), 100bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.114, 21), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.126, 32bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.126, 1), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.128, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 7), 104bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 8), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 9), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 10), 104bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 11), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 12), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 13), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 14), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 15), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 16), 102bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 17), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.128, 18), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.34, 64bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 1), 40bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 2), 35bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 3), 41bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 4), 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 5), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 6), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 7), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 8), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 9), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 10), 117bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 11), 120bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 12), 45bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 13), 51bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 14), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 15), 48bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 16), 52bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 17), 46bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 18), 50bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 19), 48bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.34, 20), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.22, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 7), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 8), 118bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 9), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 10), 110bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 11), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 12), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 13), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 14), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 15), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 16), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 17), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 18), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 19), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.22, 20), 0bv8);
  $M.0 := $store.bytes.bv8($M.0, .str.18, 109bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 1), 112bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 2), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 3), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 4), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 5), 108bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 6), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 7), 105bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 8), 111bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 9), 99bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 10), 95bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 11), 114bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 12), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 13), 115bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 14), 101bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 15), 116bv8);
  $M.0 := $store.bytes.bv8($M.0, $add.ref(.str.18, 16), 0bv8);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 381986));
procedure  devirtbounce(funcPtr: ref, arg: ref, arg1: bv32, arg2: bv64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 383018));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: bv64, arg2: bv64, arg3: bv32, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 384050));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref, arg2: bv64, arg3: bv64, arg4: bv32, arg5: ref)
  returns ($r: bv64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 385082));
procedure  devirtbounce.3(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: bv1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(mptctl_remove, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1bv1);
  $p1 := $bitcast.ref.ref(arg);
  call mptctl_remove($p1);
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1bv1));
  assume false;
}
procedure  $memcpy.bv8(M.dst: [ref] bv8, M.src: [ref] bv8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] bv8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.bv8(M: [ref] bv8, dst: ref, val: bv8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] bv8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
