// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c --verifier-options  /bopt:boolControlVC /bopt:z3opt:SMT.MBQI=false /di /nonUniformUnfolding /staticInlining /noArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (32 regions)
var $M.0: [ref] i8;
var $M.1: ref;
var $M.2: [ref] i32;
var $M.3: [ref] i32;
var $M.4: i32;
var $M.5: i64;
var $M.6: i64;
var $M.7: i32;
var $M.8: i32;
var $M.9: [ref] ref;
var $M.10: [ref] i8;
var $M.11: [ref] i8;
var $M.12: [ref] i8;
var $M.13: [ref] i8;
var $M.14: [ref] i8;
var $M.15: [ref] i8;
var $M.16: [ref] i8;
var $M.17: [ref] i8;
var $M.18: [ref] i8;
var $M.19: [ref] i8;
var $M.20: [ref] i8;
var $M.21: [ref] i8;
var $M.22: [ref] i8;
var $M.23: [ref] i8;
var $M.24: [ref] i8;
var $M.25: [ref] i8;
var $M.26: [ref] i8;
var $M.27: [ref] i8;
var $M.28: [ref] i8;
var $M.29: [ref] i8;
var $M.30: [ref] i8;
var $M.31: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 251614));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32800));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const serial_hsu_pops: ref;
axiom (serial_hsu_pops == $sub.ref(0, 1216));
const serial_hsu_pm_ops: ref;
axiom (serial_hsu_pm_ops == $sub.ref(0, 2424));
const {:count 4} pci_ids: ref;
axiom (pci_ids == $sub.ref(0, 3576));
const hsu_pci_driver: ref;
axiom (hsu_pci_driver == $sub.ref(0, 4848));
const serial_hsu_reg: ref;
axiom (serial_hsu_reg == $sub.ref(0, 5936));
const dma_regs_ops: ref;
axiom (dma_regs_ops == $sub.ref(0, 7168));
const port_regs_ops: ref;
axiom (port_regs_ops == $sub.ref(0, 8400));
const phsu: ref;
axiom (phsu == $sub.ref(0, 9432));
const {:count 3} serial_hsu_ports: ref;
axiom (serial_hsu_ports == $sub.ref(0, 10480));
const {:count 15} __param_str_hsu_dma_enable: ref;
axiom (__param_str_hsu_dma_enable == $sub.ref(0, 11519));
const res_serial_hsu_probe_43: ref;
axiom (res_serial_hsu_probe_43 == $sub.ref(0, 12547));
const res_dma_show_regs_3: ref;
axiom (res_dma_show_regs_3 == $sub.ref(0, 13579));
const res_port_show_regs_2: ref;
axiom (res_port_show_regs_2 == $sub.ref(0, 14611));
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 15639));
const hsu_dma_enable: ref;
axiom (hsu_dma_enable == $sub.ref(0, 16667));
const ldv_mutex: ref;
axiom (ldv_mutex == $sub.ref(0, 17695));
const {:count 28} __mod_alias1507: ref;
axiom (__mod_alias1507 == $sub.ref(0, 18747));
const {:count 15} __mod_license1506: ref;
axiom (__mod_license1506 == $sub.ref(0, 19786));
const {:count 131} __mod_hsu_dma_enable55: ref;
axiom (__mod_hsu_dma_enable55 == $sub.ref(0, 20941));
const {:count 28} __mod_hsu_dma_enabletype53: ref;
axiom (__mod_hsu_dma_enabletype53 == $sub.ref(0, 21993));
const __param_hsu_dma_enable: ref;
axiom (__param_hsu_dma_enable == $sub.ref(0, 23049));
const param_ops_int: ref;
axiom (param_ops_int == $sub.ref(0, 32776));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32784));
const {:count 24} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 24097));
const {:count 35} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 25156));
const {:count 15} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 26195));
const {:count 15} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 27234));
const {:count 15} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 28273));
const {:count 15} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 29312));
const {:count 15} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 30351));
const {:count 15} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 31390));
const {:count 15} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 32429));
const {:count 14} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 33467));
const {:count 15} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 34506));
const {:count 15} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 35545));
const {:count 32} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 36601));
const {:count 14} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 37639));
const {:count 15} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 38678));
const {:count 15} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 39717));
const {:count 17} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 40758));
const {:count 17} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 41799));
const {:count 17} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 42840));
const {:count 11} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 43875));
const {:count 7} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 44906));
const {:count 11} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 45941));
const {:count 46} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 47011));
const {:count 52} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 48087));
const {:count 19} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 49130));
const {:count 8} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 50162));
const {:count 17} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 51203));
const {:count 42} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 52269));
const {:count 47} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 53340));
const .str: ref;
axiom (.str == $sub.ref(0, 54405));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32792));
const {:count 5} llvm.used: ref;
axiom (llvm.used == $sub.ref(0, 55469));
const {:count 4} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 56497));
const iomem_resource: ref;
axiom (iomem_resource == $sub.ref(0, 32800));
const {:count 11} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 57532));
const {:count 37} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 58593));
const {:count 26} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 59643));
const {:count 11} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 60678));
const {:count 4} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 61706));
const {:count 13} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 62743));
const {:count 17} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 63784));
const {:count 14} .str.2.13: ref;
axiom (.str.2.13 == $sub.ref(0, 64822));
const serial_hsu_tx_empty: ref;
axiom (serial_hsu_tx_empty == $sub.ref(0, 65854));
procedure  serial_hsu_tx_empty($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7396, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7397, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4417, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7398, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7399, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7399, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7399, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7400, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7402, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7402, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7405, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7405, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7408, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7409, 17} true;
  assume {:verifier.code 0} true;
  call $p9 := spinlock_check($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7410, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := _raw_spin_lock_irqsave($p9);
  // WARNING: %15 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %14), !dbg !4447, !verifier.code !4408
  call {:cexpr "flags"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7412, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7416, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7421, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := serial_in($p7, 5);
  // WARNING: %18 = call i32 @serial_in(%struct.uart_hsu_port* %8, i32 5), !dbg !4452, !verifier.code !4408
  call {:cexpr "tmp___9"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7423, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7423, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7423, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7425, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 1;
  goto $bb9;
$bb8:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7429, 17} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7430, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p15, $i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7432, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const serial_hsu_set_mctrl: ref;
axiom (serial_hsu_set_mctrl == $sub.ref(0, 66886));
procedure  serial_hsu_set_mctrl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i8;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $i26: i8;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i8;
  var $i32: i8;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i37: i8;
  var $i38: i8;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i8;
  var $i47: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !4470, metadata !4406), !dbg !4471, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7529, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7530, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i32($p2);
  // WARNING: %4 = ptrtoint %struct.uart_port* %3 to i32, !dbg !4419, !verifier.code !4408
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7531, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7532, 28} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7532, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7532, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, $mul.ref($i6, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7533, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %9, i64 0, metadata !4492, metadata !4406), !dbg !4493, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7535, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7535, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7536, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32(0);
  // WARNING: %13 = zext i8 0 to i32, !dbg !4436, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7537, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i32($i11, 2);
  // WARNING: %14 = or i32 %13, 2, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7538, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  // WARNING: %15 = trunc i32 %14 to i8, !dbg !4443, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7539, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7542, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7542, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7542, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7543, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i14);
  // WARNING: %21 = zext i8 %.0 to i32, !dbg !4448, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7544, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i17, 1);
  // WARNING: %22 = or i32 %21, 1, !dbg !4452, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7545, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  // WARNING: %23 = trunc i32 %22 to i8, !dbg !4455, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7546, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb6;
$bb5:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i20 := $i14;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7549, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i1, 8192);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7549, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7549, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7550, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i20);
  // WARNING: %29 = zext i8 %.1 to i32, !dbg !4460, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7551, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $or.i32($i23, 4);
  // WARNING: %30 = or i32 %29, 4, !dbg !4464, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7552, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  // WARNING: %31 = trunc i32 %30 to i8, !dbg !4467, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7553, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $i25;
  goto $bb9;
$bb8:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i26 := $i20;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7556, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i1, 16384);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7556, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7556, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7557, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i26);
  // WARNING: %37 = zext i8 %.2 to i32, !dbg !4472, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7558, 31} true;
  assume {:verifier.code 0} true;
  $i30 := $or.i32($i29, 8);
  // WARNING: %38 = or i32 %37, 8, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7559, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i8($i30);
  // WARNING: %39 = trunc i32 %38 to i8, !dbg !4479, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7560, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $i31;
  goto $bb12;
$bb11:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  $i32 := $i26;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7563, 13} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7563, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7563, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7564, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i32);
  // WARNING: %45 = zext i8 %.3 to i32, !dbg !4484, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7565, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $or.i32($i35, 16);
  // WARNING: %46 = or i32 %45, 16, !dbg !4488, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7566, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  // WARNING: %47 = trunc i32 %46 to i8, !dbg !4491, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7567, 3} true;
  assume {:verifier.code 0} true;
  $i38 := $i37;
  goto $bb15;
$bb14:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i38 := $i32;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7571, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p8);
  // WARNING: %50 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4493, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7572, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 258);
  // WARNING: %51 = add i64 %50, 258, !dbg !4497, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7573, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7573, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  // WARNING: %53 = load i8, i8* %52, align 1, !dbg !4501, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7574, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  // WARNING: %54 = zext i8 %53 to i32, !dbg !4504, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7575, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i38);
  // WARNING: %55 = zext i8 %.4 to i32, !dbg !4507, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7576, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i44, $i43);
  // WARNING: %56 = or i32 %55, %54, !dbg !4510, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7577, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  // WARNING: %57 = trunc i32 %56 to i8, !dbg !4513, !verifier.code !4408
  call {:cexpr "mcr"} boogie_si_record_i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7578, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  // WARNING: %58 = zext i8 %57 to i32, !dbg !4514, !verifier.code !4408
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7579, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p8, 4, $i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7581, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_get_mctrl: ref;
axiom (serial_hsu_get_mctrl == $sub.ref(0, 67918));
procedure  serial_hsu_get_mctrl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i32;
  var $i29: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7455, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7456, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4418, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7457, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7458, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7458, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7458, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7459, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7460, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_in($p7, 6);
  // WARNING: %9 = call i32 @serial_in(%struct.uart_hsu_port* %8, i32 6), !dbg !4430, !verifier.code !4408
  call {:cexpr "tmp___7"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7461, 12} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  // WARNING: %10 = trunc i32 %9 to i8, !dbg !4433, !verifier.code !4408
  call {:cexpr "status"} boogie_si_record_i8($i9);
  // WARNING: call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !4610, metadata !4406), !dbg !4611, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7465, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  // WARNING: %11 = zext i8 %10 to i32, !dbg !4438, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7466, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, 128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7466, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7466, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7467, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32(0, 64);
  // WARNING: %15 = or i32 0, 64, !dbg !4445, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7468, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7473, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i9);
  // WARNING: %18 = zext i8 %10 to i32, !dbg !4448, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7474, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7474, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7474, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7475, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i14, 128);
  // WARNING: %22 = or i32 %.0, 128, !dbg !4455, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7476, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i18;
  goto $bb6;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i19 := $i14;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7481, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i9);
  // WARNING: %25 = zext i8 %10 to i32, !dbg !4458, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7482, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i20, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7482, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7482, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7483, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i19, 256);
  // WARNING: %29 = or i32 %.1, 256, !dbg !4465, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7484, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb9;
$bb8:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i24 := $i19;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7489, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i9);
  // WARNING: %32 = zext i8 %10 to i32, !dbg !4468, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7490, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i25, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7490, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7490, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7491, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $or.i32($i24, 32);
  // WARNING: %36 = or i32 %.2, 32, !dbg !4475, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7492, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i28;
  goto $bb12;
$bb11:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i29 := $i24;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7496, 3} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
}
const serial_hsu_stop_tx: ref;
axiom (serial_hsu_stop_tx == $sub.ref(0, 68950));
procedure  serial_hsu_stop_tx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5992, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5993, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4417, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5994, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5995, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5995, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5995, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5996, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5997, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5998, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 288);
  // WARNING: %10 = add i64 %9, 288, !dbg !4432, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5999, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5999, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6001, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p7);
  // WARNING: %13 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4439, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6002, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 352);
  // WARNING: %14 = add i64 %13, 352, !dbg !4443, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6003, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6005, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p11);
  // WARNING: %19 = ptrtoint %struct.hsu_dma_chan* %12 to i64, !dbg !4450, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6006, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 16);
  // WARNING: %20 = add i64 %19, 16, !dbg !4455, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6007, 21} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6007, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6008, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6010, 5} true;
  assume {:verifier.code 0} true;
  call writel(0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6012, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6014, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p7);
  // WARNING: %25 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4469, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6015, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 256);
  // WARNING: %26 = add i64 %25, 256, !dbg !4474, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6016, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6016, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  // WARNING: %28 = load i8, i8* %27, align 1, !dbg !4478, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6017, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  // WARNING: %29 = zext i8 %28 to i32, !dbg !4481, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6018, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6018, 21} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6018, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6040, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6020, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p7);
  // WARNING: %33 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4487, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6021, 33} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 256);
  // WARNING: %34 = add i64 %33, 256, !dbg !4492, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6022, 21} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p7);
  // WARNING: %35 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4495, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6023, 33} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 256);
  // WARNING: %36 = add i64 %35, 256, !dbg !4498, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6024, 23} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6024, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  // WARNING: %38 = load i8, i8* %37, align 1, !dbg !4502, !verifier.code !4408
  call {:cexpr "__cil_tmp27"} boogie_si_record_i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6025, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  // WARNING: %39 = zext i8 %38 to i32, !dbg !4505, !verifier.code !4408
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6026, 33} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i35, $sub.i32(0, 3));
  // WARNING: %40 = and i32 %39, -3, !dbg !4508, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6027, 41} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6027, 9} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6027, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6028, 21} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p7);
  // WARNING: %43 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4514, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6029, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 256);
  // WARNING: %44 = add i64 %43, 256, !dbg !4517, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6030, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6030, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  // WARNING: %46 = load i8, i8* %45, align 1, !dbg !4521, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6031, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  // WARNING: %47 = zext i8 %46 to i32, !dbg !4524, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6032, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, $i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6034, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial_hsu_start_tx: ref;
axiom (serial_hsu_start_tx == $sub.ref(0, 69982));
procedure  serial_hsu_start_tx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i32;
  var $i28: i8;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i8;
  var $i34: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5911, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5912, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4417, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5913, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5914, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5914, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5914, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5915, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5917, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5918, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 352);
  // WARNING: %10 = add i64 %9, 352, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5919, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5919, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5919, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5919, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5921, 5} true;
  assume {:verifier.code 0} true;
  call hsu_dma_tx($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5923, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5925, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p7);
  // WARNING: %16 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4444, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5926, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 256);
  // WARNING: %17 = add i64 %16, 256, !dbg !4449, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5927, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5927, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  // WARNING: %19 = load i8, i8* %18, align 1, !dbg !4453, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5928, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  // WARNING: %20 = zext i8 %19 to i32, !dbg !4456, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5929, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 2);
  // WARNING: %21 = and i32 %20, 2, !dbg !4459, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5930, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5930, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5952, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5932, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p7);
  // WARNING: %24 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4465, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5933, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 256);
  // WARNING: %25 = add i64 %24, 256, !dbg !4470, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5934, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p7);
  // WARNING: %26 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4473, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5935, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 256);
  // WARNING: %27 = add i64 %26, 256, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5936, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5936, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  // WARNING: %29 = load i8, i8* %28, align 1, !dbg !4480, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5937, 21} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  // WARNING: %30 = zext i8 %29 to i32, !dbg !4483, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5938, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $or.i32($i26, 2);
  // WARNING: %31 = or i32 %30, 2, !dbg !4486, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5939, 41} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5939, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5939, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5940, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p7);
  // WARNING: %34 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4492, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5941, 33} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 256);
  // WARNING: %35 = add i64 %34, 256, !dbg !4495, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5942, 23} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5942, 21} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  // WARNING: %37 = load i8, i8* %36, align 1, !dbg !4499, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5943, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  // WARNING: %38 = zext i8 %37 to i32, !dbg !4502, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5944, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, $i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5946, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial_hsu_stop_rx: ref;
axiom (serial_hsu_stop_rx == $sub.ref(0, 71014));
procedure  serial_hsu_stop_rx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6325, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6326, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4417, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6327, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6328, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6328, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6328, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6329, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6330, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6331, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 296);
  // WARNING: %10 = add i64 %9, 296, !dbg !4432, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6332, 12} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6332, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6334, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p7);
  // WARNING: %13 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4439, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6335, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 352);
  // WARNING: %14 = add i64 %13, 352, !dbg !4443, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6336, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6336, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6336, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6336, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6338, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p11);
  // WARNING: %19 = ptrtoint %struct.hsu_dma_chan* %12 to i64, !dbg !4450, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6339, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 16);
  // WARNING: %20 = add i64 %19, 16, !dbg !4455, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6340, 21} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6340, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6341, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6343, 5} true;
  assume {:verifier.code 0} true;
  call writel(2, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6345, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6347, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p7);
  // WARNING: %25 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4469, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6348, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 256);
  // WARNING: %26 = add i64 %25, 256, !dbg !4474, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6349, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p7);
  // WARNING: %27 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4477, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6350, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 256);
  // WARNING: %28 = add i64 %27, 256, !dbg !4480, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6351, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6351, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  // WARNING: %30 = load i8, i8* %29, align 1, !dbg !4484, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6352, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  // WARNING: %31 = zext i8 %30 to i32, !dbg !4487, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6353, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28, $sub.i32(0, 5));
  // WARNING: %32 = and i32 %31, -5, !dbg !4490, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6354, 39} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6354, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6354, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, $i30);
  // WARNING: store i8 %33, i8* %34, align 1, !dbg !4495, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6356, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p7);
  // WARNING: %35 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4498, !verifier.code !4408
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6357, 31} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 108);
  // WARNING: %36 = add i64 %35, 108, !dbg !4501, !verifier.code !4408
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i33);
  // WARNING: call void @llvm.dbg.value(metadata i64 %36, i64 0, metadata !4977, metadata !4406), !dbg !4978, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6359, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p7);
  // WARNING: %37 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4506, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6360, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 108);
  // WARNING: %38 = add i64 %37, 108, !dbg !4509, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6361, 21} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6361, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  // WARNING: %40 = load i32, i32* %39, align 4, !dbg !4513, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6362, 50} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i37, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6362, 7} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6362, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6363, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p7);
  // WARNING: %43 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4519, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6364, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 256);
  // WARNING: %44 = add i64 %43, 256, !dbg !4522, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6365, 21} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6365, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  // WARNING: %46 = load i8, i8* %45, align 1, !dbg !4526, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i8($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6366, 19} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  // WARNING: %47 = zext i8 %46 to i32, !dbg !4529, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6367, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, $i44);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6371, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_enable_ms: ref;
axiom (serial_hsu_enable_ms == $sub.ref(0, 72046));
procedure  serial_hsu_enable_ms($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5382, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5383, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4418, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5384, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5385, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5385, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5385, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5386, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5387, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4430, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5388, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 256);
  // WARNING: %10 = add i64 %9, 256, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5389, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p7);
  // WARNING: %11 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4436, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5390, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 256);
  // WARNING: %12 = add i64 %11, 256, !dbg !4439, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5391, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5391, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  // WARNING: %14 = load i8, i8* %13, align 1, !dbg !4443, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5392, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  // WARNING: %15 = zext i8 %14 to i32, !dbg !4446, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5393, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, 8);
  // WARNING: %16 = or i32 %15, 8, !dbg !4449, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5394, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5394, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5394, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5395, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p7);
  // WARNING: %19 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4455, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5396, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 256);
  // WARNING: %20 = add i64 %19, 256, !dbg !4458, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5397, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5397, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  // WARNING: %22 = load i8, i8* %21, align 1, !dbg !4462, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5398, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  // WARNING: %23 = zext i8 %22 to i32, !dbg !4465, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5399, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, $i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5401, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_break_ctl: ref;
axiom (serial_hsu_break_ctl == $sub.ref(0, 73078));
procedure  serial_hsu_break_ctl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i8;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $p38: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5074, metadata !4406), !dbg !5075, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7618, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7619, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i32($p2);
  // WARNING: %4 = ptrtoint %struct.uart_port* %3 to i32, !dbg !4419, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7620, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7621, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7621, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7621, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, $mul.ref($i6, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7622, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7624, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7624, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7627, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7627, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7630, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7631, 17} true;
  assume {:verifier.code 0} true;
  call $p10 := spinlock_check($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7632, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := _raw_spin_lock_irqsave($p10);
  // WARNING: %16 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %15), !dbg !4449, !verifier.code !4408
  call {:cexpr "flags"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7638, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7642, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7642, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7643, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p8);
  // WARNING: %21 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4457, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7644, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 257);
  // WARNING: %22 = add i64 %21, 257, !dbg !4461, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7645, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p8);
  // WARNING: %23 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4464, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7646, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 257);
  // WARNING: %24 = add i64 %23, 257, !dbg !4467, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7647, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7647, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  // WARNING: %26 = load i8, i8* %25, align 1, !dbg !4471, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7648, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  // WARNING: %27 = zext i8 %26 to i32, !dbg !4474, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7649, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i19, 64);
  // WARNING: %28 = or i32 %27, 64, !dbg !4477, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7650, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7650, 7} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7650, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7651, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7652, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p8);
  // WARNING: %32 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4484, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7653, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 257);
  // WARNING: %33 = add i64 %32, 257, !dbg !4488, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7654, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p8);
  // WARNING: %34 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4491, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7655, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 257);
  // WARNING: %35 = add i64 %34, 257, !dbg !4494, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7656, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7656, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  // WARNING: %37 = load i8, i8* %36, align 1, !dbg !4498, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7657, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  // WARNING: %38 = zext i8 %37 to i32, !dbg !4501, !verifier.code !4408
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7658, 31} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, $sub.i32(0, 65));
  // WARNING: %39 = and i32 %38, -65, !dbg !4504, !verifier.code !4408
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7659, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i8($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7659, 7} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7659, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i31);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7662, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p8);
  // WARNING: %43 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4510, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7663, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 257);
  // WARNING: %44 = add i64 %43, 257, !dbg !4514, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7664, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7664, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i8($M.0, $p35);
  // WARNING: %46 = load i8, i8* %45, align 1, !dbg !4518, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7665, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  // WARNING: %47 = zext i8 %46 to i32, !dbg !4521, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7666, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p8, 3, $i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7667, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7668, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p38, $i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7670, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_startup: ref;
axiom (serial_hsu_startup == $sub.ref(0, 74110));
procedure  serial_hsu_startup($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i1;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i64;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: i64;
  var $i101: i64;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i64;
  var $p110: ref;
  var $i111: i64;
  var $i112: i64;
  var $i113: i32;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i64;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i64;
  var $i125: i64;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7787, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7788, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4418, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7789, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7790, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7790, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7790, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7791, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7792, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4430, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7793, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 280);
  // WARNING: %10 = add i64 %9, 280, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7794, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7794, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7795, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := pm_runtime_get_sync($p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7796, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7797, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 2, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7798, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7799, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := serial_in($p7, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7800, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := serial_in($p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7801, 3} true;
  assume {:verifier.code 0} true;
  call $i15 := serial_in($p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7802, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := serial_in($p7, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7803, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 3, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7806, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7806, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7809, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7809, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7812, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7813, 17} true;
  assume {:verifier.code 0} true;
  call $p18 := spinlock_check($p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7814, 15} true;
  assume {:verifier.code 0} true;
  call $i19 := _raw_spin_lock_irqsave($p18);
  // WARNING: %24 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %23), !dbg !4467, !verifier.code !4408
  call {:cexpr "flags"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7820, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7826, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p7);
  // WARNING: %27 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4474, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7827, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 196);
  // WARNING: %28 = add i64 %27, 196, !dbg !4478, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i21);
  // WARNING: call void @llvm.dbg.value(metadata i64 %28, i64 0, metadata !5268, metadata !4406), !dbg !5269, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7829, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p7);
  // WARNING: %29 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4483, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7830, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 196);
  // WARNING: %30 = add i64 %29, 196, !dbg !4486, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7831, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7831, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  // WARNING: %32 = load i32, i32* %31, align 4, !dbg !4490, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7832, 48} true;
  assume {:verifier.code 0} true;
  $i26 := $or.i32($i25, 16384);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7832, 5} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7832, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7833, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %35, i64 0, metadata !5286, metadata !4406), !dbg !5287, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7835, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p7);
  // WARNING: %36 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4501, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7836, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 196);
  // WARNING: %37 = add i64 %36, 196, !dbg !4504, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7837, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7837, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  // WARNING: %39 = load i32, i32* %38, align 4, !dbg !4508, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7838, 3} true;
  assume {:verifier.code 0} true;
  call serial_hsu_set_mctrl($p28, $i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7841, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p7);
  // WARNING: %40 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4512, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7842, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 352);
  // WARNING: %41 = add i64 %40, 352, !dbg !4516, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7843, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7843, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  // WARNING: %43 = load i32, i32* %42, align 4, !dbg !4520, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7844, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7844, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7849, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p7);
  // WARNING: %50 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4536, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7850, 31} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 256);
  // WARNING: %51 = add i64 %50, 256, !dbg !4540, !verifier.code !4408
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7851, 7} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7851, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p43, 0);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7845, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p7);
  // WARNING: %46 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4526, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7846, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 256);
  // WARNING: %47 = add i64 %46, 256, !dbg !4530, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7847, 7} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7847, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, 21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7848, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7855, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p7);
  // WARNING: %54 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4545, !verifier.code !4408
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7856, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 256);
  // WARNING: %55 = add i64 %54, 256, !dbg !4549, !verifier.code !4408
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7857, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7857, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  // WARNING: %57 = load i8, i8* %56, align 1, !dbg !4553, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i8($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7858, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  // WARNING: %58 = zext i8 %57 to i32, !dbg !4556, !verifier.code !4408
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7859, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, $i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7860, 17} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7861, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p49, $i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7864, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p7);
  // WARNING: %60 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4564, !verifier.code !4408
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7865, 29} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 352);
  // WARNING: %61 = add i64 %60, 352, !dbg !4568, !verifier.code !4408
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7866, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7866, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7866, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7866, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7868, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p0);
  // WARNING: %66 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4575, !verifier.code !4408
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7869, 31} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 120);
  // WARNING: %67 = add i64 %66, 120, !dbg !4580, !verifier.code !4408
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7870, 21} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7870, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7871, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %70 = ptrtoint %struct.uart_state* %69 to i64, !dbg !4587, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7872, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 360);
  // WARNING: %71 = add i64 %70, 360, !dbg !4590, !verifier.code !4408
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7873, 12} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7874, 19} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p7);
  // WARNING: %73 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4596, !verifier.code !4408
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7875, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 360);
  // WARNING: %74 = add i64 %73, 360, !dbg !4599, !verifier.code !4408
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7876, 7} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7876, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7877, 19} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p7);
  // WARNING: %76 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4604, !verifier.code !4408
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7878, 31} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 328);
  // WARNING: %77 = add i64 %76, 328, !dbg !4607, !verifier.code !4408
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7879, 12} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i66);
  // WARNING: call void @llvm.dbg.value(metadata %struct.hsu_dma_buffer* %78, i64 0, metadata !5400, metadata !4406), !dbg !5401, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7881, 15} true;
  assume {:verifier.code 0} true;
  call $p68 := kzalloc(2048, 208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7882, 5} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7882, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p69, $p68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7885, 19} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7885, 19} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7886, 11} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.ref($p71, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7886, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb12:
  assume ($i72 == 1);
  assume {:verifier.code 0} true;
  goto $bb15;
$bb13:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7887, 21} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p7);
  // WARNING: %85 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4627, !verifier.code !4408
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7888, 33} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 352);
  // WARNING: %86 = add i64 %85, 352, !dbg !4631, !verifier.code !4408
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7889, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7889, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7890, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7968, 3} true;
  assume {:verifier.code 0} true;
  call $i136 := serial_in($p7, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7969, 3} true;
  assume {:verifier.code 0} true;
  call $i137 := serial_in($p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7970, 3} true;
  assume {:verifier.code 0} true;
  call $i138 := serial_in($p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7971, 3} true;
  assume {:verifier.code 0} true;
  call $i139 := serial_in($p7, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7972, 18} true;
  assume {:verifier.code 0} true;
  $i140 := $p2i.ref.i64($p7);
  // WARNING: %157 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4813, !verifier.code !4408
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7973, 31} true;
  assume {:verifier.code 0} true;
  $i141 := $add.i64($i140, 356);
  // WARNING: %158 = add i64 %157, 356, !dbg !4816, !verifier.code !4408
  call {:cexpr "__cil_tmp111"} boogie_si_record_i64($i141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7974, 5} true;
  assume {:verifier.code 0} true;
  $p142 := $i2p.i64.ref($i141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7974, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7976, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7896, 19} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p67);
  // WARNING: %90 = ptrtoint %struct.hsu_dma_buffer* %78 to i64, !dbg !4637, !verifier.code !4408
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7897, 31} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 8);
  // WARNING: %91 = add i64 %90, 8, !dbg !4641, !verifier.code !4408
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7898, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p0);
  // WARNING: %92 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4644, !verifier.code !4408
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7899, 31} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78, 232);
  // WARNING: %93 = add i64 %92, 232, !dbg !4647, !verifier.code !4408
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7900, 21} true;
  assume {:verifier.code 0} true;
  $p80 := $i2p.i64.ref($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7900, 19} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7901, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7901, 19} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  // WARNING: call void @llvm.dbg.value(metadata i8* %97, i64 0, metadata !5446, metadata !4406), !dbg !5447, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 2048, i64 0, metadata !5448, metadata !4406), !dbg !5449, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7906, 19} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7907, 36} true;
  assume {:verifier.code 0} true;
  call $i85 := dma_map_single_attrs($p81, $p83, 2048, 2, $p84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7907, 7} true;
  assume {:verifier.code 0} true;
  $p86 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7907, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p86, $i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7910, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p67);
  // WARNING: %101 = ptrtoint %struct.hsu_dma_buffer* %78 to i64, !dbg !4671, !verifier.code !4408
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7911, 31} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 16);
  // WARNING: %102 = add i64 %101, 16, !dbg !4674, !verifier.code !4408
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7912, 7} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7912, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, 2048);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7913, 19} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p7);
  // WARNING: %104 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4679, !verifier.code !4408
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7914, 31} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 296);
  // WARNING: %105 = add i64 %104, 296, !dbg !4682, !verifier.code !4408
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7915, 21} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7915, 19} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7916, 5} true;
  assume {:verifier.code 0} true;
  call hsu_dma_start_rx_chan($p93, $p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7917, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p7);
  // WARNING: %108 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4690, !verifier.code !4408
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7918, 31} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 304);
  // WARNING: %109 = add i64 %108, 304, !dbg !4693, !verifier.code !4408
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7919, 12} true;
  assume {:verifier.code 0} true;
  $p96 := $i2p.i64.ref($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7920, 19} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7920, 19} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7921, 5} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7921, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p99, $p98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7922, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p96);
  // WARNING: %114 = ptrtoint %struct.hsu_dma_buffer* %110 to i64, !dbg !4702, !verifier.code !4408
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7923, 31} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i100, 8);
  // WARNING: %115 = add i64 %114, 8, !dbg !4705, !verifier.code !4408
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7924, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p0);
  // WARNING: %116 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4708, !verifier.code !4408
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7925, 31} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, 232);
  // WARNING: %117 = add i64 %116, 232, !dbg !4711, !verifier.code !4408
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7926, 21} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7926, 19} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7927, 19} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7927, 19} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  // WARNING: call void @llvm.dbg.value(metadata i8* %121, i64 0, metadata !5510, metadata !4406), !dbg !5511, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 4096, i64 0, metadata !5512, metadata !4406), !dbg !5513, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7932, 19} true;
  assume {:verifier.code 0} true;
  $p108 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7933, 36} true;
  assume {:verifier.code 0} true;
  call $i109 := dma_map_single_attrs($p105, $p107, 4096, 1, $p108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7933, 7} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7933, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p110, $i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7936, 19} true;
  assume {:verifier.code 0} true;
  $i111 := $p2i.ref.i64($p96);
  // WARNING: %125 = ptrtoint %struct.hsu_dma_buffer* %110 to i64, !dbg !4735, !verifier.code !4408
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7937, 31} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i64($i111, 16);
  // WARNING: %126 = add i64 %125, 16, !dbg !4738, !verifier.code !4408
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i112);
  // WARNING: call void @llvm.dbg.value(metadata i64 %126, i64 0, metadata !5528, metadata !4406), !dbg !5529, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7939, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i64.i32(4096);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7939, 7} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7939, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7940, 19} true;
  assume {:verifier.code 0} true;
  $i115 := $p2i.ref.i64($p7);
  // WARNING: %129 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4746, !verifier.code !4408
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7941, 31} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64($i115, 288);
  // WARNING: %130 = add i64 %129, 288, !dbg !4749, !verifier.code !4408
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7942, 21} true;
  assume {:verifier.code 0} true;
  $p117 := $i2p.i64.ref($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7942, 19} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7943, 19} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p118);
  // WARNING: %133 = ptrtoint %struct.hsu_dma_chan* %132 to i64, !dbg !4756, !verifier.code !4408
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7944, 31} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64($i119, 16);
  // WARNING: %134 = add i64 %133, 16, !dbg !4759, !verifier.code !4408
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7945, 21} true;
  assume {:verifier.code 0} true;
  $p121 := $i2p.i64.ref($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7945, 19} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7946, 31} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p122, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7948, 5} true;
  assume {:verifier.code 0} true;
  call writel(32, $p123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7949, 20} true;
  assume {:verifier.code 0} true;
  $i124 := $p2i.ref.i64($p7);
  // WARNING: %138 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4772, !verifier.code !4408
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7950, 33} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i124, 288);
  // WARNING: %139 = add i64 %138, 288, !dbg !4775, !verifier.code !4408
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7951, 22} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.i64.ref($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7951, 20} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7952, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $p2i.ref.i64($p127);
  // WARNING: %142 = ptrtoint %struct.hsu_dma_chan* %141 to i64, !dbg !4782, !verifier.code !4408
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7953, 33} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i64($i128, 16);
  // WARNING: %143 = add i64 %142, 16, !dbg !4785, !verifier.code !4408
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7954, 22} true;
  assume {:verifier.code 0} true;
  $p130 := $i2p.i64.ref($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7954, 20} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7955, 33} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p131, 20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7957, 5} true;
  assume {:verifier.code 0} true;
  call writel(4, $p132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7958, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $p2i.ref.i64($p96);
  // WARNING: %147 = ptrtoint %struct.hsu_dma_buffer* %110 to i64, !dbg !4798, !verifier.code !4408
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7959, 33} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i64($i133, 20);
  // WARNING: %148 = add i64 %147, 20, !dbg !4801, !verifier.code !4408
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7960, 7} true;
  assume {:verifier.code 0} true;
  $p135 := $i2p.i64.ref($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7960, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p135, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7962, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7965, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const serial_hsu_shutdown: ref;
axiom (serial_hsu_shutdown == $sub.ref(0, 75142));
procedure  serial_hsu_shutdown($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8018, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8019, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4418, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8020, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8021, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8021, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8021, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8022, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8023, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4430, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8024, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 256);
  // WARNING: %10 = add i64 %9, 256, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8025, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8025, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8026, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8027, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p7);
  // WARNING: %12 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4439, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8028, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 356);
  // WARNING: %13 = add i64 %12, 356, !dbg !4442, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8029, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8029, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8032, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8032, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8035, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8035, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8038, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8039, 17} true;
  assume {:verifier.code 0} true;
  call $p15 := spinlock_check($p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8040, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := _raw_spin_lock_irqsave($p15);
  // WARNING: %21 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %20), !dbg !4465, !verifier.code !4408
  call {:cexpr "flags"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8042, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8052, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p7);
  // WARNING: %24 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4472, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8053, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 196);
  // WARNING: %25 = add i64 %24, 196, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i18);
  // WARNING: call void @llvm.dbg.value(metadata i64 %25, i64 0, metadata !5681, metadata !4406), !dbg !5682, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8055, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p7);
  // WARNING: %26 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4481, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8056, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 196);
  // WARNING: %27 = add i64 %26, 196, !dbg !4484, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8057, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8057, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  // WARNING: %29 = load i32, i32* %28, align 4, !dbg !4488, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8058, 48} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, $sub.i32(0, 16385));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8058, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8058, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8059, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %32, i64 0, metadata !5699, metadata !4406), !dbg !5700, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8061, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p7);
  // WARNING: %33 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4499, !verifier.code !4408
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8062, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 196);
  // WARNING: %34 = add i64 %33, 196, !dbg !4502, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8063, 19} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8063, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  // WARNING: %36 = load i32, i32* %35, align 4, !dbg !4506, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8064, 3} true;
  assume {:verifier.code 0} true;
  call serial_hsu_set_mctrl($p25, $i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8065, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8066, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p30, $i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8067, 13} true;
  assume {:verifier.code 0} true;
  call $i31 := serial_in($p7, 3);
  // WARNING: %38 = call i32 @serial_in(%struct.uart_hsu_port* %8, i32 3), !dbg !4514, !verifier.code !4408
  call {:cexpr "tmp___8"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8068, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i32($i31, $sub.i32(0, 65));
  // WARNING: %39 = and i32 %38, -65, !dbg !4517, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i32);
  // WARNING: call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !5722, metadata !4406), !dbg !5723, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8070, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 3, $i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8071, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 2, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8072, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p7, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8073, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p7);
  // WARNING: %40 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4525, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8074, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 280);
  // WARNING: %41 = add i64 %40, 280, !dbg !4528, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8075, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8075, 17} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8076, 3} true;
  assume {:verifier.code 0} true;
  call $i37 := pm_runtime_put($p36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8078, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_set_termios: ref;
axiom (serial_hsu_set_termios == $sub.ref(0, 76174));
procedure  serial_hsu_set_termios($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i8;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i32;
  var $i35: i8;
  var $i36: i8;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i46: i8;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i8;
  var $i57: i32;
  var $i58: i1;
  var $i59: i1;
  var $i60: i1;
  var $i61: i1;
  var $i62: i1;
  var $i63: i1;
  var $i64: i1;
  var $i65: i1;
  var $i68: i32;
  var $i69: i32;
  var $i66: i32;
  var $i67: i32;
  var $i70: i32;
  var $i71: i32;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i32;
  var $i88: i1;
  var $i89: i8;
  var $i82: i8;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i32;
  var $i106: i1;
  var $i107: i64;
  var $i108: i64;
  var $i109: i64;
  var $i110: i64;
  var $p111: ref;
  var $i112: i32;
  var $i113: i32;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $i117: i32;
  var $i118: i1;
  var $i119: i64;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $p126: ref;
  var $i127: i64;
  var $i128: i64;
  var $p129: ref;
  var $p130: ref;
  var $i131: i32;
  var $i132: i32;
  var $i133: i1;
  var $i134: i64;
  var $i135: i64;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $p141: ref;
  var $p142: ref;
  var $i143: i32;
  var $i144: i32;
  var $i145: i1;
  var $i146: i64;
  var $i147: i64;
  var $i148: i64;
  var $i149: i64;
  var $p150: ref;
  var $i151: i32;
  var $i152: i32;
  var $p153: ref;
  var $p154: ref;
  var $i155: i32;
  var $i156: i32;
  var $i157: i1;
  var $i158: i64;
  var $i159: i64;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $i164: i32;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i32;
  var $i170: i32;
  var $i171: i1;
  var $i172: i64;
  var $i173: i64;
  var $i174: i64;
  var $i175: i64;
  var $p176: ref;
  var $i177: i32;
  var $i178: i32;
  var $p179: ref;
  var $i180: i64;
  var $i181: i64;
  var $i182: i64;
  var $i183: i64;
  var $p184: ref;
  var $i185: i8;
  var $i186: i32;
  var $i187: i32;
  var $i188: i8;
  var $p189: ref;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i32;
  var $i194: i32;
  var $i195: i1;
  var $i196: i64;
  var $i197: i64;
  var $i198: i64;
  var $i199: i64;
  var $p200: ref;
  var $i201: i8;
  var $i202: i32;
  var $i203: i32;
  var $i204: i8;
  var $p205: ref;
  var $i206: i64;
  var $i207: i64;
  var $p208: ref;
  var $i209: i32;
  var $i210: i32;
  var $i211: i1;
  var $i212: i64;
  var $i213: i64;
  var $i214: i64;
  var $i215: i64;
  var $p216: ref;
  var $i217: i8;
  var $i218: i32;
  var $i219: i32;
  var $i220: i8;
  var $p221: ref;
  var $i222: i64;
  var $i223: i64;
  var $p224: ref;
  var $i225: i32;
  var $i226: i32;
  var $i227: i1;
  var $i228: i64;
  var $i229: i64;
  var $i230: i64;
  var $i231: i64;
  var $p232: ref;
  var $i233: i8;
  var $i234: i32;
  var $i235: i32;
  var $i236: i8;
  var $p237: ref;
  var $i238: i64;
  var $i239: i64;
  var $p240: ref;
  var $i241: i8;
  var $i242: i32;
  var $i243: i64;
  var $i244: i64;
  var $p245: ref;
  var $i246: i32;
  var $i247: i32;
  var $i248: i1;
  var $i249: i64;
  var $i250: i64;
  var $i251: i64;
  var $i252: i64;
  var $p253: ref;
  var $i254: i8;
  var $i255: i32;
  var $i256: i32;
  var $i257: i8;
  var $p258: ref;
  var $i259: i64;
  var $i260: i64;
  var $i261: i64;
  var $i262: i64;
  var $p263: ref;
  var $i264: i8;
  var $i265: i32;
  var $i266: i32;
  var $i267: i8;
  var $p268: ref;
  var $i269: i32;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i32;
  var $i274: i64;
  var $i275: i64;
  var $p276: ref;
  var $p277: ref;
  var $i278: i64;
  var $i279: i64;
  var $p280: ref;
  var $i281: i32;
  var $i282: i32;
  var $p283: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8281, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8282, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  // WARNING: %5 = ptrtoint %struct.uart_port* %4 to i32, !dbg !4421, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8283, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8284, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8284, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, $i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8284, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, $mul.ref($i7, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8285, 12} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %10, i64 0, metadata !5766, metadata !4406), !dbg !5767, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8288, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p1);
  // WARNING: %11 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4435, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8289, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 8);
  // WARNING: %12 = add i64 %11, 8, !dbg !4439, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8290, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8290, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  // WARNING: %14 = load i32, i32* %13, align 4, !dbg !4443, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8291, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i13, 48);
  // WARNING: %15 = and i32 %14, 48, !dbg !4446, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8292, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8292, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8295, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i14, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8295, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8306, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb14;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8296, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8298, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i14, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8298, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8309, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 1;
  goto $bb14;
$bb7:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8302, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8312, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 2;
  goto $bb14;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8315, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 3;
  goto $bb14;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8303, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb12, $bb13;
$bb12:
  assume (0 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8303, 12} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb13:
  assume !((0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8316, 12} true;
  assume {:verifier.code 0} true;
  $i18 := $u0;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8322, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  // WARNING: %37 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4479, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8323, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 8);
  // WARNING: %38 = add i64 %37, 8, !dbg !4482, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8324, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p1);
  // WARNING: %39 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4485, !verifier.code !4408
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8325, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 8);
  // WARNING: %40 = add i64 %39, 8, !dbg !4488, !verifier.code !4408
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8326, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8326, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  // WARNING: %42 = load i32, i32* %41, align 4, !dbg !4492, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8327, 44} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, $sub.i32(0, 1073741825));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8327, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8327, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8329, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p1);
  // WARNING: %45 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4498, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8330, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 8);
  // WARNING: %46 = add i64 %45, 8, !dbg !4502, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8331, 19} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8331, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  // WARNING: %48 = load i32, i32* %47, align 4, !dbg !4506, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8332, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8332, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8332, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8333, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i18);
  // WARNING: %52 = zext i8 %.07 to i32, !dbg !4512, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8334, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $or.i32($i33, 4);
  // WARNING: %53 = or i32 %52, 4, !dbg !4516, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8335, 12} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i8($i34);
  // WARNING: %54 = trunc i32 %53 to i8, !dbg !4519, !verifier.code !4408
  call {:cexpr "cval"} boogie_si_record_i8($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8336, 3} true;
  assume {:verifier.code 0} true;
  $i36 := $i35;
  goto $bb21;
$bb20:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $i36 := $i18;
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8341, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p1);
  // WARNING: %57 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4521, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8342, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 8);
  // WARNING: %58 = add i64 %57, 8, !dbg !4525, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8343, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8343, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  // WARNING: %60 = load i32, i32* %59, align 4, !dbg !4529, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8344, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i32($i40, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8344, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8345, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i36);
  // WARNING: %64 = zext i8 %.18 to i32, !dbg !4535, !verifier.code !4408
  call {:cexpr "__cil_tmp38"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8346, 31} true;
  assume {:verifier.code 0} true;
  $i44 := $or.i32($i43, 8);
  // WARNING: %65 = or i32 %64, 8, !dbg !4539, !verifier.code !4408
  call {:cexpr "__cil_tmp39"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8347, 12} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  // WARNING: %66 = trunc i32 %65 to i8, !dbg !4542, !verifier.code !4408
  call {:cexpr "cval"} boogie_si_record_i8($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8348, 3} true;
  assume {:verifier.code 0} true;
  $i46 := $i45;
  goto $bb24;
$bb23:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i46 := $i36;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8353, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p1);
  // WARNING: %69 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4544, !verifier.code !4408
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8354, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 8);
  // WARNING: %70 = add i64 %69, 8, !dbg !4548, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8355, 19} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8355, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  // WARNING: %72 = load i32, i32* %71, align 4, !dbg !4552, !verifier.code !4408
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8356, 29} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 512);
  // WARNING: %73 = and i32 %72, 512, !dbg !4555, !verifier.code !4408
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8357, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i52 == 1);
  assume {:verifier.code 0} true;
  $i56 := $i46;
  goto $bb27;
$bb26:
  assume !(($i52 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8358, 19} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i46);
  // WARNING: %76 = zext i8 %.2 to i32, !dbg !4561, !verifier.code !4408
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8359, 31} true;
  assume {:verifier.code 0} true;
  $i54 := $or.i32($i53, 16);
  // WARNING: %77 = or i32 %76, 16, !dbg !4565, !verifier.code !4408
  call {:cexpr "__cil_tmp45"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8360, 12} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  // WARNING: %78 = trunc i32 %77 to i8, !dbg !4568, !verifier.code !4408
  call {:cexpr "cval"} boogie_si_record_i8($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8361, 3} true;
  assume {:verifier.code 0} true;
  $i56 := $i55;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8366, 10} true;
  assume {:verifier.code 0} true;
  call $i57 := uart_get_baud_rate($p0, $p1, $p2, 0, 4000000);
  // WARNING: %81 = call i32 @uart_get_baud_rate(%struct.uart_port* %0, %struct.ktermios* %1, %struct.ktermios* %2, i32 0, i32 4000000), !dbg !4570, !verifier.code !4408
  call {:cexpr "baud"} boogie_si_record_i32($i57);
  // WARNING: call void @llvm.dbg.value(metadata i32 %81, i64 0, metadata !5907, metadata !4406), !dbg !5908, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !5909, metadata !4406), !dbg !5910, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 16, i64 0, metadata !5911, metadata !4406), !dbg !5912, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8371, 18} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i32($i57, 3500000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8371, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8372, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8374, 18} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i57, 1843200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8374, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb31, $bb32;
$bb30:
  // WARNING: call void @llvm.dbg.value(metadata i32 13125, i64 0, metadata !5913, metadata !4406), !dbg !5914, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8401, 7} true;
  assume {:verifier.code 0} true;
  $i66, $i67 := 12, 13125;
  goto $bb51;
$bb31:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8375, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i59 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8377, 18} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i57, 3000000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8377, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  $i66, $i67 := 16, 9216;
  goto $bb51;
$bb34:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8378, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i60 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8380, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i57, 2500000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8380, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb37, $bb38;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb37:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8381, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb38:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8383, 18} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i57, 2000000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8383, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8384, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb40:
  assume !(($i62 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8386, 18} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i57, 1500000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8386, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8387, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb42:
  assume !(($i63 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8389, 18} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32($i57, 1000000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8389, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8390, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb44:
  assume !(($i64 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8392, 18} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i57, 500000);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8392, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8393, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb46:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8396, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8416, 5} true;
  assume {:verifier.code 0} true;
  $i70, $i71, $i72 := 0, 16, 13824;
  goto $bb57;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8397, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb49, $bb50;
$bb49:
  assume (0 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8397, 12} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb50:
  assume !((0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8416, 12} true;
  assume {:verifier.code 0} true;
  $i66, $i67 := $u1, $u1;
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i70, $i71, $i72 := 1, $i66, $i67;
  goto $bb57;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8411, 26} true;
  assume {:verifier.code 0} true;
  $i68 := $udiv.i32($i57, 500000);
  // WARNING: %116 = udiv i32 %81, 500000, !dbg !4640, !verifier.code !4408
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8412, 25} true;
  assume {:verifier.code 0} true;
  $i69 := $mul.i32($i68, 2500);
  // WARNING: %117 = mul i32 %116, 2500, !dbg !4643, !verifier.code !4408
  call {:cexpr "mul"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8413, 7} true;
  assume {:verifier.code 0} true;
  $i66, $i67 := 16, $i69;
  goto $bb51;
$bb57:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8421, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i73 == 1);
  assume {:verifier.code 0} true;
  $i75 := $i70;
  goto $bb68;
$bb67:
  assume !(($i73 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8423, 12} true;
  assume {:verifier.code 0} true;
  call $i74 := uart_get_divisor($p0, $i57);
  // WARNING: %132 = call i32 @uart_get_divisor(%struct.uart_port* %0, i32 %81), !dbg !4650, !verifier.code !4408
  call {:cexpr "quot"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8425, 3} true;
  assume {:verifier.code 0} true;
  $i75 := $i74;
  goto $bb68;
$bb68:
  assume {:verifier.code 0} true;
  // WARNING: %.14 = phi i32 [ %.03, %133 ], [ %132, %131 ], !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8430, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p9);
  // WARNING: %135 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4656, !verifier.code !4408
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8431, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 96);
  // WARNING: %136 = add i64 %135, 96, !dbg !4660, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8432, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8432, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  // WARNING: %138 = load i32, i32* %137, align 4, !dbg !4664, !verifier.code !4408
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8433, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $udiv.i32($i79, $i75);
  // WARNING: %139 = udiv i32 %138, %.14, !dbg !4667, !verifier.code !4408
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8434, 19} true;
  assume {:verifier.code 0} true;
  $i81 := $ult.i32($i80, 38400);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8434, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8436, 3} true;
  assume {:verifier.code 0} true;
  $i82 := 1;
  goto $bb71;
$bb70:
  assume !(($i81 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8439, 19} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p9);
  // WARNING: %143 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4677, !verifier.code !4408
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8440, 31} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 96);
  // WARNING: %144 = add i64 %143, 96, !dbg !4682, !verifier.code !4408
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8441, 21} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8441, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  // WARNING: %146 = load i32, i32* %145, align 4, !dbg !4686, !verifier.code !4408
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8442, 31} true;
  assume {:verifier.code 0} true;
  $i87 := $udiv.i32($i86, $i75);
  // WARNING: %147 = udiv i32 %146, %.14, !dbg !4689, !verifier.code !4408
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8443, 21} true;
  assume {:verifier.code 0} true;
  $i88 := $ult.i32($i87, 3686400);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8443, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb72, $bb73;
$bb71:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8451, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i82);
  // WARNING: %153 = zext i8 %.16 to i32, !dbg !4697, !verifier.code !4408
  call {:cexpr "__cil_tmp57"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8452, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $or.i32($i90, 32);
  // WARNING: %154 = or i32 %153, 32, !dbg !4700, !verifier.code !4408
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8453, 9} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  // WARNING: %155 = trunc i32 %154 to i8, !dbg !4703, !verifier.code !4408
  call {:cexpr "fcr"} boogie_si_record_i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8455, 3} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb72:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8445, 5} true;
  assume {:verifier.code 0} true;
  $i89 := 65;
  goto $bb74;
$bb73:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  $i89 := $sub.i8(0, 127);
  goto $bb74;
$bb74:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i82 := $i89;
  goto $bb71;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8455, 13} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8458, 5} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8458, 15} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8461, 21} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8462, 17} true;
  assume {:verifier.code 0} true;
  call $p94 := spinlock_check($p93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8463, 15} true;
  assume {:verifier.code 0} true;
  call $i95 := _raw_spin_lock_irqsave($p94);
  // WARNING: %162 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %161), !dbg !4722, !verifier.code !4408
  call {:cexpr "flags"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8465, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8469, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8474, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p1);
  // WARNING: %165 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4727, !verifier.code !4408
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8475, 29} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96, 8);
  // WARNING: %166 = add i64 %165, 8, !dbg !4731, !verifier.code !4408
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8476, 19} true;
  assume {:verifier.code 0} true;
  $p98 := $i2p.i64.ref($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8476, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p98);
  // WARNING: %168 = load i32, i32* %167, align 4, !dbg !4735, !verifier.code !4408
  call {:cexpr "__cil_tmp62"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8477, 3} true;
  assume {:verifier.code 0} true;
  call uart_update_timeout($p0, $i99, $i57);
  // WARNING: call void @uart_update_timeout(%struct.uart_port* %0, i32 %168, i32 %81), !dbg !4738, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8479, 17} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p9);
  // WARNING: %169 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4741, !verifier.code !4408
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8480, 29} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i100, 108);
  // WARNING: %170 = add i64 %169, 108, !dbg !4744, !verifier.code !4408
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8481, 5} true;
  assume {:verifier.code 0} true;
  $p102 := $i2p.i64.ref($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8481, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, 35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8484, 17} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8484, 17} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  // WARNING: %173 = load i32, i32* %172, align 4, !dbg !4749, !verifier.code !4408
  call {:cexpr "__cil_tmp66"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8485, 19} true;
  assume {:verifier.code 0} true;
  $i105 := $and.i32($i104, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8485, 19} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i32($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8485, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8487, 19} true;
  assume {:verifier.code 0} true;
  $i107 := $p2i.ref.i64($p9);
  // WARNING: %177 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4758, !verifier.code !4408
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8488, 31} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i64($i107, 108);
  // WARNING: %178 = add i64 %177, 108, !dbg !4762, !verifier.code !4408
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i108);
  // WARNING: call void @llvm.dbg.value(metadata i64 %178, i64 0, metadata !6097, metadata !4406), !dbg !6098, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8490, 19} true;
  assume {:verifier.code 0} true;
  $i109 := $p2i.ref.i64($p9);
  // WARNING: %179 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4767, !verifier.code !4408
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8491, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i64($i109, 108);
  // WARNING: %180 = add i64 %179, 108, !dbg !4770, !verifier.code !4408
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8492, 21} true;
  assume {:verifier.code 0} true;
  $p111 := $i2p.i64.ref($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8492, 19} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  // WARNING: %182 = load i32, i32* %181, align 4, !dbg !4774, !verifier.code !4408
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8493, 50} true;
  assume {:verifier.code 0} true;
  $i113 := $or.i32($i112, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8493, 7} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8493, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8494, 3} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8499, 17} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8499, 17} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  // WARNING: %188 = load i32, i32* %187, align 4, !dbg !4781, !verifier.code !4408
  call {:cexpr "__cil_tmp74"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8500, 19} true;
  assume {:verifier.code 0} true;
  $i117 := $and.i32($i116, 10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8500, 19} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i32($i117, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb84, $bb85;
$bb84:
  assume ($i118 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8502, 19} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p9);
  // WARNING: %192 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4790, !verifier.code !4408
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8503, 31} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64($i119, 108);
  // WARNING: %193 = add i64 %192, 108, !dbg !4794, !verifier.code !4408
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i120);
  // WARNING: call void @llvm.dbg.value(metadata i64 %193, i64 0, metadata !6129, metadata !4406), !dbg !6130, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8505, 19} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p9);
  // WARNING: %194 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4799, !verifier.code !4408
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8506, 31} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i121, 108);
  // WARNING: %195 = add i64 %194, 108, !dbg !4802, !verifier.code !4408
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8507, 21} true;
  assume {:verifier.code 0} true;
  $p123 := $i2p.i64.ref($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8507, 19} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  // WARNING: %197 = load i32, i32* %196, align 4, !dbg !4806, !verifier.code !4408
  call {:cexpr "__cil_tmp81"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8508, 50} true;
  assume {:verifier.code 0} true;
  $i125 := $or.i32($i124, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8508, 7} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.i64.ref($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8508, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p126, $i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8514, 17} true;
  assume {:verifier.code 0} true;
  $i127 := $p2i.ref.i64($p9);
  // WARNING: %202 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4815, !verifier.code !4408
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8515, 29} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i64($i127, 112);
  // WARNING: %203 = add i64 %202, 112, !dbg !4818, !verifier.code !4408
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8516, 5} true;
  assume {:verifier.code 0} true;
  $p129 := $i2p.i64.ref($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8516, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8518, 17} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8518, 17} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  // WARNING: %206 = load i32, i32* %205, align 4, !dbg !4823, !verifier.code !4408
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8519, 19} true;
  assume {:verifier.code 0} true;
  $i132 := $and.i32($i131, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8519, 19} true;
  assume {:verifier.code 0} true;
  $i133 := $ne.i32($i132, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8519, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb87, $bb88;
$bb87:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8521, 19} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p9);
  // WARNING: %210 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4832, !verifier.code !4408
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8522, 31} true;
  assume {:verifier.code 0} true;
  $i135 := $add.i64($i134, 112);
  // WARNING: %211 = add i64 %210, 112, !dbg !4836, !verifier.code !4408
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i135);
  // WARNING: call void @llvm.dbg.value(metadata i64 %211, i64 0, metadata !6171, metadata !4406), !dbg !6172, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8524, 19} true;
  assume {:verifier.code 0} true;
  $i136 := $p2i.ref.i64($p9);
  // WARNING: %212 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4841, !verifier.code !4408
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8525, 31} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i64($i136, 112);
  // WARNING: %213 = add i64 %212, 112, !dbg !4844, !verifier.code !4408
  call {:cexpr "__cil_tmp91"} boogie_si_record_i64($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8526, 21} true;
  assume {:verifier.code 0} true;
  $p138 := $i2p.i64.ref($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8526, 19} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i32($M.0, $p138);
  // WARNING: %215 = load i32, i32* %214, align 4, !dbg !4848, !verifier.code !4408
  call {:cexpr "__cil_tmp92"} boogie_si_record_i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8527, 50} true;
  assume {:verifier.code 0} true;
  $i140 := $or.i32($i139, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8527, 7} true;
  assume {:verifier.code 0} true;
  $p141 := $i2p.i64.ref($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8527, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p141, $i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8528, 3} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb88:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8533, 17} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8533, 17} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i32($M.0, $p142);
  // WARNING: %221 = load i32, i32* %220, align 4, !dbg !4855, !verifier.code !4408
  call {:cexpr "__cil_tmp93"} boogie_si_record_i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8534, 19} true;
  assume {:verifier.code 0} true;
  $i144 := $and.i32($i143, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8534, 19} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i32($i144, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8534, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb90, $bb91;
$bb90:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8536, 19} true;
  assume {:verifier.code 0} true;
  $i146 := $p2i.ref.i64($p9);
  // WARNING: %225 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4864, !verifier.code !4408
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8537, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i64($i146, 112);
  // WARNING: %226 = add i64 %225, 112, !dbg !4868, !verifier.code !4408
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i147);
  // WARNING: call void @llvm.dbg.value(metadata i64 %226, i64 0, metadata !6203, metadata !4406), !dbg !6204, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8539, 19} true;
  assume {:verifier.code 0} true;
  $i148 := $p2i.ref.i64($p9);
  // WARNING: %227 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4873, !verifier.code !4408
  call {:cexpr "__cil_tmp98"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8540, 31} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i64($i148, 112);
  // WARNING: %228 = add i64 %227, 112, !dbg !4876, !verifier.code !4408
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8541, 22} true;
  assume {:verifier.code 0} true;
  $p150 := $i2p.i64.ref($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8541, 20} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i32($M.0, $p150);
  // WARNING: %230 = load i32, i32* %229, align 4, !dbg !4880, !verifier.code !4408
  call {:cexpr "__cil_tmp100"} boogie_si_record_i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8542, 51} true;
  assume {:verifier.code 0} true;
  $i152 := $or.i32($i151, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8542, 7} true;
  assume {:verifier.code 0} true;
  $p153 := $i2p.i64.ref($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8542, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p153, $i152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8544, 20} true;
  assume {:verifier.code 0} true;
  $p154 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8544, 20} true;
  assume {:verifier.code 0} true;
  $i155 := $load.i32($M.0, $p154);
  // WARNING: %234 = load i32, i32* %233, align 4, !dbg !4886, !verifier.code !4408
  call {:cexpr "__cil_tmp101"} boogie_si_record_i32($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8545, 22} true;
  assume {:verifier.code 0} true;
  $i156 := $and.i32($i155, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8545, 22} true;
  assume {:verifier.code 0} true;
  $i157 := $ne.i32($i156, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8545, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i157} true;
  goto $bb92, $bb93;
$bb91:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb92:
  assume ($i157 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8547, 22} true;
  assume {:verifier.code 0} true;
  $i158 := $p2i.ref.i64($p9);
  // WARNING: %238 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4895, !verifier.code !4408
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8548, 35} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64($i158, 112);
  // WARNING: %239 = add i64 %238, 112, !dbg !4899, !verifier.code !4408
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i159);
  // WARNING: call void @llvm.dbg.value(metadata i64 %239, i64 0, metadata !6234, metadata !4406), !dbg !6235, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8550, 22} true;
  assume {:verifier.code 0} true;
  $i160 := $p2i.ref.i64($p9);
  // WARNING: %240 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4904, !verifier.code !4408
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8551, 35} true;
  assume {:verifier.code 0} true;
  $i161 := $add.i64($i160, 112);
  // WARNING: %241 = add i64 %240, 112, !dbg !4907, !verifier.code !4408
  call {:cexpr "__cil_tmp107"} boogie_si_record_i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8552, 24} true;
  assume {:verifier.code 0} true;
  $p162 := $i2p.i64.ref($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8552, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i32($M.0, $p162);
  // WARNING: %243 = load i32, i32* %242, align 4, !dbg !4911, !verifier.code !4408
  call {:cexpr "__cil_tmp108"} boogie_si_record_i32($i163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8553, 54} true;
  assume {:verifier.code 0} true;
  $i164 := $or.i32($i163, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8553, 9} true;
  assume {:verifier.code 0} true;
  $p165 := $i2p.i64.ref($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8553, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p165, $i164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8554, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i157 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8558, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8563, 18} true;
  assume {:verifier.code 0} true;
  $i166 := $p2i.ref.i64($p1);
  // WARNING: %250 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4919, !verifier.code !4408
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8564, 31} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i64($i166, 8);
  // WARNING: %251 = add i64 %250, 8, !dbg !4923, !verifier.code !4408
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8565, 20} true;
  assume {:verifier.code 0} true;
  $p168 := $i2p.i64.ref($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8565, 18} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i32($M.0, $p168);
  // WARNING: %253 = load i32, i32* %252, align 4, !dbg !4927, !verifier.code !4408
  call {:cexpr "__cil_tmp111"} boogie_si_record_i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8566, 31} true;
  assume {:verifier.code 0} true;
  $i170 := $and.i32($i169, 128);
  // WARNING: %254 = and i32 %253, 128, !dbg !4930, !verifier.code !4408
  call {:cexpr "__cil_tmp112"} boogie_si_record_i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8567, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $eq.i32($i170, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8567, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb96, $bb97;
$bb96:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8569, 20} true;
  assume {:verifier.code 0} true;
  $i172 := $p2i.ref.i64($p9);
  // WARNING: %257 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4938, !verifier.code !4408
  call {:cexpr "__cil_tmp114"} boogie_si_record_i64($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8570, 33} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i64($i172, 112);
  // WARNING: %258 = add i64 %257, 112, !dbg !4942, !verifier.code !4408
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i173);
  // WARNING: call void @llvm.dbg.value(metadata i64 %258, i64 0, metadata !6277, metadata !4406), !dbg !6278, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8572, 20} true;
  assume {:verifier.code 0} true;
  $i174 := $p2i.ref.i64($p9);
  // WARNING: %259 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4947, !verifier.code !4408
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8573, 33} true;
  assume {:verifier.code 0} true;
  $i175 := $add.i64($i174, 112);
  // WARNING: %260 = add i64 %259, 112, !dbg !4950, !verifier.code !4408
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8574, 22} true;
  assume {:verifier.code 0} true;
  $p176 := $i2p.i64.ref($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8574, 20} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i32($M.0, $p176);
  // WARNING: %262 = load i32, i32* %261, align 4, !dbg !4954, !verifier.code !4408
  call {:cexpr "__cil_tmp119"} boogie_si_record_i32($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8575, 52} true;
  assume {:verifier.code 0} true;
  $i178 := $or.i32($i177, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8575, 7} true;
  assume {:verifier.code 0} true;
  $p179 := $i2p.i64.ref($i173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8575, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p179, $i178);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8576, 3} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb97:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8580, 18} true;
  assume {:verifier.code 0} true;
  $i180 := $p2i.ref.i64($p9);
  // WARNING: %267 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4961, !verifier.code !4408
  call {:cexpr "__cil_tmp120"} boogie_si_record_i64($i180);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8581, 31} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i64($i180, 256);
  // WARNING: %268 = add i64 %267, 256, !dbg !4964, !verifier.code !4408
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8582, 18} true;
  assume {:verifier.code 0} true;
  $i182 := $p2i.ref.i64($p9);
  // WARNING: %269 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4967, !verifier.code !4408
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8583, 31} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i64($i182, 256);
  // WARNING: %270 = add i64 %269, 256, !dbg !4970, !verifier.code !4408
  call {:cexpr "__cil_tmp123"} boogie_si_record_i64($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8584, 20} true;
  assume {:verifier.code 0} true;
  $p184 := $i2p.i64.ref($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8584, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $load.i8($M.0, $p184);
  // WARNING: %272 = load i8, i8* %271, align 1, !dbg !4974, !verifier.code !4408
  call {:cexpr "__cil_tmp124"} boogie_si_record_i8($i185);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8585, 18} true;
  assume {:verifier.code 0} true;
  $i186 := $zext.i8.i32($i185);
  // WARNING: %273 = zext i8 %272 to i32, !dbg !4977, !verifier.code !4408
  call {:cexpr "__cil_tmp125"} boogie_si_record_i32($i186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8586, 31} true;
  assume {:verifier.code 0} true;
  $i187 := $and.i32($i186, $sub.i32(0, 9));
  // WARNING: %274 = and i32 %273, -9, !dbg !4980, !verifier.code !4408
  call {:cexpr "__cil_tmp126"} boogie_si_record_i32($i187);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8587, 38} true;
  assume {:verifier.code 0} true;
  $i188 := $trunc.i32.i8($i187);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8587, 5} true;
  assume {:verifier.code 0} true;
  $p189 := $i2p.i64.ref($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8587, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p189, $i188);
  // WARNING: store i8 %275, i8* %276, align 1, !dbg !4985, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 2048, i64 0, metadata !6320, metadata !4406), !dbg !6321, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 2048, i64 0, metadata !6322, metadata !4406), !dbg !6323, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8592, 18} true;
  assume {:verifier.code 0} true;
  $i190 := $p2i.ref.i64($p9);
  // WARNING: %277 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !4992, !verifier.code !4408
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i190);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8593, 31} true;
  assume {:verifier.code 0} true;
  $i191 := $add.i64($i190, 192);
  // WARNING: %278 = add i64 %277, 192, !dbg !4996, !verifier.code !4408
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8594, 20} true;
  assume {:verifier.code 0} true;
  $p192 := $i2p.i64.ref($i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8594, 18} true;
  assume {:verifier.code 0} true;
  $i193 := $load.i32($M.0, $p192);
  // WARNING: %280 = load i32, i32* %279, align 4, !dbg !5000, !verifier.code !4408
  call {:cexpr "__cil_tmp132"} boogie_si_record_i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8595, 20} true;
  assume {:verifier.code 0} true;
  $i194 := $and.i32($i193, 2048);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8595, 20} true;
  assume {:verifier.code 0} true;
  $i195 := $ne.i32($i194, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8595, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb99, $bb100;
$bb99:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8596, 20} true;
  assume {:verifier.code 0} true;
  $i196 := $p2i.ref.i64($p9);
  // WARNING: %284 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5006, !verifier.code !4408
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8597, 33} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i64($i196, 256);
  // WARNING: %285 = add i64 %284, 256, !dbg !5010, !verifier.code !4408
  call {:cexpr "__cil_tmp134"} boogie_si_record_i64($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8598, 20} true;
  assume {:verifier.code 0} true;
  $i198 := $p2i.ref.i64($p9);
  // WARNING: %286 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5013, !verifier.code !4408
  call {:cexpr "__cil_tmp135"} boogie_si_record_i64($i198);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8599, 33} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i64($i198, 256);
  // WARNING: %287 = add i64 %286, 256, !dbg !5016, !verifier.code !4408
  call {:cexpr "__cil_tmp136"} boogie_si_record_i64($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8600, 22} true;
  assume {:verifier.code 0} true;
  $p200 := $i2p.i64.ref($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8600, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $load.i8($M.0, $p200);
  // WARNING: %289 = load i8, i8* %288, align 1, !dbg !5020, !verifier.code !4408
  call {:cexpr "__cil_tmp137"} boogie_si_record_i8($i201);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8601, 20} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32($i201);
  // WARNING: %290 = zext i8 %289 to i32, !dbg !5023, !verifier.code !4408
  call {:cexpr "__cil_tmp138"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8602, 33} true;
  assume {:verifier.code 0} true;
  $i203 := $or.i32($i202, 8);
  // WARNING: %291 = or i32 %290, 8, !dbg !5026, !verifier.code !4408
  call {:cexpr "__cil_tmp139"} boogie_si_record_i32($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8603, 40} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i8($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8603, 7} true;
  assume {:verifier.code 0} true;
  $p205 := $i2p.i64.ref($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8603, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p205, $i204);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8604, 3} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb100:
  assume !(($i195 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8606, 20} true;
  assume {:verifier.code 0} true;
  $i206 := $p2i.ref.i64($p1);
  // WARNING: %295 = ptrtoint %struct.ktermios* %1 to i64, !dbg !5033, !verifier.code !4408
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i206);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8607, 33} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i64($i206, 8);
  // WARNING: %296 = add i64 %295, 8, !dbg !5038, !verifier.code !4408
  call {:cexpr "__cil_tmp141"} boogie_si_record_i64($i207);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8608, 22} true;
  assume {:verifier.code 0} true;
  $p208 := $i2p.i64.ref($i207);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8608, 20} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i32($M.0, $p208);
  // WARNING: %298 = load i32, i32* %297, align 4, !dbg !5042, !verifier.code !4408
  call {:cexpr "__cil_tmp142"} boogie_si_record_i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8609, 22} true;
  assume {:verifier.code 0} true;
  $i210 := $and.i32($i209, $sub.i32(0, 2147483648));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8609, 22} true;
  assume {:verifier.code 0} true;
  $i211 := $ne.i32($i210, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8609, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb102, $bb103;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8642, 18} true;
  assume {:verifier.code 0} true;
  $i238 := $p2i.ref.i64($p9);
  // WARNING: %334 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5120, !verifier.code !4408
  call {:cexpr "__cil_tmp161"} boogie_si_record_i64($i238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8643, 31} true;
  assume {:verifier.code 0} true;
  $i239 := $add.i64($i238, 256);
  // WARNING: %335 = add i64 %334, 256, !dbg !5124, !verifier.code !4408
  call {:cexpr "__cil_tmp162"} boogie_si_record_i64($i239);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8644, 20} true;
  assume {:verifier.code 0} true;
  $p240 := $i2p.i64.ref($i239);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8644, 18} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i8($M.0, $p240);
  // WARNING: %337 = load i8, i8* %336, align 1, !dbg !5128, !verifier.code !4408
  call {:cexpr "__cil_tmp163"} boogie_si_record_i8($i241);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8645, 18} true;
  assume {:verifier.code 0} true;
  $i242 := $zext.i8.i32($i241);
  // WARNING: %338 = zext i8 %337 to i32, !dbg !5131, !verifier.code !4408
  call {:cexpr "__cil_tmp164"} boogie_si_record_i32($i242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8646, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 1, $i242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8649, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $p2i.ref.i64($p1);
  // WARNING: %339 = ptrtoint %struct.ktermios* %1 to i64, !dbg !5135, !verifier.code !4408
  call {:cexpr "__cil_tmp165"} boogie_si_record_i64($i243);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8650, 31} true;
  assume {:verifier.code 0} true;
  $i244 := $add.i64($i243, 8);
  // WARNING: %340 = add i64 %339, 8, !dbg !5139, !verifier.code !4408
  call {:cexpr "__cil_tmp166"} boogie_si_record_i64($i244);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8651, 20} true;
  assume {:verifier.code 0} true;
  $p245 := $i2p.i64.ref($i244);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8651, 18} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i32($M.0, $p245);
  // WARNING: %342 = load i32, i32* %341, align 4, !dbg !5143, !verifier.code !4408
  call {:cexpr "__cil_tmp167"} boogie_si_record_i32($i246);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8652, 20} true;
  assume {:verifier.code 0} true;
  $i247 := $and.i32($i246, $sub.i32(0, 2147483648));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8652, 20} true;
  assume {:verifier.code 0} true;
  $i248 := $ne.i32($i247, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8652, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i248} true;
  goto $bb108, $bb109;
$bb102:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8610, 22} true;
  assume {:verifier.code 0} true;
  $i212 := $p2i.ref.i64($p9);
  // WARNING: %302 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5048, !verifier.code !4408
  call {:cexpr "__cil_tmp143"} boogie_si_record_i64($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8611, 35} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i64($i212, 256);
  // WARNING: %303 = add i64 %302, 256, !dbg !5052, !verifier.code !4408
  call {:cexpr "__cil_tmp144"} boogie_si_record_i64($i213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8612, 22} true;
  assume {:verifier.code 0} true;
  $i214 := $p2i.ref.i64($p9);
  // WARNING: %304 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5055, !verifier.code !4408
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8613, 35} true;
  assume {:verifier.code 0} true;
  $i215 := $add.i64($i214, 256);
  // WARNING: %305 = add i64 %304, 256, !dbg !5058, !verifier.code !4408
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8614, 24} true;
  assume {:verifier.code 0} true;
  $p216 := $i2p.i64.ref($i215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8614, 22} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i8($M.0, $p216);
  // WARNING: %307 = load i8, i8* %306, align 1, !dbg !5062, !verifier.code !4408
  call {:cexpr "__cil_tmp147"} boogie_si_record_i8($i217);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8615, 22} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i8.i32($i217);
  // WARNING: %308 = zext i8 %307 to i32, !dbg !5065, !verifier.code !4408
  call {:cexpr "__cil_tmp148"} boogie_si_record_i32($i218);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8616, 35} true;
  assume {:verifier.code 0} true;
  $i219 := $or.i32($i218, 8);
  // WARNING: %309 = or i32 %308, 8, !dbg !5068, !verifier.code !4408
  call {:cexpr "__cil_tmp149"} boogie_si_record_i32($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8617, 42} true;
  assume {:verifier.code 0} true;
  $i220 := $trunc.i32.i8($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8617, 9} true;
  assume {:verifier.code 0} true;
  $p221 := $i2p.i64.ref($i213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8617, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p221, $i220);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8618, 5} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume !(($i211 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8620, 22} true;
  assume {:verifier.code 0} true;
  $i222 := $p2i.ref.i64($p1);
  // WARNING: %313 = ptrtoint %struct.ktermios* %1 to i64, !dbg !5075, !verifier.code !4408
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i222);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8621, 35} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i64($i222, 8);
  // WARNING: %314 = add i64 %313, 8, !dbg !5080, !verifier.code !4408
  call {:cexpr "__cil_tmp151"} boogie_si_record_i64($i223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8622, 24} true;
  assume {:verifier.code 0} true;
  $p224 := $i2p.i64.ref($i223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8622, 22} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i32($M.0, $p224);
  // WARNING: %316 = load i32, i32* %315, align 4, !dbg !5084, !verifier.code !4408
  call {:cexpr "__cil_tmp152"} boogie_si_record_i32($i225);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8623, 35} true;
  assume {:verifier.code 0} true;
  $i226 := $and.i32($i225, 2048);
  // WARNING: %317 = and i32 %316, 2048, !dbg !5087, !verifier.code !4408
  call {:cexpr "__cil_tmp153"} boogie_si_record_i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8624, 13} true;
  assume {:verifier.code 0} true;
  $i227 := $ne.i32($i226, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8624, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb105, $bb106;
$bb104:
  assume {:verifier.code 0} true;
  goto $bb101;
$bb105:
  assume ($i227 == 1);
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume !(($i227 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8625, 24} true;
  assume {:verifier.code 0} true;
  $i228 := $p2i.ref.i64($p9);
  // WARNING: %320 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5093, !verifier.code !4408
  call {:cexpr "__cil_tmp154"} boogie_si_record_i64($i228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8626, 37} true;
  assume {:verifier.code 0} true;
  $i229 := $add.i64($i228, 256);
  // WARNING: %321 = add i64 %320, 256, !dbg !5097, !verifier.code !4408
  call {:cexpr "__cil_tmp155"} boogie_si_record_i64($i229);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8627, 24} true;
  assume {:verifier.code 0} true;
  $i230 := $p2i.ref.i64($p9);
  // WARNING: %322 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5100, !verifier.code !4408
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i230);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8628, 37} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i64($i230, 256);
  // WARNING: %323 = add i64 %322, 256, !dbg !5103, !verifier.code !4408
  call {:cexpr "__cil_tmp157"} boogie_si_record_i64($i231);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8629, 26} true;
  assume {:verifier.code 0} true;
  $p232 := $i2p.i64.ref($i231);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8629, 24} true;
  assume {:verifier.code 0} true;
  $i233 := $load.i8($M.0, $p232);
  // WARNING: %325 = load i8, i8* %324, align 1, !dbg !5107, !verifier.code !4408
  call {:cexpr "__cil_tmp158"} boogie_si_record_i8($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8630, 24} true;
  assume {:verifier.code 0} true;
  $i234 := $zext.i8.i32($i233);
  // WARNING: %326 = zext i8 %325 to i32, !dbg !5110, !verifier.code !4408
  call {:cexpr "__cil_tmp159"} boogie_si_record_i32($i234);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8631, 37} true;
  assume {:verifier.code 0} true;
  $i235 := $or.i32($i234, 8);
  // WARNING: %327 = or i32 %326, 8, !dbg !5113, !verifier.code !4408
  call {:cexpr "__cil_tmp160"} boogie_si_record_i32($i235);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8632, 44} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i32.i8($i235);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8632, 11} true;
  assume {:verifier.code 0} true;
  $p237 := $i2p.i64.ref($i229);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8632, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p237, $i236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8633, 7} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:verifier.code 0} true;
  goto $bb104;
$bb108:
  assume ($i248 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8653, 20} true;
  assume {:verifier.code 0} true;
  $i249 := $p2i.ref.i64($p9);
  // WARNING: %346 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5149, !verifier.code !4408
  call {:cexpr "__cil_tmp168"} boogie_si_record_i64($i249);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8654, 33} true;
  assume {:verifier.code 0} true;
  $i250 := $add.i64($i249, 258);
  // WARNING: %347 = add i64 %346, 258, !dbg !5153, !verifier.code !4408
  call {:cexpr "__cil_tmp169"} boogie_si_record_i64($i250);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8655, 20} true;
  assume {:verifier.code 0} true;
  $i251 := $p2i.ref.i64($p9);
  // WARNING: %348 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5156, !verifier.code !4408
  call {:cexpr "__cil_tmp170"} boogie_si_record_i64($i251);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8656, 33} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i64($i251, 258);
  // WARNING: %349 = add i64 %348, 258, !dbg !5159, !verifier.code !4408
  call {:cexpr "__cil_tmp171"} boogie_si_record_i64($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8657, 22} true;
  assume {:verifier.code 0} true;
  $p253 := $i2p.i64.ref($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8657, 20} true;
  assume {:verifier.code 0} true;
  $i254 := $load.i8($M.0, $p253);
  // WARNING: %351 = load i8, i8* %350, align 1, !dbg !5163, !verifier.code !4408
  call {:cexpr "__cil_tmp172"} boogie_si_record_i8($i254);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8658, 20} true;
  assume {:verifier.code 0} true;
  $i255 := $zext.i8.i32($i254);
  // WARNING: %352 = zext i8 %351 to i32, !dbg !5166, !verifier.code !4408
  call {:cexpr "__cil_tmp173"} boogie_si_record_i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8659, 33} true;
  assume {:verifier.code 0} true;
  $i256 := $or.i32($i255, 34);
  // WARNING: %353 = or i32 %352, 34, !dbg !5169, !verifier.code !4408
  call {:cexpr "__cil_tmp174"} boogie_si_record_i32($i256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8660, 40} true;
  assume {:verifier.code 0} true;
  $i257 := $trunc.i32.i8($i256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8660, 7} true;
  assume {:verifier.code 0} true;
  $p258 := $i2p.i64.ref($i250);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8660, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p258, $i257);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8661, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb109:
  assume !(($i248 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8662, 20} true;
  assume {:verifier.code 0} true;
  $i259 := $p2i.ref.i64($p9);
  // WARNING: %357 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5176, !verifier.code !4408
  call {:cexpr "__cil_tmp175"} boogie_si_record_i64($i259);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8663, 33} true;
  assume {:verifier.code 0} true;
  $i260 := $add.i64($i259, 258);
  // WARNING: %358 = add i64 %357, 258, !dbg !5180, !verifier.code !4408
  call {:cexpr "__cil_tmp176"} boogie_si_record_i64($i260);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8664, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $p2i.ref.i64($p9);
  // WARNING: %359 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5183, !verifier.code !4408
  call {:cexpr "__cil_tmp177"} boogie_si_record_i64($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8665, 33} true;
  assume {:verifier.code 0} true;
  $i262 := $add.i64($i261, 258);
  // WARNING: %360 = add i64 %359, 258, !dbg !5186, !verifier.code !4408
  call {:cexpr "__cil_tmp178"} boogie_si_record_i64($i262);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8666, 22} true;
  assume {:verifier.code 0} true;
  $p263 := $i2p.i64.ref($i262);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8666, 20} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i8($M.0, $p263);
  // WARNING: %362 = load i8, i8* %361, align 1, !dbg !5190, !verifier.code !4408
  call {:cexpr "__cil_tmp179"} boogie_si_record_i8($i264);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8667, 20} true;
  assume {:verifier.code 0} true;
  $i265 := $zext.i8.i32($i264);
  // WARNING: %363 = zext i8 %362 to i32, !dbg !5193, !verifier.code !4408
  call {:cexpr "__cil_tmp180"} boogie_si_record_i32($i265);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8668, 33} true;
  assume {:verifier.code 0} true;
  $i266 := $and.i32($i265, $sub.i32(0, 33));
  // WARNING: %364 = and i32 %363, -33, !dbg !5196, !verifier.code !4408
  call {:cexpr "__cil_tmp181"} boogie_si_record_i32($i266);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8669, 40} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i32.i8($i266);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8669, 7} true;
  assume {:verifier.code 0} true;
  $p268 := $i2p.i64.ref($i260);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8669, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p268, $i267);
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8673, 18} true;
  assume {:verifier.code 0} true;
  $i269 := $zext.i8.i32($i56);
  // WARNING: %368 = zext i8 %.3 to i32, !dbg !5202, !verifier.code !4408
  call {:cexpr "__cil_tmp182"} boogie_si_record_i32($i269);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8674, 31} true;
  assume {:verifier.code 0} true;
  $i270 := $or.i32($i269, 128);
  // WARNING: %369 = or i32 %368, 128, !dbg !5206, !verifier.code !4408
  call {:cexpr "__cil_tmp183"} boogie_si_record_i32($i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8675, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 3, $i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8676, 23} true;
  assume {:verifier.code 0} true;
  $i271 := $and.i32($i75, 255);
  // WARNING: %370 = and i32 %.14, 255, !dbg !5210, !verifier.code !4408
  call {:cexpr "__cil_tmp184"} boogie_si_record_i32($i271);
  // WARNING: call void @llvm.dbg.value(metadata i32 %370, i64 0, metadata !6545, metadata !4406), !dbg !6546, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8678, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 0, $i271);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8679, 23} true;
  assume {:verifier.code 0} true;
  $i272 := $lshr.i32($i75, 8);
  // WARNING: %371 = lshr i32 %.14, 8, !dbg !5216, !verifier.code !4408
  call {:cexpr "__cil_tmp186"} boogie_si_record_i32($i272);
  // WARNING: call void @llvm.dbg.value(metadata i32 %371, i64 0, metadata !6551, metadata !4406), !dbg !6552, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8681, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 1, $i272);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8682, 18} true;
  assume {:verifier.code 0} true;
  $i273 := $zext.i8.i32($i56);
  // WARNING: %372 = zext i8 %.3 to i32, !dbg !5222, !verifier.code !4408
  call {:cexpr "__cil_tmp188"} boogie_si_record_i32($i273);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8683, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 3, $i273);
  // WARNING: call void @serial_out(%struct.uart_hsu_port* %10, i32 3, i32 %372), !dbg !5225, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8685, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 13, $i72);
  // WARNING: call void @serial_out(%struct.uart_hsu_port* %10, i32 13, i32 %.1), !dbg !5228, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8687, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 12, $i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8688, 18} true;
  assume {:verifier.code 0} true;
  $i274 := $p2i.ref.i64($p9);
  // WARNING: %373 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5232, !verifier.code !4408
  call {:cexpr "__cil_tmp191"} boogie_si_record_i64($i274);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8689, 31} true;
  assume {:verifier.code 0} true;
  $i275 := $add.i64($i274, 257);
  // WARNING: %374 = add i64 %373, 257, !dbg !5235, !verifier.code !4408
  call {:cexpr "__cil_tmp192"} boogie_si_record_i64($i275);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8690, 5} true;
  assume {:verifier.code 0} true;
  $p276 := $i2p.i64.ref($i275);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8690, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p276, $i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8691, 18} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p9);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %376, i64 0, metadata !6575, metadata !4406), !dbg !6576, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8693, 18} true;
  assume {:verifier.code 0} true;
  $i278 := $p2i.ref.i64($p9);
  // WARNING: %377 = ptrtoint %struct.uart_hsu_port* %10 to i64, !dbg !5245, !verifier.code !4408
  call {:cexpr "__cil_tmp195"} boogie_si_record_i64($i278);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8694, 31} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i64($i278, 196);
  // WARNING: %378 = add i64 %377, 196, !dbg !5248, !verifier.code !4408
  call {:cexpr "__cil_tmp196"} boogie_si_record_i64($i279);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8695, 20} true;
  assume {:verifier.code 0} true;
  $p280 := $i2p.i64.ref($i279);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8695, 18} true;
  assume {:verifier.code 0} true;
  $i281 := $load.i32($M.0, $p280);
  // WARNING: %380 = load i32, i32* %379, align 4, !dbg !5252, !verifier.code !4408
  call {:cexpr "__cil_tmp197"} boogie_si_record_i32($i281);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8696, 3} true;
  assume {:verifier.code 0} true;
  call serial_hsu_set_mctrl($p277, $i281);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8697, 18} true;
  assume {:verifier.code 0} true;
  $i282 := $zext.i8.i32($i92);
  // WARNING: %381 = zext i8 %155 to i32, !dbg !5256, !verifier.code !4408
  call {:cexpr "__cil_tmp198"} boogie_si_record_i32($i282);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8698, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p9, 2, $i282);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8699, 18} true;
  assume {:verifier.code 0} true;
  $p283 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8700, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p283, $i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8702, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_pm: ref;
axiom (serial_hsu_pm == $sub.ref(0, 77206));
procedure  serial_hsu_pm($p0: ref, $i1: i32, $i2: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6600, metadata !4406), !dbg !6601, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6602, metadata !4406), !dbg !6603, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8709, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_type: ref;
axiom (serial_hsu_type == $sub.ref(0, 78238));
procedure  serial_hsu_type($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8777, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8778, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4417, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8779, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8780, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8780, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8780, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8781, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %8, i64 0, metadata !6629, metadata !4406), !dbg !6630, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8784, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64(264, 0);
  // WARNING: %9 = add i64 264, 0, !dbg !4431, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8785, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p7);
  // WARNING: %10 = ptrtoint %struct.uart_hsu_port* %8 to i64, !dbg !4435, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8786, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, $i8);
  // WARNING: %11 = add i64 %10, %9, !dbg !4438, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8787, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8788, 3} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
}
const serial_hsu_release_port: ref;
axiom (serial_hsu_release_port == $sub.ref(0, 79270));
procedure  serial_hsu_release_port($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8716, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_request_port: ref;
axiom (serial_hsu_request_port == $sub.ref(0, 80302));
procedure  serial_hsu_request_port($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8723, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial_hsu_config_port: ref;
axiom (serial_hsu_config_port == $sub.ref(0, 81334));
procedure  serial_hsu_config_port($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6658, metadata !4406), !dbg !6659, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8741, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8742, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i32($p2);
  // WARNING: %4 = ptrtoint %struct.uart_port* %3 to i32, !dbg !4419, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8743, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8744, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8744, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8744, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, $mul.ref($i6, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8745, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %9, i64 0, metadata !6680, metadata !4406), !dbg !6681, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8747, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  // WARNING: %10 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8748, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 204);
  // WARNING: %11 = add i64 %10, 204, !dbg !4436, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8749, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8749, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8750, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_hsu_verify_port: ref;
axiom (serial_hsu_verify_port == $sub.ref(0, 82366));
procedure  serial_hsu_verify_port($p0: ref, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8757, 3} true;
  assume {:verifier.code 0} true;
  $r := $sub.i32(0, 22);
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 83398));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const default_llseek: ref;
axiom (default_llseek == $sub.ref(0, 84430));
procedure  default_llseek($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64);
const port_show_regs: ref;
axiom (port_show_regs == $sub.ref(0, 85462));
procedure  port_show_regs($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i64;
  var $p23: ref;
  var $i24: i32;
  var $i25: i64;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i64;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $i46: i64;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i64;
  var $p51: ref;
  var $i52: i32;
  var $i53: i64;
  var $i54: i32;
  var $i55: i32;
  var $i56: i32;
  var $i57: i64;
  var $p58: ref;
  var $i59: i32;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i64;
  var $p65: ref;
  var $i66: i32;
  var $i67: i64;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i64;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i64;
  var $p86: ref;
  var $i87: i32;
  var $i88: i64;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i64;
  var $p93: ref;
  var $i94: i32;
  var $i95: i64;
  var $i96: i32;
  var $i97: i32;
  var $i98: i1;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $i11: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6703, metadata !4406), !dbg !6704, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4670, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %5 = ptrtoint %struct.file* %0 to i64, !dbg !4415, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4671, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 200);
  // WARNING: %6 = add i64 %5, 200, !dbg !4420, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4672, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4672, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4673, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %9, i64 0, metadata !6722, metadata !4406), !dbg !6723, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !6724, metadata !4406), !dbg !6725, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4676, 13} true;
  assume {:verifier.code 0} true;
  call $p9 := kzalloc(1024, 208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4679, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.ref($p9, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4680, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4786, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4685, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4685, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p9, $mul.ref($i12, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4686, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(1024, 0);
  // WARNING: %17 = sub i32 1024, 0, !dbg !4448, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4687, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  // WARNING: %18 = zext i32 %17 to i64, !dbg !4451, !verifier.code !4408
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4688, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p8);
  // WARNING: %19 = ptrtoint %struct.uart_hsu_port* %9 to i64, !dbg !4454, !verifier.code !4408
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4689, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 276);
  // WARNING: %20 = add i64 %19, 276, !dbg !4457, !verifier.code !4408
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4690, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4690, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  // WARNING: %22 = load i32, i32* %21, align 4, !dbg !4461, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4691, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := snprintf.ref.i64.ref.i32($p13, $i15, .str.14, $i19);
  // WARNING: %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %16, i64 %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i32 0, i32 0), i32 %22), !dbg !4464, !verifier.code !4408
  call {:cexpr "tmp___8"} boogie_si_record_i32($i20);
  // WARNING: call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !6759, metadata !4406), !dbg !6760, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4693, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32(0, $i20);
  // WARNING: %24 = add i32 0, %23, !dbg !4469, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4694, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4694, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p9, $mul.ref($i22, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4695, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(1024, $i21);
  // WARNING: %27 = sub i32 1024, %24, !dbg !4473, !verifier.code !4408
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4696, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i32.i64($i24);
  // WARNING: %28 = zext i32 %27 to i64, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4697, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := snprintf.ref.i64.ref($p23, $i25, .str.15);
  // WARNING: %29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %26, i64 %28, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i32 0, i32 0)), !dbg !4479, !verifier.code !4408
  call {:cexpr "tmp___9"} boogie_si_record_i32($i26);
  // WARNING: call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !6774, metadata !4406), !dbg !6775, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4699, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i21, $i26);
  // WARNING: %30 = add i32 %24, %29, !dbg !4484, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4700, 14} true;
  assume {:verifier.code 0} true;
  call $i28 := serial_in($p8, 1);
  // WARNING: %31 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 1), !dbg !4485, !verifier.code !4408
  call {:cexpr "tmp___10"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4701, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i32.i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4701, 21} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p9, $mul.ref($i29, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4702, 23} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(1024, $i27);
  // WARNING: %34 = sub i32 1024, %30, !dbg !4491, !verifier.code !4408
  call {:cexpr "__cil_tmp48"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4703, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i32.i64($i31);
  // WARNING: %35 = zext i32 %34 to i64, !dbg !4494, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4704, 14} true;
  assume {:verifier.code 0} true;
  call $i33 := snprintf.ref.i64.ref.i32($p30, $i32, .str.16, $i28);
  // WARNING: %36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %33, i64 %35, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i32 %31), !dbg !4497, !verifier.code !4408
  call {:cexpr "tmp___11"} boogie_si_record_i32($i33);
  // WARNING: call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !6792, metadata !4406), !dbg !6793, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4706, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i27, $i33);
  // WARNING: %37 = add i32 %30, %36, !dbg !4502, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4707, 14} true;
  assume {:verifier.code 0} true;
  call $i35 := serial_in($p8, 2);
  // WARNING: %38 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 2), !dbg !4503, !verifier.code !4408
  call {:cexpr "tmp___12"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4708, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i32.i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4708, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p9, $mul.ref($i36, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4709, 23} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(1024, $i34);
  // WARNING: %41 = sub i32 1024, %37, !dbg !4509, !verifier.code !4408
  call {:cexpr "__cil_tmp52"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4710, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  // WARNING: %42 = zext i32 %41 to i64, !dbg !4512, !verifier.code !4408
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4711, 14} true;
  assume {:verifier.code 0} true;
  call $i40 := snprintf.ref.i64.ref.i32($p37, $i39, .str.17, $i35);
  // WARNING: %43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %40, i64 %42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i32 %38), !dbg !4515, !verifier.code !4408
  call {:cexpr "tmp___13"} boogie_si_record_i32($i40);
  // WARNING: call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !6810, metadata !4406), !dbg !6811, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4713, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i34, $i40);
  // WARNING: %44 = add i32 %37, %43, !dbg !4520, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4714, 14} true;
  assume {:verifier.code 0} true;
  call $i42 := serial_in($p8, 3);
  // WARNING: %45 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 3), !dbg !4521, !verifier.code !4408
  call {:cexpr "tmp___14"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4715, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i32.i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4715, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p9, $mul.ref($i43, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4716, 23} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.i32(1024, $i41);
  // WARNING: %48 = sub i32 1024, %44, !dbg !4527, !verifier.code !4408
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4717, 17} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i32.i64($i45);
  // WARNING: %49 = zext i32 %48 to i64, !dbg !4530, !verifier.code !4408
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4718, 14} true;
  assume {:verifier.code 0} true;
  call $i47 := snprintf.ref.i64.ref.i32($p44, $i46, .str.18, $i42);
  // WARNING: %50 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %47, i64 %49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i32 %45), !dbg !4533, !verifier.code !4408
  call {:cexpr "tmp___15"} boogie_si_record_i32($i47);
  // WARNING: call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !6828, metadata !4406), !dbg !6829, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4720, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i41, $i47);
  // WARNING: %51 = add i32 %44, %50, !dbg !4538, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4721, 14} true;
  assume {:verifier.code 0} true;
  call $i49 := serial_in($p8, 4);
  // WARNING: %52 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 4), !dbg !4539, !verifier.code !4408
  call {:cexpr "tmp___16"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4722, 21} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i32.i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4722, 21} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p9, $mul.ref($i50, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4723, 23} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32(1024, $i48);
  // WARNING: %55 = sub i32 1024, %51, !dbg !4545, !verifier.code !4408
  call {:cexpr "__cil_tmp60"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4724, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i32.i64($i52);
  // WARNING: %56 = zext i32 %55 to i64, !dbg !4548, !verifier.code !4408
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4725, 14} true;
  assume {:verifier.code 0} true;
  call $i54 := snprintf.ref.i64.ref.i32($p51, $i53, .str.19, $i49);
  // WARNING: %57 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 %56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 %52), !dbg !4551, !verifier.code !4408
  call {:cexpr "tmp___17"} boogie_si_record_i32($i54);
  // WARNING: call void @llvm.dbg.value(metadata i32 %57, i64 0, metadata !6846, metadata !4406), !dbg !6847, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4727, 13} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i48, $i54);
  // WARNING: %58 = add i32 %51, %57, !dbg !4556, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4728, 14} true;
  assume {:verifier.code 0} true;
  call $i56 := serial_in($p8, 5);
  // WARNING: %59 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 5), !dbg !4557, !verifier.code !4408
  call {:cexpr "tmp___18"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4729, 21} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i32.i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4729, 21} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p9, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4730, 23} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i32(1024, $i55);
  // WARNING: %62 = sub i32 1024, %58, !dbg !4563, !verifier.code !4408
  call {:cexpr "__cil_tmp64"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4731, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i32.i64($i59);
  // WARNING: %63 = zext i32 %62 to i64, !dbg !4566, !verifier.code !4408
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4732, 14} true;
  assume {:verifier.code 0} true;
  call $i61 := snprintf.ref.i64.ref.i32($p58, $i60, .str.20, $i56);
  // WARNING: %64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %61, i64 %63, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i32 %59), !dbg !4569, !verifier.code !4408
  call {:cexpr "tmp___19"} boogie_si_record_i32($i61);
  // WARNING: call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !6864, metadata !4406), !dbg !6865, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4734, 13} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i55, $i61);
  // WARNING: %65 = add i32 %58, %64, !dbg !4574, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4735, 14} true;
  assume {:verifier.code 0} true;
  call $i63 := serial_in($p8, 6);
  // WARNING: %66 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 6), !dbg !4575, !verifier.code !4408
  call {:cexpr "tmp___20"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4736, 21} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4736, 21} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p9, $mul.ref($i64, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4737, 23} true;
  assume {:verifier.code 0} true;
  $i66 := $sub.i32(1024, $i62);
  // WARNING: %69 = sub i32 1024, %65, !dbg !4581, !verifier.code !4408
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4738, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i32.i64($i66);
  // WARNING: %70 = zext i32 %69 to i64, !dbg !4584, !verifier.code !4408
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4739, 14} true;
  assume {:verifier.code 0} true;
  call $i68 := snprintf.ref.i64.ref.i32($p65, $i67, .str.21, $i63);
  // WARNING: %71 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %68, i64 %70, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i32 %66), !dbg !4587, !verifier.code !4408
  call {:cexpr "tmp___21"} boogie_si_record_i32($i68);
  // WARNING: call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !6882, metadata !4406), !dbg !6883, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4741, 13} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i62, $i68);
  // WARNING: %72 = add i32 %65, %71, !dbg !4592, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4742, 14} true;
  assume {:verifier.code 0} true;
  call $i70 := serial_in($p8, 8);
  // WARNING: %73 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 8), !dbg !4593, !verifier.code !4408
  call {:cexpr "tmp___22"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4743, 21} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4743, 21} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p9, $mul.ref($i71, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4744, 23} true;
  assume {:verifier.code 0} true;
  $i73 := $sub.i32(1024, $i69);
  // WARNING: %76 = sub i32 1024, %72, !dbg !4599, !verifier.code !4408
  call {:cexpr "__cil_tmp72"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4745, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i32.i64($i73);
  // WARNING: %77 = zext i32 %76 to i64, !dbg !4602, !verifier.code !4408
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4746, 14} true;
  assume {:verifier.code 0} true;
  call $i75 := snprintf.ref.i64.ref.i32($p72, $i74, .str.22, $i70);
  // WARNING: %78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %75, i64 %77, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 %73), !dbg !4605, !verifier.code !4408
  call {:cexpr "tmp___23"} boogie_si_record_i32($i75);
  // WARNING: call void @llvm.dbg.value(metadata i32 %78, i64 0, metadata !6900, metadata !4406), !dbg !6901, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4748, 13} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i69, $i75);
  // WARNING: %79 = add i32 %72, %78, !dbg !4610, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4749, 14} true;
  assume {:verifier.code 0} true;
  call $i77 := serial_in($p8, 12);
  // WARNING: %80 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 12), !dbg !4611, !verifier.code !4408
  call {:cexpr "tmp___24"} boogie_si_record_i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4750, 21} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i32.i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4750, 21} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p9, $mul.ref($i78, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4751, 23} true;
  assume {:verifier.code 0} true;
  $i80 := $sub.i32(1024, $i76);
  // WARNING: %83 = sub i32 1024, %79, !dbg !4617, !verifier.code !4408
  call {:cexpr "__cil_tmp76"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4752, 17} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i32.i64($i80);
  // WARNING: %84 = zext i32 %83 to i64, !dbg !4620, !verifier.code !4408
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4753, 14} true;
  assume {:verifier.code 0} true;
  call $i82 := snprintf.ref.i64.ref.i32($p79, $i81, .str.23, $i77);
  // WARNING: %85 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %82, i64 %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i32 %80), !dbg !4623, !verifier.code !4408
  call {:cexpr "tmp___25"} boogie_si_record_i32($i82);
  // WARNING: call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !6918, metadata !4406), !dbg !6919, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4755, 13} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i76, $i82);
  // WARNING: %86 = add i32 %79, %85, !dbg !4628, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4756, 14} true;
  assume {:verifier.code 0} true;
  call $i84 := serial_in($p8, 13);
  // WARNING: %87 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 13), !dbg !4629, !verifier.code !4408
  call {:cexpr "tmp___26"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4757, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i32.i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4757, 21} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p9, $mul.ref($i85, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4758, 23} true;
  assume {:verifier.code 0} true;
  $i87 := $sub.i32(1024, $i83);
  // WARNING: %90 = sub i32 1024, %86, !dbg !4635, !verifier.code !4408
  call {:cexpr "__cil_tmp80"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4759, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i32.i64($i87);
  // WARNING: %91 = zext i32 %90 to i64, !dbg !4638, !verifier.code !4408
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4760, 14} true;
  assume {:verifier.code 0} true;
  call $i89 := snprintf.ref.i64.ref.i32($p86, $i88, .str.24, $i84);
  // WARNING: %92 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %89, i64 %91, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0), i32 %87), !dbg !4641, !verifier.code !4408
  call {:cexpr "tmp___27"} boogie_si_record_i32($i89);
  // WARNING: call void @llvm.dbg.value(metadata i32 %92, i64 0, metadata !6936, metadata !4406), !dbg !6937, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4762, 13} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i32($i83, $i89);
  // WARNING: %93 = add i32 %86, %92, !dbg !4646, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4763, 14} true;
  assume {:verifier.code 0} true;
  call $i91 := serial_in($p8, 14);
  // WARNING: %94 = call i32 @serial_in(%struct.uart_hsu_port* %9, i32 14), !dbg !4647, !verifier.code !4408
  call {:cexpr "tmp___28"} boogie_si_record_i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4764, 21} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i32.i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4764, 21} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p9, $mul.ref($i92, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4765, 23} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32(1024, $i90);
  // WARNING: %97 = sub i32 1024, %93, !dbg !4653, !verifier.code !4408
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4766, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i32.i64($i94);
  // WARNING: %98 = zext i32 %97 to i64, !dbg !4656, !verifier.code !4408
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4767, 14} true;
  assume {:verifier.code 0} true;
  call $i96 := snprintf.ref.i64.ref.i32($p93, $i95, .str.25, $i91);
  // WARNING: %99 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %96, i64 %98, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i32 %94), !dbg !4659, !verifier.code !4408
  call {:cexpr "tmp___29"} boogie_si_record_i32($i96);
  // WARNING: call void @llvm.dbg.value(metadata i32 %99, i64 0, metadata !6954, metadata !4406), !dbg !6955, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4769, 13} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i32($i90, $i96);
  // WARNING: %100 = add i32 %93, %99, !dbg !4664, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4771, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $ugt.i32($i97, 1024);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4771, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4773, 3} true;
  assume {:verifier.code 0} true;
  $i99 := 1024;
  goto $bb7;
$bb6:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  $i99 := $i97;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4779, 17} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i32.i64($i99);
  // WARNING: %105 = zext i32 %.01 to i64, !dbg !4674, !verifier.code !4408
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4780, 9} true;
  assume {:verifier.code 0} true;
  call $i101 := simple_read_from_buffer($p1, $i2, $p3, $p9, $i100);
  // WARNING: %106 = call i64 @simple_read_from_buffer(i8* %1, i64 %2, i64* %3, i8* %10, i64 %105), !dbg !4678, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4782, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4784, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i101;
  goto $bb3;
}
const simple_open: ref;
axiom (simple_open == $sub.ref(0, 86494));
procedure  simple_open($p0: ref, $p1: ref)
  returns ($r: i32);
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 87526));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6983, metadata !4406), !dbg !6984, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3791, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $or.i32($i1, 32768);
  // WARNING: %3 = or i32 %1, 32768, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !6990, metadata !4406), !dbg !6991, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6992, metadata !4406), !dbg !6994, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3779, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := __kmalloc($i0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3794, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const snprintf: ref;
axiom (snprintf == $sub.ref(0, 88558));
procedure  snprintf.ref.i64.ref.i32($p0: ref, $i1: i64, $p2: ref, p.3: i32)
  returns ($r: i32);
procedure  snprintf.ref.i64.ref($p0: ref, $i1: i64, $p2: ref)
  returns ($r: i32);
const serial_in: ref;
axiom (serial_in == $sub.ref(0, 89590));
procedure  serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %0, i64 0, metadata !7009, metadata !4406), !dbg !7010, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4506, 14} true;
  assume {:verifier.code 0} true;
  $i2 := $sgt.i32($i1, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4508, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $shl.i32($i1, 2);
  // WARNING: %5 = shl i32 %1, 2, !dbg !4417, !verifier.code !4410
  call {:cexpr "offset"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !7011, metadata !4406), !dbg !7012, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4510, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4422, !verifier.code !4410
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4511, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 32);
  // WARNING: %7 = add i64 %6, 32, !dbg !4425, !verifier.code !4410
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4512, 20} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4512, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4513, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4513, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4515, 11} true;
  assume {:verifier.code 0} true;
  call $i10 := readl($p9);
  // WARNING: %12 = call i32 @readl(i8* %11), !dbg !4437, !verifier.code !4410
  call {:cexpr "val"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4517, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4520, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p0);
  // WARNING: %14 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4443, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4521, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 32);
  // WARNING: %15 = add i64 %14, 32, !dbg !4448, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4522, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4522, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4523, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4523, 31} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p15, $mul.ref($i16, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4525, 15} true;
  assume {:verifier.code 0} true;
  call $i18 := readb($p17);
  // WARNING: %20 = call zeroext i8 @readb(i8* %19), !dbg !4460, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4526, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  // WARNING: %21 = zext i8 %20 to i32, !dbg !4463, !verifier.code !4410
  call {:cexpr "val"} boogie_si_record_i32($i19);
  assume {:verifier.code 0} true;
  $i11 := $i19;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4529, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const simple_read_from_buffer: ref;
axiom (simple_read_from_buffer == $sub.ref(0, 90622));
procedure  simple_read_from_buffer($p0: ref, $i1: i64, $p2: ref, $p3: ref, $i4: i64)
  returns ($r: i64);
const kfree: ref;
axiom (kfree == $sub.ref(0, 91654));
procedure  kfree($p0: ref);
const readl: ref;
axiom (readl == $sub.ref(0, 92686));
procedure  readl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3733, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce(0, $p1);
  // WARNING: %3 = call i32 @devirtbounce(i32 (i32*)* asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %2)
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3737, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const readb: ref;
axiom (readb == $sub.ref(0, 93718));
procedure  readb($p0: ref)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  call $i1 := devirtbounce.1(0, $p0);
  // WARNING: %2 = call i8 @devirtbounce.1(i8 (i8*)* asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i8* %0)
  call {:cexpr "ret"} boogie_si_record_i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3724, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 94750));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const dma_show_regs: ref;
axiom (dma_show_regs == $sub.ref(0, 95782));
procedure  dma_show_regs($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i32;
  var $i25: i32;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $i36: i32;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i64;
  var $p45: ref;
  var $i46: i32;
  var $i47: i64;
  var $i48: i32;
  var $i49: i32;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i64;
  var $p69: ref;
  var $i70: i32;
  var $i71: i64;
  var $i72: i32;
  var $i73: i32;
  var $i74: i64;
  var $i75: i64;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i64;
  var $p81: ref;
  var $i82: i32;
  var $i83: i64;
  var $i84: i32;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $i92: i64;
  var $p93: ref;
  var $i94: i32;
  var $i95: i64;
  var $i96: i32;
  var $i97: i32;
  var $i98: i64;
  var $i99: i64;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i64;
  var $p105: ref;
  var $i106: i32;
  var $i107: i64;
  var $i108: i32;
  var $i109: i32;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i116: i64;
  var $p117: ref;
  var $i118: i32;
  var $i119: i64;
  var $i120: i32;
  var $i121: i32;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i32;
  var $i128: i64;
  var $p129: ref;
  var $i130: i32;
  var $i131: i64;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i64;
  var $i144: i32;
  var $i145: i32;
  var $i146: i64;
  var $i147: i64;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i32;
  var $i152: i64;
  var $p153: ref;
  var $i154: i32;
  var $i155: i64;
  var $i156: i32;
  var $i157: i32;
  var $i158: i64;
  var $i159: i64;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: i32;
  var $i164: i64;
  var $p165: ref;
  var $i166: i32;
  var $i167: i64;
  var $i168: i32;
  var $i169: i32;
  var $i170: i1;
  var $i171: i32;
  var $i172: i64;
  var $i173: i64;
  var $i11: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7091, metadata !4406), !dbg !7092, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4947, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %5 = ptrtoint %struct.file* %0 to i64, !dbg !4415, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4948, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 200);
  // WARNING: %6 = add i64 %5, 200, !dbg !4420, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4949, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4949, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4950, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.hsu_dma_chan* %9, i64 0, metadata !7110, metadata !4406), !dbg !7111, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !7112, metadata !4406), !dbg !7113, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4953, 13} true;
  assume {:verifier.code 0} true;
  call $p9 := kzalloc(1024, 208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4956, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.ref($p9, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4956, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4957, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5136, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4962, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4962, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p9, $mul.ref($i12, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4963, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(1024, 0);
  // WARNING: %17 = sub i32 1024, 0, !dbg !4448, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4964, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  // WARNING: %18 = zext i32 %17 to i64, !dbg !4451, !verifier.code !4408
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4965, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4965, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  // WARNING: %20 = load i32, i32* %19, align 4, !dbg !4454, !verifier.code !4408
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4966, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := snprintf.ref.i64.ref.i32($p13, $i15, .str.26, $i17);
  // WARNING: %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %16, i64 %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 %20), !dbg !4457, !verifier.code !4408
  call {:cexpr "tmp___8"} boogie_si_record_i32($i18);
  // WARNING: call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !7140, metadata !4406), !dbg !7141, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4969, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32(0, $i18);
  // WARNING: %22 = add i32 0, %21, !dbg !4462, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4970, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4970, 21} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p9, $mul.ref($i20, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4971, 23} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i32(1024, $i19);
  // WARNING: %25 = sub i32 1024, %22, !dbg !4466, !verifier.code !4408
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4972, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i32.i64($i22);
  // WARNING: %26 = zext i32 %25 to i64, !dbg !4469, !verifier.code !4408
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4973, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := snprintf.ref.i64.ref($p21, $i23, .str.15);
  // WARNING: %27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %24, i64 %26, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i32 0, i32 0)), !dbg !4472, !verifier.code !4408
  call {:cexpr "tmp___9"} boogie_si_record_i32($i24);
  // WARNING: call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !7155, metadata !4406), !dbg !7156, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4975, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i19, $i24);
  // WARNING: %28 = add i32 %22, %27, !dbg !4477, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4976, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p8);
  // WARNING: %29 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4478, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4977, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 16);
  // WARNING: %30 = add i64 %29, 16, !dbg !4481, !verifier.code !4408
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4978, 19} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4978, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4979, 29} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4981, 14} true;
  assume {:verifier.code 0} true;
  call $i31 := readl($p30);
  // WARNING: %34 = call i32 @readl(i8* %33), !dbg !4493, !verifier.code !4408
  call {:cexpr "tmp___10"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4982, 21} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4982, 21} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p9, $mul.ref($i32, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4983, 23} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(1024, $i25);
  // WARNING: %37 = sub i32 1024, %28, !dbg !4499, !verifier.code !4408
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4984, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i32.i64($i34);
  // WARNING: %38 = zext i32 %37 to i64, !dbg !4502, !verifier.code !4408
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4985, 14} true;
  assume {:verifier.code 0} true;
  call $i36 := snprintf.ref.i64.ref.i32($p33, $i35, .str.27, $i31);
  // WARNING: %39 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %36, i64 %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i32 %34), !dbg !4505, !verifier.code !4408
  call {:cexpr "tmp___11"} boogie_si_record_i32($i36);
  // WARNING: call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !7188, metadata !4406), !dbg !7189, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4987, 13} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i32($i25, $i36);
  // WARNING: %40 = add i32 %28, %39, !dbg !4510, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4988, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p8);
  // WARNING: %41 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4511, !verifier.code !4408
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4989, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 16);
  // WARNING: %42 = add i64 %41, 16, !dbg !4514, !verifier.code !4408
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4990, 19} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4990, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4991, 29} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4993, 14} true;
  assume {:verifier.code 0} true;
  call $i43 := readl($p42);
  // WARNING: %46 = call i32 @readl(i8* %45), !dbg !4526, !verifier.code !4408
  call {:cexpr "tmp___12"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4994, 21} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4994, 21} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p9, $mul.ref($i44, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4995, 23} true;
  assume {:verifier.code 0} true;
  $i46 := $sub.i32(1024, $i37);
  // WARNING: %49 = sub i32 1024, %40, !dbg !4532, !verifier.code !4408
  call {:cexpr "__cil_tmp64"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4996, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i32.i64($i46);
  // WARNING: %50 = zext i32 %49 to i64, !dbg !4535, !verifier.code !4408
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4997, 14} true;
  assume {:verifier.code 0} true;
  call $i48 := snprintf.ref.i64.ref.i32($p45, $i47, .str.28, $i43);
  // WARNING: %51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %48, i64 %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i32 %46), !dbg !4538, !verifier.code !4408
  call {:cexpr "tmp___13"} boogie_si_record_i32($i48);
  // WARNING: call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !7221, metadata !4406), !dbg !7222, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4999, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i37, $i48);
  // WARNING: %52 = add i32 %40, %51, !dbg !4543, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5000, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p8);
  // WARNING: %53 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4544, !verifier.code !4408
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5001, 29} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 16);
  // WARNING: %54 = add i64 %53, 16, !dbg !4547, !verifier.code !4408
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5002, 19} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5002, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5003, 29} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5005, 14} true;
  assume {:verifier.code 0} true;
  call $i55 := readl($p54);
  // WARNING: %58 = call i32 @readl(i8* %57), !dbg !4559, !verifier.code !4408
  call {:cexpr "tmp___14"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5006, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i32.i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5006, 21} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p9, $mul.ref($i56, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5007, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $sub.i32(1024, $i49);
  // WARNING: %61 = sub i32 1024, %52, !dbg !4565, !verifier.code !4408
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5008, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i58);
  // WARNING: %62 = zext i32 %61 to i64, !dbg !4568, !verifier.code !4408
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5009, 14} true;
  assume {:verifier.code 0} true;
  call $i60 := snprintf.ref.i64.ref.i32($p57, $i59, .str.29, $i55);
  // WARNING: %63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %60, i64 %62, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 %58), !dbg !4571, !verifier.code !4408
  call {:cexpr "tmp___15"} boogie_si_record_i32($i60);
  // WARNING: call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !7254, metadata !4406), !dbg !7255, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5011, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i49, $i60);
  // WARNING: %64 = add i32 %52, %63, !dbg !4576, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5012, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p8);
  // WARNING: %65 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4577, !verifier.code !4408
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5013, 29} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 16);
  // WARNING: %66 = add i64 %65, 16, !dbg !4580, !verifier.code !4408
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5014, 19} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5014, 17} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5015, 29} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p65, 20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5017, 14} true;
  assume {:verifier.code 0} true;
  call $i67 := readl($p66);
  // WARNING: %70 = call i32 @readl(i8* %69), !dbg !4592, !verifier.code !4408
  call {:cexpr "tmp___16"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5018, 21} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i32.i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5018, 21} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p9, $mul.ref($i68, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5019, 23} true;
  assume {:verifier.code 0} true;
  $i70 := $sub.i32(1024, $i61);
  // WARNING: %73 = sub i32 1024, %64, !dbg !4598, !verifier.code !4408
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5020, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i32.i64($i70);
  // WARNING: %74 = zext i32 %73 to i64, !dbg !4601, !verifier.code !4408
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5021, 14} true;
  assume {:verifier.code 0} true;
  call $i72 := snprintf.ref.i64.ref.i32($p69, $i71, .str.30, $i67);
  // WARNING: %75 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %72, i64 %74, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i32 %70), !dbg !4604, !verifier.code !4408
  call {:cexpr "tmp___17"} boogie_si_record_i32($i72);
  // WARNING: call void @llvm.dbg.value(metadata i32 %75, i64 0, metadata !7287, metadata !4406), !dbg !7288, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5023, 13} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i61, $i72);
  // WARNING: %76 = add i32 %64, %75, !dbg !4609, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5024, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p8);
  // WARNING: %77 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4610, !verifier.code !4408
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5025, 29} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i74, 16);
  // WARNING: %78 = add i64 %77, 16, !dbg !4613, !verifier.code !4408
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5026, 19} true;
  assume {:verifier.code 0} true;
  $p76 := $i2p.i64.ref($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5026, 17} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5027, 29} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5029, 14} true;
  assume {:verifier.code 0} true;
  call $i79 := readl($p78);
  // WARNING: %82 = call i32 @readl(i8* %81), !dbg !4625, !verifier.code !4408
  call {:cexpr "tmp___18"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5030, 21} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i32.i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5030, 21} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p9, $mul.ref($i80, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5031, 23} true;
  assume {:verifier.code 0} true;
  $i82 := $sub.i32(1024, $i73);
  // WARNING: %85 = sub i32 1024, %76, !dbg !4631, !verifier.code !4408
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5032, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i32.i64($i82);
  // WARNING: %86 = zext i32 %85 to i64, !dbg !4634, !verifier.code !4408
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5033, 14} true;
  assume {:verifier.code 0} true;
  call $i84 := snprintf.ref.i64.ref.i32($p81, $i83, .str.31, $i79);
  // WARNING: %87 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %84, i64 %86, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), i32 %82), !dbg !4637, !verifier.code !4408
  call {:cexpr "tmp___19"} boogie_si_record_i32($i84);
  // WARNING: call void @llvm.dbg.value(metadata i32 %87, i64 0, metadata !7320, metadata !4406), !dbg !7321, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5035, 13} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i32($i73, $i84);
  // WARNING: %88 = add i32 %76, %87, !dbg !4642, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5036, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p8);
  // WARNING: %89 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4643, !verifier.code !4408
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5037, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, 16);
  // WARNING: %90 = add i64 %89, 16, !dbg !4646, !verifier.code !4408
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5038, 19} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5038, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5039, 29} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p89, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5041, 14} true;
  assume {:verifier.code 0} true;
  call $i91 := readl($p90);
  // WARNING: %94 = call i32 @readl(i8* %93), !dbg !4658, !verifier.code !4408
  call {:cexpr "tmp___20"} boogie_si_record_i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5042, 21} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5042, 21} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p9, $mul.ref($i92, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5043, 24} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32(1024, $i85);
  // WARNING: %97 = sub i32 1024, %88, !dbg !4664, !verifier.code !4408
  call {:cexpr "__cil_tmp100"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5044, 18} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i32.i64($i94);
  // WARNING: %98 = zext i32 %97 to i64, !dbg !4667, !verifier.code !4408
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5045, 14} true;
  assume {:verifier.code 0} true;
  call $i96 := snprintf.ref.i64.ref.i32($p93, $i95, .str.32, $i91);
  // WARNING: %99 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %96, i64 %98, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 %94), !dbg !4670, !verifier.code !4408
  call {:cexpr "tmp___21"} boogie_si_record_i32($i96);
  // WARNING: call void @llvm.dbg.value(metadata i32 %99, i64 0, metadata !7353, metadata !4406), !dbg !7354, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5047, 13} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i32($i85, $i96);
  // WARNING: %100 = add i32 %88, %99, !dbg !4675, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5048, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $p2i.ref.i64($p8);
  // WARNING: %101 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4676, !verifier.code !4408
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5049, 31} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i64($i98, 16);
  // WARNING: %102 = add i64 %101, 16, !dbg !4679, !verifier.code !4408
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5050, 20} true;
  assume {:verifier.code 0} true;
  $p100 := $i2p.i64.ref($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5050, 18} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5051, 31} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p101, 40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5053, 14} true;
  assume {:verifier.code 0} true;
  call $i103 := readl($p102);
  // WARNING: %106 = call i32 @readl(i8* %105), !dbg !4691, !verifier.code !4408
  call {:cexpr "tmp___22"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5054, 22} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i32.i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5054, 22} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p9, $mul.ref($i104, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5055, 24} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.i32(1024, $i97);
  // WARNING: %109 = sub i32 1024, %100, !dbg !4697, !verifier.code !4408
  call {:cexpr "__cil_tmp109"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5056, 18} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i32.i64($i106);
  // WARNING: %110 = zext i32 %109 to i64, !dbg !4700, !verifier.code !4408
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5057, 14} true;
  assume {:verifier.code 0} true;
  call $i108 := snprintf.ref.i64.ref.i32($p105, $i107, .str.31, $i103);
  // WARNING: %111 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %108, i64 %110, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), i32 %106), !dbg !4703, !verifier.code !4408
  call {:cexpr "tmp___23"} boogie_si_record_i32($i108);
  // WARNING: call void @llvm.dbg.value(metadata i32 %111, i64 0, metadata !7386, metadata !4406), !dbg !7387, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5059, 13} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i97, $i108);
  // WARNING: %112 = add i32 %100, %111, !dbg !4708, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5060, 18} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p8);
  // WARNING: %113 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4709, !verifier.code !4408
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5061, 31} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i64($i110, 16);
  // WARNING: %114 = add i64 %113, 16, !dbg !4712, !verifier.code !4408
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5062, 20} true;
  assume {:verifier.code 0} true;
  $p112 := $i2p.i64.ref($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5062, 18} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5063, 31} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p113, 44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5065, 14} true;
  assume {:verifier.code 0} true;
  call $i115 := readl($p114);
  // WARNING: %118 = call i32 @readl(i8* %117), !dbg !4724, !verifier.code !4408
  call {:cexpr "tmp___24"} boogie_si_record_i32($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5066, 22} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i32.i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5066, 22} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p9, $mul.ref($i116, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5067, 24} true;
  assume {:verifier.code 0} true;
  $i118 := $sub.i32(1024, $i109);
  // WARNING: %121 = sub i32 1024, %112, !dbg !4730, !verifier.code !4408
  call {:cexpr "__cil_tmp118"} boogie_si_record_i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5068, 18} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i32.i64($i118);
  // WARNING: %122 = zext i32 %121 to i64, !dbg !4733, !verifier.code !4408
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5069, 14} true;
  assume {:verifier.code 0} true;
  call $i120 := snprintf.ref.i64.ref.i32($p117, $i119, .str.32, $i115);
  // WARNING: %123 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %120, i64 %122, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 %118), !dbg !4736, !verifier.code !4408
  call {:cexpr "tmp___25"} boogie_si_record_i32($i120);
  // WARNING: call void @llvm.dbg.value(metadata i32 %123, i64 0, metadata !7419, metadata !4406), !dbg !7420, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5071, 13} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i109, $i120);
  // WARNING: %124 = add i32 %112, %123, !dbg !4741, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5072, 18} true;
  assume {:verifier.code 0} true;
  $i122 := $p2i.ref.i64($p8);
  // WARNING: %125 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4742, !verifier.code !4408
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5073, 31} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i64($i122, 16);
  // WARNING: %126 = add i64 %125, 16, !dbg !4745, !verifier.code !4408
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5074, 20} true;
  assume {:verifier.code 0} true;
  $p124 := $i2p.i64.ref($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5074, 18} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5075, 31} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p125, 48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5077, 14} true;
  assume {:verifier.code 0} true;
  call $i127 := readl($p126);
  // WARNING: %130 = call i32 @readl(i8* %129), !dbg !4757, !verifier.code !4408
  call {:cexpr "tmp___26"} boogie_si_record_i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5078, 22} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i32.i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5078, 22} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p9, $mul.ref($i128, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5079, 24} true;
  assume {:verifier.code 0} true;
  $i130 := $sub.i32(1024, $i121);
  // WARNING: %133 = sub i32 1024, %124, !dbg !4763, !verifier.code !4408
  call {:cexpr "__cil_tmp127"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5080, 18} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i32.i64($i130);
  // WARNING: %134 = zext i32 %133 to i64, !dbg !4766, !verifier.code !4408
  call {:cexpr "__cil_tmp128"} boogie_si_record_i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5081, 14} true;
  assume {:verifier.code 0} true;
  call $i132 := snprintf.ref.i64.ref.i32($p129, $i131, .str.31, $i127);
  // WARNING: %135 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %132, i64 %134, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), i32 %130), !dbg !4769, !verifier.code !4408
  call {:cexpr "tmp___27"} boogie_si_record_i32($i132);
  // WARNING: call void @llvm.dbg.value(metadata i32 %135, i64 0, metadata !7452, metadata !4406), !dbg !7453, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5083, 13} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i121, $i132);
  // WARNING: %136 = add i32 %124, %135, !dbg !4774, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5084, 18} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p8);
  // WARNING: %137 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4775, !verifier.code !4408
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5085, 31} true;
  assume {:verifier.code 0} true;
  $i135 := $add.i64($i134, 16);
  // WARNING: %138 = add i64 %137, 16, !dbg !4778, !verifier.code !4408
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5086, 20} true;
  assume {:verifier.code 0} true;
  $p136 := $i2p.i64.ref($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5086, 18} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5087, 31} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5089, 14} true;
  assume {:verifier.code 0} true;
  call $i139 := readl($p138);
  // WARNING: %142 = call i32 @readl(i8* %141), !dbg !4790, !verifier.code !4408
  call {:cexpr "tmp___28"} boogie_si_record_i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5090, 22} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i32.i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5090, 22} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p9, $mul.ref($i140, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5091, 24} true;
  assume {:verifier.code 0} true;
  $i142 := $sub.i32(1024, $i133);
  // WARNING: %145 = sub i32 1024, %136, !dbg !4796, !verifier.code !4408
  call {:cexpr "__cil_tmp136"} boogie_si_record_i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5092, 18} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i32.i64($i142);
  // WARNING: %146 = zext i32 %145 to i64, !dbg !4799, !verifier.code !4408
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5093, 14} true;
  assume {:verifier.code 0} true;
  call $i144 := snprintf.ref.i64.ref.i32($p141, $i143, .str.32, $i139);
  // WARNING: %147 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %144, i64 %146, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 %142), !dbg !4802, !verifier.code !4408
  call {:cexpr "tmp___29"} boogie_si_record_i32($i144);
  // WARNING: call void @llvm.dbg.value(metadata i32 %147, i64 0, metadata !7485, metadata !4406), !dbg !7486, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5095, 13} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i133, $i144);
  // WARNING: %148 = add i32 %136, %147, !dbg !4807, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5096, 18} true;
  assume {:verifier.code 0} true;
  $i146 := $p2i.ref.i64($p8);
  // WARNING: %149 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4808, !verifier.code !4408
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5097, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i64($i146, 16);
  // WARNING: %150 = add i64 %149, 16, !dbg !4811, !verifier.code !4408
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5098, 20} true;
  assume {:verifier.code 0} true;
  $p148 := $i2p.i64.ref($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5098, 18} true;
  assume {:verifier.code 0} true;
  $p149 := $load.ref($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5099, 31} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p149, 56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5101, 14} true;
  assume {:verifier.code 0} true;
  call $i151 := readl($p150);
  // WARNING: %154 = call i32 @readl(i8* %153), !dbg !4823, !verifier.code !4408
  call {:cexpr "tmp___30"} boogie_si_record_i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5102, 22} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i32.i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5102, 22} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p9, $mul.ref($i152, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5103, 24} true;
  assume {:verifier.code 0} true;
  $i154 := $sub.i32(1024, $i145);
  // WARNING: %157 = sub i32 1024, %148, !dbg !4829, !verifier.code !4408
  call {:cexpr "__cil_tmp145"} boogie_si_record_i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5104, 18} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i32.i64($i154);
  // WARNING: %158 = zext i32 %157 to i64, !dbg !4832, !verifier.code !4408
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5105, 14} true;
  assume {:verifier.code 0} true;
  call $i156 := snprintf.ref.i64.ref.i32($p153, $i155, .str.31, $i151);
  // WARNING: %159 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %156, i64 %158, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), i32 %154), !dbg !4835, !verifier.code !4408
  call {:cexpr "tmp___31"} boogie_si_record_i32($i156);
  // WARNING: call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !7518, metadata !4406), !dbg !7519, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5107, 13} true;
  assume {:verifier.code 0} true;
  $i157 := $add.i32($i145, $i156);
  // WARNING: %160 = add i32 %148, %159, !dbg !4840, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5108, 18} true;
  assume {:verifier.code 0} true;
  $i158 := $p2i.ref.i64($p8);
  // WARNING: %161 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4841, !verifier.code !4408
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5109, 31} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64($i158, 16);
  // WARNING: %162 = add i64 %161, 16, !dbg !4844, !verifier.code !4408
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5110, 20} true;
  assume {:verifier.code 0} true;
  $p160 := $i2p.i64.ref($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5110, 18} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5111, 31} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p161, 60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5113, 14} true;
  assume {:verifier.code 0} true;
  call $i163 := readl($p162);
  // WARNING: %166 = call i32 @readl(i8* %165), !dbg !4856, !verifier.code !4408
  call {:cexpr "tmp___32"} boogie_si_record_i32($i163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5114, 22} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i32.i64($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5114, 22} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p9, $mul.ref($i164, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5115, 24} true;
  assume {:verifier.code 0} true;
  $i166 := $sub.i32(1024, $i157);
  // WARNING: %169 = sub i32 1024, %160, !dbg !4862, !verifier.code !4408
  call {:cexpr "__cil_tmp154"} boogie_si_record_i32($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5116, 18} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i32.i64($i166);
  // WARNING: %170 = zext i32 %169 to i64, !dbg !4865, !verifier.code !4408
  call {:cexpr "__cil_tmp155"} boogie_si_record_i64($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5117, 14} true;
  assume {:verifier.code 0} true;
  call $i168 := snprintf.ref.i64.ref.i32($p165, $i167, .str.32, $i163);
  // WARNING: %171 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %168, i64 %170, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 %166), !dbg !4868, !verifier.code !4408
  call {:cexpr "tmp___33"} boogie_si_record_i32($i168);
  // WARNING: call void @llvm.dbg.value(metadata i32 %171, i64 0, metadata !7551, metadata !4406), !dbg !7552, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5119, 13} true;
  assume {:verifier.code 0} true;
  $i169 := $add.i32($i157, $i168);
  // WARNING: %172 = add i32 %160, %171, !dbg !4873, !verifier.code !4408
  call {:cexpr "len"} boogie_si_record_i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5121, 11} true;
  assume {:verifier.code 0} true;
  $i170 := $ugt.i32($i169, 1024);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5121, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5123, 3} true;
  assume {:verifier.code 0} true;
  $i171 := 1024;
  goto $bb7;
$bb6:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  $i171 := $i169;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5129, 18} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i32.i64($i171);
  // WARNING: %177 = zext i32 %.01 to i64, !dbg !4883, !verifier.code !4408
  call {:cexpr "__cil_tmp159"} boogie_si_record_i64($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5130, 9} true;
  assume {:verifier.code 0} true;
  call $i173 := simple_read_from_buffer($p1, $i2, $p3, $p9, $i172);
  // WARNING: %178 = call i64 @simple_read_from_buffer(i8* %1, i64 %2, i64* %3, i8* %10, i64 %177), !dbg !4887, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i64($i173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5132, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5134, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i173;
  goto $bb3;
}
const serial_hsu_probe: ref;
axiom (serial_hsu_probe == $sub.ref(0, 96814));
procedure  serial_hsu_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i16;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i16;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i32;
  var $i25: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $i58: i64;
  var $i59: i64;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i78: i32;
  var $i79: i64;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $i89: i32;
  var $p90: ref;
  var $i91: i32;
  var $p92: ref;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $i46: i32;
  var $i30: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9016, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4411, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9017, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 60);
  // WARNING: %4 = add i64 %3, 60, !dbg !4416, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9018, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9018, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  // WARNING: %6 = load i16, i16* %5, align 2, !dbg !4420, !verifier.code !4408
  call {:cexpr "__cil_tmp8"} boogie_si_record_i16($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9019, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  // WARNING: %7 = zext i16 %6 to i32, !dbg !4423, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9020, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  // WARNING: %8 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4426, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9021, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 62);
  // WARNING: %9 = add i64 %8, 62, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9022, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9022, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i16($M.0, $p9);
  // WARNING: %11 = load i16, i16* %10, align 2, !dbg !4433, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i16($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9023, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i10);
  // WARNING: %12 = zext i16 %11 to i32, !dbg !4436, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9024, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.i32.i32(.str.33, $i6, $i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9027, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  // WARNING: %14 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9028, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 62);
  // WARNING: %15 = add i64 %14, 62, !dbg !4444, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9029, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9029, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i16($M.0, $p15);
  // WARNING: %17 = load i16, i16* %16, align 2, !dbg !4448, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i16($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9030, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9030, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 2075);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9030, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9031, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9033, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9033, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 2076);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9033, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9047, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb17;
$bb4:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9034, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9036, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9036, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 2077);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9036, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9050, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 1;
  goto $bb17;
$bb7:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9037, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9039, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9039, 25} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 2078);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9039, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9053, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 2;
  goto $bb17;
$bb10:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9040, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9043, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9056, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 3;
  goto $bb17;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9059, 21} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p0);
  // WARNING: %41 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4489, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9060, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 144);
  // WARNING: %42 = add i64 %41, 144, !dbg !4493, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9061, 21} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9063, 7} true;
  assume {:verifier.code 0} true;
  call $i29 := dev_err.ref.ref($p28, .str.34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9065, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $sub.i32(0, 19);
  goto $bb18;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9044, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb15, $bb16;
$bb15:
  assume (0 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9044, 12} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb16:
  assume !((0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9066, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $u1;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9176, 1} true;
  assume {:verifier.code 0} true;
  $r := $i30;
  $exn := false;
  return;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9073, 15} true;
  assume {:verifier.code 0} true;
  call $i31 := pci_enable_device($p0);
  // WARNING: %52 = call i32 @pci_enable_device(%struct.pci_dev* %0), !dbg !4504, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9075, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9076, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $i31;
  goto $bb18;
$bb25:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9080, 13} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i25, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9080, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9082, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p0);
  // WARNING: %59 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4516, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9083, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 916);
  // WARNING: %60 = add i64 %59, 916, !dbg !4521, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9084, 21} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9084, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  // WARNING: %62 = load i32, i32* %61, align 4, !dbg !4525, !verifier.code !4408
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9085, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9085, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9086, 17} true;
  assume {:verifier.code 0} true;
  call $i40 := request_irq($i37, dma_irq, 0, .str.35, $p39);
  // WARNING: %65 = call i32 @request_irq(i32 %62, i32 (i32, i8*)* @dma_irq, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i8* %64), !dbg !4532, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9088, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9088, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9106, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9106, 25} true;
  assume {:verifier.code 0} true;
  $i50 := $mul.i64($i49, 368);
  // WARNING: %78 = mul i64 %77, 368, !dbg !4561, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9107, 22} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64(32, $i50);
  // WARNING: %79 = add i64 32, %78, !dbg !4564, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9108, 35} true;
  assume {:verifier.code 0} true;
  $p52 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9108, 19} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  // WARNING: %81 = ptrtoint %struct.hsu_port* %80 to i64, !dbg !4568, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9109, 31} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, $i51);
  // WARNING: %82 = add i64 %81, %79, !dbg !4571, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9110, 13} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %83, i64 0, metadata !7746, metadata !4406), !dbg !7747, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9112, 19} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p55);
  // WARNING: %84 = ptrtoint %struct.uart_hsu_port* %83 to i64, !dbg !4579, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9113, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 80);
  // WARNING: %85 = add i64 %84, 80, !dbg !4582, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9114, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p0);
  // WARNING: %86 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4585, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9115, 31} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64($i58, 916);
  // WARNING: %87 = add i64 %86, 916, !dbg !4588, !verifier.code !4408
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9116, 40} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9116, 38} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9116, 7} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9116, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p62, $i61);
  // WARNING: store i32 %89, i32* %90, align 4, !dbg !4594, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9118, 19} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p55);
  // WARNING: %91 = ptrtoint %struct.uart_hsu_port* %83 to i64, !dbg !4597, !verifier.code !4408
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9119, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 232);
  // WARNING: %92 = add i64 %91, 232, !dbg !4600, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9120, 19} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p0);
  // WARNING: %93 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4603, !verifier.code !4408
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9121, 31} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 144);
  // WARNING: %94 = add i64 %93, 144, !dbg !4606, !verifier.code !4408
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9122, 40} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9122, 7} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9122, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p68, $p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9123, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p55);
  // WARNING: %97 = ptrtoint %struct.uart_hsu_port* %83 to i64, !dbg !4612, !verifier.code !4408
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9124, 31} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 280);
  // WARNING: %98 = add i64 %97, 280, !dbg !4615, !verifier.code !4408
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9125, 19} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p0);
  // WARNING: %99 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4618, !verifier.code !4408
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9126, 31} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 144);
  // WARNING: %100 = add i64 %99, 144, !dbg !4621, !verifier.code !4408
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9127, 40} true;
  assume {:verifier.code 0} true;
  $p73 := $i2p.i64.ref($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9127, 7} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9127, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p74, $p73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9128, 19} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p0);
  // WARNING: %103 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4627, !verifier.code !4408
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9129, 31} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i64($i75, 916);
  // WARNING: %104 = add i64 %103, 916, !dbg !4630, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9130, 21} true;
  assume {:verifier.code 0} true;
  $p77 := $i2p.i64.ref($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9130, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  // WARNING: %106 = load i32, i32* %105, align 4, !dbg !4634, !verifier.code !4408
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i78);
  // WARNING: call void @llvm.dbg.value(metadata i32 %106, i64 0, metadata !7806, metadata !4406), !dbg !7807, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9132, 23} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64(264, 0);
  // WARNING: %107 = add i64 264, 0, !dbg !4639, !verifier.code !4408
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9133, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p55);
  // WARNING: %108 = ptrtoint %struct.uart_hsu_port* %83 to i64, !dbg !4642, !verifier.code !4408
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9134, 31} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, $i79);
  // WARNING: %109 = add i64 %108, %107, !dbg !4645, !verifier.code !4408
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9135, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9137, 19} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9138, 17} true;
  assume {:verifier.code 0} true;
  call $i84 := request_irq($i78, port_irq, 0, $p82, $p83);
  // WARNING: %112 = call i32 @request_irq(i32 %106, i32 (i32, i8*)* @port_irq, i64 0, i8* %110, i8* %111), !dbg !4656, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9140, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9140, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb34, $bb35;
$bb29:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9090, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p0);
  // WARNING: %68 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4536, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9091, 33} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 144);
  // WARNING: %69 = add i64 %68, 144, !dbg !4541, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9092, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  call $i45 := dev_err.ref.ref($p44, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9096, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $i40;
  goto $bb31;
$bb30:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9172, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9174, 3} true;
  assume {:verifier.code 0} true;
  $i30 := $i46;
  goto $bb18;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9101, 27} true;
  assume {:verifier.code 0} true;
  $p47 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9101, 19} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9102, 5} true;
  assume {:verifier.code 0} true;
  call pci_set_drvdata($p0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9104, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9160, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $p2i.ref.i64($p0);
  // WARNING: %125 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4684, !verifier.code !4408
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9161, 29} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i64($i93, 144);
  // WARNING: %126 = add i64 %125, 144, !dbg !4688, !verifier.code !4408
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9162, 17} true;
  assume {:verifier.code 0} true;
  $p95 := $i2p.i64.ref($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9163, 3} true;
  assume {:verifier.code 0} true;
  call pm_runtime_put_noidle($p95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9164, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p0);
  // WARNING: %128 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4695, !verifier.code !4408
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9165, 29} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96, 144);
  // WARNING: %129 = add i64 %128, 144, !dbg !4698, !verifier.code !4408
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9166, 17} true;
  assume {:verifier.code 0} true;
  $p98 := $i2p.i64.ref($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9167, 3} true;
  assume {:verifier.code 0} true;
  call pm_runtime_allow($p98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9169, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb18;
$bb34:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9142, 21} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p0);
  // WARNING: %115 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4660, !verifier.code !4408
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9143, 33} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, 144);
  // WARNING: %116 = add i64 %115, 144, !dbg !4665, !verifier.code !4408
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9144, 21} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9146, 7} true;
  assume {:verifier.code 0} true;
  call $i89 := dev_err.ref.ref($p88, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9148, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $i84;
  goto $bb31;
$bb35:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9153, 19} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9154, 5} true;
  assume {:verifier.code 0} true;
  call $i91 := uart_add_one_port(serial_hsu_reg, $p90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9155, 19} true;
  assume {:verifier.code 0} true;
  $p92 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9156, 5} true;
  assume {:verifier.code 0} true;
  call pci_set_drvdata($p0, $p92);
  assume {:verifier.code 0} true;
  goto $bb33;
}
const serial_hsu_remove: ref;
axiom (serial_hsu_remove == $sub.ref(0, 97846));
procedure  serial_hsu_remove($p0: ref)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i16;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9570, 13} true;
  assume {:verifier.code 0} true;
  call $p1 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9573, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.ref($p1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9573, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9574, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9614, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9579, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4421, !verifier.code !4408
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9580, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($i3, 144);
  // WARNING: %8 = add i64 %7, 144, !dbg !4425, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9581, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9582, 3} true;
  assume {:verifier.code 0} true;
  call pm_runtime_forbid($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9583, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  // WARNING: %10 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4432, !verifier.code !4408
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9584, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 144);
  // WARNING: %11 = add i64 %10, 144, !dbg !4435, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9585, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9586, 3} true;
  assume {:verifier.code 0} true;
  call pm_runtime_get_noresume($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9589, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  // WARNING: %13 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4442, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9590, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 62);
  // WARNING: %14 = add i64 %13, 62, !dbg !4446, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9591, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9591, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  // WARNING: %16 = load i16, i16* %15, align 2, !dbg !4450, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i16($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9592, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i12);
  // WARNING: %17 = zext i16 %16 to i32, !dbg !4453, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9593, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 2078);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9593, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9595, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9596, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9597, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := uart_remove_one_port(serial_hsu_reg, $p16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9599, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9605, 3} true;
  assume {:verifier.code 0} true;
  call pci_set_drvdata($p0, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9606, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p0);
  // WARNING: %25 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4473, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9607, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 916);
  // WARNING: %26 = add i64 %25, 916, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9608, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9608, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  // WARNING: %28 = load i32, i32* %27, align 4, !dbg !4480, !verifier.code !4408
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9609, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i21, $p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9610, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9612, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial_hsu_suspend: ref;
axiom (serial_hsu_suspend == $sub.ref(0, 98878));
procedure  serial_hsu_suspend($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i1;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i16;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !7965, metadata !4406), !dbg !7966, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8820, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8823, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8823, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8825, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4423, !verifier.code !4410
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8826, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 62);
  // WARNING: %7 = add i64 %6, 62, !dbg !4428, !verifier.code !4410
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8827, 20} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8827, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i16($M.0, $p6);
  // WARNING: %9 = load i16, i16* %8, align 2, !dbg !4432, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i16($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8828, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i16.i32($i7);
  // WARNING: %10 = zext i16 %9 to i32, !dbg !4435, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8829, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 2078);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8829, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8831, 16} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8832, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8833, 7} true;
  assume {:verifier.code 0} true;
  call $i12 := uart_suspend_port(serial_hsu_reg, $p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8835, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8839, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8843, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := pci_save_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8844, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := pci_choose_state($p0, $i1);
  // WARNING: %21 = call i32 @pci_choose_state(%struct.pci_dev* %0, i32 %1), !dbg !4454, !verifier.code !4410
  call {:cexpr "tmp___8"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8845, 3} true;
  assume {:verifier.code 0} true;
  call $i15 := pci_set_power_state($p0, $i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8847, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial_hsu_resume: ref;
axiom (serial_hsu_resume == $sub.ref(0, 99910));
procedure  serial_hsu_resume($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i16;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8867, 13} true;
  assume {:verifier.code 0} true;
  call $p1 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8869, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := pci_set_power_state($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8870, 3} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8871, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := pci_enable_device($p0);
  // WARNING: %4 = call i32 @pci_enable_device(%struct.pci_dev* %0), !dbg !4418, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8873, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8875, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4424, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8876, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 144);
  // WARNING: %8 = add i64 %7, 144, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8877, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8879, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := dev_warn.ref.ref($p7, .str.37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8881, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8884, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.ref($p1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8884, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8886, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p0);
  // WARNING: %15 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4442, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8887, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 62);
  // WARNING: %16 = add i64 %15, 62, !dbg !4447, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8888, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8888, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  // WARNING: %18 = load i16, i16* %17, align 2, !dbg !4451, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i16($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8889, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  // WARNING: %19 = zext i16 %18 to i32, !dbg !4454, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8890, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 2078);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8890, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8892, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8893, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8894, 7} true;
  assume {:verifier.code 0} true;
  call $i18 := uart_resume_port(serial_hsu_reg, $p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8900, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8903, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const pci_get_drvdata: ref;
axiom (pci_get_drvdata == $sub.ref(0, 100942));
procedure  pci_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4343, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4411, !verifier.code !4410
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4344, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 144);
  // WARNING: %3 = add i64 %2, 144, !dbg !4416, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4345, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4347, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := dev_get_drvdata($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4349, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const pci_set_power_state: ref;
axiom (pci_set_power_state == $sub.ref(0, 101974));
procedure  pci_set_power_state($p0: ref, $i1: i32)
  returns ($r: i32);
const pci_restore_state: ref;
axiom (pci_restore_state == $sub.ref(0, 103006));
procedure  pci_restore_state($p0: ref);
const pci_enable_device: ref;
axiom (pci_enable_device == $sub.ref(0, 104038));
procedure  pci_enable_device($p0: ref)
  returns ($r: i32);
const dev_warn: ref;
axiom (dev_warn == $sub.ref(0, 105070));
procedure  dev_warn.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  dev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const uart_resume_port: ref;
axiom (uart_resume_port == $sub.ref(0, 106102));
procedure  uart_resume_port($p0: ref, $p1: ref)
  returns ($r: i32);
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 107134));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref);
const uart_suspend_port: ref;
axiom (uart_suspend_port == $sub.ref(0, 108166));
procedure  uart_suspend_port($p0: ref, $p1: ref)
  returns ($r: i32);
const pci_save_state: ref;
axiom (pci_save_state == $sub.ref(0, 109198));
procedure  pci_save_state($p0: ref)
  returns ($r: i32);
const pci_choose_state: ref;
axiom (pci_choose_state == $sub.ref(0, 110230));
procedure  pci_choose_state($p0: ref, $i1: i32)
  returns ($r: i32);
const pm_runtime_forbid: ref;
axiom (pm_runtime_forbid == $sub.ref(0, 111262));
procedure  pm_runtime_forbid($p0: ref);
const pm_runtime_get_noresume: ref;
axiom (pm_runtime_get_noresume == $sub.ref(0, 112294));
procedure  pm_runtime_get_noresume($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8104, metadata !4406), !dbg !8105, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4387, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.device* %0 to i64, !dbg !4411, !verifier.code !4408
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4388, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 464);
  // WARNING: %3 = add i64 %2, 464, !dbg !4416, !verifier.code !4408
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4389, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4390, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4392, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_remove_one_port: ref;
axiom (uart_remove_one_port == $sub.ref(0, 113326));
procedure  uart_remove_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const pci_set_drvdata: ref;
axiom (pci_set_drvdata == $sub.ref(0, 114358));
procedure  pci_set_drvdata($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4360, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.pci_dev* %0 to i64, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4361, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 144);
  // WARNING: %4 = add i64 %3, 144, !dbg !4418, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4362, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4363, 3} true;
  assume {:verifier.code 0} true;
  call $i5 := dev_set_drvdata($p4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4365, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 115390));
procedure  free_irq($i0: i32, $p1: ref);
const pci_disable_device: ref;
axiom (pci_disable_device == $sub.ref(0, 116422));
procedure  pci_disable_device($p0: ref);
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 117454));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
  returns ($r: i32);
const atomic_inc: ref;
axiom (atomic_inc == $sub.ref(0, 118486));
procedure  atomic_inc($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3508, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call devirtbounce.2(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3509, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 119518));
procedure  printk.ref($p0: ref)
  returns ($r: i32);
procedure  printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32);
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 120550));
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const dma_irq: ref;
axiom (dma_irq == $sub.ref(0, 121582));
procedure  dma_irq($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7343, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7344, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7344, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7345, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 1028);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7347, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := readl($p5);
  // WARNING: %7 = call i32 @readl(i8* %6), !dbg !4424, !verifier.code !4408
  call {:cexpr "int_sts"} boogie_si_record_i32($i6);
  // WARNING: call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !8168, metadata !4406), !dbg !8169, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7351, 3} true;
  assume {:verifier.code 0} true;
  $i7, $i8 := $i6, 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7351, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7353, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ult.i32($i8, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7353, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7355, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7356, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7358, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7358, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7358, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7375, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7360, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7360, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $mul.i64($i12, 24);
  // WARNING: %18 = mul i64 %17, 24, !dbg !4447, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7361, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64(1136, $i13);
  // WARNING: %19 = add i64 1136, %18, !dbg !4450, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7362, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p2);
  // WARNING: %20 = ptrtoint %struct.hsu_port* %3 to i64, !dbg !4453, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7363, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, $i14);
  // WARNING: %21 = add i64 %20, %19, !dbg !4456, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7364, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7365, 7} true;
  assume {:verifier.code 0} true;
  call dma_chan_irq($p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7367, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7370, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $lshr.i32($i7, 1);
  // WARNING: %25 = lshr i32 %.01, 1, !dbg !4464, !verifier.code !4408
  call {:cexpr "int_sts"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7371, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i8, 1);
  // WARNING: %26 = add i32 %.0, 1, !dbg !4465, !verifier.code !4408
  call {:cexpr "i"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7351, 3} true;
  assume {:verifier.code 0} true;
  $i7, $i8 := $i18, $i19;
  goto $bb1;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 122614));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !8218, metadata !4406), !dbg !8219, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3825, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3826, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := request_threaded_irq($i0, $p1, $p5, $i2, $p3, $p4);
  // WARNING: %7 = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* %6, i64 %2, i8* %3, i8* %4), !dbg !4426, !verifier.code !4410
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3828, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const port_irq: ref;
axiom (port_irq == $sub.ref(0, 123646));
procedure  port_irq($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $i36: i1;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $i40: i1;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i32;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $i20: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i32, align 4, !verifier.code !4405
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7077, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7078, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  // WARNING: %5 = ptrtoint %struct.uart_hsu_port* %4 to i64, !dbg !4418, !verifier.code !4405
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7079, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 356);
  // WARNING: %6 = add i64 %5, 356, !dbg !4421, !verifier.code !4405
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7080, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7080, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  // WARNING: %8 = load i32, i32* %7, align 4, !dbg !4425, !verifier.code !4405
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7081, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7081, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $xor.i1($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7081, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  // WARNING: %11 = zext i1 %10 to i32, !dbg !4428, !verifier.code !4405
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7082, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7082, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $xor.i1($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7082, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i1.i32($i12);
  // WARNING: %14 = zext i1 %13 to i32, !dbg !4431, !verifier.code !4405
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7083, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7083, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $xor.i1($i14, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7083, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  // WARNING: %17 = zext i1 %16 to i32, !dbg !4434, !verifier.code !4405
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7084, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  // WARNING: %18 = sext i32 %17 to i64, !dbg !4437, !verifier.code !4405
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7085, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !4440, !verifier.code !4405
  call {:cexpr "tmp___7"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7087, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7088, 5} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7197, 1} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7093, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7093, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7096, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7096, 15} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7099, 21} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7100, 17} true;
  assume {:verifier.code 0} true;
  call $p22 := spinlock_check($p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7101, 15} true;
  assume {:verifier.code 0} true;
  call $i23 := _raw_spin_lock_irqsave($p22);
  // WARNING: %30 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %29), !dbg !4466, !verifier.code !4405
  call {:cexpr "flags"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7103, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7107, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7112, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p3);
  // WARNING: %33 = ptrtoint %struct.uart_hsu_port* %4 to i64, !dbg !4471, !verifier.code !4405
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7113, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 352);
  // WARNING: %34 = add i64 %33, 352, !dbg !4475, !verifier.code !4405
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7114, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7114, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7114, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7114, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7117, 20} true;
  assume {:verifier.code 0} true;
  call $i29 := serial_in($p3, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7117, 18} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i32($M.2, $p2, $i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7119, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.2, $p2);
  // WARNING: %40 = load i32, i32* %3, align 4, !dbg !4490, !verifier.code !4405
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7120, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 30);
  // WARNING: %41 = and i32 %40, 30, !dbg !4493, !verifier.code !4405
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7121, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7121, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $xor.i1($i32, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7121, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i1.i32($i33);
  // WARNING: %44 = zext i1 %43 to i32, !dbg !4496, !verifier.code !4405
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7122, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7122, 19} true;
  assume {:verifier.code 0} true;
  $i36 := $xor.i1($i35, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7122, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i1.i32($i36);
  // WARNING: %47 = zext i1 %46 to i32, !dbg !4499, !verifier.code !4405
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7123, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i37);
  // WARNING: %48 = sext i32 %47 to i64, !dbg !4502, !verifier.code !4405
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7124, 15} true;
  assume {:verifier.code 0} true;
  call $i39 := ldv__builtin_expect($i38, 0);
  // WARNING: %49 = call i64 @ldv__builtin_expect(i64 %48, i64 0), !dbg !4505, !verifier.code !4405
  call {:cexpr "tmp___9"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7126, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7126, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7128, 21} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p3);
  // WARNING: %52 = ptrtoint %struct.uart_hsu_port* %4 to i64, !dbg !4511, !verifier.code !4405
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7129, 33} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 280);
  // WARNING: %53 = add i64 %52, 280, !dbg !4516, !verifier.code !4405
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7130, 23} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7130, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7133, 21} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.2, $p2);
  // WARNING: %56 = load i32, i32* %3, align 4, !dbg !4527, !verifier.code !4405
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7134, 7} true;
  assume {:verifier.code 0} true;
  call $i46 := dev_warn.ref.ref.i32($p44, .str.38, $i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7136, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7140, 5} true;
  assume {:verifier.code 0} true;
  call check_modem_status($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7141, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7142, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p47, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7144, 5} true;
  assume {:verifier.code 0} true;
  $i20 := 1;
  goto $bb3;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7150, 9} true;
  assume {:verifier.code 0} true;
  call $i48 := serial_in($p3, 2);
  // WARNING: %63 = call i32 @serial_in(%struct.uart_hsu_port* %4, i32 2), !dbg !4539, !verifier.code !4405
  call {:cexpr "iir"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7152, 11} true;
  assume {:verifier.code 0} true;
  $i49 := $and.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7152, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7152, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7154, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7155, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p51, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7157, 5} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb3;
$bb18:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7163, 18} true;
  assume {:verifier.code 0} true;
  call $i52 := serial_in($p3, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7163, 16} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i32($M.2, $p2, $i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7167, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.2, $p2);
  // WARNING: %71 = load i32, i32* %3, align 4, !dbg !4560, !verifier.code !4405
  call {:cexpr "__cil_tmp39"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7168, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i32($i53, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7168, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7168, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7171, 5} true;
  assume {:verifier.code 0} true;
  call receive_chars($p3, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7173, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7178, 3} true;
  assume {:verifier.code 0} true;
  call check_modem_status($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7182, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.2, $p2);
  // WARNING: %77 = load i32, i32* %3, align 4, !dbg !4577, !verifier.code !4405
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7183, 19} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i32($i56, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7183, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7183, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7185, 5} true;
  assume {:verifier.code 0} true;
  call transmit_chars($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7187, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7192, 17} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7193, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p59, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7195, 3} true;
  assume {:verifier.code 0} true;
  $i20 := 1;
  goto $bb3;
}
const uart_add_one_port: ref;
axiom (uart_add_one_port == $sub.ref(0, 124678));
procedure  uart_add_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const pm_runtime_put_noidle: ref;
axiom (pm_runtime_put_noidle == $sub.ref(0, 125710));
procedure  pm_runtime_put_noidle($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8426, metadata !4406), !dbg !8427, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4405, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.device* %0 to i64, !dbg !4411, !verifier.code !4408
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4406, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 464);
  // WARNING: %3 = add i64 %2, 464, !dbg !4416, !verifier.code !4408
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4407, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4408, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := atomic_add_unless($p3, $sub.i32(0, 1), 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4410, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pm_runtime_allow: ref;
axiom (pm_runtime_allow == $sub.ref(0, 126742));
procedure  pm_runtime_allow($p0: ref);
const atomic_add_unless: ref;
axiom (atomic_add_unless == $sub.ref(0, 127774));
procedure  atomic_add_unless($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %union.__anonunion____missing_field_name_36* %0, i64 0, metadata !8446, metadata !4406), !dbg !8447, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8448, metadata !4406), !dbg !8449, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3668, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __atomic_add_unless($p0, $i1, $i2);
  // WARNING: %4 = call i32 @__atomic_add_unless(%union.__anonunion____missing_field_name_36* %0, i32 %1, i32 %2), !dbg !4415, !verifier.code !4410
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3670, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3670, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3670, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __atomic_add_unless: ref;
axiom (__atomic_add_unless == $sub.ref(0, 128806));
procedure  __atomic_add_unless($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $i16: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $i23: i1;
  var $i24: i32;
  var $i25: i1;
  var $i26: i1;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i1;
  var $i31: i32;
  var $i17: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %union.__anonunion____missing_field_name_36* %0, i64 0, metadata !8460, metadata !4406), !dbg !8461, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8462, metadata !4406), !dbg !8463, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3624, 7} true;
  assume {:verifier.code 0} true;
  call $i3 := atomic_read($p0);
  // WARNING: %4 = call i32 @atomic_read(%union.__anonunion____missing_field_name_36* %0), !dbg !4417, !verifier.code !4410
  call {:cexpr "c"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3627, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i3;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3627, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3630, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3630, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  // WARNING: %8 = zext i1 %7 to i32, !dbg !4426, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3631, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3631, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $xor.i1($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3631, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %11 = zext i1 %10 to i32, !dbg !4431, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3632, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3632, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $xor.i1($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3632, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  // WARNING: %14 = zext i1 %13 to i32, !dbg !4434, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3633, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  // WARNING: %15 = sext i32 %14 to i64, !dbg !4437, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3634, 11} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !4440, !verifier.code !4410
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3636, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3636, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $i4;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3637, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb5;
$bb4:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3659, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3642, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i4, $i1);
  // WARNING: %21 = add nsw i32 %.0, %1, !dbg !4448, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3643, 11} true;
  assume {:verifier.code 0} true;
  call $i19 := atomic_cmpxchg($p0, $i4, $i18);
  // WARNING: %22 = call i32 @atomic_cmpxchg(%union.__anonunion____missing_field_name_36* %0, i32 %.0, i32 %21), !dbg !4452, !verifier.code !4410
  call {:cexpr "old"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3644, 23} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3644, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i1.i32($i20);
  // WARNING: %24 = zext i1 %23 to i32, !dbg !4455, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3645, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3645, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $xor.i1($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3645, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  // WARNING: %27 = zext i1 %26 to i32, !dbg !4458, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3646, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3646, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $xor.i1($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3646, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i1.i32($i26);
  // WARNING: %30 = zext i1 %29 to i32, !dbg !4461, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3647, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i27);
  // WARNING: %31 = sext i32 %30 to i64, !dbg !4464, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3648, 15} true;
  assume {:verifier.code 0} true;
  call $i29 := ldv__builtin_expect($i28, 1);
  // WARNING: %32 = call i64 @ldv__builtin_expect(i64 %31, i64 1), !dbg !4467, !verifier.code !4410
  call {:cexpr "tmp___0"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3650, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3650, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $i4;
  assume {:branchcond $i30} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3651, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i31;
  goto $bb5;
$bb8:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3627, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i19;
  goto $bb1;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 129838));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3490, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3492, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3492, 14} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.i32($M.3, $p1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3493, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.3, $p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3493, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 130870));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8551, metadata !4406), !dbg !8552, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10235, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const atomic_cmpxchg: ref;
axiom (atomic_cmpxchg == $sub.ref(0, 131902));
procedure  atomic_cmpxchg($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %union.__anonunion____missing_field_name_36* %0, i64 0, metadata !8558, metadata !4406), !dbg !8559, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8560, metadata !4406), !dbg !8561, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8562, metadata !4406), !dbg !8563, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8564, metadata !4406), !dbg !8565, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 1} true;
  goto $bb1, $bb2;
$bb1:
  assume (1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3536, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !((1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3542, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3569, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p0);
  call $i10 := devirtbounce.5(0, $p9, $i2, $i1, $p9);
  // WARNING: %18 = call i32 @devirtbounce.5(i32 (i32*, i32, i32, i32*)* asm sideeffect ".section .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.previous\0A671:\0A\09lock; cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %17, i32 %2, i32 %1, i32* %17)
  call {:cexpr "__ret"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3579, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3594, 7} true;
  assume {:verifier.code 0} true;
  call __cmpxchg_wrong_size();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3596, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $u1;
  goto $bb12;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3543, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3543, 12} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3596, 12} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3545, 21} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3546, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  call $i5 := devirtbounce.3(0, $p4, $i2, $i1, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3547, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u2, $i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3555, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  $i14 := $i10;
  goto $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3557, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3558, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  call $i8 := devirtbounce.4(0, $p7, $i2, $i1, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3559, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u2, $i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3567, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3581, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3582, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  call $i13 := devirtbounce.6(0, $p12, $i2, $i1, $p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3583, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u2, $i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3591, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3601, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const __cmpxchg_wrong_size: ref;
axiom (__cmpxchg_wrong_size == $sub.ref(0, 132934));
procedure  __cmpxchg_wrong_size();
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 133966));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3680, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3680, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 134998));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: i64);
const check_modem_status: ref;
axiom (check_modem_status == $sub.ref(0, 136030));
procedure  check_modem_status($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6960, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, 6);
  // WARNING: %2 = call i32 @serial_in(%struct.uart_hsu_port* %0, i32 6), !dbg !4411, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8637, metadata !4406), !dbg !8638, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6964, 23} true;
  assume {:verifier.code 0} true;
  $i2 := $and.i32($i1, 15);
  // WARNING: %3 = and i32 %2, 15, !dbg !4418, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6965, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6965, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6966, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7033, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6971, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6971, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6971, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6973, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64(0, 136);
  // WARNING: %11 = add i64 0, 136, !dbg !4432, !verifier.code !4410
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6974, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  // WARNING: %12 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4436, !verifier.code !4410
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6975, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, $i6);
  // WARNING: %13 = add i64 %12, %11, !dbg !4439, !verifier.code !4410
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i8);
  // WARNING: call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !8663, metadata !4406), !dbg !8664, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6977, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64(0, 136);
  // WARNING: %14 = add i64 0, 136, !dbg !4444, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6978, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p0);
  // WARNING: %15 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4447, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6979, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, $i9);
  // WARNING: %16 = add i64 %15, %14, !dbg !4450, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6980, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6980, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  // WARNING: %18 = load i32, i32* %17, align 4, !dbg !4454, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6981, 42} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i13, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6981, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6981, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6982, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6985, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6985, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6985, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6987, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64(0, 132);
  // WARNING: %26 = add i64 0, 132, !dbg !4466, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6988, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %27 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4470, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6989, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, $i18);
  // WARNING: %28 = add i64 %27, %26, !dbg !4473, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i20);
  // WARNING: call void @llvm.dbg.value(metadata i64 %28, i64 0, metadata !8697, metadata !4406), !dbg !8698, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6991, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64(0, 132);
  // WARNING: %29 = add i64 0, 132, !dbg !4478, !verifier.code !4410
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6992, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4481, !verifier.code !4410
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6993, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, $i21);
  // WARNING: %31 = add i64 %30, %29, !dbg !4484, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6994, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6994, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  // WARNING: %33 = load i32, i32* %32, align 4, !dbg !4488, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6995, 43} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6995, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6995, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6996, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6999, 14} true;
  assume {:verifier.code 0} true;
  $i28 := $and.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6999, 14} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6999, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7001, 19} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7002, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i1, 128);
  // WARNING: %42 = and i32 %2, 128, !dbg !4503, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i31);
  // WARNING: call void @llvm.dbg.value(metadata i32 %42, i64 0, metadata !8727, metadata !4406), !dbg !8728, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7004, 5} true;
  assume {:verifier.code 0} true;
  call uart_handle_dcd_change($p30, $i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7006, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7009, 14} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7009, 14} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7009, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7011, 19} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7012, 26} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i1, 16);
  // WARNING: %49 = and i32 %2, 16, !dbg !4518, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i35);
  // WARNING: call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !8742, metadata !4406), !dbg !8743, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7014, 5} true;
  assume {:verifier.code 0} true;
  call uart_handle_cts_change($p34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7016, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  // WARNING: call void @llvm.dbg.value(metadata i64 128, i64 0, metadata !8748, metadata !4406), !dbg !8749, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7022, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p0);
  // WARNING: %52 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4529, !verifier.code !4410
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7023, 29} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i64($i36, 120);
  // WARNING: %53 = add i64 %52, 120, !dbg !4533, !verifier.code !4410
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7024, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7024, 17} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7025, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  // WARNING: %56 = ptrtoint %struct.uart_state* %55 to i64, !dbg !4540, !verifier.code !4410
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7026, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 128);
  // WARNING: %57 = add i64 %56, 128, !dbg !4543, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7027, 17} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7029, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p42, 1, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7031, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 137062));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !8780, metadata !4406), !dbg !8781, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3689, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3689, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3692, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3693, 5} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3695, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3699, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const receive_chars: ref;
axiom (receive_chars == $sub.ref(0, 138094));
procedure  receive_chars($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $i27: i1;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $i72: i64;
  var $i73: i64;
  var $i74: i64;
  var $i75: i64;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $p81: ref;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i85: i64;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i32;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $i105: i32;
  var $i106: i32;
  var $i107: i1;
  var $i109: i32;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $i108: i32;
  var $i104: i32;
  var $i113: i32;
  var $p114: ref;
  var $i115: i32;
  var $i116: i32;
  var $i117: i32;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32* %1, i64 0, metadata !8802, metadata !4406), !dbg !8803, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6466, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4415, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6467, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 120);
  // WARNING: %4 = add i64 %3, 120, !dbg !4419, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6468, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6468, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6469, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6469, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  // WARNING: call void @llvm.dbg.value(metadata %struct.tty_struct* %8, i64 0, metadata !8818, metadata !4406), !dbg !8819, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6471, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.ref($p7, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6471, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6472, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6651, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6477, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 256;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6477, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6480, 10} true;
  assume {:verifier.code 0} true;
  call $i10 := serial_in($p0, 0);
  // WARNING: %15 = call i32 @serial_in(%struct.uart_hsu_port* %0, i32 0), !dbg !4440, !verifier.code !4410
  call {:cexpr "ch"} boogie_si_record_i32($i10);
  // WARNING: call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !8834, metadata !4406), !dbg !8835, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !8836, metadata !4406), !dbg !8837, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6483, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64(0, 144);
  // WARNING: %16 = add i64 0, 144, !dbg !4449, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6484, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p0);
  // WARNING: %17 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4452, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6485, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, $i11);
  // WARNING: %18 = add i64 %17, %16, !dbg !4455, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i13);
  // WARNING: call void @llvm.dbg.value(metadata i64 %18, i64 0, metadata !8847, metadata !4406), !dbg !8848, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6487, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64(0, 144);
  // WARNING: %19 = add i64 0, 144, !dbg !4460, !verifier.code !4410
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6488, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p0);
  // WARNING: %20 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4463, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6489, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, $i14);
  // WARNING: %21 = add i64 %20, %19, !dbg !4466, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6490, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6490, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  // WARNING: %23 = load i32, i32* %22, align 4, !dbg !4470, !verifier.code !4410
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6491, 43} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6491, 7} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6491, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6492, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.2, $p1);
  // WARNING: %26 = load i32, i32* %1, align 4, !dbg !4476, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6493, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 30);
  // WARNING: %27 = and i32 %26, 30, !dbg !4479, !verifier.code !4410
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6494, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6494, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $xor.i1($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6494, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  // WARNING: %30 = zext i1 %29 to i32, !dbg !4482, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6495, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6495, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $xor.i1($i26, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6495, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i1.i32($i27);
  // WARNING: %33 = zext i1 %32 to i32, !dbg !4485, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6496, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  // WARNING: %34 = sext i32 %33 to i64, !dbg !4488, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6497, 15} true;
  assume {:verifier.code 0} true;
  call $i30 := ldv__builtin_expect($i29, 0);
  // WARNING: %35 = call i64 @ldv__builtin_expect(i64 %34, i64 0), !dbg !4491, !verifier.code !4410
  call {:cexpr "tmp___8"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6499, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6499, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6501, 21} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p0);
  // WARNING: %38 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4497, !verifier.code !4410
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6502, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 280);
  // WARNING: %39 = add i64 %38, 280, !dbg !4502, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6503, 23} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6503, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6505, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.2, $p1);
  // WARNING: %42 = load i32, i32* %1, align 4, !dbg !4511, !verifier.code !4410
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6506, 7} true;
  assume {:verifier.code 0} true;
  call $i37 := dev_warn.ref.ref.i32($p35, .str.39, $i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6509, 21} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.2, $p1);
  // WARNING: %44 = load i32, i32* %1, align 4, !dbg !4515, !verifier.code !4410
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6510, 23} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6510, 23} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6510, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i113 := 0;
  goto $bb34;
$bb9:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6512, 23} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.2, $p1);
  // WARNING: %48 = load i32, i32* %1, align 4, !dbg !4522, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6513, 31} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i32($i41, $sub.i32(0, 13));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6513, 17} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i32($M.2, $p1, $i42);
  // WARNING: store i32 %49, i32* %1, align 4, !dbg !4528, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6515, 25} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64(0, 164);
  // WARNING: %50 = add i64 0, 164, !dbg !4531, !verifier.code !4410
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6516, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p0);
  // WARNING: %51 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4534, !verifier.code !4410
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6517, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, $i43);
  // WARNING: %52 = add i64 %51, %50, !dbg !4537, !verifier.code !4410
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i45);
  // WARNING: call void @llvm.dbg.value(metadata i64 %52, i64 0, metadata !8929, metadata !4406), !dbg !8930, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6519, 25} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64(0, 164);
  // WARNING: %53 = add i64 0, 164, !dbg !4542, !verifier.code !4410
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6520, 23} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p0);
  // WARNING: %54 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4545, !verifier.code !4410
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6521, 35} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, $i46);
  // WARNING: %55 = add i64 %54, %53, !dbg !4548, !verifier.code !4410
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6522, 25} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6522, 23} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  // WARNING: %57 = load i32, i32* %56, align 4, !dbg !4552, !verifier.code !4410
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6523, 47} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6523, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6523, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6524, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6525, 19} true;
  assume {:verifier.code 0} true;
  call $i54 := uart_handle_break($p53);
  // WARNING: %61 = call i32 @uart_handle_break(%struct.uart_port* %60), !dbg !4561, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6527, 13} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6527, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6534, 23} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.2, $p1);
  // WARNING: %67 = load i32, i32* %1, align 4, !dbg !4570, !verifier.code !4410
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6535, 25} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i32($i56, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6535, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6535, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb16, $bb17;
$bb11:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6528, 11} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6626, 15} true;
  assume {:verifier.code 0} true;
  call $i116 := serial_in($p0, 5);
  // WARNING: %145 = call i32 @serial_in(%struct.uart_hsu_port* %0, i32 5), !dbg !4748, !verifier.code !4410
  call {:cexpr "tmp___9"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6627, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i32($M.2, $p1, $i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6630, 19} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.2, $p1);
  // WARNING: %146 = load i32, i32* %1, align 4, !dbg !4753, !verifier.code !4410
  call {:cexpr "__cil_tmp89"} boogie_si_record_i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6631, 21} true;
  assume {:verifier.code 0} true;
  $i118 := $and.i32($i117, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6631, 21} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i32($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6631, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb35, $bb36;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6532, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6569, 21} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.2, $p1);
  // WARNING: %100 = load i32, i32* %1, align 4, !dbg !4648, !verifier.code !4410
  call {:cexpr "__cil_tmp66"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6570, 23} true;
  assume {:verifier.code 0} true;
  $i83 := $and.i32($i82, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6570, 23} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6570, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb22, $bb23;
$bb16:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6537, 27} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64(0, 160);
  // WARNING: %71 = add i64 0, 160, !dbg !4580, !verifier.code !4410
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6538, 25} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p0);
  // WARNING: %72 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4584, !verifier.code !4410
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6539, 37} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, $i59);
  // WARNING: %73 = add i64 %72, %71, !dbg !4587, !verifier.code !4410
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i61);
  // WARNING: call void @llvm.dbg.value(metadata i64 %73, i64 0, metadata !8979, metadata !4406), !dbg !8980, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6541, 27} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64(0, 160);
  // WARNING: %74 = add i64 0, 160, !dbg !4592, !verifier.code !4410
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6542, 25} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p0);
  // WARNING: %75 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4595, !verifier.code !4410
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6543, 37} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, $i62);
  // WARNING: %76 = add i64 %75, %74, !dbg !4598, !verifier.code !4410
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6544, 27} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6544, 25} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  // WARNING: %78 = load i32, i32* %77, align 4, !dbg !4602, !verifier.code !4410
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6545, 49} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i66, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6545, 13} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6545, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6546, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6548, 25} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.2, $p1);
  // WARNING: %82 = load i32, i32* %1, align 4, !dbg !4609, !verifier.code !4410
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6549, 27} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i32($i69, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6549, 27} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6549, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb19, $bb20;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb19:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6551, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64(0, 152);
  // WARNING: %86 = add i64 0, 152, !dbg !4619, !verifier.code !4410
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6552, 27} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p0);
  // WARNING: %87 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4623, !verifier.code !4410
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6553, 39} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, $i72);
  // WARNING: %88 = add i64 %87, %86, !dbg !4626, !verifier.code !4410
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i74);
  // WARNING: call void @llvm.dbg.value(metadata i64 %88, i64 0, metadata !9018, metadata !4406), !dbg !9019, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6555, 29} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64(0, 152);
  // WARNING: %89 = add i64 0, 152, !dbg !4631, !verifier.code !4410
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6556, 27} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p0);
  // WARNING: %90 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4634, !verifier.code !4410
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6557, 39} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, $i75);
  // WARNING: %91 = add i64 %90, %89, !dbg !4637, !verifier.code !4410
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6558, 29} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6558, 27} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  // WARNING: %93 = load i32, i32* %92, align 4, !dbg !4641, !verifier.code !4410
  call {:cexpr "__cil_tmp65"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6559, 51} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6559, 15} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6559, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6560, 11} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb22:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6572, 25} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64(0, 156);
  // WARNING: %104 = add i64 0, 156, !dbg !4657, !verifier.code !4410
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6573, 23} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p0);
  // WARNING: %105 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4661, !verifier.code !4410
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6574, 35} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, $i85);
  // WARNING: %106 = add i64 %105, %104, !dbg !4664, !verifier.code !4410
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i87);
  // WARNING: call void @llvm.dbg.value(metadata i64 %106, i64 0, metadata !9056, metadata !4406), !dbg !9057, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6576, 25} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64(0, 156);
  // WARNING: %107 = add i64 0, 156, !dbg !4669, !verifier.code !4410
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6577, 23} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p0);
  // WARNING: %108 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4672, !verifier.code !4410
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6578, 35} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, $i88);
  // WARNING: %109 = add i64 %108, %107, !dbg !4675, !verifier.code !4410
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6579, 25} true;
  assume {:verifier.code 0} true;
  $p91 := $i2p.i64.ref($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6579, 23} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  // WARNING: %111 = load i32, i32* %110, align 4, !dbg !4679, !verifier.code !4410
  call {:cexpr "__cil_tmp75"} boogie_si_record_i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6580, 47} true;
  assume {:verifier.code 0} true;
  $i93 := $add.i32($i92, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6580, 11} true;
  assume {:verifier.code 0} true;
  $p94 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6580, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6581, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6586, 21} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p0);
  // WARNING: %116 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4688, !verifier.code !4410
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6587, 33} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, 108);
  // WARNING: %117 = add i64 %116, 108, !dbg !4691, !verifier.code !4410
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6588, 23} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6588, 21} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  // WARNING: %119 = load i32, i32* %118, align 4, !dbg !4695, !verifier.code !4410
  call {:cexpr "__cil_tmp79"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6589, 21} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.2, $p1);
  // WARNING: %120 = load i32, i32* %1, align 4, !dbg !4698, !verifier.code !4410
  call {:cexpr "__cil_tmp80"} boogie_si_record_i32($i99);
  // WARNING: call void @llvm.dbg.value(metadata i32 %120, i64 0, metadata !9090, metadata !4406), !dbg !9091, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6591, 33} true;
  assume {:verifier.code 0} true;
  $i100 := $and.i32($i99, $i98);
  // WARNING: %121 = and i32 %120, %119, !dbg !4703, !verifier.code !4410
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6592, 15} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i32($M.2, $p1, $i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6594, 21} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.2, $p1);
  // WARNING: %122 = load i32, i32* %1, align 4, !dbg !4707, !verifier.code !4410
  call {:cexpr "__cil_tmp83"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6595, 23} true;
  assume {:verifier.code 0} true;
  $i102 := $and.i32($i101, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6595, 23} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i102, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6595, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6597, 7} true;
  assume {:verifier.code 0} true;
  $i104 := 1;
  goto $bb27;
$bb26:
  assume !(($i103 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6599, 23} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.2, $p1);
  // WARNING: %127 = load i32, i32* %1, align 4, !dbg !4716, !verifier.code !4410
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6600, 25} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i32($i105, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6600, 25} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6600, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb28, $bb29;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6615, 5} true;
  assume {:verifier.code 0} true;
  $i113 := $i104;
  goto $bb34;
$bb28:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6602, 9} true;
  assume {:verifier.code 0} true;
  $i108 := 3;
  goto $bb30;
$bb29:
  assume !(($i107 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6604, 25} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i32($M.2, $p1);
  // WARNING: %132 = load i32, i32* %1, align 4, !dbg !4726, !verifier.code !4410
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6605, 27} true;
  assume {:verifier.code 0} true;
  $i110 := $and.i32($i109, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6605, 27} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i32($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6605, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb31, $bb32;
$bb30:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i104 := $i108;
  goto $bb27;
$bb31:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6607, 11} true;
  assume {:verifier.code 0} true;
  $i112 := 2;
  goto $bb33;
$bb32:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  $i112 := 0;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i108 := $i112;
  goto $bb30;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6619, 19} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6620, 19} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.2, $p1);
  // WARNING: %143 = load i32, i32* %1, align 4, !dbg !4741, !verifier.code !4410
  call {:cexpr "__cil_tmp87"} boogie_si_record_i32($i115);
  // WARNING: call void @llvm.dbg.value(metadata i32 %143, i64 0, metadata !9133, metadata !4406), !dbg !9134, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6622, 5} true;
  assume {:verifier.code 0} true;
  call uart_insert_char($p114, $i115, 2, $i10, $i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6623, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb35:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6633, 29} true;
  assume {:verifier.code 0} true;
  $i120 := $sub.i32($i9, 1);
  // WARNING: %150 = sub i32 %.0, 1, !dbg !4762, !verifier.code !4410
  call {:cexpr "max_count"} boogie_si_record_i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6634, 11} true;
  assume {:verifier.code 0} true;
  $i121 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6634, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i119 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6640, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb37:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6636, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i121 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6637, 9} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6639, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6647, 3} true;
  assume {:verifier.code 0} true;
  call tty_flip_buffer_push($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6649, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6477, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i120;
  goto $bb5;
}
const transmit_chars: ref;
axiom (transmit_chars == $sub.ref(0, 139126));
procedure  transmit_chars($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i8;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $i75: i64;
  var $i76: i64;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $i91: i1;
  var $i92: i32;
  var $i93: i1;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $i111: i32;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %0, i64 0, metadata !9173, metadata !4406), !dbg !9174, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6750, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6751, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 120);
  // WARNING: %3 = add i64 %2, 120, !dbg !4417, !verifier.code !4410
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6752, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6752, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6753, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  // WARNING: %6 = ptrtoint %struct.uart_state* %5 to i64, !dbg !4424, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6754, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 360);
  // WARNING: %7 = add i64 %6, 360, !dbg !4427, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6755, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  // WARNING: call void @llvm.dbg.value(metadata %struct.circ_buf* %8, i64 0, metadata !9195, metadata !4406), !dbg !9196, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6758, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4435, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6759, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 104);
  // WARNING: %10 = add i64 %9, 104, !dbg !4439, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6760, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6760, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6760, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i8($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6760, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6763, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  // WARNING: %15 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4448, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6764, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 104);
  // WARNING: %16 = add i64 %15, 104, !dbg !4453, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6765, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6765, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  // WARNING: %18 = load i8, i8* %17, align 1, !dbg !4457, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6766, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  // WARNING: %19 = zext i8 %18 to i32, !dbg !4460, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6767, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i17);
  // WARNING: call void @serial_out(%struct.uart_hsu_port* %0, i32 0, i32 %19), !dbg !4463, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6769, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64(0, 148);
  // WARNING: %20 = add i64 0, 148, !dbg !4466, !verifier.code !4410
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6770, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %21 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4469, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6771, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, $i18);
  // WARNING: %22 = add i64 %21, %20, !dbg !4472, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i20);
  // WARNING: call void @llvm.dbg.value(metadata i64 %22, i64 0, metadata !9237, metadata !4406), !dbg !9238, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6773, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64(0, 148);
  // WARNING: %23 = add i64 0, 148, !dbg !4477, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6774, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p0);
  // WARNING: %24 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4480, !verifier.code !4410
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6775, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, $i21);
  // WARNING: %25 = add i64 %24, %23, !dbg !4483, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6776, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6776, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  // WARNING: %27 = load i32, i32* %26, align 4, !dbg !4487, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6777, 43} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6777, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6777, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  // WARNING: store i32 %28, i32* %29, align 4, !dbg !4492, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6779, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4495, !verifier.code !4410
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6780, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 104);
  // WARNING: %31 = add i64 %30, 104, !dbg !4498, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6781, 7} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6781, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6783, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6918, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6789, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p7);
  // WARNING: %35 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4504, !verifier.code !4410
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6790, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 12);
  // WARNING: %36 = add i64 %35, 12, !dbg !4508, !verifier.code !4410
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6791, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6791, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  // WARNING: %38 = load i32, i32* %37, align 4, !dbg !4512, !verifier.code !4410
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6792, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p7);
  // WARNING: %39 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4515, !verifier.code !4410
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6793, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 8);
  // WARNING: %40 = add i64 %39, 8, !dbg !4518, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6794, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6794, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  // WARNING: %42 = load i32, i32* %41, align 4, !dbg !4522, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6795, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i38, $i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6795, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6797, 19} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6798, 5} true;
  assume {:verifier.code 0} true;
  call serial_hsu_stop_tx($p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6800, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i39 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6803, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6804, 15} true;
  assume {:verifier.code 0} true;
  call $i42 := uart_tx_stopped($p41);
  // WARNING: %48 = call i32 @uart_tx_stopped(%struct.uart_port* %47), !dbg !4540, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6806, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6806, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6808, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6809, 7} true;
  assume {:verifier.code 0} true;
  call serial_hsu_stop_tx($p44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6811, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6818, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p0);
  // WARNING: %55 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4555, !verifier.code !4410
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6819, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, 100);
  // WARNING: %56 = add i64 %55, 100, !dbg !4558, !verifier.code !4410
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6820, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6820, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  // WARNING: %58 = load i32, i32* %57, align 4, !dbg !4562, !verifier.code !4410
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6821, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $udiv.i32($i48, 2);
  // WARNING: %59 = udiv i32 %58, 2, !dbg !4565, !verifier.code !4410
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i49);
  // WARNING: call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !9330, metadata !4406), !dbg !9331, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6824, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6824, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6827, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p7);
  // WARNING: %62 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4574, !verifier.code !4410
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6828, 31} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 12);
  // WARNING: %63 = add i64 %62, 12, !dbg !4579, !verifier.code !4410
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6829, 21} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6829, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  // WARNING: %65 = load i32, i32* %64, align 4, !dbg !4583, !verifier.code !4410
  call {:cexpr "__cil_tmp47"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6830, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6830, 19} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6831, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6831, 31} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p56, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6832, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  // WARNING: %70 = load i8, i8* %69, align 1, !dbg !4592, !verifier.code !4410
  call {:cexpr "__cil_tmp50"} boogie_si_record_i8($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6833, 19} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i59);
  // WARNING: %71 = sext i8 %70 to i32, !dbg !4595, !verifier.code !4410
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6834, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6835, 19} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p7);
  // WARNING: %72 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4599, !verifier.code !4410
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6836, 31} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 12);
  // WARNING: %73 = add i64 %72, 12, !dbg !4602, !verifier.code !4410
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i62);
  // WARNING: call void @llvm.dbg.value(metadata i64 %73, i64 0, metadata !9367, metadata !4406), !dbg !9368, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6838, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i64(4096, 1);
  // WARNING: %74 = sub i64 4096, 1, !dbg !4607, !verifier.code !4410
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6839, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p7);
  // WARNING: %75 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4610, !verifier.code !4410
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6840, 31} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 12);
  // WARNING: %76 = add i64 %75, 12, !dbg !4613, !verifier.code !4410
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6841, 21} true;
  assume {:verifier.code 0} true;
  $p66 := $i2p.i64.ref($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6841, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  // WARNING: %78 = load i32, i32* %77, align 4, !dbg !4617, !verifier.code !4410
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6842, 31} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i67, 1);
  // WARNING: %79 = add nsw i32 %78, 1, !dbg !4620, !verifier.code !4410
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6843, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i68);
  // WARNING: %80 = sext i32 %79 to i64, !dbg !4623, !verifier.code !4410
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6844, 31} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i64($i69, $i63);
  // WARNING: %81 = and i64 %80, %74, !dbg !4626, !verifier.code !4410
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6845, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6845, 7} true;
  assume {:verifier.code 0} true;
  $p72 := $i2p.i64.ref($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6845, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, $i71);
  // WARNING: store i32 %82, i32* %83, align 4, !dbg !4631, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6847, 21} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64(0, 148);
  // WARNING: %84 = add i64 0, 148, !dbg !4634, !verifier.code !4410
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6848, 19} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p0);
  // WARNING: %85 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4637, !verifier.code !4410
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6849, 31} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i74, $i73);
  // WARNING: %86 = add i64 %85, %84, !dbg !4640, !verifier.code !4410
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i75);
  // WARNING: call void @llvm.dbg.value(metadata i64 %86, i64 0, metadata !9405, metadata !4406), !dbg !9406, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6851, 21} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i64(0, 148);
  // WARNING: %87 = add i64 0, 148, !dbg !4645, !verifier.code !4410
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6852, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p0);
  // WARNING: %88 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4648, !verifier.code !4410
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6853, 31} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, $i76);
  // WARNING: %89 = add i64 %88, %87, !dbg !4651, !verifier.code !4410
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6854, 21} true;
  assume {:verifier.code 0} true;
  $p79 := $i2p.i64.ref($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6854, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  // WARNING: %91 = load i32, i32* %90, align 4, !dbg !4655, !verifier.code !4410
  call {:cexpr "__cil_tmp70"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6855, 43} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6855, 7} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6855, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p7);
  // WARNING: %94 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4661, !verifier.code !4410
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6859, 31} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 12);
  // WARNING: %95 = add i64 %94, 12, !dbg !4665, !verifier.code !4410
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6860, 21} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6860, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  // WARNING: %97 = load i32, i32* %96, align 4, !dbg !4669, !verifier.code !4410
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6861, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p7);
  // WARNING: %98 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4672, !verifier.code !4410
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6862, 31} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 8);
  // WARNING: %99 = add i64 %98, 8, !dbg !4675, !verifier.code !4410
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6863, 21} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6863, 19} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  // WARNING: %101 = load i32, i32* %100, align 4, !dbg !4679, !verifier.code !4410
  call {:cexpr "__cil_tmp76"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6864, 21} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.i32($i90, $i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6864, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6865, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6881, 29} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i64(4096, 1);
  // WARNING: %112 = sub i64 4096, 1, !dbg !4700, !verifier.code !4410
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6882, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p7);
  // WARNING: %113 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4704, !verifier.code !4410
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6883, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, 12);
  // WARNING: %114 = add i64 %113, 12, !dbg !4707, !verifier.code !4410
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6884, 19} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6884, 17} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  // WARNING: %116 = load i32, i32* %115, align 4, !dbg !4711, !verifier.code !4410
  call {:cexpr "__cil_tmp81"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6885, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p7);
  // WARNING: %117 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4714, !verifier.code !4410
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 8);
  // WARNING: %118 = add i64 %117, 8, !dbg !4717, !verifier.code !4410
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6887, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6887, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  // WARNING: %120 = load i32, i32* %119, align 4, !dbg !4721, !verifier.code !4410
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6888, 29} true;
  assume {:verifier.code 0} true;
  $i103 := $sub.i32($i102, $i98);
  // WARNING: %121 = sub nsw i32 %120, %116, !dbg !4724, !verifier.code !4410
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6889, 17} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  // WARNING: %122 = sext i32 %121 to i64, !dbg !4727, !verifier.code !4410
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6890, 29} true;
  assume {:verifier.code 0} true;
  $i105 := $and.i64($i104, $i94);
  // WARNING: %123 = and i64 %122, %112, !dbg !4730, !verifier.code !4410
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6891, 19} true;
  assume {:verifier.code 0} true;
  $i106 := $ult.i64($i105, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6891, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb20, $bb21;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6870, 19} true;
  assume {:verifier.code 0} true;
  $i92 := $sub.i32($i50, 1);
  // WARNING: %106 = sub nsw i32 %.0, 1, !dbg !4687, !verifier.code !4410
  call {:cexpr "count"} boogie_si_record_i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6871, 15} true;
  assume {:verifier.code 0} true;
  $i93 := $sgt.i32($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6871, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6873, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6874, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6824, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i92;
  goto $bb11;
$bb20:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6893, 19} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6894, 5} true;
  assume {:verifier.code 0} true;
  call uart_write_wakeup($p107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6896, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6901, 17} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i64($p7);
  // WARNING: %129 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4743, !verifier.code !4410
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6902, 29} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i108, 12);
  // WARNING: %130 = add i64 %129, 12, !dbg !4747, !verifier.code !4410
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6903, 19} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6903, 17} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  // WARNING: %132 = load i32, i32* %131, align 4, !dbg !4751, !verifier.code !4410
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6904, 17} true;
  assume {:verifier.code 0} true;
  $i112 := $p2i.ref.i64($p7);
  // WARNING: %133 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4754, !verifier.code !4410
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6905, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i64($i112, 8);
  // WARNING: %134 = add i64 %133, 8, !dbg !4757, !verifier.code !4410
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6906, 19} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6906, 17} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  // WARNING: %136 = load i32, i32* %135, align 4, !dbg !4761, !verifier.code !4410
  call {:cexpr "__cil_tmp94"} boogie_si_record_i32($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6907, 19} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, $i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6907, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6909, 19} true;
  assume {:verifier.code 0} true;
  $p117 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6910, 5} true;
  assume {:verifier.code 0} true;
  call serial_hsu_stop_tx($p117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6912, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6916, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial_out: ref;
axiom (serial_out == $sub.ref(0, 140158));
procedure  serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i8;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %0, i64 0, metadata !9543, metadata !4406), !dbg !9544, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9545, metadata !4406), !dbg !9546, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4551, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $sgt.i32($i1, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4551, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4553, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i32($i1, 2);
  // WARNING: %6 = shl i32 %1, 2, !dbg !4419, !verifier.code !4410
  call {:cexpr "offset"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !9545, metadata !4406), !dbg !9546, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9556, metadata !4406), !dbg !9557, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4556, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4426, !verifier.code !4410
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4557, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 32);
  // WARNING: %8 = add i64 %7, 32, !dbg !4429, !verifier.code !4410
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4558, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4558, 18} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4559, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4559, 30} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p8, $mul.ref($i9, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4561, 5} true;
  assume {:verifier.code 0} true;
  call writel($i2, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4563, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4565, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i2, 255);
  // WARNING: %14 = and i32 %2, 255, !dbg !4443, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4566, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i8($i11);
  // WARNING: %15 = trunc i32 %14 to i8, !dbg !4448, !verifier.code !4410
  call {:cexpr "val"} boogie_si_record_i8($i12);
  // WARNING: call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !9583, metadata !4406), !dbg !9584, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4568, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  // WARNING: %16 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4453, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4569, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 32);
  // WARNING: %17 = add i64 %16, 32, !dbg !4456, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4570, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4570, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4571, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4571, 31} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p16, $mul.ref($i17, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4573, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i12, $p18);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4576, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_tx_stopped: ref;
axiom (uart_tx_stopped == $sub.ref(0, 141190));
procedure  uart_tx_stopped($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i8;
  var $i11: i1;
  var $p13: ref;
  var $i14: i8;
  var $i15: i8;
  var $i16: i8;
  var $i17: i1;
  var $i12: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3880, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4409, !verifier.code !4408
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3881, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 120);
  // WARNING: %3 = add i64 %2, 120, !dbg !4413, !verifier.code !4408
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3882, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3882, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3883, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3883, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3885, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  // WARNING: %8 = ptrtoint %struct.tty_struct* %7 to i64, !dbg !4423, !verifier.code !4408
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3886, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 340);
  // WARNING: %9 = add i64 %8, 340, !dbg !4427, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3887, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3887, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3887, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i8($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3887, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3888, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 12} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p6, 340);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 12} true;
  assume {:verifier.code 0} true;
  $i15 := $lshr.i8($i14, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 12} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i8($i15, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i8($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3890, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3898, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3891, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb3;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3896, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
}
const uart_write_wakeup: ref;
axiom (uart_write_wakeup == $sub.ref(0, 142222));
procedure  uart_write_wakeup($p0: ref);
const writel: ref;
axiom (writel == $sub.ref(0, 143254));
procedure  writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3757, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.7(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3761, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const writeb: ref;
axiom (writeb == $sub.ref(0, 144286));
procedure  writeb($i0: i8, $p1: ref)
{
$bb0:
  call devirtbounce.8(0, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3749, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_handle_break: ref;
axiom (uart_handle_break == $sub.ref(0, 145318));
procedure  uart_handle_break($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3916, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4409, !verifier.code !4408
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3917, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 120);
  // WARNING: %3 = add i64 %2, 120, !dbg !4413, !verifier.code !4408
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3918, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3918, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_state* %5, i64 0, metadata !9677, metadata !4406), !dbg !9678, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !9679, metadata !4406), !dbg !9680, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3922, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4424, !verifier.code !4408
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3923, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 192);
  // WARNING: %7 = add i64 %6, 192, !dbg !4428, !verifier.code !4408
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3924, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3924, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  // WARNING: %9 = load i32, i32* %8, align 4, !dbg !4432, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3925, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3925, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3925, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3927, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3927, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3928, 5} true;
  assume {:verifier.code 0} true;
  call do_SAK($p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3930, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3934, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const uart_insert_char: ref;
axiom (uart_insert_char == $sub.ref(0, 146350));
procedure  uart_insert_char($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32);
const tty_flip_buffer_push: ref;
axiom (tty_flip_buffer_push == $sub.ref(0, 147382));
procedure  tty_flip_buffer_push($p0: ref);
const do_SAK: ref;
axiom (do_SAK == $sub.ref(0, 148414));
procedure  do_SAK($p0: ref);
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 149446));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const uart_handle_dcd_change: ref;
axiom (uart_handle_dcd_change == $sub.ref(0, 150478));
procedure  uart_handle_dcd_change($p0: ref, $i1: i32);
const uart_handle_cts_change: ref;
axiom (uart_handle_cts_change == $sub.ref(0, 151510));
procedure  uart_handle_cts_change($p0: ref, $i1: i32);
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 152542));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref);
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 153574));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32);
const dma_chan_irq: ref;
axiom (dma_chan_irq == $sub.ref(0, 154606));
procedure  dma_chan_irq($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7236, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4411, !verifier.code !4410
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7237, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 8);
  // WARNING: %3 = add i64 %2, 8, !dbg !4415, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7238, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7238, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7240, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7240, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7243, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7243, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7246, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7247, 17} true;
  assume {:verifier.code 0} true;
  call $p6 := spinlock_check($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7248, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := _raw_spin_lock_irqsave($p6);
  // WARNING: %12 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %11), !dbg !4440, !verifier.code !4410
  call {:cexpr "flags"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7250, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7254, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7259, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p4);
  // WARNING: %15 = ptrtoint %struct.uart_hsu_port* %5 to i64, !dbg !4445, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7260, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 352);
  // WARNING: %16 = add i64 %15, 352, !dbg !4449, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7261, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7261, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  // WARNING: %18 = load i32, i32* %17, align 4, !dbg !4453, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7262, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7262, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7266, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p4);
  // WARNING: %22 = ptrtoint %struct.uart_hsu_port* %5 to i64, !dbg !4461, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7267, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 356);
  // WARNING: %23 = add i64 %22, 356, !dbg !4466, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7268, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7268, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  // WARNING: %25 = load i32, i32* %24, align 4, !dbg !4470, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7269, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7269, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb10, $bb11;
$bb8:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7263, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7322, 17} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7323, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p42, $i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7325, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume ($i17 == 1);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7270, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7278, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p0);
  // WARNING: %31 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4478, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7279, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 16);
  // WARNING: %32 = add i64 %31, 16, !dbg !4482, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7280, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7280, 17} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7281, 29} true;
  assume {:verifier.code 0} true;
  $p22 := $p21;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7283, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := readl($p22);
  // WARNING: %36 = call i32 @readl(i8* %35), !dbg !4494, !verifier.code !4410
  call {:cexpr "int_sts"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7286, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p0);
  // WARNING: %37 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4497, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7287, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 4);
  // WARNING: %38 = add i64 %37, 4, !dbg !4501, !verifier.code !4410
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7288, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7288, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  // WARNING: %40 = load i32, i32* %39, align 4, !dbg !4505, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i27);
  // WARNING: call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !9804, metadata !4406), !dbg !9805, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7290, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i27, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7290, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7292, 5} true;
  assume {:verifier.code 0} true;
  call hsu_dma_rx($p4, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7294, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7299, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  // WARNING: %45 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4517, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7300, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 4);
  // WARNING: %46 = add i64 %45, 4, !dbg !4521, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7301, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7301, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  // WARNING: %48 = load i32, i32* %47, align 4, !dbg !4525, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i32);
  // WARNING: call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !9824, metadata !4406), !dbg !9825, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7303, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7303, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7305, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p0);
  // WARNING: %51 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4533, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7306, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 16);
  // WARNING: %52 = add i64 %51, 16, !dbg !4538, !verifier.code !4410
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7307, 21} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7307, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7308, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7310, 5} true;
  assume {:verifier.code 0} true;
  call writel(0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7311, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p4);
  // WARNING: %56 = ptrtoint %struct.uart_hsu_port* %5 to i64, !dbg !4551, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7312, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 360);
  // WARNING: %57 = add i64 %56, 360, !dbg !4554, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7313, 7} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7313, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7314, 5} true;
  assume {:verifier.code 0} true;
  call hsu_dma_tx($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7316, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 7319, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const hsu_dma_rx: ref;
axiom (hsu_dma_rx == $sub.ref(0, 155638));
procedure  hsu_dma_rx($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i32;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $i58: i64;
  var $i59: i32;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i64;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i64;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $i84: i64;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i32;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: i32;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %0, i64 0, metadata !9869, metadata !4406), !dbg !9870, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6147, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6148, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 328);
  // WARNING: %4 = add i64 %3, 328, !dbg !4417, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6149, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6150, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4423, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6151, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 296);
  // WARNING: %7 = add i64 %6, 296, !dbg !4426, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6152, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6152, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6153, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6154, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  // WARNING: %11 = ptrtoint %struct.uart_port* %10 to i64, !dbg !4436, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6155, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 120);
  // WARNING: %12 = add i64 %11, 120, !dbg !4439, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6156, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6156, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6157, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6157, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6158, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.ref($p15, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6158, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6159, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6284, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6163, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i1, 3840);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6163, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6163, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6165, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(8590);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6167, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6171, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p8);
  // WARNING: %26 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4461, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6172, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 16);
  // WARNING: %27 = add i64 %26, 16, !dbg !4465, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6173, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6173, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6174, 29} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6176, 3} true;
  assume {:verifier.code 0} true;
  call writel(0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6177, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p8);
  // WARNING: %31 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4478, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6178, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 16);
  // WARNING: %32 = add i64 %31, 16, !dbg !4481, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6179, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6179, 17} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6180, 29} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6182, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := readl($p28);
  // WARNING: %36 = call i32 @readl(i8* %35), !dbg !4493, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6183, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p4);
  // WARNING: %37 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4496, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6184, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 8);
  // WARNING: %38 = add i64 %37, 8, !dbg !4499, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6185, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6185, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.0, $p32);
  // WARNING: %40 = load i64, i64* %39, align 8, !dbg !4503, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6186, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i32.i64($i29);
  // WARNING: %41 = zext i32 %36 to i64, !dbg !4506, !verifier.code !4410
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6187, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $sub.i64($i34, $i33);
  // WARNING: %42 = sub i64 %41, %40, !dbg !4509, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6188, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i64.i32($i35);
  // WARNING: %43 = trunc i64 %42 to i32, !dbg !4512, !verifier.code !4410
  call {:cexpr "count"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6190, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6190, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i37 == 1);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6192, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p8);
  // WARNING: %46 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4518, !verifier.code !4410
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6193, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 16);
  // WARNING: %47 = add i64 %46, 16, !dbg !4523, !verifier.code !4410
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6194, 21} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6194, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6195, 31} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6197, 5} true;
  assume {:verifier.code 0} true;
  call writel(3, $p42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6199, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6204, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p9);
  // WARNING: %53 = ptrtoint %struct.uart_port* %10 to i64, !dbg !4537, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6205, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 232);
  // WARNING: %54 = add i64 %53, 232, !dbg !4541, !verifier.code !4410
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6206, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6206, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6207, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p4);
  // WARNING: %57 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4548, !verifier.code !4410
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6208, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 8);
  // WARNING: %58 = add i64 %57, 8, !dbg !4551, !verifier.code !4410
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6209, 19} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6209, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i64($M.0, $p49);
  // WARNING: %60 = load i64, i64* %59, align 8, !dbg !4555, !verifier.code !4410
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6210, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p4);
  // WARNING: %61 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4558, !verifier.code !4410
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6211, 29} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 16);
  // WARNING: %62 = add i64 %61, 16, !dbg !4561, !verifier.code !4410
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6212, 19} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6212, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  // WARNING: %64 = load i32, i32* %63, align 4, !dbg !4565, !verifier.code !4410
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6213, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i32.i64($i54);
  // WARNING: %65 = zext i32 %64 to i64, !dbg !4568, !verifier.code !4410
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i55);
  // WARNING: call void @llvm.dbg.value(metadata i64 %65, i64 0, metadata !10029, metadata !4406), !dbg !10030, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6215, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_cpu($p46, $i50, $i55, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6216, 17} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6216, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6218, 17} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i36);
  // WARNING: %68 = sext i32 %43 to i64, !dbg !4579, !verifier.code !4410
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6219, 3} true;
  assume {:verifier.code 0} true;
  call $i59 := tty_insert_flip_string($p15, $p57, $i58);
  // WARNING: %69 = call i32 @tty_insert_flip_string(%struct.tty_struct* %16, i8* %67, i64 %68), !dbg !4582, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6221, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p9);
  // WARNING: %70 = ptrtoint %struct.uart_port* %10 to i64, !dbg !4585, !verifier.code !4410
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6222, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 144);
  // WARNING: %71 = add i64 %70, 144, !dbg !4588, !verifier.code !4410
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i61);
  // WARNING: call void @llvm.dbg.value(metadata i64 %71, i64 0, metadata !10049, metadata !4406), !dbg !10050, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !10051, metadata !4406), !dbg !10052, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6225, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p9);
  // WARNING: %72 = ptrtoint %struct.uart_port* %10 to i64, !dbg !4595, !verifier.code !4410
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6226, 29} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 144);
  // WARNING: %73 = add i64 %72, 144, !dbg !4598, !verifier.code !4410
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6227, 19} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6227, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  // WARNING: %75 = load i32, i32* %74, align 4, !dbg !4602, !verifier.code !4410
  call {:cexpr "__cil_tmp57"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6228, 41} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i32($i65, $i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6228, 5} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6228, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, $i66);
  // WARNING: store i32 %76, i32* %77, align 4, !dbg !4607, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6230, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $p2i.ref.i64($p0);
  // WARNING: %78 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4610, !verifier.code !4410
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6231, 29} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i64($i68, 232);
  // WARNING: %79 = add i64 %78, 232, !dbg !4613, !verifier.code !4410
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6232, 19} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6232, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6233, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p4);
  // WARNING: %82 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4620, !verifier.code !4410
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6234, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, 8);
  // WARNING: %83 = add i64 %82, 8, !dbg !4623, !verifier.code !4410
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6235, 19} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6235, 17} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i64($M.0, $p74);
  // WARNING: %85 = load i64, i64* %84, align 8, !dbg !4627, !verifier.code !4410
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6236, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p4);
  // WARNING: %86 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4630, !verifier.code !4410
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6237, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 16);
  // WARNING: %87 = add i64 %86, 16, !dbg !4633, !verifier.code !4410
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6238, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6238, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  // WARNING: %89 = load i32, i32* %88, align 4, !dbg !4637, !verifier.code !4410
  call {:cexpr "__cil_tmp67"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6239, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i32.i64($i79);
  // WARNING: %90 = zext i32 %89 to i64, !dbg !4640, !verifier.code !4410
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i80);
  // WARNING: call void @llvm.dbg.value(metadata i64 %90, i64 0, metadata !10101, metadata !4406), !dbg !10102, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6241, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_device($p71, $i75, $i80, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6242, 17} true;
  assume {:verifier.code 0} true;
  $i81 := $p2i.ref.i64($p4);
  // WARNING: %91 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4646, !verifier.code !4410
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6243, 29} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i64($i81, 8);
  // WARNING: %92 = add i64 %91, 8, !dbg !4649, !verifier.code !4410
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6244, 19} true;
  assume {:verifier.code 0} true;
  $p83 := $i2p.i64.ref($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6244, 17} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i64($M.0, $p83);
  // WARNING: %94 = load i64, i64* %93, align 8, !dbg !4653, !verifier.code !4410
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6245, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i64.i32($i84);
  // WARNING: %95 = trunc i64 %94 to i32, !dbg !4656, !verifier.code !4410
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6246, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p8);
  // WARNING: %96 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4659, !verifier.code !4410
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6247, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, 16);
  // WARNING: %97 = add i64 %96, 16, !dbg !4662, !verifier.code !4410
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6248, 19} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6248, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6249, 29} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p89, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6251, 3} true;
  assume {:verifier.code 0} true;
  call writel($i85, $p90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6252, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.i64($p4);
  // WARNING: %101 = ptrtoint %struct.hsu_dma_buffer* %5 to i64, !dbg !4675, !verifier.code !4410
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6253, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i91, 16);
  // WARNING: %102 = add i64 %101, 16, !dbg !4678, !verifier.code !4410
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6254, 19} true;
  assume {:verifier.code 0} true;
  $p93 := $i2p.i64.ref($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6254, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  // WARNING: %104 = load i32, i32* %103, align 4, !dbg !4682, !verifier.code !4410
  call {:cexpr "__cil_tmp81"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6255, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p8);
  // WARNING: %105 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4685, !verifier.code !4410
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6256, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, 16);
  // WARNING: %106 = add i64 %105, 16, !dbg !4688, !verifier.code !4410
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6257, 19} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6257, 17} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6258, 29} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6260, 3} true;
  assume {:verifier.code 0} true;
  call writel($i94, $p99);
  // WARNING: call void @writel(i32 %104, i8* %109), !dbg !4700, !verifier.code !4410
  // WARNING: call void @llvm.dbg.value(metadata i32 16777216, i64 0, metadata !10161, metadata !4406), !dbg !10162, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 65536, i64 0, metadata !10163, metadata !4406), !dbg !10164, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6264, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $or.i32(1, 256);
  // WARNING: %110 = or i32 1, 256, !dbg !4707, !verifier.code !4410
  call {:cexpr "__cil_tmp90"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6265, 29} true;
  assume {:verifier.code 0} true;
  $i101 := $or.i32($i100, 65536);
  // WARNING: %111 = or i32 %110, 65536, !dbg !4710, !verifier.code !4410
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6266, 29} true;
  assume {:verifier.code 0} true;
  $i102 := $or.i32($i101, 16777216);
  // WARNING: %112 = or i32 %111, 16777216, !dbg !4713, !verifier.code !4410
  call {:cexpr "__cil_tmp92"} boogie_si_record_i32($i102);
  // WARNING: call void @llvm.dbg.value(metadata i32 %112, i64 0, metadata !10174, metadata !4406), !dbg !10175, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6268, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p8);
  // WARNING: %113 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4718, !verifier.code !4410
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6269, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i64($i103, 16);
  // WARNING: %114 = add i64 %113, 16, !dbg !4721, !verifier.code !4410
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6270, 19} true;
  assume {:verifier.code 0} true;
  $p105 := $i2p.i64.ref($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6270, 17} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6271, 29} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6273, 3} true;
  assume {:verifier.code 0} true;
  call writel($i102, $p107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6274, 3} true;
  assume {:verifier.code 0} true;
  call tty_flip_buffer_push($p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6275, 17} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i64($p8);
  // WARNING: %118 = ptrtoint %struct.hsu_dma_chan* %9 to i64, !dbg !4735, !verifier.code !4410
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6276, 30} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i108, 16);
  // WARNING: %119 = add i64 %118, 16, !dbg !4738, !verifier.code !4410
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6277, 20} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6277, 18} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6278, 31} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6280, 3} true;
  assume {:verifier.code 0} true;
  call writel(3, $p112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 6282, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const hsu_dma_tx: ref;
axiom (hsu_dma_tx == $sub.ref(0, 156670));
procedure  hsu_dma_tx($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $i36: i64;
  var $i37: i32;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $i46: i64;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $i91: i64;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i32;
  var $i96: i64;
  var $i97: i64;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $i105: i64;
  var $i106: i64;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i64;
  var $i122: i64;
  var $i123: i32;
  var $i124: i64;
  var $i125: i64;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $p136: ref;
  var $i137: i64;
  var $i138: i64;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $p147: ref;
  var $p148: ref;
  var $i149: i64;
  var $i150: i64;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i64;
  var $i155: i64;
  var $p156: ref;
  var $i157: i64;
  var $i158: i64;
  var $p159: ref;
  var $p160: ref;
  var $i161: i64;
  var $i162: i64;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $i168: i64;
  var $p169: ref;
  var $i170: i32;
  var $i171: i64;
  var $i172: i64;
  var $p173: ref;
  var $i174: i32;
  var $i175: i32;
  var $i176: i64;
  var $i177: i64;
  var $i178: i1;
  var $p179: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %0, i64 0, metadata !10214, metadata !4406), !dbg !10215, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5565, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5566, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 120);
  // WARNING: %3 = add i64 %2, 120, !dbg !4417, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5567, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5567, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5568, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  // WARNING: %6 = ptrtoint %struct.uart_state* %5 to i64, !dbg !4424, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5569, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 360);
  // WARNING: %7 = add i64 %6, 360, !dbg !4427, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5570, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5571, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %9 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4433, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5572, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 304);
  // WARNING: %10 = add i64 %9, 304, !dbg !4436, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5573, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5575, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p0);
  // WARNING: %12 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4442, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5576, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 360);
  // WARNING: %13 = add i64 %12, 360, !dbg !4446, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5577, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5578, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5773, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5584, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p7);
  // WARNING: %20 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4455, !verifier.code !4410
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5585, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 12);
  // WARNING: %21 = add i64 %20, 12, !dbg !4459, !verifier.code !4410
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5586, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p10);
  // WARNING: %22 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4462, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5587, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 20);
  // WARNING: %23 = add i64 %22, 20, !dbg !4465, !verifier.code !4410
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5588, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5588, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  // WARNING: %25 = load i32, i32* %24, align 4, !dbg !4469, !verifier.code !4410
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5589, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p7);
  // WARNING: %26 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4472, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5590, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 12);
  // WARNING: %27 = add i64 %26, 12, !dbg !4475, !verifier.code !4410
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5591, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5591, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  // WARNING: %29 = load i32, i32* %28, align 4, !dbg !4479, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i25);
  // WARNING: call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !10285, metadata !4406), !dbg !10286, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5593, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, $i21);
  // WARNING: %30 = add i32 %29, %25, !dbg !4484, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5594, 5} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5594, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5595, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p7);
  // WARNING: %32 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4489, !verifier.code !4410
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5596, 29} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 12);
  // WARNING: %33 = add i64 %32, 12, !dbg !4492, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i29);
  // WARNING: call void @llvm.dbg.value(metadata i64 %33, i64 0, metadata !10298, metadata !4406), !dbg !10299, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5598, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $sub.i64(4096, 1);
  // WARNING: %34 = sub i64 4096, 1, !dbg !4497, !verifier.code !4410
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5599, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p7);
  // WARNING: %35 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4500, !verifier.code !4410
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5600, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 12);
  // WARNING: %36 = add i64 %35, 12, !dbg !4503, !verifier.code !4410
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5601, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5601, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  // WARNING: %38 = load i32, i32* %37, align 4, !dbg !4507, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5602, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i34);
  // WARNING: %39 = sext i32 %38 to i64, !dbg !4510, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5603, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i64($i35, $i30);
  // WARNING: %40 = and i64 %39, %34, !dbg !4513, !verifier.code !4410
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5604, 27} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i64.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5604, 5} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5604, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, $i37);
  // WARNING: store i32 %41, i32* %42, align 4, !dbg !4518, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5606, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64(0, 148);
  // WARNING: %43 = add i64 0, 148, !dbg !4521, !verifier.code !4410
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5607, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p0);
  // WARNING: %44 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4524, !verifier.code !4410
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5608, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, $i39);
  // WARNING: %45 = add i64 %44, %43, !dbg !4527, !verifier.code !4410
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5609, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p10);
  // WARNING: %46 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4530, !verifier.code !4410
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5610, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 20);
  // WARNING: %47 = add i64 %46, 20, !dbg !4533, !verifier.code !4410
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5611, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5611, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  // WARNING: %49 = load i32, i32* %48, align 4, !dbg !4537, !verifier.code !4410
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i45);
  // WARNING: call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !10343, metadata !4406), !dbg !10344, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5613, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64(0, 148);
  // WARNING: %50 = add i64 0, 148, !dbg !4542, !verifier.code !4410
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5614, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p0);
  // WARNING: %51 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4545, !verifier.code !4410
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5615, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, $i46);
  // WARNING: %52 = add i64 %51, %50, !dbg !4548, !verifier.code !4410
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5616, 19} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5616, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  // WARNING: %54 = load i32, i32* %53, align 4, !dbg !4552, !verifier.code !4410
  call {:cexpr "__cil_tmp49"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5617, 41} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, $i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5617, 5} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5617, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5618, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p10);
  // WARNING: %57 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4558, !verifier.code !4410
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5619, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 20);
  // WARNING: %58 = add i64 %57, 20, !dbg !4561, !verifier.code !4410
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5620, 5} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5620, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5621, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p0);
  // WARNING: %60 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4566, !verifier.code !4410
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5622, 29} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 288);
  // WARNING: %61 = add i64 %60, 288, !dbg !4569, !verifier.code !4410
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5623, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5623, 17} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5624, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p59);
  // WARNING: %64 = ptrtoint %struct.hsu_dma_chan* %63 to i64, !dbg !4576, !verifier.code !4410
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5625, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 16);
  // WARNING: %65 = add i64 %64, 16, !dbg !4579, !verifier.code !4410
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5626, 19} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5626, 17} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5627, 29} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5629, 3} true;
  assume {:verifier.code 0} true;
  call writel(0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5632, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p7);
  // WARNING: %69 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4592, !verifier.code !4410
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5633, 29} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 12);
  // WARNING: %70 = add i64 %69, 12, !dbg !4596, !verifier.code !4410
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5634, 19} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5634, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  // WARNING: %72 = load i32, i32* %71, align 4, !dbg !4600, !verifier.code !4410
  call {:cexpr "__cil_tmp62"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5635, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p7);
  // WARNING: %73 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4603, !verifier.code !4410
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5636, 29} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 8);
  // WARNING: %74 = add i64 %73, 8, !dbg !4606, !verifier.code !4410
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5637, 19} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5637, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  // WARNING: %76 = load i32, i32* %75, align 4, !dbg !4610, !verifier.code !4410
  call {:cexpr "__cil_tmp65"} boogie_si_record_i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5638, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.i32($i72, $i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5638, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i1.i32($i73);
  // WARNING: %78 = zext i1 %77 to i32, !dbg !4613, !verifier.code !4410
  call {:cexpr "__cil_tmp66"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5639, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5639, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i75 == 1);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb6:
  assume !(($i75 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5641, 19} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5642, 15} true;
  assume {:verifier.code 0} true;
  call $i77 := uart_tx_stopped($p76);
  // WARNING: %82 = call i32 @uart_tx_stopped(%struct.uart_port* %81), !dbg !4624, !verifier.code !4410
  call {:cexpr "tmp___8"} boogie_si_record_i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5644, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5644, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5646, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5649, 21} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p0);
  // WARNING: %86 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4634, !verifier.code !4410
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5650, 33} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 232);
  // WARNING: %87 = add i64 %86, 232, !dbg !4639, !verifier.code !4410
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5651, 23} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5651, 21} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5652, 21} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p10);
  // WARNING: %90 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4646, !verifier.code !4410
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5653, 33} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 8);
  // WARNING: %91 = add i64 %90, 8, !dbg !4649, !verifier.code !4410
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5654, 23} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5654, 21} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i64($M.0, $p85);
  // WARNING: %93 = load i64, i64* %92, align 8, !dbg !4653, !verifier.code !4410
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5655, 21} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p10);
  // WARNING: %94 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4656, !verifier.code !4410
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5656, 33} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 16);
  // WARNING: %95 = add i64 %94, 16, !dbg !4659, !verifier.code !4410
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5657, 23} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5657, 21} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  // WARNING: %97 = load i32, i32* %96, align 4, !dbg !4663, !verifier.code !4410
  call {:cexpr "__cil_tmp77"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5658, 21} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i32.i64($i90);
  // WARNING: %98 = zext i32 %97 to i64, !dbg !4666, !verifier.code !4410
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i91);
  // WARNING: call void @llvm.dbg.value(metadata i64 %98, i64 0, metadata !10472, metadata !4406), !dbg !10473, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5660, 7} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_device($p82, $i86, $i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5661, 21} true;
  assume {:verifier.code 0} true;
  $i92 := $p2i.ref.i64($p7);
  // WARNING: %99 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4672, !verifier.code !4410
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5662, 33} true;
  assume {:verifier.code 0} true;
  $i93 := $add.i64($i92, 12);
  // WARNING: %100 = add i64 %99, 12, !dbg !4675, !verifier.code !4410
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5663, 23} true;
  assume {:verifier.code 0} true;
  $p94 := $i2p.i64.ref($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5663, 21} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  // WARNING: %102 = load i32, i32* %101, align 4, !dbg !4679, !verifier.code !4410
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5664, 21} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i32.i64($i95);
  // WARNING: %103 = sext i32 %102 to i64, !dbg !4682, !verifier.code !4410
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i96);
  // WARNING: call void @llvm.dbg.value(metadata i64 %103, i64 0, metadata !10488, metadata !4406), !dbg !10489, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5666, 33} true;
  assume {:verifier.code 0} true;
  $i97 := $sub.i64(4096, $i96);
  // WARNING: %104 = sub i64 4096, %103, !dbg !4687, !verifier.code !4410
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5667, 13} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i64.i32($i97);
  // WARNING: %105 = trunc i64 %104 to i32, !dbg !4690, !verifier.code !4410
  call {:cexpr "end"} boogie_si_record_i32($i98);
  // WARNING: call void @llvm.dbg.value(metadata i32 %105, i64 0, metadata !10496, metadata !4406), !dbg !10497, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5669, 33} true;
  assume {:verifier.code 0} true;
  $i99 := $sub.i64(4096, 1);
  // WARNING: %106 = sub i64 4096, 1, !dbg !4695, !verifier.code !4410
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5670, 21} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p7);
  // WARNING: %107 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4698, !verifier.code !4410
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5671, 33} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i100, 8);
  // WARNING: %108 = add i64 %107, 8, !dbg !4701, !verifier.code !4410
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5672, 23} true;
  assume {:verifier.code 0} true;
  $p102 := $i2p.i64.ref($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5672, 21} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  // WARNING: %110 = load i32, i32* %109, align 4, !dbg !4705, !verifier.code !4410
  call {:cexpr "__cil_tmp90"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5673, 33} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i32($i103, $i98);
  // WARNING: %111 = add nsw i32 %110, %105, !dbg !4708, !verifier.code !4410
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5674, 21} true;
  assume {:verifier.code 0} true;
  $i105 := $sext.i32.i64($i104);
  // WARNING: %112 = sext i32 %111 to i64, !dbg !4711, !verifier.code !4410
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5675, 33} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i64($i105, $i99);
  // WARNING: %113 = and i64 %112, %106, !dbg !4714, !verifier.code !4410
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5676, 11} true;
  assume {:verifier.code 0} true;
  $i107 := $trunc.i64.i32($i106);
  // WARNING: %114 = trunc i64 %113 to i32, !dbg !4717, !verifier.code !4410
  call {:cexpr "n"} boogie_si_record_i32($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5678, 13} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i107, $i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5678, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5746, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5680, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i107;
  goto $bb12;
$bb11:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  $i109 := $i98;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  // WARNING: %.0 = phi i32 [ %114, %116 ], [ %105, %117 ], !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5685, 21} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p10);
  // WARNING: %119 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4729, !verifier.code !4410
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5686, 33} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i64($i110, 20);
  // WARNING: %120 = add i64 %119, 20, !dbg !4733, !verifier.code !4410
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5687, 9} true;
  assume {:verifier.code 0} true;
  $p112 := $i2p.i64.ref($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5687, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p112, $i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5688, 21} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($p7);
  // WARNING: %122 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4738, !verifier.code !4410
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5689, 33} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i113, 12);
  // WARNING: %123 = add i64 %122, 12, !dbg !4741, !verifier.code !4410
  call {:cexpr "__cil_tmp97"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5690, 23} true;
  assume {:verifier.code 0} true;
  $p115 := $i2p.i64.ref($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5690, 21} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  // WARNING: %125 = load i32, i32* %124, align 4, !dbg !4745, !verifier.code !4410
  call {:cexpr "__cil_tmp98"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5691, 21} true;
  assume {:verifier.code 0} true;
  $i117 := $sext.i32.i64($i116);
  // WARNING: %126 = sext i32 %125 to i64, !dbg !4748, !verifier.code !4410
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5692, 22} true;
  assume {:verifier.code 0} true;
  $i118 := $p2i.ref.i64($p10);
  // WARNING: %127 = ptrtoint %struct.hsu_dma_buffer* %11 to i64, !dbg !4751, !verifier.code !4410
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5693, 35} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i64($i118, 8);
  // WARNING: %128 = add i64 %127, 8, !dbg !4754, !verifier.code !4410
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5694, 24} true;
  assume {:verifier.code 0} true;
  $p120 := $i2p.i64.ref($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5694, 22} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i64($M.0, $p120);
  // WARNING: %130 = load i64, i64* %129, align 8, !dbg !4758, !verifier.code !4410
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5695, 35} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i121, $i117);
  // WARNING: %131 = add i64 %130, %126, !dbg !4761, !verifier.code !4410
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5696, 22} true;
  assume {:verifier.code 0} true;
  $i123 := $trunc.i64.i32($i122);
  // WARNING: %132 = trunc i64 %131 to i32, !dbg !4764, !verifier.code !4410
  call {:cexpr "__cil_tmp104"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5697, 22} true;
  assume {:verifier.code 0} true;
  $i124 := $p2i.ref.i64($p0);
  // WARNING: %133 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4767, !verifier.code !4410
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5698, 35} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i124, 288);
  // WARNING: %134 = add i64 %133, 288, !dbg !4770, !verifier.code !4410
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5699, 24} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.i64.ref($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5699, 22} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5700, 22} true;
  assume {:verifier.code 0} true;
  $i128 := $p2i.ref.i64($p127);
  // WARNING: %137 = ptrtoint %struct.hsu_dma_chan* %136 to i64, !dbg !4777, !verifier.code !4410
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5701, 35} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i64($i128, 16);
  // WARNING: %138 = add i64 %137, 16, !dbg !4780, !verifier.code !4410
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5702, 24} true;
  assume {:verifier.code 0} true;
  $p130 := $i2p.i64.ref($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5702, 22} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5703, 35} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p131, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5705, 7} true;
  assume {:verifier.code 0} true;
  call writel($i123, $p132);
  // WARNING: call void @writel(i32 %132, i8* %141), !dbg !4792, !verifier.code !4410
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5707, 22} true;
  assume {:verifier.code 0} true;
  $i133 := $p2i.ref.i64($p0);
  // WARNING: %142 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4795, !verifier.code !4410
  call {:cexpr "__cil_tmp114"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5708, 35} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i64($i133, 288);
  // WARNING: %143 = add i64 %142, 288, !dbg !4798, !verifier.code !4410
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5709, 24} true;
  assume {:verifier.code 0} true;
  $p135 := $i2p.i64.ref($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5709, 22} true;
  assume {:verifier.code 0} true;
  $p136 := $load.ref($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5710, 22} true;
  assume {:verifier.code 0} true;
  $i137 := $p2i.ref.i64($p136);
  // WARNING: %146 = ptrtoint %struct.hsu_dma_chan* %145 to i64, !dbg !4805, !verifier.code !4410
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5711, 35} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i64($i137, 16);
  // WARNING: %147 = add i64 %146, 16, !dbg !4808, !verifier.code !4410
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5712, 24} true;
  assume {:verifier.code 0} true;
  $p139 := $i2p.i64.ref($i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5712, 22} true;
  assume {:verifier.code 0} true;
  $p140 := $load.ref($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5713, 35} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p140, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5715, 7} true;
  assume {:verifier.code 0} true;
  call writel($i109, $p141);
  // WARNING: call void @writel(i32 %.0, i8* %150), !dbg !4820, !verifier.code !4410
  // WARNING: call void @llvm.dbg.value(metadata i32 16777216, i64 0, metadata !10626, metadata !4406), !dbg !10627, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 65536, i64 0, metadata !10628, metadata !4406), !dbg !10629, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5719, 24} true;
  assume {:verifier.code 0} true;
  $i142 := $or.i32(1, 256);
  // WARNING: %151 = or i32 1, 256, !dbg !4827, !verifier.code !4410
  call {:cexpr "__cil_tmp125"} boogie_si_record_i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5720, 35} true;
  assume {:verifier.code 0} true;
  $i143 := $or.i32($i142, 65536);
  // WARNING: %152 = or i32 %151, 65536, !dbg !4830, !verifier.code !4410
  call {:cexpr "__cil_tmp126"} boogie_si_record_i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5721, 35} true;
  assume {:verifier.code 0} true;
  $i144 := $or.i32($i143, 16777216);
  // WARNING: %153 = or i32 %152, 16777216, !dbg !4833, !verifier.code !4410
  call {:cexpr "__cil_tmp127"} boogie_si_record_i32($i144);
  // WARNING: call void @llvm.dbg.value(metadata i32 %153, i64 0, metadata !10639, metadata !4406), !dbg !10640, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5723, 22} true;
  assume {:verifier.code 0} true;
  $i145 := $p2i.ref.i64($p0);
  // WARNING: %154 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4838, !verifier.code !4410
  call {:cexpr "__cil_tmp129"} boogie_si_record_i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5724, 35} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i64($i145, 288);
  // WARNING: %155 = add i64 %154, 288, !dbg !4841, !verifier.code !4410
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5725, 24} true;
  assume {:verifier.code 0} true;
  $p147 := $i2p.i64.ref($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5725, 22} true;
  assume {:verifier.code 0} true;
  $p148 := $load.ref($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5726, 22} true;
  assume {:verifier.code 0} true;
  $i149 := $p2i.ref.i64($p148);
  // WARNING: %158 = ptrtoint %struct.hsu_dma_chan* %157 to i64, !dbg !4848, !verifier.code !4410
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5727, 35} true;
  assume {:verifier.code 0} true;
  $i150 := $add.i64($i149, 16);
  // WARNING: %159 = add i64 %158, 16, !dbg !4851, !verifier.code !4410
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5728, 24} true;
  assume {:verifier.code 0} true;
  $p151 := $i2p.i64.ref($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5728, 22} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5729, 35} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p152, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5731, 7} true;
  assume {:verifier.code 0} true;
  call writel($i144, $p153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5732, 22} true;
  assume {:verifier.code 0} true;
  $i154 := $p2i.ref.i64($p0);
  // WARNING: %163 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4864, !verifier.code !4410
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5733, 35} true;
  assume {:verifier.code 0} true;
  $i155 := $add.i64($i154, 360);
  // WARNING: %164 = add i64 %163, 360, !dbg !4867, !verifier.code !4410
  call {:cexpr "__cil_tmp138"} boogie_si_record_i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5734, 9} true;
  assume {:verifier.code 0} true;
  $p156 := $i2p.i64.ref($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5734, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p156, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5735, 22} true;
  assume {:verifier.code 0} true;
  $i157 := $p2i.ref.i64($p0);
  // WARNING: %166 = ptrtoint %struct.uart_hsu_port* %0 to i64, !dbg !4872, !verifier.code !4410
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5736, 35} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i64($i157, 288);
  // WARNING: %167 = add i64 %166, 288, !dbg !4875, !verifier.code !4410
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5737, 24} true;
  assume {:verifier.code 0} true;
  $p159 := $i2p.i64.ref($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5737, 22} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5738, 22} true;
  assume {:verifier.code 0} true;
  $i161 := $p2i.ref.i64($p160);
  // WARNING: %170 = ptrtoint %struct.hsu_dma_chan* %169 to i64, !dbg !4882, !verifier.code !4410
  call {:cexpr "__cil_tmp142"} boogie_si_record_i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5739, 35} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i64($i161, 16);
  // WARNING: %171 = add i64 %170, 16, !dbg !4885, !verifier.code !4410
  call {:cexpr "__cil_tmp143"} boogie_si_record_i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5740, 24} true;
  assume {:verifier.code 0} true;
  $p163 := $i2p.i64.ref($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5740, 22} true;
  assume {:verifier.code 0} true;
  $p164 := $load.ref($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5741, 35} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p164, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5743, 7} true;
  assume {:verifier.code 0} true;
  call writel(1, $p165);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5752, 31} true;
  assume {:verifier.code 0} true;
  $i166 := $sub.i64(4096, 1);
  // WARNING: %178 = sub i64 4096, 1, !dbg !4901, !verifier.code !4410
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5753, 18} true;
  assume {:verifier.code 0} true;
  $i167 := $p2i.ref.i64($p7);
  // WARNING: %179 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4905, !verifier.code !4410
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5754, 31} true;
  assume {:verifier.code 0} true;
  $i168 := $add.i64($i167, 12);
  // WARNING: %180 = add i64 %179, 12, !dbg !4908, !verifier.code !4410
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5755, 20} true;
  assume {:verifier.code 0} true;
  $p169 := $i2p.i64.ref($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5755, 18} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p169);
  // WARNING: %182 = load i32, i32* %181, align 4, !dbg !4912, !verifier.code !4410
  call {:cexpr "__cil_tmp151"} boogie_si_record_i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5756, 18} true;
  assume {:verifier.code 0} true;
  $i171 := $p2i.ref.i64($p7);
  // WARNING: %183 = ptrtoint %struct.circ_buf* %8 to i64, !dbg !4915, !verifier.code !4410
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5757, 31} true;
  assume {:verifier.code 0} true;
  $i172 := $add.i64($i171, 8);
  // WARNING: %184 = add i64 %183, 8, !dbg !4918, !verifier.code !4410
  call {:cexpr "__cil_tmp153"} boogie_si_record_i64($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5758, 20} true;
  assume {:verifier.code 0} true;
  $p173 := $i2p.i64.ref($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5758, 18} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  // WARNING: %186 = load i32, i32* %185, align 4, !dbg !4922, !verifier.code !4410
  call {:cexpr "__cil_tmp154"} boogie_si_record_i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5759, 31} true;
  assume {:verifier.code 0} true;
  $i175 := $sub.i32($i174, $i170);
  // WARNING: %187 = sub nsw i32 %186, %182, !dbg !4925, !verifier.code !4410
  call {:cexpr "__cil_tmp155"} boogie_si_record_i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5760, 18} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i32.i64($i175);
  // WARNING: %188 = sext i32 %187 to i64, !dbg !4928, !verifier.code !4410
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5761, 31} true;
  assume {:verifier.code 0} true;
  $i177 := $and.i64($i176, $i166);
  // WARNING: %189 = and i64 %188, %178, !dbg !4931, !verifier.code !4410
  call {:cexpr "__cil_tmp157"} boogie_si_record_i64($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5762, 20} true;
  assume {:verifier.code 0} true;
  $i178 := $ult.i64($i177, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i178} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i178 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5764, 20} true;
  assume {:verifier.code 0} true;
  $p179 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5765, 5} true;
  assume {:verifier.code 0} true;
  call uart_write_wakeup($p179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5767, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i178 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5771, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const dma_sync_single_for_device: ref;
axiom (dma_sync_single_for_device == $sub.ref(0, 157702));
procedure  dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i1;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !10752, metadata !4406), !dbg !10753, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !10754, metadata !4406), !dbg !10755, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !10756, metadata !4406), !dbg !10757, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4254, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4258, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4258, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4262, 15} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !4428, !verifier.code !4408
  call {:cexpr "tmp___8"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4264, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4264, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4266, 5} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := 1;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4270, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  // WARNING: %13 = sext i32 %.0 to i64, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4271, 16} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !4444, !verifier.code !4408
  call {:cexpr "tmp___10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4273, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4273, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4275, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4275, 17} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  call devirtbounce.9(0, .str, 115, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4285, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4285, 19} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4285, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4290, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4297, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4302, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p4);
  // WARNING: %26 = ptrtoint %struct.dma_map_ops* %5 to i64, !dbg !4466, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4303, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 64);
  // WARNING: %27 = add i64 %26, 64, !dbg !4470, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4304, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4304, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4304, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.ref($p14, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4304, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4306, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p4);
  // WARNING: %32 = ptrtoint %struct.dma_map_ops* %5 to i64, !dbg !4477, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4307, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 64);
  // WARNING: %33 = add i64 %32, 64, !dbg !4482, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4308, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4308, 19} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call devirtbounce.10($p19, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4312, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4318, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_device($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4320, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 158734));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p14: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3989, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.ref($p0, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3989, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $xor.i1($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3989, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  // WARNING: %4 = zext i1 %3 to i32, !dbg !4411, !verifier.code !4410
  call {:cexpr "__cil_tmp3"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3990, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3990, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $xor.i1($i4, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3990, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  // WARNING: %7 = zext i1 %6 to i32, !dbg !4416, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3991, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3991, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $xor.i1($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3991, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %10 = zext i1 %9 to i32, !dbg !4419, !verifier.code !4410
  call {:cexpr "__cil_tmp5"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3992, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  // WARNING: %11 = sext i32 %10 to i64, !dbg !4422, !verifier.code !4410
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3993, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !4425, !verifier.code !4410
  call {:cexpr "tmp___7"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3995, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3995, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3996, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3996, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4000, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p0);
  // WARNING: %17 = ptrtoint %struct.device* %0 to i64, !dbg !4436, !verifier.code !4410
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4001, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 640);
  // WARNING: %18 = add i64 %17, 640, !dbg !4441, !verifier.code !4410
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4002, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4002, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4003, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.ref($p18, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4003, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4016, 1} true;
  assume {:verifier.code 0} true;
  $r := $p14;
  $exn := false;
  return;
$bb4:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4008, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p0);
  // WARNING: %25 = ptrtoint %struct.device* %0 to i64, !dbg !4456, !verifier.code !4410
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4009, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 640);
  // WARNING: %26 = add i64 %25, 640, !dbg !4461, !verifier.code !4410
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4010, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4010, 15} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4010, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $p24;
  goto $bb3;
$bb5:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4004, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4004, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $p20;
  goto $bb3;
}
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 159766));
procedure  valid_dma_direction($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i3: i1;
  var $i5: i1;
  var $i6: i32;
  var $i4: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3942, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3942, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3944, 3} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3945, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3945, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3953, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3947, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb6;
$bb5:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3948, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3948, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb7, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i2 := $i4;
  goto $bb3;
$bb7:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3950, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb9;
$bb8:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb6;
}
const debug_dma_sync_single_for_device: ref;
axiom (debug_dma_sync_single_for_device == $sub.ref(0, 160798));
procedure  debug_dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const __const_udelay: ref;
axiom (__const_udelay == $sub.ref(0, 161830));
procedure  __const_udelay($i0: i64);
const dma_sync_single_for_cpu: ref;
axiom (dma_sync_single_for_cpu == $sub.ref(0, 162862));
procedure  dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i1;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !10925, metadata !4406), !dbg !10926, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !10927, metadata !4406), !dbg !10928, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !10929, metadata !4406), !dbg !10930, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4165, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4169, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4169, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4173, 15} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !4428, !verifier.code !4408
  call {:cexpr "tmp___8"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4175, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4175, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4177, 5} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := 1;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4181, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  // WARNING: %13 = sext i32 %.0 to i64, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4182, 16} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !4444, !verifier.code !4408
  call {:cexpr "tmp___10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4184, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4184, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4186, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4186, 17} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  call devirtbounce.9(0, .str, 103, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4196, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4196, 19} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4196, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4201, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4205, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4208, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4213, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p4);
  // WARNING: %26 = ptrtoint %struct.dma_map_ops* %5 to i64, !dbg !4466, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4214, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 56);
  // WARNING: %27 = add i64 %26, 56, !dbg !4470, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4215, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4215, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4215, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.ref($p14, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4215, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4217, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p4);
  // WARNING: %32 = ptrtoint %struct.dma_map_ops* %5 to i64, !dbg !4477, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4218, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 56);
  // WARNING: %33 = add i64 %32, 56, !dbg !4482, !verifier.code !4408
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4219, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4219, 19} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call devirtbounce.10($p19, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4223, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4229, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_cpu($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4231, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tty_insert_flip_string: ref;
axiom (tty_insert_flip_string == $sub.ref(0, 163894));
procedure  tty_insert_flip_string($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11018, metadata !4406), !dbg !11019, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3854, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := tty_insert_flip_string_fixed_flag($p0, $p1, 0, $i2);
  // WARNING: %4 = call i32 @tty_insert_flip_string_fixed_flag(%struct.tty_struct* %0, i8* %1, i8 signext 0, i64 %2), !dbg !4415, !verifier.code !4410
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3856, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const tty_insert_flip_string_fixed_flag: ref;
axiom (tty_insert_flip_string_fixed_flag == $sub.ref(0, 164926));
procedure  tty_insert_flip_string_fixed_flag($p0: ref, $p1: ref, $i2: i8, $i3: i64)
  returns ($r: i32);
const debug_dma_sync_single_for_cpu: ref;
axiom (debug_dma_sync_single_for_cpu == $sub.ref(0, 165958));
procedure  debug_dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const serial_hsu_runtime_suspend: ref;
axiom (serial_hsu_runtime_suspend == $sub.ref(0, 166990));
procedure  serial_hsu_runtime_suspend($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8925, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial_hsu_runtime_resume: ref;
axiom (serial_hsu_runtime_resume == $sub.ref(0, 168022));
procedure  serial_hsu_runtime_resume($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8932, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial_hsu_runtime_idle: ref;
axiom (serial_hsu_runtime_idle == $sub.ref(0, 169054));
procedure  serial_hsu_runtime_idle($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8911, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := pm_schedule_suspend($p0, 500);
  // WARNING: %2 = call i32 @pm_schedule_suspend(%struct.device* %0, i32 500), !dbg !4409, !verifier.code !4408
  call {:cexpr "err"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8913, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8913, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8914, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, 16);
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8920, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 8918, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
}
const pm_schedule_suspend: ref;
axiom (pm_schedule_suspend == $sub.ref(0, 170086));
procedure  pm_schedule_suspend($p0: ref, $i1: i32)
  returns ($r: i32);
const uart_get_baud_rate: ref;
axiom (uart_get_baud_rate == $sub.ref(0, 171118));
procedure  uart_get_baud_rate($p0: ref, $p1: ref, $p2: ref, $i3: i32, $i4: i32)
  returns ($r: i32);
const uart_get_divisor: ref;
axiom (uart_get_divisor == $sub.ref(0, 172150));
procedure  uart_get_divisor($p0: ref, $i1: i32)
  returns ($r: i32);
const uart_update_timeout: ref;
axiom (uart_update_timeout == $sub.ref(0, 173182));
procedure  uart_update_timeout($p0: ref, $i1: i32, $i2: i32);
const pm_runtime_put: ref;
axiom (pm_runtime_put == $sub.ref(0, 174214));
procedure  pm_runtime_put($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4430, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := __pm_runtime_idle($p0, 5);
  // WARNING: %2 = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5), !dbg !4409, !verifier.code !4408
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4432, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __pm_runtime_idle: ref;
axiom (__pm_runtime_idle == $sub.ref(0, 175246));
procedure  __pm_runtime_idle($p0: ref, $i1: i32)
  returns ($r: i32);
const pm_runtime_get_sync: ref;
axiom (pm_runtime_get_sync == $sub.ref(0, 176278));
procedure  pm_runtime_get_sync($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4419, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := __pm_runtime_resume($p0, 4);
  // WARNING: %2 = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4), !dbg !4409, !verifier.code !4408
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4421, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 177310));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: i64, $i3: i32, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11076, metadata !4406), !dbg !11077, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11078, metadata !4406), !dbg !11079, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4061, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4063, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  // WARNING: %7 = trunc i64 %2 to i32, !dbg !4426, !verifier.code !4410
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4064, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4067, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4067, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4071, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  // WARNING: %10 = call i32 @valid_dma_direction(i32 %3), !dbg !4436, !verifier.code !4410
  call {:cexpr "tmp___8"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4073, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4073, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4075, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb5;
$bb4:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4079, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  // WARNING: %15 = sext i32 %.0 to i64, !dbg !4448, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4080, 16} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !4452, !verifier.code !4410
  call {:cexpr "tmp___10"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4082, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4082, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4084, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4084, 17} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  call devirtbounce.9(0, .str, 19, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4094, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4094, 19} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4094, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4099, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4103, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4106, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4111, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  // WARNING: %28 = ptrtoint i8* %1 to i64, !dbg !4474, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4112, 14} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  // WARNING: %29 = call i64 @__phys_addr(i64 %28), !dbg !4478, !verifier.code !4410
  call {:cexpr "tmp___11"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4113, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p5);
  // WARNING: %30 = ptrtoint %struct.dma_map_ops* %6 to i64, !dbg !4481, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4114, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 24);
  // WARNING: %31 = add i64 %30, 24, !dbg !4484, !verifier.code !4410
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4115, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4115, 17} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4117, 26} true;
  assume {:verifier.code 0} true;
  $i19 := $lshr.i64($i14, 12);
  // WARNING: %34 = lshr i64 %29, 12, !dbg !4491, !verifier.code !4410
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4119, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i19, 64));
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %35, i64 0, metadata !11162, metadata !4406), !dbg !11163, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4121, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i64(4096, 1);
  // WARNING: %36 = sub i64 4096, 1, !dbg !4501, !verifier.code !4410
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4122, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $xor.i64($i21, $sub.i64(0, 1));
  // WARNING: %37 = xor i64 %36, -1, !dbg !4504, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4123, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $xor.i64($i22, $sub.i64(0, 1));
  // WARNING: %38 = xor i64 %37, -1, !dbg !4507, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4124, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p1);
  // WARNING: %39 = ptrtoint i8* %1 to i64, !dbg !4510, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4125, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i64($i24, $i23);
  // WARNING: %40 = and i64 %39, %38, !dbg !4513, !verifier.code !4410
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i25);
  call $i26 := devirtbounce.11($p18, $p0, $p20, $i25, $i2, $i3, $p4);
  // WARNING: %41 = call i64 @devirtbounce.11(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_238*)* %33, %struct.device* %0, %struct.page* %35, i64 %40, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_238* %4)
  call {:cexpr "addr"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4127, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p1);
  // WARNING: %42 = ptrtoint i8* %1 to i64, !dbg !4518, !verifier.code !4410
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4128, 14} true;
  assume {:verifier.code 0} true;
  call $i28 := __phys_addr($i27);
  // WARNING: %43 = call i64 @__phys_addr(i64 %42), !dbg !4521, !verifier.code !4410
  call {:cexpr "tmp___12"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4129, 26} true;
  assume {:verifier.code 0} true;
  $i29 := $lshr.i64($i28, 12);
  // WARNING: %44 = lshr i64 %43, 12, !dbg !4524, !verifier.code !4410
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4131, 29} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i29, 64));
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %45, i64 0, metadata !11195, metadata !4406), !dbg !11196, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4133, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i64(4096, 1);
  // WARNING: %46 = sub i64 4096, 1, !dbg !4534, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4134, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $xor.i64($i31, $sub.i64(0, 1));
  // WARNING: %47 = xor i64 %46, -1, !dbg !4537, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4135, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $xor.i64($i32, $sub.i64(0, 1));
  // WARNING: %48 = xor i64 %47, -1, !dbg !4540, !verifier.code !4410
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4136, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p1);
  // WARNING: %49 = ptrtoint i8* %1 to i64, !dbg !4543, !verifier.code !4410
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4137, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i64($i34, $i33);
  // WARNING: %50 = and i64 %49, %48, !dbg !4546, !verifier.code !4410
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i35);
  // WARNING: call void @llvm.dbg.value(metadata i64 %50, i64 0, metadata !11212, metadata !4406), !dbg !11213, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !11214, metadata !4406), !dbg !11215, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4140, 78} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4140, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p30, $i35, $i2, $i3, $i26, $i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 4142, 3} true;
  assume {:verifier.code 0} true;
  $r := $i26;
  $exn := false;
  return;
}
const hsu_dma_start_rx_chan: ref;
axiom (hsu_dma_start_rx_chan == $sub.ref(0, 178342));
procedure  hsu_dma_start_rx_chan($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5824, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  // WARNING: %3 = ptrtoint %struct.hsu_dma_buffer* %1 to i64, !dbg !4413, !verifier.code !4410
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5825, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 20);
  // WARNING: %4 = add i64 %3, 20, !dbg !4418, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5826, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5826, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5827, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4423, !verifier.code !4410
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5828, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 16);
  // WARNING: %7 = add i64 %6, 16, !dbg !4426, !verifier.code !4410
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5829, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5829, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5830, 27} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5832, 3} true;
  assume {:verifier.code 0} true;
  call writel(32, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5833, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p0);
  // WARNING: %11 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4439, !verifier.code !4410
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5834, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 16);
  // WARNING: %12 = add i64 %11, 16, !dbg !4442, !verifier.code !4410
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5835, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5835, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5836, 29} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5838, 3} true;
  assume {:verifier.code 0} true;
  call writel(4, $p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5839, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p1);
  // WARNING: %16 = ptrtoint %struct.hsu_dma_buffer* %1 to i64, !dbg !4455, !verifier.code !4410
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5840, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 8);
  // WARNING: %17 = add i64 %16, 8, !dbg !4458, !verifier.code !4410
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5841, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5841, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  // WARNING: %19 = load i64, i64* %18, align 8, !dbg !4462, !verifier.code !4410
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5842, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i64.i32($i18);
  // WARNING: %20 = trunc i64 %19 to i32, !dbg !4465, !verifier.code !4410
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5843, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p0);
  // WARNING: %21 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4468, !verifier.code !4410
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5844, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 16);
  // WARNING: %22 = add i64 %21, 16, !dbg !4471, !verifier.code !4410
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5845, 19} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5845, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5846, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5848, 3} true;
  assume {:verifier.code 0} true;
  call writel($i19, $p24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5849, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p1);
  // WARNING: %26 = ptrtoint %struct.hsu_dma_buffer* %1 to i64, !dbg !4484, !verifier.code !4410
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5850, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 16);
  // WARNING: %27 = add i64 %26, 16, !dbg !4487, !verifier.code !4410
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5851, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5851, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  // WARNING: %29 = load i32, i32* %28, align 4, !dbg !4491, !verifier.code !4410
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5852, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4494, !verifier.code !4410
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5853, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 16);
  // WARNING: %31 = add i64 %30, 16, !dbg !4497, !verifier.code !4410
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5854, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5854, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5855, 29} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5857, 3} true;
  assume {:verifier.code 0} true;
  call writel($i28, $p33);
  // WARNING: call void @writel(i32 %29, i8* %34), !dbg !4509, !verifier.code !4410
  // WARNING: call void @llvm.dbg.value(metadata i32 16777216, i64 0, metadata !11325, metadata !4406), !dbg !11326, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 65536, i64 0, metadata !11327, metadata !4406), !dbg !11328, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5861, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $or.i32(1, 256);
  // WARNING: %35 = or i32 1, 256, !dbg !4516, !verifier.code !4410
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5862, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $or.i32($i34, 65536);
  // WARNING: %36 = or i32 %35, 65536, !dbg !4519, !verifier.code !4410
  call {:cexpr "__cil_tmp36"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5863, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $or.i32($i35, 16777216);
  // WARNING: %37 = or i32 %36, 16777216, !dbg !4522, !verifier.code !4410
  call {:cexpr "__cil_tmp37"} boogie_si_record_i32($i36);
  // WARNING: call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !11338, metadata !4406), !dbg !11339, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5865, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p0);
  // WARNING: %38 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4527, !verifier.code !4410
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5866, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 16);
  // WARNING: %39 = add i64 %38, 16, !dbg !4530, !verifier.code !4410
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5867, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5867, 17} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5868, 29} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5870, 3} true;
  assume {:verifier.code 0} true;
  call writel($i36, $p41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5871, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p0);
  // WARNING: %43 = ptrtoint %struct.hsu_dma_chan* %0 to i64, !dbg !4543, !verifier.code !4410
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5872, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 16);
  // WARNING: %44 = add i64 %43, 16, !dbg !4546, !verifier.code !4410
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5873, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5873, 17} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5874, 29} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5876, 3} true;
  assume {:verifier.code 0} true;
  call writel(3, $p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5878, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 179374));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !11378, metadata !4406), !dbg !11379, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 3961, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 180406));
procedure  __phys_addr($i0: i64)
  returns ($r: i64);
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 181438));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i64, $i6: i1);
const __pm_runtime_resume: ref;
axiom (__pm_runtime_resume == $sub.ref(0, 182470));
procedure  __pm_runtime_resume($p0: ref, $i1: i32)
  returns ($r: i32);
const hsu_pci_init: ref;
axiom (hsu_pci_init == $sub.ref(0, 183502));
procedure  hsu_pci_init()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9639, 3} true;
  assume {:verifier.code 0} true;
  call hsu_global_init();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9640, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := uart_register_driver(serial_hsu_reg);
  // WARNING: %1 = call i32 @uart_register_driver(%struct.uart_driver* @serial_hsu_reg), !dbg !4409, !verifier.code !4408
  call {:cexpr "ret"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9642, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9642, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9643, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $i0;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9652, 1} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9648, 19} true;
  assume {:verifier.code 0} true;
  call $i3 := __pci_register_driver(hsu_pci_driver, __this_module, .str.1);
  // WARNING: %6 = call i32 @__pci_register_driver(%struct.pci_driver* @hsu_pci_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0)), !dbg !4418, !verifier.code !4408
  call {:cexpr "tmp___7"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9650, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
}
const hsu_global_init: ref;
axiom (hsu_global_init == $sub.ref(0, 184534));
procedure  hsu_global_init()
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i1;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i1;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i1;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $i49: i32;
  var $i50: i64;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $i93: i32;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i64;
  var $i103: i32;
  var $i104: i32;
  var $i105: i64;
  var $i106: i64;
  var $i107: i64;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $p111: ref;
  var $i112: i64;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $i121: i32;
  var $i122: i1;
  var $i123: i64;
  var $i124: i64;
  var $p125: ref;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $i131: i64;
  var $i132: i64;
  var $i133: i64;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i1;
  var $p138: ref;
  var $i139: i32;
  var $i140: i1;
  var $i141: i64;
  var $i142: i64;
  var $p143: ref;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i64;
  var $i148: i64;
  var $i149: i32;
  var $i150: i64;
  var $i151: i64;
  var $i152: i64;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $p156: ref;
  var $i157: i64;
  var $i158: i64;
  var $i159: i32;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i32;
  var $i169: i32;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $i173: i64;
  var $i174: i64;
  var $i175: i64;
  var $p176: ref;
  var $i177: i64;
  var $p178: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9313, 13} true;
  assume {:verifier.code 0} true;
  call $p0 := kzalloc(1384, 208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9314, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9316, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.ref($p1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9316, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9317, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9547, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9322, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p1);
  // WARNING: %7 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4420, !verifier.code !4408
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9323, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($i3, 8);
  // WARNING: %8 = add i64 %7, 8, !dbg !4424, !verifier.code !4408
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9324, 5} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9324, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, 4288839680);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9325, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p1);
  // WARNING: %10 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4429, !verifier.code !4408
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9326, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 16);
  // WARNING: %11 = add i64 %10, 16, !dbg !4432, !verifier.code !4408
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9327, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9327, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p8, 4096);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9328, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  // WARNING: %13 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4437, !verifier.code !4408
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9329, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 8);
  // WARNING: %14 = add i64 %13, 8, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9330, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9330, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.0, $p11);
  // WARNING: %16 = load i64, i64* %15, align 8, !dbg !4444, !verifier.code !4408
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i12);
  // WARNING: call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !11441, metadata !4406), !dbg !11442, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9332, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  // WARNING: %17 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4449, !verifier.code !4408
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9333, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 16);
  // WARNING: %18 = add i64 %17, 16, !dbg !4452, !verifier.code !4408
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9334, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9334, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  // WARNING: %20 = load i64, i64* %19, align 8, !dbg !4456, !verifier.code !4408
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i16);
  // WARNING: call void @llvm.dbg.value(metadata i64 %20, i64 0, metadata !11453, metadata !4406), !dbg !11454, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9336, 13} true;
  assume {:verifier.code 0} true;
  call $p17 := __request_region(iomem_resource, $i12, $i16, .str.2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9339, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.ref($p17, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9339, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9341, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9343, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref(.str.3);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9347, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p1);
  // WARNING: %27 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4472, !verifier.code !4408
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9348, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 8);
  // WARNING: %28 = add i64 %27, 8, !dbg !4476, !verifier.code !4408
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9349, 19} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9349, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  // WARNING: %30 = load i64, i64* %29, align 8, !dbg !4480, !verifier.code !4408
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i23);
  // WARNING: call void @llvm.dbg.value(metadata i64 %30, i64 0, metadata !11477, metadata !4406), !dbg !11478, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9351, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p1);
  // WARNING: %31 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4485, !verifier.code !4408
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9352, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 16);
  // WARNING: %32 = add i64 %31, 16, !dbg !4488, !verifier.code !4408
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9353, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9353, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  // WARNING: %34 = load i64, i64* %33, align 8, !dbg !4492, !verifier.code !4408
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9354, 21} true;
  assume {:verifier.code 0} true;
  call $p28 := ioremap_nocache($i23, $i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9354, 3} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9354, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $p28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9357, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9357, 17} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9358, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.ref($p31, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i32 == 1);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9360, 5} true;
  assume {:verifier.code 0} true;
  call $i33 := printk.ref(.str.4);
  // WARNING: %41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0)), !dbg !4505, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9363, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9533, 18} true;
  assume {:verifier.code 0} true;
  $i170 := $p2i.ref.i64($p1);
  // WARNING: %193 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4897, !verifier.code !4408
  call {:cexpr "__cil_tmp124"} boogie_si_record_i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9534, 31} true;
  assume {:verifier.code 0} true;
  $i171 := $add.i64($i170, 8);
  // WARNING: %194 = add i64 %193, 8, !dbg !4901, !verifier.code !4408
  call {:cexpr "__cil_tmp125"} boogie_si_record_i64($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9535, 20} true;
  assume {:verifier.code 0} true;
  $p172 := $i2p.i64.ref($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9535, 18} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i64($M.0, $p172);
  // WARNING: %196 = load i64, i64* %195, align 8, !dbg !4905, !verifier.code !4408
  call {:cexpr "__cil_tmp126"} boogie_si_record_i64($i173);
  // WARNING: call void @llvm.dbg.value(metadata i64 %196, i64 0, metadata !11902, metadata !4406), !dbg !11903, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9537, 18} true;
  assume {:verifier.code 0} true;
  $i174 := $p2i.ref.i64($p1);
  // WARNING: %197 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4910, !verifier.code !4408
  call {:cexpr "__cil_tmp128"} boogie_si_record_i64($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9538, 31} true;
  assume {:verifier.code 0} true;
  $i175 := $add.i64($i174, 16);
  // WARNING: %198 = add i64 %197, 16, !dbg !4913, !verifier.code !4408
  call {:cexpr "__cil_tmp129"} boogie_si_record_i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9539, 20} true;
  assume {:verifier.code 0} true;
  $p176 := $i2p.i64.ref($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9539, 18} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i64($M.0, $p176);
  // WARNING: %200 = load i64, i64* %199, align 8, !dbg !4917, !verifier.code !4408
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i177);
  // WARNING: call void @llvm.dbg.value(metadata i64 %200, i64 0, metadata !11914, metadata !4406), !dbg !11915, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9541, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(iomem_resource, $i173, $i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9542, 18} true;
  assume {:verifier.code 0} true;
  $p178 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9543, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p178);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9545, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9369, 20} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64(32, 0);
  // WARNING: %44 = add i64 32, 0, !dbg !4513, !verifier.code !4408
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9370, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p1);
  // WARNING: %45 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4516, !verifier.code !4408
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9371, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, $i34);
  // WARNING: %46 = add i64 %45, %44, !dbg !4519, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9372, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_hsu_port* %47, i64 0, metadata !11519, metadata !4406), !dbg !11520, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9375, 3} true;
  assume {:verifier.code 0} true;
  $p38, $i39 := $p37, 0;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9375, 13} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9377, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i39, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9377, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9379, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9380, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9384, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p38);
  // WARNING: %54 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4541, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9385, 31} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 204);
  // WARNING: %55 = add i64 %54, 204, !dbg !4545, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9386, 7} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9386, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 95);
  // WARNING: store i32 95, i32* %56, align 4, !dbg !4549, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9388, 19} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p38);
  // WARNING: %57 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4552, !verifier.code !4408
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9389, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 106);
  // WARNING: %58 = add i64 %57, 106, !dbg !4555, !verifier.code !4408
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9390, 7} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9390, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, 2);
  // WARNING: store i8 2, i8* %59, align 1, !dbg !4559, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9392, 19} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p38);
  // WARNING: %60 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4562, !verifier.code !4408
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9393, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 224);
  // WARNING: %61 = add i64 %60, 224, !dbg !4565, !verifier.code !4408
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9394, 21} true;
  assume {:verifier.code 0} true;
  $i49 := $mul.i32($i39, 128);
  // WARNING: %62 = mul nsw i32 %.0, 128, !dbg !4568, !verifier.code !4408
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9395, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  // WARNING: %63 = sext i32 %62 to i64, !dbg !4571, !verifier.code !4408
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9396, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p1);
  // WARNING: %64 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4574, !verifier.code !4408
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9397, 31} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 8);
  // WARNING: %65 = add i64 %64, 8, !dbg !4577, !verifier.code !4408
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9398, 21} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9398, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i64($M.0, $p53);
  // WARNING: %67 = load i64, i64* %66, align 8, !dbg !4581, !verifier.code !4408
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i54);
  // WARNING: call void @llvm.dbg.value(metadata i64 %67, i64 0, metadata !11578, metadata !4406), !dbg !11579, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9400, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 128);
  // WARNING: %68 = add i64 %67, 128, !dbg !4586, !verifier.code !4408
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9401, 53} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, $i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9401, 7} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9401, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p57, $i56);
  // WARNING: store i64 %69, i64* %70, align 8, !dbg !4591, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9403, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p38);
  // WARNING: %71 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4594, !verifier.code !4408
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9404, 31} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64($i58, 32);
  // WARNING: %72 = add i64 %71, 32, !dbg !4597, !verifier.code !4408
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9405, 21} true;
  assume {:verifier.code 0} true;
  $i60 := $mul.i32($i39, 128);
  // WARNING: %73 = mul nsw i32 %.0, 128, !dbg !4600, !verifier.code !4408
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9406, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9406, 19} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9407, 31} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9408, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i60);
  $i65 := $add.i64(128, $i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9408, 31} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p62, $mul.ref($i65, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9409, 7} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9409, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p67, $p66);
  // WARNING: store i8* %78, i8** %79, align 8, !dbg !4613, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9411, 23} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64(264, 0);
  // WARNING: %80 = add i64 264, 0, !dbg !4616, !verifier.code !4408
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9412, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p38);
  // WARNING: %81 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4619, !verifier.code !4408
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9413, 31} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, $i68);
  // WARNING: %82 = add i64 %81, %80, !dbg !4622, !verifier.code !4408
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9414, 19} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9415, 5} true;
  assume {:verifier.code 0} true;
  call $i72 := sprintf.ref.ref.i32($p71, .str.5, $i39);
  // WARNING: %84 = call i32 (i8*, i8*, ...) @sprintf(i8* %83, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i32 %.0), !dbg !4628, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9417, 19} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p38);
  // WARNING: %85 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4631, !verifier.code !4408
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9418, 31} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 100);
  // WARNING: %86 = add i64 %85, 100, !dbg !4634, !verifier.code !4408
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9419, 7} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9419, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, 64);
  // WARNING: store i32 64, i32* %87, align 4, !dbg !4638, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9421, 19} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p38);
  // WARNING: %88 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4641, !verifier.code !4408
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9422, 31} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 208);
  // WARNING: %89 = add i64 %88, 208, !dbg !4644, !verifier.code !4408
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9423, 7} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9423, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, serial_hsu_pops);
  // WARNING: store %struct.uart_ops* @serial_hsu_pops, %struct.uart_ops** %90, align 8, !dbg !4648, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9425, 19} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p38);
  // WARNING: %91 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4651, !verifier.code !4408
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9426, 31} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 220);
  // WARNING: %92 = add i64 %91, 220, !dbg !4654, !verifier.code !4408
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9427, 7} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9427, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i39);
  // WARNING: store i32 %.0, i32* %93, align 4, !dbg !4658, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9429, 19} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p38);
  // WARNING: %94 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4661, !verifier.code !4408
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9430, 31} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 192);
  // WARNING: %95 = add i64 %94, 192, !dbg !4664, !verifier.code !4408
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i83);
  // WARNING: call void @llvm.dbg.value(metadata i64 %95, i64 0, metadata !11661, metadata !4406), !dbg !11662, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9432, 7} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9432, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $sub.i32(0, 2147483648));
  // WARNING: store i32 -2147483648, i32* %96, align 4, !dbg !4670, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9434, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $p2i.ref.i64($p38);
  // WARNING: %97 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4673, !verifier.code !4408
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9435, 31} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i64($i85, 96);
  // WARNING: %98 = add i64 %97, 96, !dbg !4676, !verifier.code !4408
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9436, 7} true;
  assume {:verifier.code 0} true;
  $p87 := $i2p.i64.ref($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9436, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 44236800);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9437, 19} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p38);
  // WARNING: %100 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4681, !verifier.code !4408
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9438, 31} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64($i88, 356);
  // WARNING: %101 = add i64 %100, 356, !dbg !4684, !verifier.code !4408
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9439, 7} true;
  assume {:verifier.code 0} true;
  $p90 := $i2p.i64.ref($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9439, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p90, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9440, 19} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.i64($p38);
  // WARNING: %103 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4689, !verifier.code !4408
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9441, 31} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i91, 288);
  // WARNING: %104 = add i64 %103, 288, !dbg !4692, !verifier.code !4408
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9442, 21} true;
  assume {:verifier.code 0} true;
  $i93 := $mul.i32($i39, 2);
  // WARNING: %105 = mul nsw i32 %.0, 2, !dbg !4695, !verifier.code !4408
  call {:cexpr "__cil_tmp80"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9443, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9443, 31} true;
  assume {:verifier.code 0} true;
  $i95 := $mul.i64($i94, 24);
  // WARNING: %107 = mul i64 %106, 24, !dbg !4699, !verifier.code !4408
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9444, 24} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64(1136, $i95);
  // WARNING: %108 = add i64 1136, %107, !dbg !4702, !verifier.code !4408
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9445, 19} true;
  assume {:verifier.code 0} true;
  $i97 := $p2i.ref.i64($p1);
  // WARNING: %109 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4705, !verifier.code !4408
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9446, 31} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i97, $i96);
  // WARNING: %110 = add i64 %109, %108, !dbg !4708, !verifier.code !4408
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9447, 46} true;
  assume {:verifier.code 0} true;
  $p99 := $i2p.i64.ref($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9447, 7} true;
  assume {:verifier.code 0} true;
  $p100 := $i2p.i64.ref($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9447, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p100, $p99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9448, 19} true;
  assume {:verifier.code 0} true;
  $i101 := $p2i.ref.i64($p38);
  // WARNING: %113 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4714, !verifier.code !4408
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9449, 31} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i101, 296);
  // WARNING: %114 = add i64 %113, 296, !dbg !4717, !verifier.code !4408
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9450, 21} true;
  assume {:verifier.code 0} true;
  $i103 := $mul.i32($i39, 2);
  // WARNING: %115 = mul nsw i32 %.0, 2, !dbg !4720, !verifier.code !4408
  call {:cexpr "__cil_tmp87"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9451, 31} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i32($i103, 1);
  // WARNING: %116 = add nsw i32 %115, 1, !dbg !4723, !verifier.code !4408
  call {:cexpr "__cil_tmp88"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9452, 19} true;
  assume {:verifier.code 0} true;
  $i105 := $sext.i32.i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9452, 31} true;
  assume {:verifier.code 0} true;
  $i106 := $mul.i64($i105, 24);
  // WARNING: %118 = mul i64 %117, 24, !dbg !4727, !verifier.code !4408
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9453, 24} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i64(1136, $i106);
  // WARNING: %119 = add i64 1136, %118, !dbg !4730, !verifier.code !4408
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9454, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i64($p1);
  // WARNING: %120 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4733, !verifier.code !4408
  call {:cexpr "__cil_tmp91"} boogie_si_record_i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9455, 31} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i108, $i107);
  // WARNING: %121 = add i64 %120, %119, !dbg !4736, !verifier.code !4408
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9456, 46} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9456, 7} true;
  assume {:verifier.code 0} true;
  $p111 := $i2p.i64.ref($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9456, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $p110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9457, 19} true;
  assume {:verifier.code 0} true;
  $i112 := $sext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9457, 21} true;
  assume {:verifier.code 0} true;
  $i113 := $mul.i64($i112, 8);
  // WARNING: %125 = mul i64 %124, 8, !dbg !4743, !verifier.code !4408
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9458, 54} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($p2i.ref.i64(serial_hsu_ports), $i113);
  // WARNING: %126 = add i64 ptrtoint ([3 x %struct.uart_hsu_port*]* @serial_hsu_ports to i64), %125, !dbg !4746, !verifier.code !4408
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9459, 7} true;
  assume {:verifier.code 0} true;
  $p115 := $i2p.i64.ref($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9459, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p115, $p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9460, 19} true;
  assume {:verifier.code 0} true;
  $i116 := $p2i.ref.i64($p38);
  // WARNING: %128 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4751, !verifier.code !4408
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9461, 31} true;
  assume {:verifier.code 0} true;
  $i117 := $add.i64($i116, 276);
  // WARNING: %129 = add i64 %128, 276, !dbg !4754, !verifier.code !4408
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9462, 7} true;
  assume {:verifier.code 0} true;
  $p118 := $i2p.i64.ref($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9462, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p118, $i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9465, 21} true;
  assume {:verifier.code 0} true;
  $i119 := $shl.i32(1, $i39);
  // WARNING: %131 = shl i32 1, %.0, !dbg !4759, !verifier.code !4408
  call {:cexpr "__cil_tmp97"} boogie_si_record_i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9467, 19} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, hsu_dma_enable);
  // WARNING: %132 = load i32, i32* @hsu_dma_enable, align 4, !dbg !4765, !verifier.code !4408
  call {:cexpr "__cil_tmp99"} boogie_si_record_i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9468, 21} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i32($i120, $i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9468, 21} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i32($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9468, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb18, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9484, 23} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i64(1136, 0);
  // WARNING: %147 = add i64 1136, 0, !dbg !4797, !verifier.code !4408
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9485, 18} true;
  assume {:verifier.code 0} true;
  $i132 := $p2i.ref.i64($p1);
  // WARNING: %148 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4800, !verifier.code !4408
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9486, 31} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i64($i132, $i131);
  // WARNING: %149 = add i64 %148, %147, !dbg !4803, !verifier.code !4408
  call {:cexpr "__cil_tmp107"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9487, 11} true;
  assume {:verifier.code 0} true;
  $p134 := $i2p.i64.ref($i133);
  // WARNING: call void @llvm.dbg.value(metadata %struct.hsu_dma_chan* %150, i64 0, metadata !11803, metadata !4406), !dbg !11804, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9490, 3} true;
  assume {:verifier.code 0} true;
  $p135, $i136 := $p134, 0;
  goto $bb21;
$bb18:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9469, 22} true;
  assume {:verifier.code 0} true;
  $i123 := $p2i.ref.i64($p38);
  // WARNING: %136 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4771, !verifier.code !4408
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9470, 35} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i64($i123, 352);
  // WARNING: %137 = add i64 %136, 352, !dbg !4775, !verifier.code !4408
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9471, 9} true;
  assume {:verifier.code 0} true;
  $p125 := $i2p.i64.ref($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9471, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p125, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9472, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i122 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9473, 22} true;
  assume {:verifier.code 0} true;
  $i126 := $p2i.ref.i64($p38);
  // WARNING: %140 = ptrtoint %struct.uart_hsu_port* %.01 to i64, !dbg !4781, !verifier.code !4408
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9474, 35} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i64($i126, 352);
  // WARNING: %141 = add i64 %140, 352, !dbg !4785, !verifier.code !4408
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9475, 9} true;
  assume {:verifier.code 0} true;
  $p128 := $i2p.i64.ref($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9475, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p128, 0);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9478, 19} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p38, 368);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9479, 11} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i32($i39, 1);
  // WARNING: %145 = add nsw i32 %.0, 1, !dbg !4791, !verifier.code !4408
  call {:cexpr "i"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9375, 3} true;
  assume {:verifier.code 0} true;
  $p38, $i39 := $p129, $i130;
  goto $bb12;
$bb21:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9490, 13} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9492, 11} true;
  assume {:verifier.code 0} true;
  $i137 := $slt.i32($i136, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9492, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9494, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i137 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9495, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9497, 5} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9497, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p138, $i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9498, 11} true;
  assume {:verifier.code 0} true;
  $i139 := $and.i32($i136, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9498, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i32($i139, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9498, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9527, 8} true;
  assume {:verifier.code 0} true;
  $M.1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9528, 3} true;
  assume {:verifier.code 0} true;
  call $i169 := hsu_debugfs_init($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9530, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb27:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9499, 22} true;
  assume {:verifier.code 0} true;
  $i141 := $p2i.ref.i64($p135);
  // WARNING: %161 = ptrtoint %struct.hsu_dma_chan* %.02 to i64, !dbg !4826, !verifier.code !4408
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9500, 35} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i64($i141, 4);
  // WARNING: %162 = add i64 %161, 4, !dbg !4830, !verifier.code !4408
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9501, 9} true;
  assume {:verifier.code 0} true;
  $p143 := $i2p.i64.ref($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9501, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p143, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9502, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i140 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9503, 22} true;
  assume {:verifier.code 0} true;
  $i144 := $p2i.ref.i64($p135);
  // WARNING: %165 = ptrtoint %struct.hsu_dma_chan* %.02 to i64, !dbg !4836, !verifier.code !4408
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9504, 35} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i64($i144, 4);
  // WARNING: %166 = add i64 %165, 4, !dbg !4840, !verifier.code !4408
  call {:cexpr "__cil_tmp111"} boogie_si_record_i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9505, 9} true;
  assume {:verifier.code 0} true;
  $p146 := $i2p.i64.ref($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9505, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p146, 1);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9507, 20} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.i64($p135);
  // WARNING: %169 = ptrtoint %struct.hsu_dma_chan* %.02 to i64, !dbg !4845, !verifier.code !4408
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9508, 33} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64($i147, 8);
  // WARNING: %170 = add i64 %169, 8, !dbg !4848, !verifier.code !4408
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9509, 22} true;
  assume {:verifier.code 0} true;
  $i149 := $sdiv.i32($i136, 2);
  // WARNING: %171 = sdiv i32 %.1, 2, !dbg !4851, !verifier.code !4408
  call {:cexpr "__cil_tmp114"} boogie_si_record_i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9510, 20} true;
  assume {:verifier.code 0} true;
  $i150 := $sext.i32.i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9510, 33} true;
  assume {:verifier.code 0} true;
  $i151 := $mul.i64($i150, 368);
  // WARNING: %173 = mul i64 %172, 368, !dbg !4855, !verifier.code !4408
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9511, 23} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i64(32, $i151);
  // WARNING: %174 = add i64 32, %173, !dbg !4858, !verifier.code !4408
  call {:cexpr "__cil_tmp116"} boogie_si_record_i64($i152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9512, 20} true;
  assume {:verifier.code 0} true;
  $i153 := $p2i.ref.i64($p1);
  // WARNING: %175 = ptrtoint %struct.hsu_port* %2 to i64, !dbg !4861, !verifier.code !4408
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9513, 33} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i64($i153, $i152);
  // WARNING: %176 = add i64 %175, %174, !dbg !4864, !verifier.code !4408
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9514, 48} true;
  assume {:verifier.code 0} true;
  $p155 := $i2p.i64.ref($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9514, 7} true;
  assume {:verifier.code 0} true;
  $p156 := $i2p.i64.ref($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9514, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p156, $p155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9515, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $p2i.ref.i64($p135);
  // WARNING: %179 = ptrtoint %struct.hsu_dma_chan* %.02 to i64, !dbg !4870, !verifier.code !4408
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9516, 33} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i64($i157, 16);
  // WARNING: %180 = add i64 %179, 16, !dbg !4873, !verifier.code !4408
  call {:cexpr "__cil_tmp120"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9517, 22} true;
  assume {:verifier.code 0} true;
  $i159 := $mul.i32($i136, 64);
  // WARNING: %181 = mul nsw i32 %.1, 64, !dbg !4876, !verifier.code !4408
  call {:cexpr "__cil_tmp121"} boogie_si_record_i32($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9518, 20} true;
  assume {:verifier.code 0} true;
  $p160 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9518, 20} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9519, 33} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p161, 1280);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9520, 45} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i159);
  $i164 := $add.i64(1280, $i163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9520, 45} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p161, $mul.ref($i164, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9520, 7} true;
  assume {:verifier.code 0} true;
  $p166 := $i2p.i64.ref($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9520, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p166, $p165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9521, 19} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p135, 24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9522, 11} true;
  assume {:verifier.code 0} true;
  $i168 := $add.i32($i136, 1);
  // WARNING: %189 = add nsw i32 %.1, 1, !dbg !4889, !verifier.code !4408
  call {:cexpr "i"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9490, 3} true;
  assume {:verifier.code 0} true;
  $p135, $i136 := $p167, $i168;
  goto $bb21;
}
const uart_register_driver: ref;
axiom (uart_register_driver == $sub.ref(0, 185566));
procedure  uart_register_driver($p0: ref)
  returns ($r: i32);
const __pci_register_driver: ref;
axiom (__pci_register_driver == $sub.ref(0, 186598));
procedure  __pci_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const __request_region: ref;
axiom (__request_region == $sub.ref(0, 187630));
procedure  __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32)
  returns ($r: ref);
const ioremap_nocache: ref;
axiom (ioremap_nocache == $sub.ref(0, 188662));
procedure  ioremap_nocache($i0: i64, $i1: i64)
  returns ($r: ref);
const sprintf: ref;
axiom (sprintf == $sub.ref(0, 189694));
procedure  sprintf.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const hsu_debugfs_init: ref;
axiom (hsu_debugfs_init == $sub.ref(0, 190726));
procedure  hsu_debugfs_init($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $i12: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5246, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4413, !verifier.code !4407
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5247, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 1376);
  // WARNING: %4 = add i64 %3, 1376, !dbg !4418, !verifier.code !4407
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5249, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5250, 37} true;
  assume {:verifier.code 0} true;
  call $p5 := debugfs_create_dir(.str.6, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5250, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5250, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5253, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  // WARNING: %8 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4429, !verifier.code !4407
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5254, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 1376);
  // WARNING: %9 = add i64 %8, 1376, !dbg !4433, !verifier.code !4407
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5255, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5255, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5256, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.ref($p10, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5256, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5257, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 12);
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5332, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5264, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5264, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5266, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i13, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5266, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5268, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5269, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5273, 35} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5273, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5273, 42} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 0);
  // WARNING: %24 = add i64 %23, 0, !dbg !4464, !verifier.code !4407
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5274, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5275, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := snprintf.ref.i64.ref.i32($p18, 32, .str.7, $i13);
  // WARNING: %26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %25, i64 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i32 %.01), !dbg !4470, !verifier.code !4407
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5277, 35} true;
  assume {:verifier.code 0} true;
  $p20 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5277, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5277, 42} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 0);
  // WARNING: %29 = add i64 %28, 0, !dbg !4475, !verifier.code !4407
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5278, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  // WARNING: call void @llvm.dbg.value(metadata i8* %30, i64 0, metadata !12000, metadata !4406), !dbg !12001, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5281, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p0);
  // WARNING: %31 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4485, !verifier.code !4407
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5282, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 1376);
  // WARNING: %32 = add i64 %31, 1376, !dbg !4488, !verifier.code !4407
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5283, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5283, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5284, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5284, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $mul.i64($i28, 368);
  // WARNING: %36 = mul i64 %35, 368, !dbg !4496, !verifier.code !4407
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5285, 22} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64(32, $i29);
  // WARNING: %37 = add i64 32, %36, !dbg !4499, !verifier.code !4407
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5286, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p0);
  // WARNING: %38 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4502, !verifier.code !4407
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5287, 31} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, $i30);
  // WARNING: %39 = add i64 %38, %37, !dbg !4505, !verifier.code !4407
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5288, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5289, 19} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5290, 5} true;
  assume {:verifier.code 0} true;
  call $p35 := debugfs_create_file($p23, $sub.i16(0, 32476), $p27, $p34, port_regs_ops);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5291, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i13, 1);
  // WARNING: %43 = add nsw i32 %.01, 1, !dbg !4515, !verifier.code !4407
  call {:cexpr "i"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5264, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i36;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5298, 3} true;
  assume {:verifier.code 0} true;
  $i37 := 0;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5298, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5300, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32($i37, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5300, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5302, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5303, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5307, 35} true;
  assume {:verifier.code 0} true;
  $p39 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5307, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5307, 42} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 0);
  // WARNING: %53 = add i64 %52, 0, !dbg !4536, !verifier.code !4407
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5308, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5309, 5} true;
  assume {:verifier.code 0} true;
  call $i43 := snprintf.ref.i64.ref.i32($p42, 32, .str.8, $i37);
  // WARNING: %55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i32 %.1), !dbg !4542, !verifier.code !4407
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5311, 35} true;
  assume {:verifier.code 0} true;
  $p44 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5311, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5311, 42} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, 0);
  // WARNING: %58 = add i64 %57, 0, !dbg !4547, !verifier.code !4407
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5312, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  // WARNING: call void @llvm.dbg.value(metadata i8* %59, i64 0, metadata !12072, metadata !4406), !dbg !12073, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5315, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p0);
  // WARNING: %60 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4557, !verifier.code !4407
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5316, 31} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, 1376);
  // WARNING: %61 = add i64 %60, 1376, !dbg !4560, !verifier.code !4407
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5317, 21} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5317, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5318, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5318, 21} true;
  assume {:verifier.code 0} true;
  $i53 := $mul.i64($i52, 24);
  // WARNING: %65 = mul i64 %64, 24, !dbg !4568, !verifier.code !4407
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5319, 24} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64(1136, $i53);
  // WARNING: %66 = add i64 1136, %65, !dbg !4571, !verifier.code !4407
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5320, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p0);
  // WARNING: %67 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4574, !verifier.code !4407
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5321, 31} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, $i54);
  // WARNING: %68 = add i64 %67, %66, !dbg !4577, !verifier.code !4407
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5322, 19} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5323, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5324, 5} true;
  assume {:verifier.code 0} true;
  call $p59 := debugfs_create_file($p47, $sub.i16(0, 32476), $p51, $p58, dma_regs_ops);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5325, 11} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i37, 1);
  // WARNING: %72 = add nsw i32 %.1, 1, !dbg !4587, !verifier.code !4407
  call {:cexpr "i"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5298, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i60;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5330, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
}
const __release_region: ref;
axiom (__release_region == $sub.ref(0, 191758));
procedure  __release_region($p0: ref, $i1: i64, $i2: i64);
const debugfs_create_dir: ref;
axiom (debugfs_create_dir == $sub.ref(0, 192790));
procedure  debugfs_create_dir($p0: ref, $p1: ref)
  returns ($r: ref);
const debugfs_create_file: ref;
axiom (debugfs_create_file == $sub.ref(0, 193822));
procedure  debugfs_create_file($p0: ref, $i1: i16, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: ref);
const hsu_pci_exit: ref;
axiom (hsu_pci_exit == $sub.ref(0, 194854));
procedure  hsu_pci_exit()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9659, 3} true;
  assume {:verifier.code 0} true;
  call pci_unregister_driver(hsu_pci_driver);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9660, 3} true;
  assume {:verifier.code 0} true;
  call uart_unregister_driver(serial_hsu_reg);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9661, 22} true;
  assume {:verifier.code 0} true;
  $p0 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9661, 3} true;
  assume {:verifier.code 0} true;
  call hsu_debugfs_remove($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9662, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9662, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9663, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9665, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unregister_driver: ref;
axiom (pci_unregister_driver == $sub.ref(0, 195886));
procedure  pci_unregister_driver($p0: ref);
const uart_unregister_driver: ref;
axiom (uart_unregister_driver == $sub.ref(0, 196918));
procedure  uart_unregister_driver($p0: ref);
const hsu_debugfs_remove: ref;
axiom (hsu_debugfs_remove == $sub.ref(0, 197950));
procedure  hsu_debugfs_remove($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5342, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4411, !verifier.code !4410
  call {:cexpr "__cil_tmp2"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5343, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 1376);
  // WARNING: %3 = add i64 %2, 1376, !dbg !4416, !verifier.code !4410
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5344, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5344, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5344, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.ref($p4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5346, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  // WARNING: %8 = ptrtoint %struct.hsu_port* %0 to i64, !dbg !4423, !verifier.code !4410
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5347, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 1376);
  // WARNING: %9 = add i64 %8, 1376, !dbg !4428, !verifier.code !4410
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5348, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5348, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5349, 5} true;
  assume {:verifier.code 0} true;
  call debugfs_remove_recursive($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 5355, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debugfs_remove_recursive: ref;
axiom (debugfs_remove_recursive == $sub.ref(0, 198982));
procedure  debugfs_remove_recursive($p0: ref);
const main: ref;
axiom (main == $sub.ref(0, 200014));
procedure {:entrypoint} main()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i64;
  var $i48: i64;
  var $i49: i32;
  var $i50: i64;
  var $i51: i1;
  var $i52: i32;
  var $i56: i1;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $i60: i64;
  var $i61: i1;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i1;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i53: i32;
  var $i54: i32;
  var $i55: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9751, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9751, 20} true;
  assume {:verifier.code 0} true;
  $M.4 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9752, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9753, 13} true;
  assume {:verifier.code 0} true;
  call $i0 := hsu_pci_init();
  // WARNING: %1 = call i32 @hsu_pci_init(), !dbg !4410, !verifier.code !4408
  call {:cexpr "tmp___7"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9755, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9755, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9756, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10084, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10086, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !12170, metadata !4406), !dbg !12171, !verifier.code !4408
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !12172, metadata !4406), !dbg !12173, !verifier.code !4408
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9764, 3} true;
  assume {:verifier.code 0} true;
  $i2, $i3, $i4 := 0, 0, 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9764, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9767, 15} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  // WARNING: %8 = call i32 @__VERIFIER_nondet_int(), !dbg !4429, !verifier.code !4432
  call {:cexpr "tmp___9"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9769, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9769, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9771, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9773, 57} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9773, 57} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  // WARNING: %13 = zext i1 %12 to i32, !dbg !4440, !verifier.code !4408
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9774, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9774, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9796, 15} true;
  assume {:verifier.code 1} true;
  call $i16 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i16);
  // WARNING: %31 = call i32 @__VERIFIER_nondet_int(), !dbg !4472, !verifier.code !4432
  call {:cexpr "tmp___8"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9798, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9798, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb20, $bb21;
$bb10:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9778, 58} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9778, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  // WARNING: %18 = zext i1 %17 to i32, !dbg !4450, !verifier.code !4408
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9779, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9779, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb13, $bb14;
$bb11:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9776, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb13:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9783, 57} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9783, 57} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  // WARNING: %23 = zext i1 %22 to i32, !dbg !4460, !verifier.code !4408
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9784, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9784, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb16, $bb17;
$bb14:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9781, 9} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb16:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9787, 13} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9786, 11} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10077, 3} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb20:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9799, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9801, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9801, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9889, 49} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9889, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb111, $bb112;
$bb23:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9802, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9804, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i16, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9804, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb26, $bb27;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9907, 48} true;
  assume {:verifier.code 0} true;
  $i56 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9907, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb119, $bb120;
$bb26:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9805, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9807, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i16, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9807, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb29, $bb30;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9925, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb29:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9808, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9810, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i16, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9810, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9927, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb32:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9811, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9813, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i16, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9813, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9930, 9} true;
  assume {:verifier.code 0} true;
  call $i63 := serial_hsu_tx_empty($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9932, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb35:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9814, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9816, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i16, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9816, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb38, $bb39;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9935, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_set_mctrl($u7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9937, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb38:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9817, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9819, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i16, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9819, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9940, 9} true;
  assume {:verifier.code 0} true;
  call $i64 := serial_hsu_get_mctrl($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9942, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb41:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9820, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9822, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i16, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9822, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb44, $bb45;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9945, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_stop_tx($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9947, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb44:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i25 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9825, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i16, 9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9825, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb47, $bb48;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9950, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_start_tx($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9952, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb47:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9826, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9828, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i16, 10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9828, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb50, $bb51;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9955, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_stop_rx($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9957, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb50:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9829, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9831, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i16, 11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9831, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb53, $bb54;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9960, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_enable_ms($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9962, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb53:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9832, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9834, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i16, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9834, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb56, $bb57;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9965, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_break_ctl($u7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9967, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb56:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9835, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9837, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i16, 13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9837, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb59, $bb60;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9970, 9} true;
  assume {:verifier.code 0} true;
  call $i65 := serial_hsu_startup($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9972, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb59:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9838, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9840, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i16, 14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9840, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb62, $bb63;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9975, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_shutdown($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9977, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb62:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9841, 7} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9843, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i16, 15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9843, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb65, $bb66;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9980, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_set_termios($u7, $u8, $u8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9982, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb65:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9844, 7} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9846, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i16, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9846, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb68, $bb69;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9985, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_pm($u7, $u1, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9987, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb68:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9847, 7} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9849, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i16, 17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9849, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb71, $bb72;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9990, 9} true;
  assume {:verifier.code 0} true;
  call $p66 := serial_hsu_type($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9992, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb71:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9850, 7} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9852, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i16, 18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9852, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb74, $bb75;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9995, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_release_port($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9997, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb74:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9853, 7} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9855, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i16, 19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9855, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb77, $bb78;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10000, 9} true;
  assume {:verifier.code 0} true;
  call $i67 := serial_hsu_request_port($u7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10002, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb77:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9856, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9858, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i16, 20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9858, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb80, $bb81;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10005, 9} true;
  assume {:verifier.code 0} true;
  call serial_hsu_config_port($u7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10007, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb80:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9859, 7} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9861, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i16, 21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9861, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb83, $bb84;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10010, 9} true;
  assume {:verifier.code 0} true;
  call $i68 := serial_hsu_verify_port($u7, $u9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10012, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb83:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9862, 7} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9864, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i16, 22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9864, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb86, $bb87;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10015, 9} true;
  assume {:verifier.code 0} true;
  call $i69 := serial_hsu_runtime_suspend($u10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10017, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb86:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9865, 7} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i39 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9867, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i16, 23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9867, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb89, $bb90;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10020, 9} true;
  assume {:verifier.code 0} true;
  call $i70 := serial_hsu_runtime_resume($u10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10022, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb89:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9868, 7} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9870, 17} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i16, 24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9870, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb92, $bb93;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10025, 9} true;
  assume {:verifier.code 0} true;
  call $i71 := serial_hsu_runtime_idle($u10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10027, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb92:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9871, 7} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9873, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i16, 25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9873, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb95, $bb96;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10029, 45} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10029, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb125, $bb126;
$bb95:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9874, 7} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume !(($i42 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9876, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i16, 26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9876, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb98, $bb99;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10046, 9} true;
  assume {:verifier.code 0} true;
  call $i78 := serial_hsu_suspend($u11, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10048, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb98:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9877, 7} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9879, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i16, 27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9879, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb101, $bb102;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10051, 9} true;
  assume {:verifier.code 0} true;
  call $i79 := serial_hsu_resume($u11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10053, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb101:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9880, 7} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9882, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i16, 28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9882, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb104, $bb105;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10056, 26} true;
  assume {:verifier.code 0} true;
  $M.4 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10057, 9} true;
  assume {:verifier.code 0} true;
  call $i80 := dma_irq($u1, $u4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10058, 26} true;
  assume {:verifier.code 0} true;
  $M.4 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10060, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb104:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9883, 7} true;
  assume {:verifier.code 0} true;
  goto $bb106;
$bb105:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9886, 7} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10063, 26} true;
  assume {:verifier.code 0} true;
  $M.4 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10064, 9} true;
  assume {:verifier.code 0} true;
  call $i81 := port_irq($u1, $u4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10065, 26} true;
  assume {:verifier.code 0} true;
  $M.4 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10067, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10069, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i4;
  goto $bb118;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9887, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb109, $bb110;
$bb109:
  assume (0 == 1);
  assume {:verifier.code 0} true;
  assume false;
$bb110:
  assume !((0 == 1));
  assume {:verifier.code 0} true;
  assume false;
$bb111:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9891, 34} true;
  assume {:verifier.code 0} true;
  call $i47 := port_show_regs($u3, $u4, $u5, $u6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9891, 32} true;
  assume {:verifier.code 0} true;
  $M.5 := $i47;
  call {:cexpr "res_port_show_regs_2"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9893, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9893, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i64.i32($i48);
  // WARNING: %126 = trunc i64 %125 to i32, !dbg !4635, !verifier.code !4408
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9894, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9896, 15} true;
  assume {:verifier.code 0} true;
  $i50 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9896, 36} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9896, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb113, $bb114;
$bb112:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  $i52 := $i2;
  goto $bb117;
$bb113:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9897, 13} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb114:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb116;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10080, 3} true;
  assume {:verifier.code 0} true;
  call hsu_pci_exit();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10081, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9902, 9} true;
  assume {:verifier.code 0} true;
  $i52 := 0;
  goto $bb117;
$bb117:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9905, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i52, $i3, $i4;
  goto $bb118;
$bb118:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb131;
$bb119:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9909, 33} true;
  assume {:verifier.code 0} true;
  call $i57 := dma_show_regs($u3, $u4, $u5, $u6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9909, 31} true;
  assume {:verifier.code 0} true;
  $M.6 := $i57;
  call {:cexpr "res_dma_show_regs_3"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9911, 31} true;
  assume {:verifier.code 0} true;
  $i58 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9911, 25} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i64.i32($i58);
  // WARNING: %139 = trunc i64 %138 to i32, !dbg !4655, !verifier.code !4408
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9912, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9914, 15} true;
  assume {:verifier.code 0} true;
  $i60 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9914, 35} true;
  assume {:verifier.code 0} true;
  $i61 := $slt.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9914, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb121, $bb122;
$bb120:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  $i62 := $i3;
  goto $bb124;
$bb121:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9915, 13} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb122:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb123;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9920, 9} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb124;
$bb124:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9923, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i62, $i4;
  goto $bb118;
$bb125:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10031, 37} true;
  assume {:verifier.code 0} true;
  call $i73 := serial_hsu_probe($u11, $u12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10031, 35} true;
  assume {:verifier.code 0} true;
  $M.7 := $i73;
  call {:cexpr "res_serial_hsu_probe_43"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10032, 34} true;
  assume {:verifier.code 0} true;
  $i74 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10032, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10034, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10034, 15} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10034, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb127, $bb128;
$bb126:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  $i77 := $i4;
  goto $bb130;
$bb127:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10035, 13} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb128:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb129;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10040, 9} true;
  assume {:verifier.code 0} true;
  $i77 := 0;
  goto $bb130;
$bb130:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10043, 9} true;
  assume {:verifier.code 0} true;
  $i53, $i54, $i55 := $i2, $i3, $i77;
  goto $bb118;
$bb131:
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:verifier.code 0} true;
  goto $bb133;
$bb133:
  assume {:verifier.code 0} true;
  goto $bb134;
$bb134:
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:verifier.code 0} true;
  goto $bb136;
$bb136:
  assume {:verifier.code 0} true;
  goto $bb137;
$bb137:
  assume {:verifier.code 0} true;
  goto $bb138;
$bb138:
  assume {:verifier.code 0} true;
  goto $bb139;
$bb139:
  assume {:verifier.code 0} true;
  goto $bb140;
$bb140:
  assume {:verifier.code 0} true;
  goto $bb141;
$bb141:
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:verifier.code 0} true;
  goto $bb143;
$bb143:
  assume {:verifier.code 0} true;
  goto $bb144;
$bb144:
  assume {:verifier.code 0} true;
  goto $bb145;
$bb145:
  assume {:verifier.code 0} true;
  goto $bb146;
$bb146:
  assume {:verifier.code 0} true;
  goto $bb147;
$bb147:
  assume {:verifier.code 0} true;
  goto $bb148;
$bb148:
  assume {:verifier.code 0} true;
  goto $bb149;
$bb149:
  assume {:verifier.code 0} true;
  goto $bb150;
$bb150:
  assume {:verifier.code 0} true;
  goto $bb151;
$bb151:
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:verifier.code 0} true;
  goto $bb153;
$bb153:
  assume {:verifier.code 0} true;
  goto $bb154;
$bb154:
  assume {:verifier.code 0} true;
  goto $bb155;
$bb155:
  assume {:verifier.code 0} true;
  goto $bb156;
$bb156:
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:verifier.code 0} true;
  goto $bb158;
$bb158:
  assume {:verifier.code 0} true;
  goto $bb159;
$bb159:
  assume {:verifier.code 0} true;
  goto $bb160;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 9764, 3} true;
  assume {:verifier.code 0} true;
  $i2, $i3, $i4 := $i53, $i54, $i55;
  goto $bb5;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 201046));
procedure  ldv_initialize();
const ldv_check_return_value: ref;
axiom (ldv_check_return_value == $sub.ref(0, 202078));
procedure  ldv_check_return_value($i0: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 203110));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10221, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10221, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10221, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10223, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10225, 5} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10228, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_blast_assert: ref;
axiom (ldv_blast_assert == $sub.ref(0, 204142));
procedure  ldv_blast_assert()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10092, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10093, 10} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-gZ2WZ7.c", 10095, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 205174));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12541, metadata !4406), !dbg !12542, !verifier.code !4408
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 206206));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 207238));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 208270));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 209302));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 210334));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 211366));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 212398));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 213430));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 214462));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 215494));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 216526));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 217558));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !4405, !verifier.code !4406
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 218590));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 219622));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 220654));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 221686));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 222718));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 223750));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 224782));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 225814));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 226846));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 227878));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 228910));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 229942));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 230974));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 232006));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 233038));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 234070));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 235102));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 236134));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 237166));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 238198));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 239230));
procedure  __SMACK_static_init()
{
$bb0:
  $M.0 := $store.ref($M.0, serial_hsu_pops, serial_hsu_tx_empty);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 8), serial_hsu_set_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 16), serial_hsu_get_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 24), serial_hsu_stop_tx);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 32), serial_hsu_start_tx);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 48), serial_hsu_stop_rx);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 56), serial_hsu_enable_ms);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 64), serial_hsu_break_ctl);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 72), serial_hsu_startup);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 80), serial_hsu_shutdown);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 96), serial_hsu_set_termios);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 112), serial_hsu_pm);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 128), serial_hsu_type);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 136), serial_hsu_release_port);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 144), serial_hsu_request_port);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 152), serial_hsu_config_port);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 160), serial_hsu_verify_port);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pops, 184), $0.ref);
  $M.0 := $store.ref($M.0, serial_hsu_pm_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 160), serial_hsu_runtime_suspend);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 168), serial_hsu_runtime_resume);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_pm_ops, 176), serial_hsu_runtime_idle);
  $M.0 := $store.i32($M.0, pci_ids, 32902);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 4), 2075);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 20), 0);
  $M.0 := $store.i64($M.0, $add.ref(pci_ids, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 32), 32902);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 32), 4), 2076);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 32), 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 32), 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 32), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 32), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pci_ids, 32), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 64), 32902);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 64), 4), 2077);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 64), 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 64), 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 64), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 64), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pci_ids, 64), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(pci_ids, 96), 32902);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 96), 4), 2078);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 96), 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 96), 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 96), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(pci_ids, 96), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pci_ids, 96), 24), 0);
  $M.0 := $store.ref($M.0, hsu_pci_driver, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 16), .str.13);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 24), pci_ids);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 32), serial_hsu_probe);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 40), serial_hsu_remove);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 48), serial_hsu_suspend);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 72), serial_hsu_resume);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hsu_pci_driver, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 96), serial_hsu_pm_ops);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 96), 104), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(hsu_pci_driver, 208), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(hsu_pci_driver, 208), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(hsu_pci_driver, 208), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 208), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hsu_pci_driver, 208), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(hsu_pci_driver, 208), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, serial_hsu_reg, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_reg, 8), .str.11);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_reg, 16), .str.12);
  $M.0 := $store.i32($M.0, $add.ref(serial_hsu_reg, 24), 4);
  $M.0 := $store.i32($M.0, $add.ref(serial_hsu_reg, 28), 128);
  $M.0 := $store.i32($M.0, $add.ref(serial_hsu_reg, 32), 3);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_reg, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_reg, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_hsu_reg, 56), $0.ref);
  $M.0 := $store.ref($M.0, dma_regs_ops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 8), default_llseek);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 16), dma_show_regs);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 88), simple_open);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(dma_regs_ops, 200), $0.ref);
  $M.0 := $store.ref($M.0, port_regs_ops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 8), default_llseek);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 16), port_show_regs);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 88), simple_open);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(port_regs_ops, 200), $0.ref);
  $M.1 := $0.ref;
  $M.9 := $store.ref($M.9, serial_hsu_ports, $0.ref);
  $M.9 := $store.ref($M.9, $add.ref(serial_hsu_ports, 8), $0.ref);
  $M.9 := $store.ref($M.9, $add.ref(serial_hsu_ports, 16), $0.ref);
  $M.0 := $store.i8($M.0, __param_str_hsu_dma_enable, 104);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 1), 115);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 2), 117);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 3), 95);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 4), 100);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 5), 109);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 6), 97);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 7), 95);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 8), 101);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 9), 110);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 10), 97);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 11), 98);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 12), 108);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 13), 101);
  $M.0 := $store.i8($M.0, $add.ref(__param_str_hsu_dma_enable, 14), 0);
  $M.7 := 0;
  call {:cexpr "res_serial_hsu_probe_43"} boogie_si_record_i32(0);
  $M.6 := 0;
  call {:cexpr "res_dma_show_regs_3"} boogie_si_record_i64(0);
  $M.5 := 0;
  call {:cexpr "res_port_show_regs_2"} boogie_si_record_i64(0);
  $M.4 := 0;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
  $M.0 := $store.i32($M.0, hsu_dma_enable, 0);
  call {:cexpr "hsu_dma_enable"} boogie_si_record_i32(0);
  $M.8 := 1;
  call {:cexpr "ldv_mutex"} boogie_si_record_i32(1);
  $M.0 := $store.i8($M.0, __mod_alias1507, 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 2), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 4), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 5), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 6), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 7), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 8), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 9), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 10), 102);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 11), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 12), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 13), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 14), 58);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 15), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 16), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 17), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 18), 102);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 19), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 20), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 21), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 22), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 23), 45);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 24), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 25), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 26), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias1507, 27), 0);
  $M.0 := $store.i8($M.0, __mod_license1506, 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 2), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 4), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 5), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 6), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 7), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 8), 71);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 9), 80);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 10), 76);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 11), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 12), 118);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 13), 50);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license1506, 14), 0);
  $M.0 := $store.i8($M.0, __mod_hsu_dma_enable55, 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 1), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 3), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 4), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 5), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 6), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 7), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 9), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 10), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 11), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 13), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 14), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 15), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 16), 98);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 18), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 19), 58);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 20), 73);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 21), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 22), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 23), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 24), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 25), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 26), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 27), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 28), 98);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 29), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 30), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 31), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 32), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 33), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 34), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 35), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 36), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 37), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 38), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 39), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 40), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 41), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 42), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 43), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 44), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 45), 107);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 46), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 47), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 48), 103);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 49), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 50), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 51), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 52), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 53), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 54), 44);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 55), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 56), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 57), 102);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 58), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 59), 98);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 60), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 61), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 62), 91);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 63), 120);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 64), 93);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 65), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 66), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 67), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 68), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 69), 49);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 70), 44);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 71), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 72), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 73), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 74), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 75), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 76), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 77), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 78), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 79), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 80), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 81), 91);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 82), 120);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 83), 93);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 84), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 85), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 86), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 87), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 88), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 89), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 90), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 91), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 92), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 93), 107);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 94), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 95), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 96), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 97), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 98), 68);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 99), 77);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 100), 65);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 101), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 102), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 103), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 104), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 105), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 106), 44);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 107), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 108), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 109), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 110), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 111), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 112), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 113), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 114), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 115), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 116), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 117), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 118), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 119), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 120), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 121), 80);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 122), 73);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 123), 79);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 124), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 125), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 126), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 127), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 128), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 129), 46);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enable55, 130), 0);
  $M.0 := $store.i8($M.0, __mod_hsu_dma_enabletype53, 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 1), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 3), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 5), 121);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 6), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 8), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 9), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 10), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 11), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 13), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 14), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 15), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 16), 95);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 17), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 18), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 19), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 20), 98);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 21), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 22), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 23), 58);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 24), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 25), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 26), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_hsu_dma_enabletype53, 27), 0);
  $M.0 := $store.ref($M.0, __param_hsu_dma_enable, __param_str_hsu_dma_enable);
  $M.0 := $store.ref($M.0, $add.ref(__param_hsu_dma_enable, 8), param_ops_int);
  $M.0 := $store.i16($M.0, $add.ref(__param_hsu_dma_enable, 16), 0);
  $M.0 := $store.i16($M.0, $add.ref(__param_hsu_dma_enable, 18), 0);
  $M.0 := $store.ref($M.0, $add.ref(__param_hsu_dma_enable, 24), hsu_dma_enable);
  $M.10 := $store.i8($M.10, .str.14, 77);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 1), 70);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 2), 68);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 3), 32);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 4), 72);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 5), 83);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 6), 85);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 7), 32);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 8), 112);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 9), 111);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 10), 114);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 11), 116);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 12), 91);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 13), 37);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 14), 100);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 15), 93);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 16), 32);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 17), 114);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 18), 101);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 19), 103);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 20), 115);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 21), 58);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 22), 10);
  $M.10 := $store.i8($M.10, $add.ref(.str.14, 23), 0);
  $M.11 := $store.i8($M.11, .str.15, 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 1), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 2), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 3), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 4), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 5), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 6), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 7), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 8), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 9), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 10), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 11), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 12), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 13), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 14), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 15), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 16), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 17), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 18), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 19), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 20), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 21), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 22), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 23), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 24), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 25), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 26), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 27), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 28), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 29), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 30), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 31), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 32), 61);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 33), 10);
  $M.11 := $store.i8($M.11, $add.ref(.str.15, 34), 0);
  $M.12 := $store.i8($M.12, .str.16, 73);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 1), 69);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 2), 82);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 3), 58);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 4), 32);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 5), 9);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 6), 9);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 7), 48);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 8), 120);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 9), 37);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 10), 48);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 11), 56);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 12), 120);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 13), 10);
  $M.12 := $store.i8($M.12, $add.ref(.str.16, 14), 0);
  $M.13 := $store.i8($M.13, .str.17, 73);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 1), 73);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 2), 82);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 3), 58);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 4), 32);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 5), 9);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 6), 9);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 7), 48);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 8), 120);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 9), 37);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 10), 48);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 11), 56);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 12), 120);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 13), 10);
  $M.13 := $store.i8($M.13, $add.ref(.str.17, 14), 0);
  $M.14 := $store.i8($M.14, .str.18, 76);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 1), 67);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 2), 82);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 3), 58);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 4), 32);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 5), 9);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 6), 9);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 7), 48);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 8), 120);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 9), 37);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 10), 48);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 11), 56);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 12), 120);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 13), 10);
  $M.14 := $store.i8($M.14, $add.ref(.str.18, 14), 0);
  $M.15 := $store.i8($M.15, .str.19, 77);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 1), 67);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 2), 82);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 3), 58);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 4), 32);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 5), 9);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 6), 9);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 7), 48);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 8), 120);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 9), 37);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 10), 48);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 11), 56);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 12), 120);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 13), 10);
  $M.15 := $store.i8($M.15, $add.ref(.str.19, 14), 0);
  $M.16 := $store.i8($M.16, .str.20, 76);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 1), 83);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 2), 82);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 3), 58);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 4), 32);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 5), 9);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 6), 9);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 7), 48);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 8), 120);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 9), 37);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 10), 48);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 11), 56);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 12), 120);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 13), 10);
  $M.16 := $store.i8($M.16, $add.ref(.str.20, 14), 0);
  $M.17 := $store.i8($M.17, .str.21, 77);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 1), 83);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 2), 82);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 3), 58);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 4), 32);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 5), 9);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 6), 9);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 7), 48);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 8), 120);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 9), 37);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 10), 48);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 11), 56);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 12), 120);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 13), 10);
  $M.17 := $store.i8($M.17, $add.ref(.str.21, 14), 0);
  $M.18 := $store.i8($M.18, .str.22, 70);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 1), 79);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 2), 82);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 3), 58);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 4), 32);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 5), 9);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 6), 9);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 7), 48);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 8), 120);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 9), 37);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 10), 48);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 11), 56);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 12), 120);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 13), 10);
  $M.18 := $store.i8($M.18, $add.ref(.str.22, 14), 0);
  $M.19 := $store.i8($M.19, .str.23, 80);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 1), 83);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 2), 58);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 3), 32);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 4), 9);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 5), 9);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 6), 48);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 7), 120);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 8), 37);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 9), 48);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 10), 56);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 11), 120);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 12), 10);
  $M.19 := $store.i8($M.19, $add.ref(.str.23, 13), 0);
  $M.20 := $store.i8($M.20, .str.24, 77);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 1), 85);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 2), 76);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 3), 58);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 4), 32);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 5), 9);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 6), 9);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 7), 48);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 8), 120);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 9), 37);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 10), 48);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 11), 56);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 12), 120);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 13), 10);
  $M.20 := $store.i8($M.20, $add.ref(.str.24, 14), 0);
  $M.21 := $store.i8($M.21, .str.25, 68);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 1), 73);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 2), 86);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 3), 58);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 4), 32);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 5), 9);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 6), 9);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 7), 48);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 8), 120);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 9), 37);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 10), 48);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 11), 56);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 12), 120);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 13), 10);
  $M.21 := $store.i8($M.21, $add.ref(.str.25, 14), 0);
  $M.22 := $store.i8($M.22, .str.26, 77);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 1), 70);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 2), 68);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 3), 32);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 4), 72);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 5), 83);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 6), 85);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 7), 32);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 8), 68);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 9), 77);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 10), 65);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 11), 32);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 12), 99);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 13), 104);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 14), 97);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 15), 110);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 16), 110);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 17), 101);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 18), 108);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 19), 32);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 20), 91);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 21), 37);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 22), 100);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 23), 93);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 24), 32);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 25), 114);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 26), 101);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 27), 103);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 28), 115);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 29), 58);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 30), 10);
  $M.22 := $store.i8($M.22, $add.ref(.str.26, 31), 0);
  $M.23 := $store.i8($M.23, .str.27, 67);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 1), 82);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 2), 58);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 3), 32);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 4), 9);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 5), 9);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 6), 48);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 7), 120);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 8), 37);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 9), 48);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 10), 56);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 11), 120);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 12), 10);
  $M.23 := $store.i8($M.23, $add.ref(.str.27, 13), 0);
  $M.24 := $store.i8($M.24, .str.28, 68);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 1), 67);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 2), 82);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 3), 58);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 4), 32);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 5), 9);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 6), 9);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 7), 48);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 8), 120);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 9), 37);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 10), 48);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 11), 56);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 12), 120);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 13), 10);
  $M.24 := $store.i8($M.24, $add.ref(.str.28, 14), 0);
  $M.25 := $store.i8($M.25, .str.29, 66);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 1), 83);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 2), 82);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 3), 58);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 4), 32);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 5), 9);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 6), 9);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 7), 48);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 8), 120);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 9), 37);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 10), 48);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 11), 56);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 12), 120);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 13), 10);
  $M.25 := $store.i8($M.25, $add.ref(.str.29, 14), 0);
  $M.26 := $store.i8($M.26, .str.30, 77);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 1), 79);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 2), 84);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 3), 83);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 4), 82);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 5), 58);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 6), 32);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 7), 9);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 8), 9);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 9), 48);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 10), 120);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 11), 37);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 12), 48);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 13), 56);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 14), 120);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 15), 10);
  $M.26 := $store.i8($M.26, $add.ref(.str.30, 16), 0);
  $M.27 := $store.i8($M.27, .str.31, 68);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 1), 48);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 2), 83);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 3), 65);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 4), 82);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 5), 58);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 6), 32);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 7), 9);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 8), 9);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 9), 48);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 10), 120);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 11), 37);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 12), 48);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 13), 56);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 14), 120);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 15), 10);
  $M.27 := $store.i8($M.27, $add.ref(.str.31, 16), 0);
  $M.28 := $store.i8($M.28, .str.32, 68);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 1), 48);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 2), 84);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 3), 83);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 4), 82);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 5), 58);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 6), 32);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 7), 9);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 8), 9);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 9), 48);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 10), 120);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 11), 37);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 12), 48);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 13), 56);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 14), 120);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 15), 10);
  $M.28 := $store.i8($M.28, $add.ref(.str.32, 16), 0);
  $M.0 := $store.ref($M.0, llvm.used, __param_hsu_dma_enable);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 8), __mod_hsu_dma_enabletype53);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 16), __mod_hsu_dma_enable55);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 24), __mod_license1506);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 32), __mod_alias1507);
  $M.29 := $store.i8($M.29, .str.5, 104);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 1), 115);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 2), 117);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 3), 95);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 4), 112);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 5), 111);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 6), 114);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 7), 116);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 8), 37);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 9), 100);
  $M.29 := $store.i8($M.29, $add.ref(.str.5, 10), 0);
  $M.30 := $store.i8($M.30, .str.7, 112);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 1), 111);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 2), 114);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 3), 116);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 4), 95);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 5), 37);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 6), 100);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 7), 95);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 8), 114);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 9), 101);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 10), 103);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 11), 115);
  $M.30 := $store.i8($M.30, $add.ref(.str.7, 12), 0);
  $M.31 := $store.i8($M.31, .str.8, 100);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 1), 109);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 2), 97);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 3), 95);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 4), 99);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 5), 104);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 6), 97);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 7), 110);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 8), 95);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 9), 37);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 10), 100);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 11), 95);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 12), 114);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 13), 101);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 14), 103);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 15), 115);
  $M.31 := $store.i8($M.31, $add.ref(.str.8, 16), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 240262));
procedure  devirtbounce(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i24 := $eq.ref(serial_hsu_runtime_idle, $p0);
  assume {:branchcond $i24} true;
  goto $bb9, $bb17;
$bb2:
  assume ($i17 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := serial_hsu_tx_empty($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i18 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := serial_hsu_get_mctrl($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i19 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := serial_hsu_startup($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i20 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := serial_hsu_request_port($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i21 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := serial_hsu_resume($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i22 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := serial_hsu_runtime_suspend($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i23 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := serial_hsu_runtime_resume($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume ($i24 == 1);
  $p15 := $bitcast.ref.ref(arg);
  call $i16 := serial_hsu_runtime_idle($p15);
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume !(($i17 == 1));
  assume false;
$bb11:
  assume !(($i18 == 1));
  $i17 := $eq.ref(serial_hsu_tx_empty, $p0);
  assume {:branchcond $i17} true;
  goto $bb2, $bb10;
$bb12:
  assume !(($i19 == 1));
  $i18 := $eq.ref(serial_hsu_get_mctrl, $p0);
  assume {:branchcond $i18} true;
  goto $bb3, $bb11;
$bb13:
  assume !(($i20 == 1));
  $i19 := $eq.ref(serial_hsu_startup, $p0);
  assume {:branchcond $i19} true;
  goto $bb4, $bb12;
$bb14:
  assume !(($i21 == 1));
  $i20 := $eq.ref(serial_hsu_request_port, $p0);
  assume {:branchcond $i20} true;
  goto $bb5, $bb13;
$bb15:
  assume !(($i22 == 1));
  $i21 := $eq.ref(serial_hsu_resume, $p0);
  assume {:branchcond $i21} true;
  goto $bb6, $bb14;
$bb16:
  assume !(($i23 == 1));
  $i22 := $eq.ref(serial_hsu_runtime_suspend, $p0);
  assume {:branchcond $i22} true;
  goto $bb7, $bb15;
$bb17:
  assume !(($i24 == 1));
  $i23 := $eq.ref(serial_hsu_runtime_resume, $p0);
  assume {:branchcond $i23} true;
  goto $bb8, $bb16;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 241294));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: i8)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 242326));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 243358));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i32, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 244390));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: i32, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 245422));
procedure  devirtbounce.5(funcPtr: ref, arg: ref, arg1: i32, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 246454));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i32, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 247486));
procedure  devirtbounce.7(funcPtr: ref, arg: i32, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 248518));
procedure  devirtbounce.8(funcPtr: ref, arg: i8, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 249550));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 250582));
procedure  devirtbounce.10(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 251614));
procedure  devirtbounce.11(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const $u0: i8;
const $u1: i32;
const $u10: ref;
const $u11: ref;
const $u12: ref;
const $u2: ref;
const $u3: ref;
const $u4: ref;
const $u5: i64;
const $u6: ref;
const $u7: ref;
const $u8: ref;
const $u9: ref;
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
