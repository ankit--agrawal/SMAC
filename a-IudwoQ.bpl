// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (61 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: i32;
var $M.4: [ref] i8;
var $M.5: [ref] i8;
var $M.6: [ref] i8;
var $M.7: [ref] i8;
var $M.8: [ref] i8;
var $M.9: [ref] i8;
var $M.10: [ref] i8;
var $M.11: [ref] i8;
var $M.12: [ref] ref;
var $M.13: [ref] ref;
var $M.14: [ref] i8;
var $M.15: [ref] i8;
var $M.16: [ref] ref;
var $M.17: ref;
var $M.18: ref;
var $M.19: ref;
var $M.20: ref;
var $M.21: ref;
var $M.22: ref;
var $M.23: ref;
var $M.24: ref;
var $M.25: ref;
var $M.26: ref;
var $M.27: i32;
var $M.28: i32;
var $M.29: i32;
var $M.30: ref;
var $M.31: ref;
var $M.32: ref;
var $M.33: ref;
var $M.34: ref;
var $M.35: ref;
var $M.36: ref;
var $M.37: i8;
var $M.38: ref;
var $M.39: ref;
var $M.40: ref;
var $M.41: ref;
var $M.42: ref;
var $M.43: ref;
var $M.44: ref;
var $M.45: ref;
var $M.46: ref;
var $M.47: i32;
var $M.48: i8;
var $M.49: [ref] i16;
var $M.50: [ref] i16;
var $M.51: [ref] i16;
var $M.52: [ref] i16;
var $M.53: [ref] i16;
var $M.54: [ref] i8;
var $M.55: [ref] i8;
var $M.56: [ref] i8;
var $M.57: [ref] i8;
var $M.58: [ref] i8;
var $M.59: [ref] i8;
var $M.60: [ref] i64;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 165099));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32776));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ldv_mutex: ref;
axiom (ldv_mutex == $sub.ref(0, 2056));
const {:count 3} llvm.used: ref;
axiom (llvm.used == $sub.ref(0, 3104));
const {:count 49} __mod_description47: ref;
axiom (__mod_description47 == $sub.ref(0, 4177));
const {:count 37} __mod_author48: ref;
axiom (__mod_author48 == $sub.ref(0, 5238));
const {:count 12} __mod_license49: ref;
axiom (__mod_license49 == $sub.ref(0, 6274));
const {:count 20} alauda_card_ids: ref;
axiom (alauda_card_ids == $sub.ref(0, 7398));
const {:count 36} inquiry_response: ref;
axiom (inquiry_response == $sub.ref(0, 8458));
const {:count 256} ecc2: ref;
axiom (ecc2 == $sub.ref(0, 9738));
const {:count 256} parity: ref;
axiom (parity == $sub.ref(0, 11018));
const {:count 2} alauda_unusual_dev_list: ref;
axiom (alauda_unusual_dev_list == $sub.ref(0, 12106));
const alauda_driver: ref;
axiom (alauda_driver == $sub.ref(0, 13378));
const {:count 2} alauda_usb_ids: ref;
axiom (alauda_usb_ids == $sub.ref(0, 14450));
const res_alauda_probe_27: ref;
axiom (res_alauda_probe_27 == $sub.ref(0, 15478));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const .str: ref;
axiom (.str == $sub.ref(0, 16513));
const {:count 11} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 17548));
const {:count 20} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 18592));
const {:count 70} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 19686));
const {:count 52} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 20762));
const {:count 62} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 21848));
const {:count 63} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 22935));
const {:count 50} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 24009));
const {:count 67} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 25100));
const {:count 37} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 26161));
const {:count 72} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 27257));
const {:count 45} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 28326));
const {:count 43} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 29393));
const {:count 56} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 30473));
const {:count 56} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 31553));
const {:count 61} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 32638));
const {:count 52} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 33714));
const {:count 61} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 34799));
const {:count 44} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 35867));
const {:count 54} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 36945));
const {:count 60} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 38029));
const {:count 61} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 39114));
const {:count 64} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 40202));
const {:count 133} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 41359));
const {:count 85} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 42468));
const {:count 64} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 43556));
const {:count 49} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 44629));
const {:count 51} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 45704));
const {:count 36} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 46764));
const {:count 60} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 47848));
const {:count 53} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 48925));
const {:count 61} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 50010));
const {:count 60} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 51094));
const {:count 59} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 52177));
const {:count 61} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 53262));
const {:count 62} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 54348));
const {:count 73} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 55445));
const {:count 73} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 56542));
const {:count 50} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 57616));
const {:count 65} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 58705));
const {:count 9} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 59738));
const {:count 16} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 60778));
const {:count 8} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 61810));
const {:count 18} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 62852));
const {:count 81} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 63957));
const {:count 14} .str.2.49: ref;
axiom (.str.2.49 == $sub.ref(0, 64995));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 66027));
procedure llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const alauda_probe: ref;
axiom (alauda_probe == $sub.ref(0, 67059));
procedure alauda_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i16: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.us_data** %3, metadata !5114, metadata !5110), !dbg !5115, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10509, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($p2i.ref.i64(alauda_usb_ids), 0);
  // WARNING: %4 = add i64 ptrtoint ([2 x %struct.usb_device_id]* @alauda_usb_ids to i64), 0, !dbg !5118, !verifier.code !5108
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10510, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10512, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10512, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10512, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64($i5, $i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10512, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $sdiv.i64($i7, 24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10512, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  // WARNING: %10 = trunc i64 %9 to i32, !dbg !5129, !verifier.code !5108
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i9);
  // WARNING: call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !5130, metadata !5110), !dbg !5131, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10514, 59} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($p2i.ref.i64(alauda_unusual_dev_list), 0);
  // WARNING: %11 = add i64 ptrtoint ([2 x %struct.us_unusual_dev]* @alauda_unusual_dev_list to i64), 0, !dbg !5134, !verifier.code !5108
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10515, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10516, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10516, 29} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, $mul.ref($i12, 32));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10517, 12} true;
  assume {:verifier.code 0} true;
  call $i14 := usb_stor_probe1($p2, $p0, $p1, $p13);
  // WARNING: %15 = call i32 @usb_stor_probe1(%struct.us_data** %3, %struct.usb_interface* %0, %struct.usb_device_id* %1, %struct.us_unusual_dev* %14), !dbg !5143, !verifier.code !5108
  call {:cexpr "result"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10519, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10519, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10520, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $i14;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10551, 1} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10526, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10527, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  // WARNING: %21 = ptrtoint %struct.us_data* %20 to i64, !dbg !5158, !verifier.code !5108
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10528, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 136);
  // WARNING: %22 = add i64 %21, 136, !dbg !5161, !verifier.code !5108
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10529, 5} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10529, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10531, 17} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10532, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  // WARNING: %25 = ptrtoint %struct.us_data* %24 to i64, !dbg !5171, !verifier.code !5108
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10533, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 168);
  // WARNING: %26 = add i64 %25, 168, !dbg !5174, !verifier.code !5108
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10534, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10534, 68} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, alauda_transport);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10536, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10537, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  // WARNING: %29 = ptrtoint %struct.us_data* %28 to i64, !dbg !5184, !verifier.code !5108
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10538, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 176);
  // WARNING: %30 = add i64 %29, 176, !dbg !5187, !verifier.code !5108
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10539, 5} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10539, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, usb_stor_Bulk_reset);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10541, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10542, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  // WARNING: %33 = ptrtoint %struct.us_data* %32 to i64, !dbg !5197, !verifier.code !5108
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10543, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 158);
  // WARNING: %34 = add i64 %33, 158, !dbg !5200, !verifier.code !5108
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10544, 5} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10544, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10546, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10547, 12} true;
  assume {:verifier.code 0} true;
  call $i34 := usb_stor_probe2($p33);
  // WARNING: %37 = call i32 @usb_stor_probe2(%struct.us_data* %36), !dbg !5210, !verifier.code !5108
  call {:cexpr "result"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10549, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i34;
  goto $bb3;
}
const usb_stor_disconnect: ref;
axiom (usb_stor_disconnect == $sub.ref(0, 68091));
procedure usb_stor_disconnect($p0: ref);
const usb_stor_suspend: ref;
axiom (usb_stor_suspend == $sub.ref(0, 69123));
procedure usb_stor_suspend($p0: ref, $i1: i32)
  returns ($r: i32);
const usb_stor_resume: ref;
axiom (usb_stor_resume == $sub.ref(0, 70155));
procedure usb_stor_resume($p0: ref)
  returns ($r: i32);
const usb_stor_reset_resume: ref;
axiom (usb_stor_reset_resume == $sub.ref(0, 71187));
procedure usb_stor_reset_resume($p0: ref)
  returns ($r: i32);
const usb_stor_pre_reset: ref;
axiom (usb_stor_pre_reset == $sub.ref(0, 72219));
procedure usb_stor_pre_reset($p0: ref)
  returns ($r: i32);
const usb_stor_post_reset: ref;
axiom (usb_stor_post_reset == $sub.ref(0, 73251));
procedure usb_stor_post_reset($p0: ref)
  returns ($r: i32);
const usb_stor_probe1: ref;
axiom (usb_stor_probe1 == $sub.ref(0, 74283));
procedure usb_stor_probe1($p0: ref, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32);
const alauda_transport: ref;
axiom (alauda_transport == $sub.ref(0, 75315));
procedure alauda_transport($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i8;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i8;
  var $i71: i32;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $i81: i32;
  var $i82: i64;
  var $i83: i64;
  var $i84: i64;
  var $i85: i64;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i8;
  var $i95: i32;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i32;
  var $i106: i64;
  var $i107: i64;
  var $i108: i64;
  var $i109: i64;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i8;
  var $i119: i32;
  var $i120: i32;
  var $i121: i32;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i64;
  var $p130: ref;
  var $i131: i32;
  var $i132: i64;
  var $i133: i64;
  var $i134: i64;
  var $i135: i64;
  var $i136: i64;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i64;
  var $i144: i64;
  var $i145: i64;
  var $i146: i32;
  var $i147: i64;
  var $i148: i64;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $i156: i32;
  var $i157: i64;
  var $i158: i64;
  var $i159: i64;
  var $i160: i64;
  var $i161: i64;
  var $i162: i64;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i32;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $i179: i32;
  var $i180: i64;
  var $i181: i64;
  var $i182: i64;
  var $i183: i64;
  var $i184: i64;
  var $i185: i64;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $i194: i32;
  var $i195: i64;
  var $i196: i64;
  var $i197: i32;
  var $i198: i32;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $i203: i64;
  var $i204: i64;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $i208: i8;
  var $i209: i32;
  var $i210: i1;
  var $i211: i32;
  var $i212: i1;
  var $i213: i64;
  var $i214: i64;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $i218: i8;
  var $i219: i16;
  var $i220: i32;
  var $i221: i32;
  var $i222: i64;
  var $i223: i64;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $i227: i8;
  var $i228: i16;
  var $i229: i32;
  var $i230: i32;
  var $i231: i32;
  var $i232: i64;
  var $i233: i64;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $i237: i8;
  var $i238: i16;
  var $i239: i32;
  var $i240: i32;
  var $i241: i64;
  var $i242: i64;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $i246: i8;
  var $i247: i16;
  var $i248: i32;
  var $i249: i32;
  var $i250: i32;
  var $i251: i64;
  var $i252: i64;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $i256: i8;
  var $i257: i16;
  var $i258: i32;
  var $i259: i32;
  var $i260: i64;
  var $i261: i64;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $i265: i8;
  var $i266: i16;
  var $i267: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i64;
  var $i271: i32;
  var $i272: i64;
  var $i273: i64;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $i277: i8;
  var $i278: i32;
  var $i279: i1;
  var $i280: i32;
  var $i281: i1;
  var $i282: i64;
  var $i283: i64;
  var $p284: ref;
  var $p285: ref;
  var $p286: ref;
  var $i287: i8;
  var $i288: i16;
  var $i289: i32;
  var $i290: i32;
  var $i291: i64;
  var $i292: i64;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $i296: i8;
  var $i297: i16;
  var $i298: i32;
  var $i299: i32;
  var $i300: i32;
  var $i301: i64;
  var $i302: i64;
  var $p303: ref;
  var $p304: ref;
  var $p305: ref;
  var $i306: i8;
  var $i307: i16;
  var $i308: i32;
  var $i309: i32;
  var $i310: i64;
  var $i311: i64;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $i315: i8;
  var $i316: i16;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i64;
  var $i321: i64;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $i325: i8;
  var $i326: i16;
  var $i327: i32;
  var $i328: i32;
  var $i329: i64;
  var $i330: i64;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $i334: i8;
  var $i335: i16;
  var $i336: i32;
  var $i337: i32;
  var $i338: i32;
  var $i339: i64;
  var $i340: i32;
  var $i341: i64;
  var $i342: i64;
  var $p343: ref;
  var $p344: ref;
  var $p345: ref;
  var $i346: i8;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $p350: ref;
  var $p351: ref;
  var $i352: i64;
  var $i353: i64;
  var $p354: ref;
  var $i355: i8;
  var $p356: ref;
  var $p357: ref;
  var $i358: i64;
  var $i359: i64;
  var $p360: ref;
  var $i361: i64;
  var $i362: i8;
  var $p363: ref;
  var $i364: i64;
  var $i365: i64;
  var $p366: ref;
  var $i367: i64;
  var $i368: i8;
  var $i369: i64;
  var $i370: i64;
  var $p371: ref;
  var $p372: ref;
  var $p373: ref;
  var $i374: i8;
  var $i375: i32;
  var $i376: i1;
  var $i377: i64;
  var $i378: i64;
  var $p379: ref;
  var $p380: ref;
  var $p381: ref;
  var $i382: i8;
  var $i383: i32;
  var $i384: i64;
  var $i385: i64;
  var $p386: ref;
  var $p387: ref;
  var $p388: ref;
  var $i389: i8;
  var $i390: i32;
  var $i391: i32;
  var $i392: i64;
  var $i393: i64;
  var $p394: ref;
  var $i395: i64;
  var $i396: i64;
  var $p397: ref;
  var $i398: i64;
  var $i399: i64;
  var $p400: ref;
  var $i27: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10029, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  // WARNING: %3 = ptrtoint %struct.us_data* %1 to i64, !dbg !5114, !verifier.code !5111
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10030, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 648);
  // WARNING: %4 = add i64 %3, 648, !dbg !5118, !verifier.code !5111
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10031, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10031, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10032, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10033, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p1);
  // WARNING: %8 = ptrtoint %struct.us_data* %1 to i64, !dbg !5128, !verifier.code !5111
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10034, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 376);
  // WARNING: %9 = add i64 %8, 376, !dbg !5131, !verifier.code !5111
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10035, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10035, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10037, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p0);
  // WARNING: %12 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5138, !verifier.code !5111
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10038, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 80);
  // WARNING: %13 = add i64 %12, 80, !dbg !5142, !verifier.code !5111
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10039, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10039, 17} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10040, 29} true;
  assume {:verifier.code 0} true;
  $p15 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10041, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  // WARNING: %17 = load i8, i8* %16, align 1, !dbg !5152, !verifier.code !5111
  call {:cexpr "__cil_tmp28"} boogie_si_record_i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10042, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  // WARNING: %18 = zext i8 %17 to i32, !dbg !5155, !verifier.code !5111
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10043, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10043, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10045, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref(.str.9);
  // WARNING: %21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i32 0, i32 0)), !dbg !5161, !verifier.code !5111
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10048, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $uge.i64(36, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10048, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i20 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !5273, metadata !5110), !dbg !5274, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10052, 56} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($p2i.ref.i64(inquiry_response), 0);
  // WARNING: %24 = add i64 ptrtoint ([36 x i8]* @inquiry_response to i64), 0, !dbg !5173, !verifier.code !5111
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10053, 21} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10055, 15} true;
  assume {:verifier.code 0} true;
  call $p23 := __memcpy($p10, $p22, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10057, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i20 == 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !5291, metadata !5110), !dbg !5292, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10061, 56} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($p2i.ref.i64(inquiry_response), 0);
  // WARNING: %28 = add i64 ptrtoint ([36 x i8]* @inquiry_response to i64), 0, !dbg !5191, !verifier.code !5111
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10062, 21} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10064, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := __builtinx_memcpy.ref.ref.i64($p10, $p25, 36);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10068, 5} true;
  assume {:verifier.code 0} true;
  call fill_inquiry_response($p1, $p10, 36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10070, 5} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10474, 1} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10076, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p0);
  // WARNING: %34 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5205, !verifier.code !5111
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10077, 29} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 80);
  // WARNING: %35 = add i64 %34, 80, !dbg !5209, !verifier.code !5111
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10078, 19} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10078, 17} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10079, 29} true;
  assume {:verifier.code 0} true;
  $p32 := $p31;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10080, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  // WARNING: %39 = load i8, i8* %38, align 1, !dbg !5219, !verifier.code !5111
  call {:cexpr "__cil_tmp44"} boogie_si_record_i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10081, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  // WARNING: %40 = zext i8 %39 to i32, !dbg !5222, !verifier.code !5111
  call {:cexpr "__cil_tmp45"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10082, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10084, 5} true;
  assume {:verifier.code 0} true;
  call $i36 := printk.ref(.str.10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10085, 15} true;
  assume {:verifier.code 0} true;
  call $i37 := alauda_check_media($p1);
  // WARNING: %44 = call i32 @alauda_check_media(%struct.us_data* %1), !dbg !5231, !verifier.code !5111
  call {:cexpr "tmp___7"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10087, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $i37;
  goto $bb6;
$bb9:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10093, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p0);
  // WARNING: %47 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5235, !verifier.code !5111
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10094, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 80);
  // WARNING: %48 = add i64 %47, 80, !dbg !5239, !verifier.code !5111
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10095, 19} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10095, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10096, 29} true;
  assume {:verifier.code 0} true;
  $p42 := $p41;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10097, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  // WARNING: %52 = load i8, i8* %51, align 1, !dbg !5249, !verifier.code !5111
  call {:cexpr "__cil_tmp50"} boogie_si_record_i8($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10098, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  // WARNING: %53 = zext i8 %52 to i32, !dbg !5252, !verifier.code !5111
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10099, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10099, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10101, 10} true;
  assume {:verifier.code 0} true;
  call $i46 := alauda_check_media($p1);
  // WARNING: %56 = call i32 @alauda_check_media(%struct.us_data* %1), !dbg !5258, !verifier.code !5111
  call {:cexpr "rc"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10103, 12} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10103, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10104, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $i46;
  goto $bb6;
$bb14:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10109, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p1);
  // WARNING: %61 = ptrtoint %struct.us_data* %1 to i64, !dbg !5268, !verifier.code !5111
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10110, 31} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, 192);
  // WARNING: %62 = add i64 %61, 192, !dbg !5272, !verifier.code !5111
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10111, 21} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10111, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10112, 19} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10112, 19} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10113, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p53);
  // WARNING: %67 = ptrtoint %struct.scsi_device* %66 to i64, !dbg !5282, !verifier.code !5111
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10114, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 156);
  // WARNING: %68 = add i64 %67, 156, !dbg !5285, !verifier.code !5111
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10115, 21} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10115, 19} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  // WARNING: %70 = load i32, i32* %69, align 4, !dbg !5289, !verifier.code !5111
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10116, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i32.i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10116, 31} true;
  assume {:verifier.code 0} true;
  $i59 := $mul.i64($i58, 48);
  // WARNING: %72 = mul i64 %71, 48, !dbg !5293, !verifier.code !5111
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10117, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 28);
  // WARNING: %73 = add i64 %72, 28, !dbg !5296, !verifier.code !5111
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10118, 21} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64(0, $i60);
  // WARNING: %74 = add i64 0, %73, !dbg !5299, !verifier.code !5111
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10119, 19} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p1);
  // WARNING: %75 = ptrtoint %struct.us_data* %1 to i64, !dbg !5302, !verifier.code !5111
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10120, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 648);
  // WARNING: %76 = add i64 %75, 648, !dbg !5305, !verifier.code !5111
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10121, 21} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10121, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10122, 19} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10123, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p66);
  // WARNING: %80 = ptrtoint %struct.alauda_info* %79 to i64, !dbg !5315, !verifier.code !5111
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10124, 31} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, $i61);
  // WARNING: %81 = add i64 %80, %74, !dbg !5318, !verifier.code !5111
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10125, 21} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10125, 19} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i8($M.0, $p69);
  // WARNING: %83 = load i8, i8* %82, align 1, !dbg !5322, !verifier.code !5111
  call {:cexpr "__cil_tmp68"} boogie_si_record_i8($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10126, 19} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i8.i32($i70);
  // WARNING: %84 = zext i8 %83 to i32, !dbg !5325, !verifier.code !5111
  call {:cexpr "__cil_tmp69"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10127, 19} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p1);
  // WARNING: %85 = ptrtoint %struct.us_data* %1 to i64, !dbg !5328, !verifier.code !5111
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10128, 31} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, 192);
  // WARNING: %86 = add i64 %85, 192, !dbg !5331, !verifier.code !5111
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10129, 21} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10129, 19} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10130, 19} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10130, 19} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10131, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p77);
  // WARNING: %91 = ptrtoint %struct.scsi_device* %90 to i64, !dbg !5341, !verifier.code !5111
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10132, 31} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78, 156);
  // WARNING: %92 = add i64 %91, 156, !dbg !5344, !verifier.code !5111
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10133, 21} true;
  assume {:verifier.code 0} true;
  $p80 := $i2p.i64.ref($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10133, 19} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  // WARNING: %94 = load i32, i32* %93, align 4, !dbg !5348, !verifier.code !5111
  call {:cexpr "__cil_tmp76"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10134, 19} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i32.i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10134, 31} true;
  assume {:verifier.code 0} true;
  $i83 := $mul.i64($i82, 48);
  // WARNING: %96 = mul i64 %95, 48, !dbg !5352, !verifier.code !5111
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10135, 31} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 29);
  // WARNING: %97 = add i64 %96, 29, !dbg !5355, !verifier.code !5111
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10136, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64(0, $i84);
  // WARNING: %98 = add i64 0, %97, !dbg !5358, !verifier.code !5111
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10137, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p1);
  // WARNING: %99 = ptrtoint %struct.us_data* %1 to i64, !dbg !5361, !verifier.code !5111
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10138, 31} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, 648);
  // WARNING: %100 = add i64 %99, 648, !dbg !5364, !verifier.code !5111
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10139, 21} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10139, 19} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10140, 19} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10141, 19} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.i64($p90);
  // WARNING: %104 = ptrtoint %struct.alauda_info* %103 to i64, !dbg !5374, !verifier.code !5111
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10142, 31} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i91, $i85);
  // WARNING: %105 = add i64 %104, %98, !dbg !5377, !verifier.code !5111
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10143, 21} true;
  assume {:verifier.code 0} true;
  $p93 := $i2p.i64.ref($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10143, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i8($M.0, $p93);
  // WARNING: %107 = load i8, i8* %106, align 1, !dbg !5381, !verifier.code !5111
  call {:cexpr "__cil_tmp86"} boogie_si_record_i8($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10144, 19} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i94);
  // WARNING: %108 = zext i8 %107 to i32, !dbg !5384, !verifier.code !5111
  call {:cexpr "__cil_tmp87"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10145, 19} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p1);
  // WARNING: %109 = ptrtoint %struct.us_data* %1 to i64, !dbg !5387, !verifier.code !5111
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10146, 31} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96, 192);
  // WARNING: %110 = add i64 %109, 192, !dbg !5390, !verifier.code !5111
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10147, 21} true;
  assume {:verifier.code 0} true;
  $p98 := $i2p.i64.ref($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10147, 19} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10148, 19} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10148, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10149, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p101);
  // WARNING: %115 = ptrtoint %struct.scsi_device* %114 to i64, !dbg !5400, !verifier.code !5111
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10150, 31} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, 156);
  // WARNING: %116 = add i64 %115, 156, !dbg !5403, !verifier.code !5111
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10151, 21} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10151, 19} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  // WARNING: %118 = load i32, i32* %117, align 4, !dbg !5407, !verifier.code !5111
  call {:cexpr "__cil_tmp94"} boogie_si_record_i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10152, 19} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i32.i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10152, 31} true;
  assume {:verifier.code 0} true;
  $i107 := $mul.i64($i106, 48);
  // WARNING: %120 = mul i64 %119, 48, !dbg !5411, !verifier.code !5111
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10153, 31} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i64($i107, 30);
  // WARNING: %121 = add i64 %120, 30, !dbg !5414, !verifier.code !5111
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10154, 21} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64(0, $i108);
  // WARNING: %122 = add i64 0, %121, !dbg !5417, !verifier.code !5111
  call {:cexpr "__cil_tmp97"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10155, 19} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p1);
  // WARNING: %123 = ptrtoint %struct.us_data* %1 to i64, !dbg !5420, !verifier.code !5111
  call {:cexpr "__cil_tmp98"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10156, 31} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i64($i110, 648);
  // WARNING: %124 = add i64 %123, 648, !dbg !5423, !verifier.code !5111
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10157, 22} true;
  assume {:verifier.code 0} true;
  $p112 := $i2p.i64.ref($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10157, 20} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10158, 20} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10159, 20} true;
  assume {:verifier.code 0} true;
  $i115 := $p2i.ref.i64($p114);
  // WARNING: %128 = ptrtoint %struct.alauda_info* %127 to i64, !dbg !5433, !verifier.code !5111
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10160, 33} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64($i115, $i109);
  // WARNING: %129 = add i64 %128, %122, !dbg !5436, !verifier.code !5111
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10161, 22} true;
  assume {:verifier.code 0} true;
  $p117 := $i2p.i64.ref($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10161, 20} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i8($M.0, $p117);
  // WARNING: %131 = load i8, i8* %130, align 1, !dbg !5440, !verifier.code !5111
  call {:cexpr "__cil_tmp104"} boogie_si_record_i8($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10162, 20} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  // WARNING: %132 = zext i8 %131 to i32, !dbg !5443, !verifier.code !5111
  call {:cexpr "__cil_tmp105"} boogie_si_record_i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10163, 33} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119, $i95);
  // WARNING: %133 = add nsw i32 %132, %108, !dbg !5446, !verifier.code !5111
  call {:cexpr "__cil_tmp106"} boogie_si_record_i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10164, 33} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120, $i71);
  // WARNING: %134 = add nsw i32 %133, %84, !dbg !5449, !verifier.code !5111
  call {:cexpr "__cil_tmp107"} boogie_si_record_i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10165, 20} true;
  assume {:verifier.code 0} true;
  $i122 := $p2i.ref.i64($p1);
  // WARNING: %135 = ptrtoint %struct.us_data* %1 to i64, !dbg !5452, !verifier.code !5111
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10166, 33} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i64($i122, 192);
  // WARNING: %136 = add i64 %135, 192, !dbg !5455, !verifier.code !5111
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10167, 22} true;
  assume {:verifier.code 0} true;
  $p124 := $i2p.i64.ref($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10167, 20} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10168, 20} true;
  assume {:verifier.code 0} true;
  $p126 := $bitcast.ref.ref($p125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10168, 20} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10169, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $p2i.ref.i64($p127);
  // WARNING: %141 = ptrtoint %struct.scsi_device* %140 to i64, !dbg !5465, !verifier.code !5111
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10170, 33} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i64($i128, 156);
  // WARNING: %142 = add i64 %141, 156, !dbg !5468, !verifier.code !5111
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10171, 22} true;
  assume {:verifier.code 0} true;
  $p130 := $i2p.i64.ref($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10171, 20} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  // WARNING: %144 = load i32, i32* %143, align 4, !dbg !5472, !verifier.code !5111
  call {:cexpr "__cil_tmp114"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10172, 20} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i32.i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10172, 33} true;
  assume {:verifier.code 0} true;
  $i133 := $mul.i64($i132, 48);
  // WARNING: %146 = mul i64 %145, 48, !dbg !5476, !verifier.code !5111
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10173, 22} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i64(0, $i133);
  // WARNING: %147 = add i64 0, %146, !dbg !5479, !verifier.code !5111
  call {:cexpr "__cil_tmp116"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10174, 20} true;
  assume {:verifier.code 0} true;
  $i135 := $p2i.ref.i64($p1);
  // WARNING: %148 = ptrtoint %struct.us_data* %1 to i64, !dbg !5482, !verifier.code !5111
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10175, 33} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i64($i135, 648);
  // WARNING: %149 = add i64 %148, 648, !dbg !5485, !verifier.code !5111
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10176, 22} true;
  assume {:verifier.code 0} true;
  $p137 := $i2p.i64.ref($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10176, 20} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10177, 20} true;
  assume {:verifier.code 0} true;
  $p139 := $bitcast.ref.ref($p138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10178, 20} true;
  assume {:verifier.code 0} true;
  $i140 := $p2i.ref.i64($p139);
  // WARNING: %153 = ptrtoint %struct.alauda_info* %152 to i64, !dbg !5495, !verifier.code !5111
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10179, 33} true;
  assume {:verifier.code 0} true;
  $i141 := $add.i64($i140, $i134);
  // WARNING: %154 = add i64 %153, %147, !dbg !5498, !verifier.code !5111
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10180, 22} true;
  assume {:verifier.code 0} true;
  $p142 := $i2p.i64.ref($i141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10180, 20} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i64($M.0, $p142);
  // WARNING: %156 = load i64, i64* %155, align 8, !dbg !5502, !verifier.code !5111
  call {:cexpr "__cil_tmp123"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10181, 33} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i32.i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10181, 33} true;
  assume {:verifier.code 0} true;
  $i145 := $lshr.i64($i143, $i144);
  // WARNING: %158 = lshr i64 %156, %157, !dbg !5505, !verifier.code !5111
  call {:cexpr "__cil_tmp124"} boogie_si_record_i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10182, 17} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  // WARNING: %159 = trunc i64 %158 to i32, !dbg !5508, !verifier.code !5111
  call {:cexpr "num_zones"} boogie_si_record_i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10183, 20} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.i64($p1);
  // WARNING: %160 = ptrtoint %struct.us_data* %1 to i64, !dbg !5511, !verifier.code !5111
  call {:cexpr "__cil_tmp125"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10184, 33} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64($i147, 192);
  // WARNING: %161 = add i64 %160, 192, !dbg !5514, !verifier.code !5111
  call {:cexpr "__cil_tmp126"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10185, 22} true;
  assume {:verifier.code 0} true;
  $p149 := $i2p.i64.ref($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10185, 20} true;
  assume {:verifier.code 0} true;
  $p150 := $load.ref($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10186, 20} true;
  assume {:verifier.code 0} true;
  $p151 := $bitcast.ref.ref($p150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10186, 20} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10187, 20} true;
  assume {:verifier.code 0} true;
  $i153 := $p2i.ref.i64($p152);
  // WARNING: %166 = ptrtoint %struct.scsi_device* %165 to i64, !dbg !5524, !verifier.code !5111
  call {:cexpr "__cil_tmp129"} boogie_si_record_i64($i153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10188, 33} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i64($i153, 156);
  // WARNING: %167 = add i64 %166, 156, !dbg !5527, !verifier.code !5111
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10189, 22} true;
  assume {:verifier.code 0} true;
  $p155 := $i2p.i64.ref($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10189, 20} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  // WARNING: %169 = load i32, i32* %168, align 4, !dbg !5531, !verifier.code !5111
  call {:cexpr "__cil_tmp131"} boogie_si_record_i32($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10190, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i32.i64($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10190, 33} true;
  assume {:verifier.code 0} true;
  $i158 := $mul.i64($i157, 48);
  // WARNING: %171 = mul i64 %170, 48, !dbg !5535, !verifier.code !5111
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10191, 33} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64($i158, 12);
  // WARNING: %172 = add i64 %171, 12, !dbg !5538, !verifier.code !5111
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10192, 22} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i64(0, $i159);
  // WARNING: %173 = add i64 0, %172, !dbg !5541, !verifier.code !5111
  call {:cexpr "__cil_tmp134"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10193, 20} true;
  assume {:verifier.code 0} true;
  $i161 := $p2i.ref.i64($p1);
  // WARNING: %174 = ptrtoint %struct.us_data* %1 to i64, !dbg !5544, !verifier.code !5111
  call {:cexpr "__cil_tmp135"} boogie_si_record_i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10194, 33} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i64($i161, 648);
  // WARNING: %175 = add i64 %174, 648, !dbg !5547, !verifier.code !5111
  call {:cexpr "__cil_tmp136"} boogie_si_record_i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10195, 22} true;
  assume {:verifier.code 0} true;
  $p163 := $i2p.i64.ref($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10195, 20} true;
  assume {:verifier.code 0} true;
  $p164 := $load.ref($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10196, 20} true;
  assume {:verifier.code 0} true;
  $p165 := $bitcast.ref.ref($p164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10197, 20} true;
  assume {:verifier.code 0} true;
  $i166 := $p2i.ref.i64($p165);
  // WARNING: %179 = ptrtoint %struct.alauda_info* %178 to i64, !dbg !5557, !verifier.code !5111
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10198, 33} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i64($i166, $i160);
  // WARNING: %180 = add i64 %179, %173, !dbg !5560, !verifier.code !5111
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10199, 22} true;
  assume {:verifier.code 0} true;
  $p168 := $i2p.i64.ref($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10199, 20} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i32($M.0, $p168);
  // WARNING: %182 = load i32, i32* %181, align 4, !dbg !5564, !verifier.code !5111
  call {:cexpr "__cil_tmp141"} boogie_si_record_i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10200, 20} true;
  assume {:verifier.code 0} true;
  $i170 := $p2i.ref.i64($p1);
  // WARNING: %183 = ptrtoint %struct.us_data* %1 to i64, !dbg !5567, !verifier.code !5111
  call {:cexpr "__cil_tmp142"} boogie_si_record_i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10201, 33} true;
  assume {:verifier.code 0} true;
  $i171 := $add.i64($i170, 192);
  // WARNING: %184 = add i64 %183, 192, !dbg !5570, !verifier.code !5111
  call {:cexpr "__cil_tmp143"} boogie_si_record_i64($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10202, 22} true;
  assume {:verifier.code 0} true;
  $p172 := $i2p.i64.ref($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10202, 20} true;
  assume {:verifier.code 0} true;
  $p173 := $load.ref($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10203, 20} true;
  assume {:verifier.code 0} true;
  $p174 := $bitcast.ref.ref($p173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10203, 20} true;
  assume {:verifier.code 0} true;
  $p175 := $load.ref($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10204, 20} true;
  assume {:verifier.code 0} true;
  $i176 := $p2i.ref.i64($p175);
  // WARNING: %189 = ptrtoint %struct.scsi_device* %188 to i64, !dbg !5580, !verifier.code !5111
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10205, 33} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i64($i176, 156);
  // WARNING: %190 = add i64 %189, 156, !dbg !5583, !verifier.code !5111
  call {:cexpr "__cil_tmp147"} boogie_si_record_i64($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10206, 22} true;
  assume {:verifier.code 0} true;
  $p178 := $i2p.i64.ref($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10206, 20} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i32($M.0, $p178);
  // WARNING: %192 = load i32, i32* %191, align 4, !dbg !5587, !verifier.code !5111
  call {:cexpr "__cil_tmp148"} boogie_si_record_i32($i179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10207, 20} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10207, 33} true;
  assume {:verifier.code 0} true;
  $i181 := $mul.i64($i180, 48);
  // WARNING: %194 = mul i64 %193, 48, !dbg !5591, !verifier.code !5111
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10208, 33} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i64($i181, 16);
  // WARNING: %195 = add i64 %194, 16, !dbg !5594, !verifier.code !5111
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10209, 22} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i64(0, $i182);
  // WARNING: %196 = add i64 0, %195, !dbg !5597, !verifier.code !5111
  call {:cexpr "__cil_tmp151"} boogie_si_record_i64($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10210, 20} true;
  assume {:verifier.code 0} true;
  $i184 := $p2i.ref.i64($p1);
  // WARNING: %197 = ptrtoint %struct.us_data* %1 to i64, !dbg !5600, !verifier.code !5111
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10211, 33} true;
  assume {:verifier.code 0} true;
  $i185 := $add.i64($i184, 648);
  // WARNING: %198 = add i64 %197, 648, !dbg !5603, !verifier.code !5111
  call {:cexpr "__cil_tmp153"} boogie_si_record_i64($i185);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10212, 22} true;
  assume {:verifier.code 0} true;
  $p186 := $i2p.i64.ref($i185);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10212, 20} true;
  assume {:verifier.code 0} true;
  $p187 := $load.ref($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10213, 20} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($p187);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10214, 20} true;
  assume {:verifier.code 0} true;
  $i189 := $p2i.ref.i64($p188);
  // WARNING: %202 = ptrtoint %struct.alauda_info* %201 to i64, !dbg !5613, !verifier.code !5111
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i189);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10215, 33} true;
  assume {:verifier.code 0} true;
  $i190 := $add.i64($i189, $i183);
  // WARNING: %203 = add i64 %202, %196, !dbg !5616, !verifier.code !5111
  call {:cexpr "__cil_tmp157"} boogie_si_record_i64($i190);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10216, 22} true;
  assume {:verifier.code 0} true;
  $p191 := $i2p.i64.ref($i190);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10216, 20} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i32($M.0, $p191);
  // WARNING: %205 = load i32, i32* %204, align 4, !dbg !5620, !verifier.code !5111
  call {:cexpr "__cil_tmp158"} boogie_si_record_i32($i192);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10217, 30} true;
  assume {:verifier.code 0} true;
  $i193 := $mul.i32($i146, $i192);
  // WARNING: %206 = mul i32 %159, %205, !dbg !5623, !verifier.code !5111
  call {:cexpr "__cil_tmp159"} boogie_si_record_i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10218, 33} true;
  assume {:verifier.code 0} true;
  $i194 := $mul.i32($i193, $i169);
  // WARNING: %207 = mul i32 %206, %182, !dbg !5626, !verifier.code !5111
  call {:cexpr "__cil_tmp160"} boogie_si_record_i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10219, 16} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i32.i64($i194);
  // WARNING: %208 = zext i32 %207 to i64, !dbg !5629, !verifier.code !5111
  call {:cexpr "capacity"} boogie_si_record_i64($i195);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10220, 29} true;
  assume {:verifier.code 0} true;
  $i196 := $sub.i64($i195, 1);
  // WARNING: %209 = sub i64 %208, 1, !dbg !5632, !verifier.code !5111
  call {:cexpr "__cil_tmp161"} boogie_si_record_i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10221, 20} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i64.i32($i196);
  // WARNING: %210 = trunc i64 %209 to i32, !dbg !5635, !verifier.code !5111
  call {:cexpr "__cil_tmp162"} boogie_si_record_i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10222, 15} true;
  assume {:verifier.code 0} true;
  call $i198 := __fswab32($i197);
  // WARNING: %211 = call i32 @__fswab32(i32 %210) #0, !dbg !5638, !verifier.code !5111
  call {:cexpr "tmp___8"} boogie_si_record_i32($i198);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10223, 20} true;
  assume {:verifier.code 0} true;
  $p199 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10224, 33} true;
  assume {:verifier.code 0} true;
  $p200 := $p199;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10225, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p200, $i198);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10226, 20} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10227, 33} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p201, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10228, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p202, 131072);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10229, 5} true;
  assume {:verifier.code 0} true;
  call usb_stor_set_xfer_buf($p10, 8, $p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10231, 5} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb6;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10237, 18} true;
  assume {:verifier.code 0} true;
  $i203 := $p2i.ref.i64($p0);
  // WARNING: %218 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5657, !verifier.code !5111
  call {:cexpr "__cil_tmp167"} boogie_si_record_i64($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10238, 31} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i64($i203, 80);
  // WARNING: %219 = add i64 %218, 80, !dbg !5661, !verifier.code !5111
  call {:cexpr "__cil_tmp168"} boogie_si_record_i64($i204);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10239, 20} true;
  assume {:verifier.code 0} true;
  $p205 := $i2p.i64.ref($i204);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10239, 18} true;
  assume {:verifier.code 0} true;
  $p206 := $load.ref($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10240, 31} true;
  assume {:verifier.code 0} true;
  $p207 := $p206;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10241, 18} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i8($M.0, $p207);
  // WARNING: %223 = load i8, i8* %222, align 1, !dbg !5671, !verifier.code !5111
  call {:cexpr "__cil_tmp171"} boogie_si_record_i8($i208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10242, 18} true;
  assume {:verifier.code 0} true;
  $i209 := $zext.i8.i32($i208);
  // WARNING: %224 = zext i8 %223 to i32, !dbg !5674, !verifier.code !5111
  call {:cexpr "__cil_tmp172"} boogie_si_record_i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10243, 20} true;
  assume {:verifier.code 0} true;
  $i210 := $eq.i32($i209, 40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10243, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i210 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10245, 10} true;
  assume {:verifier.code 0} true;
  call $i211 := alauda_check_media($p1);
  // WARNING: %227 = call i32 @alauda_check_media(%struct.us_data* %1), !dbg !5680, !verifier.code !5111
  call {:cexpr "rc"} boogie_si_record_i32($i211);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10247, 12} true;
  assume {:verifier.code 0} true;
  $i212 := $ne.i32($i211, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10247, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i212} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i210 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb19:
  assume ($i212 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10248, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $i211;
  goto $bb6;
$bb20:
  assume !(($i212 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10253, 20} true;
  assume {:verifier.code 0} true;
  $i213 := $p2i.ref.i64($p0);
  // WARNING: %232 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5688, !verifier.code !5111
  call {:cexpr "__cil_tmp173"} boogie_si_record_i64($i213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10254, 33} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i64($i213, 80);
  // WARNING: %233 = add i64 %232, 80, !dbg !5692, !verifier.code !5111
  call {:cexpr "__cil_tmp174"} boogie_si_record_i64($i214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10255, 22} true;
  assume {:verifier.code 0} true;
  $p215 := $i2p.i64.ref($i214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10255, 20} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10256, 33} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p216, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10257, 20} true;
  assume {:verifier.code 0} true;
  $i218 := $load.i8($M.0, $p217);
  // WARNING: %237 = load i8, i8* %236, align 1, !dbg !5702, !verifier.code !5111
  call {:cexpr "__cil_tmp177"} boogie_si_record_i8($i218);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10258, 20} true;
  assume {:verifier.code 0} true;
  $i219 := $zext.i8.i16($i218);
  // WARNING: %238 = zext i8 %237 to i16, !dbg !5705, !verifier.code !5111
  call {:cexpr "__cil_tmp178"} boogie_si_record_i16($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10259, 20} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.i16.i32($i219);
  // WARNING: %239 = zext i16 %238 to i32, !dbg !5708, !verifier.code !5111
  call {:cexpr "__cil_tmp179"} boogie_si_record_i32($i220);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10260, 33} true;
  assume {:verifier.code 0} true;
  $i221 := $shl.i32($i220, 8);
  // WARNING: %240 = shl i32 %239, 8, !dbg !5711, !verifier.code !5111
  call {:cexpr "__cil_tmp180"} boogie_si_record_i32($i221);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10261, 20} true;
  assume {:verifier.code 0} true;
  $i222 := $p2i.ref.i64($p0);
  // WARNING: %241 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5714, !verifier.code !5111
  call {:cexpr "__cil_tmp181"} boogie_si_record_i64($i222);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10262, 33} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i64($i222, 80);
  // WARNING: %242 = add i64 %241, 80, !dbg !5717, !verifier.code !5111
  call {:cexpr "__cil_tmp182"} boogie_si_record_i64($i223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10263, 22} true;
  assume {:verifier.code 0} true;
  $p224 := $i2p.i64.ref($i223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10263, 20} true;
  assume {:verifier.code 0} true;
  $p225 := $load.ref($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10264, 33} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p225, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10265, 20} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i8($M.0, $p226);
  // WARNING: %246 = load i8, i8* %245, align 1, !dbg !5727, !verifier.code !5111
  call {:cexpr "__cil_tmp185"} boogie_si_record_i8($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10266, 20} true;
  assume {:verifier.code 0} true;
  $i228 := $zext.i8.i16($i227);
  // WARNING: %247 = zext i8 %246 to i16, !dbg !5730, !verifier.code !5111
  call {:cexpr "__cil_tmp186"} boogie_si_record_i16($i228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10267, 20} true;
  assume {:verifier.code 0} true;
  $i229 := $zext.i16.i32($i228);
  // WARNING: %248 = zext i16 %247 to i32, !dbg !5733, !verifier.code !5111
  call {:cexpr "__cil_tmp187"} boogie_si_record_i32($i229);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10268, 33} true;
  assume {:verifier.code 0} true;
  $i230 := $or.i32($i229, $i221);
  // WARNING: %249 = or i32 %248, %240, !dbg !5736, !verifier.code !5111
  call {:cexpr "__cil_tmp188"} boogie_si_record_i32($i230);
  // WARNING: call void @llvm.dbg.value(metadata i32 %249, i64 0, metadata !5841, metadata !5110), !dbg !5842, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10270, 17} true;
  assume {:verifier.code 0} true;
  $i231 := $shl.i32($i230, 16);
  // WARNING: %250 = shl i32 %249, 16, !dbg !5741, !verifier.code !5111
  call {:cexpr "page"} boogie_si_record_i32($i231);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10271, 20} true;
  assume {:verifier.code 0} true;
  $i232 := $p2i.ref.i64($p0);
  // WARNING: %251 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5742, !verifier.code !5111
  call {:cexpr "__cil_tmp189"} boogie_si_record_i64($i232);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10272, 33} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i64($i232, 80);
  // WARNING: %252 = add i64 %251, 80, !dbg !5745, !verifier.code !5111
  call {:cexpr "__cil_tmp190"} boogie_si_record_i64($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10273, 22} true;
  assume {:verifier.code 0} true;
  $p234 := $i2p.i64.ref($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10273, 20} true;
  assume {:verifier.code 0} true;
  $p235 := $load.ref($M.0, $p234);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10274, 33} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p235, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10275, 20} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i8($M.0, $p236);
  // WARNING: %256 = load i8, i8* %255, align 1, !dbg !5755, !verifier.code !5111
  call {:cexpr "__cil_tmp193"} boogie_si_record_i8($i237);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10276, 20} true;
  assume {:verifier.code 0} true;
  $i238 := $zext.i8.i16($i237);
  // WARNING: %257 = zext i8 %256 to i16, !dbg !5758, !verifier.code !5111
  call {:cexpr "__cil_tmp194"} boogie_si_record_i16($i238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10277, 20} true;
  assume {:verifier.code 0} true;
  $i239 := $zext.i16.i32($i238);
  // WARNING: %258 = zext i16 %257 to i32, !dbg !5761, !verifier.code !5111
  call {:cexpr "__cil_tmp195"} boogie_si_record_i32($i239);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10278, 33} true;
  assume {:verifier.code 0} true;
  $i240 := $shl.i32($i239, 8);
  // WARNING: %259 = shl i32 %258, 8, !dbg !5764, !verifier.code !5111
  call {:cexpr "__cil_tmp196"} boogie_si_record_i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10279, 20} true;
  assume {:verifier.code 0} true;
  $i241 := $p2i.ref.i64($p0);
  // WARNING: %260 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5767, !verifier.code !5111
  call {:cexpr "__cil_tmp197"} boogie_si_record_i64($i241);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10280, 33} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i64($i241, 80);
  // WARNING: %261 = add i64 %260, 80, !dbg !5770, !verifier.code !5111
  call {:cexpr "__cil_tmp198"} boogie_si_record_i64($i242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10281, 22} true;
  assume {:verifier.code 0} true;
  $p243 := $i2p.i64.ref($i242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10281, 20} true;
  assume {:verifier.code 0} true;
  $p244 := $load.ref($M.0, $p243);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10282, 33} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p244, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10283, 20} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i8($M.0, $p245);
  // WARNING: %265 = load i8, i8* %264, align 1, !dbg !5780, !verifier.code !5111
  call {:cexpr "__cil_tmp201"} boogie_si_record_i8($i246);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10284, 20} true;
  assume {:verifier.code 0} true;
  $i247 := $zext.i8.i16($i246);
  // WARNING: %266 = zext i8 %265 to i16, !dbg !5783, !verifier.code !5111
  call {:cexpr "__cil_tmp202"} boogie_si_record_i16($i247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10285, 20} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i16.i32($i247);
  // WARNING: %267 = zext i16 %266 to i32, !dbg !5786, !verifier.code !5111
  call {:cexpr "__cil_tmp203"} boogie_si_record_i32($i248);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10286, 33} true;
  assume {:verifier.code 0} true;
  $i249 := $or.i32($i248, $i240);
  // WARNING: %268 = or i32 %267, %259, !dbg !5789, !verifier.code !5111
  call {:cexpr "__cil_tmp204"} boogie_si_record_i32($i249);
  // WARNING: call void @llvm.dbg.value(metadata i32 %268, i64 0, metadata !5894, metadata !5110), !dbg !5895, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10288, 17} true;
  assume {:verifier.code 0} true;
  $i250 := $or.i32($i231, $i249);
  // WARNING: %269 = or i32 %250, %268, !dbg !5794, !verifier.code !5111
  call {:cexpr "page"} boogie_si_record_i32($i250);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10289, 20} true;
  assume {:verifier.code 0} true;
  $i251 := $p2i.ref.i64($p0);
  // WARNING: %270 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5795, !verifier.code !5111
  call {:cexpr "__cil_tmp206"} boogie_si_record_i64($i251);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10290, 33} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i64($i251, 80);
  // WARNING: %271 = add i64 %270, 80, !dbg !5798, !verifier.code !5111
  call {:cexpr "__cil_tmp207"} boogie_si_record_i64($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10291, 22} true;
  assume {:verifier.code 0} true;
  $p253 := $i2p.i64.ref($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10291, 20} true;
  assume {:verifier.code 0} true;
  $p254 := $load.ref($M.0, $p253);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10292, 33} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p254, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10293, 20} true;
  assume {:verifier.code 0} true;
  $i256 := $load.i8($M.0, $p255);
  // WARNING: %275 = load i8, i8* %274, align 1, !dbg !5808, !verifier.code !5111
  call {:cexpr "__cil_tmp210"} boogie_si_record_i8($i256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10294, 20} true;
  assume {:verifier.code 0} true;
  $i257 := $zext.i8.i16($i256);
  // WARNING: %276 = zext i8 %275 to i16, !dbg !5811, !verifier.code !5111
  call {:cexpr "__cil_tmp211"} boogie_si_record_i16($i257);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10295, 20} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i16.i32($i257);
  // WARNING: %277 = zext i16 %276 to i32, !dbg !5814, !verifier.code !5111
  call {:cexpr "__cil_tmp212"} boogie_si_record_i32($i258);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10296, 33} true;
  assume {:verifier.code 0} true;
  $i259 := $shl.i32($i258, 8);
  // WARNING: %278 = shl i32 %277, 8, !dbg !5817, !verifier.code !5111
  call {:cexpr "__cil_tmp213"} boogie_si_record_i32($i259);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10297, 20} true;
  assume {:verifier.code 0} true;
  $i260 := $p2i.ref.i64($p0);
  // WARNING: %279 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5820, !verifier.code !5111
  call {:cexpr "__cil_tmp214"} boogie_si_record_i64($i260);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10298, 33} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i64($i260, 80);
  // WARNING: %280 = add i64 %279, 80, !dbg !5823, !verifier.code !5111
  call {:cexpr "__cil_tmp215"} boogie_si_record_i64($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10299, 22} true;
  assume {:verifier.code 0} true;
  $p262 := $i2p.i64.ref($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10299, 20} true;
  assume {:verifier.code 0} true;
  $p263 := $load.ref($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10300, 33} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p263, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10301, 20} true;
  assume {:verifier.code 0} true;
  $i265 := $load.i8($M.0, $p264);
  // WARNING: %284 = load i8, i8* %283, align 1, !dbg !5833, !verifier.code !5111
  call {:cexpr "__cil_tmp218"} boogie_si_record_i8($i265);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10302, 20} true;
  assume {:verifier.code 0} true;
  $i266 := $zext.i8.i16($i265);
  // WARNING: %285 = zext i8 %284 to i16, !dbg !5836, !verifier.code !5111
  call {:cexpr "__cil_tmp219"} boogie_si_record_i16($i266);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10303, 20} true;
  assume {:verifier.code 0} true;
  $i267 := $zext.i16.i32($i266);
  // WARNING: %286 = zext i16 %285 to i32, !dbg !5839, !verifier.code !5111
  call {:cexpr "__cil_tmp220"} boogie_si_record_i32($i267);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10304, 33} true;
  assume {:verifier.code 0} true;
  $i268 := $or.i32($i267, $i259);
  // WARNING: %287 = or i32 %286, %278, !dbg !5842, !verifier.code !5111
  call {:cexpr "__cil_tmp221"} boogie_si_record_i32($i268);
  // WARNING: call void @llvm.dbg.value(metadata i32 %287, i64 0, metadata !5947, metadata !5110), !dbg !5948, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10306, 5} true;
  assume {:verifier.code 0} true;
  call $i269 := printk.ref.i32.i32(.str.11, $i250, $i268);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10308, 20} true;
  assume {:verifier.code 0} true;
  $i270 := $zext.i32.i64($i250);
  // WARNING: %289 = zext i32 %269 to i64, !dbg !5848, !verifier.code !5111
  call {:cexpr "__cil_tmp222"} boogie_si_record_i64($i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10309, 16} true;
  assume {:verifier.code 0} true;
  call $i271 := alauda_read_data($p1, $i270, $i268);
  // WARNING: %290 = call i32 @alauda_read_data(%struct.us_data* %1, i64 %289, i32 %287), !dbg !5851, !verifier.code !5111
  call {:cexpr "tmp___10"} boogie_si_record_i32($i271);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10311, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $i271;
  goto $bb6;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10317, 18} true;
  assume {:verifier.code 0} true;
  $i272 := $p2i.ref.i64($p0);
  // WARNING: %293 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5855, !verifier.code !5111
  call {:cexpr "__cil_tmp223"} boogie_si_record_i64($i272);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10318, 31} true;
  assume {:verifier.code 0} true;
  $i273 := $add.i64($i272, 80);
  // WARNING: %294 = add i64 %293, 80, !dbg !5859, !verifier.code !5111
  call {:cexpr "__cil_tmp224"} boogie_si_record_i64($i273);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10319, 20} true;
  assume {:verifier.code 0} true;
  $p274 := $i2p.i64.ref($i273);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10319, 18} true;
  assume {:verifier.code 0} true;
  $p275 := $load.ref($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10320, 31} true;
  assume {:verifier.code 0} true;
  $p276 := $p275;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10321, 18} true;
  assume {:verifier.code 0} true;
  $i277 := $load.i8($M.0, $p276);
  // WARNING: %298 = load i8, i8* %297, align 1, !dbg !5869, !verifier.code !5111
  call {:cexpr "__cil_tmp227"} boogie_si_record_i8($i277);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10322, 18} true;
  assume {:verifier.code 0} true;
  $i278 := $zext.i8.i32($i277);
  // WARNING: %299 = zext i8 %298 to i32, !dbg !5872, !verifier.code !5111
  call {:cexpr "__cil_tmp228"} boogie_si_record_i32($i278);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10323, 20} true;
  assume {:verifier.code 0} true;
  $i279 := $eq.i32($i278, 42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10323, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i279 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10325, 10} true;
  assume {:verifier.code 0} true;
  call $i280 := alauda_check_media($p1);
  // WARNING: %302 = call i32 @alauda_check_media(%struct.us_data* %1), !dbg !5878, !verifier.code !5111
  call {:cexpr "rc"} boogie_si_record_i32($i280);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10327, 12} true;
  assume {:verifier.code 0} true;
  $i281 := $ne.i32($i280, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10327, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i281} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i279 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i281 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $i280;
  goto $bb6;
$bb26:
  assume !(($i281 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10333, 20} true;
  assume {:verifier.code 0} true;
  $i282 := $p2i.ref.i64($p0);
  // WARNING: %307 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5886, !verifier.code !5111
  call {:cexpr "__cil_tmp229"} boogie_si_record_i64($i282);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10334, 33} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i64($i282, 80);
  // WARNING: %308 = add i64 %307, 80, !dbg !5890, !verifier.code !5111
  call {:cexpr "__cil_tmp230"} boogie_si_record_i64($i283);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10335, 22} true;
  assume {:verifier.code 0} true;
  $p284 := $i2p.i64.ref($i283);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10335, 20} true;
  assume {:verifier.code 0} true;
  $p285 := $load.ref($M.0, $p284);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10336, 33} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p285, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10337, 20} true;
  assume {:verifier.code 0} true;
  $i287 := $load.i8($M.0, $p286);
  // WARNING: %312 = load i8, i8* %311, align 1, !dbg !5900, !verifier.code !5111
  call {:cexpr "__cil_tmp233"} boogie_si_record_i8($i287);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10338, 20} true;
  assume {:verifier.code 0} true;
  $i288 := $zext.i8.i16($i287);
  // WARNING: %313 = zext i8 %312 to i16, !dbg !5903, !verifier.code !5111
  call {:cexpr "__cil_tmp234"} boogie_si_record_i16($i288);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10339, 20} true;
  assume {:verifier.code 0} true;
  $i289 := $zext.i16.i32($i288);
  // WARNING: %314 = zext i16 %313 to i32, !dbg !5906, !verifier.code !5111
  call {:cexpr "__cil_tmp235"} boogie_si_record_i32($i289);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10340, 33} true;
  assume {:verifier.code 0} true;
  $i290 := $shl.i32($i289, 8);
  // WARNING: %315 = shl i32 %314, 8, !dbg !5909, !verifier.code !5111
  call {:cexpr "__cil_tmp236"} boogie_si_record_i32($i290);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10341, 20} true;
  assume {:verifier.code 0} true;
  $i291 := $p2i.ref.i64($p0);
  // WARNING: %316 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5912, !verifier.code !5111
  call {:cexpr "__cil_tmp237"} boogie_si_record_i64($i291);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10342, 33} true;
  assume {:verifier.code 0} true;
  $i292 := $add.i64($i291, 80);
  // WARNING: %317 = add i64 %316, 80, !dbg !5915, !verifier.code !5111
  call {:cexpr "__cil_tmp238"} boogie_si_record_i64($i292);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10343, 22} true;
  assume {:verifier.code 0} true;
  $p293 := $i2p.i64.ref($i292);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10343, 20} true;
  assume {:verifier.code 0} true;
  $p294 := $load.ref($M.0, $p293);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10344, 33} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p294, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10345, 20} true;
  assume {:verifier.code 0} true;
  $i296 := $load.i8($M.0, $p295);
  // WARNING: %321 = load i8, i8* %320, align 1, !dbg !5925, !verifier.code !5111
  call {:cexpr "__cil_tmp241"} boogie_si_record_i8($i296);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10346, 20} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i8.i16($i296);
  // WARNING: %322 = zext i8 %321 to i16, !dbg !5928, !verifier.code !5111
  call {:cexpr "__cil_tmp242"} boogie_si_record_i16($i297);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10347, 20} true;
  assume {:verifier.code 0} true;
  $i298 := $zext.i16.i32($i297);
  // WARNING: %323 = zext i16 %322 to i32, !dbg !5931, !verifier.code !5111
  call {:cexpr "__cil_tmp243"} boogie_si_record_i32($i298);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10348, 33} true;
  assume {:verifier.code 0} true;
  $i299 := $or.i32($i298, $i290);
  // WARNING: %324 = or i32 %323, %315, !dbg !5934, !verifier.code !5111
  call {:cexpr "__cil_tmp244"} boogie_si_record_i32($i299);
  // WARNING: call void @llvm.dbg.value(metadata i32 %324, i64 0, metadata !6039, metadata !5110), !dbg !6040, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10350, 25} true;
  assume {:verifier.code 0} true;
  $i300 := $shl.i32($i299, 16);
  // WARNING: %325 = shl i32 %324, 16, !dbg !5939, !verifier.code !5111
  call {:cexpr "page___0"} boogie_si_record_i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10351, 20} true;
  assume {:verifier.code 0} true;
  $i301 := $p2i.ref.i64($p0);
  // WARNING: %326 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5940, !verifier.code !5111
  call {:cexpr "__cil_tmp245"} boogie_si_record_i64($i301);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10352, 33} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i64($i301, 80);
  // WARNING: %327 = add i64 %326, 80, !dbg !5943, !verifier.code !5111
  call {:cexpr "__cil_tmp246"} boogie_si_record_i64($i302);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10353, 22} true;
  assume {:verifier.code 0} true;
  $p303 := $i2p.i64.ref($i302);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10353, 20} true;
  assume {:verifier.code 0} true;
  $p304 := $load.ref($M.0, $p303);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10354, 33} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p304, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10355, 20} true;
  assume {:verifier.code 0} true;
  $i306 := $load.i8($M.0, $p305);
  // WARNING: %331 = load i8, i8* %330, align 1, !dbg !5953, !verifier.code !5111
  call {:cexpr "__cil_tmp249"} boogie_si_record_i8($i306);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10356, 20} true;
  assume {:verifier.code 0} true;
  $i307 := $zext.i8.i16($i306);
  // WARNING: %332 = zext i8 %331 to i16, !dbg !5956, !verifier.code !5111
  call {:cexpr "__cil_tmp250"} boogie_si_record_i16($i307);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10357, 20} true;
  assume {:verifier.code 0} true;
  $i308 := $zext.i16.i32($i307);
  // WARNING: %333 = zext i16 %332 to i32, !dbg !5959, !verifier.code !5111
  call {:cexpr "__cil_tmp251"} boogie_si_record_i32($i308);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10358, 33} true;
  assume {:verifier.code 0} true;
  $i309 := $shl.i32($i308, 8);
  // WARNING: %334 = shl i32 %333, 8, !dbg !5962, !verifier.code !5111
  call {:cexpr "__cil_tmp252"} boogie_si_record_i32($i309);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10359, 20} true;
  assume {:verifier.code 0} true;
  $i310 := $p2i.ref.i64($p0);
  // WARNING: %335 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5965, !verifier.code !5111
  call {:cexpr "__cil_tmp253"} boogie_si_record_i64($i310);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10360, 33} true;
  assume {:verifier.code 0} true;
  $i311 := $add.i64($i310, 80);
  // WARNING: %336 = add i64 %335, 80, !dbg !5968, !verifier.code !5111
  call {:cexpr "__cil_tmp254"} boogie_si_record_i64($i311);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10361, 22} true;
  assume {:verifier.code 0} true;
  $p312 := $i2p.i64.ref($i311);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10361, 20} true;
  assume {:verifier.code 0} true;
  $p313 := $load.ref($M.0, $p312);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10362, 33} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p313, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10363, 20} true;
  assume {:verifier.code 0} true;
  $i315 := $load.i8($M.0, $p314);
  // WARNING: %340 = load i8, i8* %339, align 1, !dbg !5978, !verifier.code !5111
  call {:cexpr "__cil_tmp257"} boogie_si_record_i8($i315);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10364, 20} true;
  assume {:verifier.code 0} true;
  $i316 := $zext.i8.i16($i315);
  // WARNING: %341 = zext i8 %340 to i16, !dbg !5981, !verifier.code !5111
  call {:cexpr "__cil_tmp258"} boogie_si_record_i16($i316);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10365, 20} true;
  assume {:verifier.code 0} true;
  $i317 := $zext.i16.i32($i316);
  // WARNING: %342 = zext i16 %341 to i32, !dbg !5984, !verifier.code !5111
  call {:cexpr "__cil_tmp259"} boogie_si_record_i32($i317);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10366, 33} true;
  assume {:verifier.code 0} true;
  $i318 := $or.i32($i317, $i309);
  // WARNING: %343 = or i32 %342, %334, !dbg !5987, !verifier.code !5111
  call {:cexpr "__cil_tmp260"} boogie_si_record_i32($i318);
  // WARNING: call void @llvm.dbg.value(metadata i32 %343, i64 0, metadata !6092, metadata !5110), !dbg !6093, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10368, 25} true;
  assume {:verifier.code 0} true;
  $i319 := $or.i32($i300, $i318);
  // WARNING: %344 = or i32 %325, %343, !dbg !5992, !verifier.code !5111
  call {:cexpr "page___0"} boogie_si_record_i32($i319);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10369, 20} true;
  assume {:verifier.code 0} true;
  $i320 := $p2i.ref.i64($p0);
  // WARNING: %345 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !5993, !verifier.code !5111
  call {:cexpr "__cil_tmp262"} boogie_si_record_i64($i320);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10370, 33} true;
  assume {:verifier.code 0} true;
  $i321 := $add.i64($i320, 80);
  // WARNING: %346 = add i64 %345, 80, !dbg !5996, !verifier.code !5111
  call {:cexpr "__cil_tmp263"} boogie_si_record_i64($i321);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10371, 22} true;
  assume {:verifier.code 0} true;
  $p322 := $i2p.i64.ref($i321);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10371, 20} true;
  assume {:verifier.code 0} true;
  $p323 := $load.ref($M.0, $p322);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10372, 33} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p323, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10373, 20} true;
  assume {:verifier.code 0} true;
  $i325 := $load.i8($M.0, $p324);
  // WARNING: %350 = load i8, i8* %349, align 1, !dbg !6006, !verifier.code !5111
  call {:cexpr "__cil_tmp266"} boogie_si_record_i8($i325);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10374, 20} true;
  assume {:verifier.code 0} true;
  $i326 := $zext.i8.i16($i325);
  // WARNING: %351 = zext i8 %350 to i16, !dbg !6009, !verifier.code !5111
  call {:cexpr "__cil_tmp267"} boogie_si_record_i16($i326);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10375, 20} true;
  assume {:verifier.code 0} true;
  $i327 := $zext.i16.i32($i326);
  // WARNING: %352 = zext i16 %351 to i32, !dbg !6012, !verifier.code !5111
  call {:cexpr "__cil_tmp268"} boogie_si_record_i32($i327);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10376, 33} true;
  assume {:verifier.code 0} true;
  $i328 := $shl.i32($i327, 8);
  // WARNING: %353 = shl i32 %352, 8, !dbg !6015, !verifier.code !5111
  call {:cexpr "__cil_tmp269"} boogie_si_record_i32($i328);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10377, 20} true;
  assume {:verifier.code 0} true;
  $i329 := $p2i.ref.i64($p0);
  // WARNING: %354 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !6018, !verifier.code !5111
  call {:cexpr "__cil_tmp270"} boogie_si_record_i64($i329);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10378, 33} true;
  assume {:verifier.code 0} true;
  $i330 := $add.i64($i329, 80);
  // WARNING: %355 = add i64 %354, 80, !dbg !6021, !verifier.code !5111
  call {:cexpr "__cil_tmp271"} boogie_si_record_i64($i330);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10379, 22} true;
  assume {:verifier.code 0} true;
  $p331 := $i2p.i64.ref($i330);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10379, 20} true;
  assume {:verifier.code 0} true;
  $p332 := $load.ref($M.0, $p331);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10380, 33} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p332, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10381, 20} true;
  assume {:verifier.code 0} true;
  $i334 := $load.i8($M.0, $p333);
  // WARNING: %359 = load i8, i8* %358, align 1, !dbg !6031, !verifier.code !5111
  call {:cexpr "__cil_tmp274"} boogie_si_record_i8($i334);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10382, 20} true;
  assume {:verifier.code 0} true;
  $i335 := $zext.i8.i16($i334);
  // WARNING: %360 = zext i8 %359 to i16, !dbg !6034, !verifier.code !5111
  call {:cexpr "__cil_tmp275"} boogie_si_record_i16($i335);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10383, 20} true;
  assume {:verifier.code 0} true;
  $i336 := $zext.i16.i32($i335);
  // WARNING: %361 = zext i16 %360 to i32, !dbg !6037, !verifier.code !5111
  call {:cexpr "__cil_tmp276"} boogie_si_record_i32($i336);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10384, 33} true;
  assume {:verifier.code 0} true;
  $i337 := $or.i32($i336, $i328);
  // WARNING: %362 = or i32 %361, %353, !dbg !6040, !verifier.code !5111
  call {:cexpr "__cil_tmp277"} boogie_si_record_i32($i337);
  // WARNING: call void @llvm.dbg.value(metadata i32 %362, i64 0, metadata !6145, metadata !5110), !dbg !6146, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10386, 5} true;
  assume {:verifier.code 0} true;
  call $i338 := printk.ref.i32.i32(.str.12, $i319, $i337);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10388, 20} true;
  assume {:verifier.code 0} true;
  $i339 := $zext.i32.i64($i319);
  // WARNING: %364 = zext i32 %344 to i64, !dbg !6046, !verifier.code !5111
  call {:cexpr "__cil_tmp278"} boogie_si_record_i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10389, 16} true;
  assume {:verifier.code 0} true;
  call $i340 := alauda_write_data($p1, $i339, $i337);
  // WARNING: %365 = call i32 @alauda_write_data(%struct.us_data* %1, i64 %364, i32 %362), !dbg !6049, !verifier.code !5111
  call {:cexpr "tmp___11"} boogie_si_record_i32($i340);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10391, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $i340;
  goto $bb6;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10397, 18} true;
  assume {:verifier.code 0} true;
  $i341 := $p2i.ref.i64($p0);
  // WARNING: %368 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !6053, !verifier.code !5111
  call {:cexpr "__cil_tmp279"} boogie_si_record_i64($i341);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10398, 31} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i64($i341, 80);
  // WARNING: %369 = add i64 %368, 80, !dbg !6057, !verifier.code !5111
  call {:cexpr "__cil_tmp280"} boogie_si_record_i64($i342);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10399, 20} true;
  assume {:verifier.code 0} true;
  $p343 := $i2p.i64.ref($i342);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10399, 18} true;
  assume {:verifier.code 0} true;
  $p344 := $load.ref($M.0, $p343);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10400, 31} true;
  assume {:verifier.code 0} true;
  $p345 := $p344;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10401, 18} true;
  assume {:verifier.code 0} true;
  $i346 := $load.i8($M.0, $p345);
  // WARNING: %373 = load i8, i8* %372, align 1, !dbg !6067, !verifier.code !5111
  call {:cexpr "__cil_tmp283"} boogie_si_record_i8($i346);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10402, 18} true;
  assume {:verifier.code 0} true;
  $i347 := $zext.i8.i32($i346);
  // WARNING: %374 = zext i8 %373 to i32, !dbg !6070, !verifier.code !5111
  call {:cexpr "__cil_tmp284"} boogie_si_record_i32($i347);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10403, 20} true;
  assume {:verifier.code 0} true;
  $i348 := $eq.i32($i347, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10403, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i348 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10405, 5} true;
  assume {:verifier.code 0} true;
  call $i349 := printk.ref(.str.13);
  // WARNING: call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !6183, metadata !5110), !dbg !6184, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10408, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p10, 0, 18, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10409, 24} true;
  assume {:verifier.code 0} true;
  $p350 := $p10;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10410, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p350, $sub.i8(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10411, 24} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($p10, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10412, 20} true;
  assume {:verifier.code 0} true;
  $i352 := $p2i.ref.i64($p6);
  // WARNING: %380 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6091, !verifier.code !5111
  call {:cexpr "__cil_tmp289"} boogie_si_record_i64($i352);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10413, 33} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i64($i352, 100);
  // WARNING: %381 = add i64 %380, 100, !dbg !6094, !verifier.code !5111
  call {:cexpr "__cil_tmp290"} boogie_si_record_i64($i353);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10414, 23} true;
  assume {:verifier.code 0} true;
  $p354 := $i2p.i64.ref($i353);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10414, 21} true;
  assume {:verifier.code 0} true;
  $i355 := $load.i8($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10414, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p351, $i355);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10415, 24} true;
  assume {:verifier.code 0} true;
  $p356 := $add.ref($p10, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10416, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p356, 11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10417, 24} true;
  assume {:verifier.code 0} true;
  $p357 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10418, 20} true;
  assume {:verifier.code 0} true;
  $i358 := $p2i.ref.i64($p6);
  // WARNING: %386 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6107, !verifier.code !5111
  call {:cexpr "__cil_tmp293"} boogie_si_record_i64($i358);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10419, 33} true;
  assume {:verifier.code 0} true;
  $i359 := $add.i64($i358, 104);
  // WARNING: %387 = add i64 %386, 104, !dbg !6110, !verifier.code !5111
  call {:cexpr "__cil_tmp294"} boogie_si_record_i64($i359);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10420, 22} true;
  assume {:verifier.code 0} true;
  $p360 := $i2p.i64.ref($i359);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10420, 20} true;
  assume {:verifier.code 0} true;
  $i361 := $load.i64($M.0, $p360);
  // WARNING: %389 = load i64, i64* %388, align 8, !dbg !6114, !verifier.code !5111
  call {:cexpr "__cil_tmp295"} boogie_si_record_i64($i361);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10421, 21} true;
  assume {:verifier.code 0} true;
  $i362 := $trunc.i64.i8($i361);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10421, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p357, $i362);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10422, 24} true;
  assume {:verifier.code 0} true;
  $p363 := $add.ref($p10, 13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10423, 20} true;
  assume {:verifier.code 0} true;
  $i364 := $p2i.ref.i64($p6);
  // WARNING: %392 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6122, !verifier.code !5111
  call {:cexpr "__cil_tmp297"} boogie_si_record_i64($i364);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10424, 33} true;
  assume {:verifier.code 0} true;
  $i365 := $add.i64($i364, 112);
  // WARNING: %393 = add i64 %392, 112, !dbg !6125, !verifier.code !5111
  call {:cexpr "__cil_tmp298"} boogie_si_record_i64($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10425, 22} true;
  assume {:verifier.code 0} true;
  $p366 := $i2p.i64.ref($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10425, 20} true;
  assume {:verifier.code 0} true;
  $i367 := $load.i64($M.0, $p366);
  // WARNING: %395 = load i64, i64* %394, align 8, !dbg !6129, !verifier.code !5111
  call {:cexpr "__cil_tmp299"} boogie_si_record_i64($i367);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10426, 21} true;
  assume {:verifier.code 0} true;
  $i368 := $trunc.i64.i8($i367);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10426, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p363, $i368);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10427, 5} true;
  assume {:verifier.code 0} true;
  call usb_stor_set_xfer_buf($p10, 18, $p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10429, 5} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb6;
$bb30:
  assume !(($i348 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10435, 18} true;
  assume {:verifier.code 0} true;
  $i369 := $p2i.ref.i64($p0);
  // WARNING: %399 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !6136, !verifier.code !5111
  call {:cexpr "__cil_tmp300"} boogie_si_record_i64($i369);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10436, 31} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i64($i369, 80);
  // WARNING: %400 = add i64 %399, 80, !dbg !6140, !verifier.code !5111
  call {:cexpr "__cil_tmp301"} boogie_si_record_i64($i370);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10437, 20} true;
  assume {:verifier.code 0} true;
  $p371 := $i2p.i64.ref($i370);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10437, 18} true;
  assume {:verifier.code 0} true;
  $p372 := $load.ref($M.0, $p371);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10438, 31} true;
  assume {:verifier.code 0} true;
  $p373 := $p372;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10439, 18} true;
  assume {:verifier.code 0} true;
  $i374 := $load.i8($M.0, $p373);
  // WARNING: %404 = load i8, i8* %403, align 1, !dbg !6150, !verifier.code !5111
  call {:cexpr "__cil_tmp304"} boogie_si_record_i8($i374);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10440, 18} true;
  assume {:verifier.code 0} true;
  $i375 := $zext.i8.i32($i374);
  // WARNING: %405 = zext i8 %404 to i32, !dbg !6153, !verifier.code !5111
  call {:cexpr "__cil_tmp305"} boogie_si_record_i32($i375);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10441, 20} true;
  assume {:verifier.code 0} true;
  $i376 := $eq.i32($i375, 30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10441, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i376} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i376 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10442, 5} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb6;
$bb33:
  assume !(($i376 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10448, 18} true;
  assume {:verifier.code 0} true;
  $i377 := $p2i.ref.i64($p0);
  // WARNING: %410 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !6161, !verifier.code !5111
  call {:cexpr "__cil_tmp306"} boogie_si_record_i64($i377);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10449, 31} true;
  assume {:verifier.code 0} true;
  $i378 := $add.i64($i377, 80);
  // WARNING: %411 = add i64 %410, 80, !dbg !6165, !verifier.code !5111
  call {:cexpr "__cil_tmp307"} boogie_si_record_i64($i378);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10450, 20} true;
  assume {:verifier.code 0} true;
  $p379 := $i2p.i64.ref($i378);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10450, 18} true;
  assume {:verifier.code 0} true;
  $p380 := $load.ref($M.0, $p379);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10451, 31} true;
  assume {:verifier.code 0} true;
  $p381 := $p380;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10452, 18} true;
  assume {:verifier.code 0} true;
  $i382 := $load.i8($M.0, $p381);
  // WARNING: %415 = load i8, i8* %414, align 1, !dbg !6175, !verifier.code !5111
  call {:cexpr "__cil_tmp310"} boogie_si_record_i8($i382);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10453, 18} true;
  assume {:verifier.code 0} true;
  $i383 := $zext.i8.i32($i382);
  // WARNING: %416 = zext i8 %415 to i32, !dbg !6178, !verifier.code !5111
  call {:cexpr "__cil_tmp311"} boogie_si_record_i32($i383);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10454, 18} true;
  assume {:verifier.code 0} true;
  $i384 := $p2i.ref.i64($p0);
  // WARNING: %417 = ptrtoint %struct.scsi_cmnd* %0 to i64, !dbg !6181, !verifier.code !5111
  call {:cexpr "__cil_tmp312"} boogie_si_record_i64($i384);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10455, 31} true;
  assume {:verifier.code 0} true;
  $i385 := $add.i64($i384, 80);
  // WARNING: %418 = add i64 %417, 80, !dbg !6184, !verifier.code !5111
  call {:cexpr "__cil_tmp313"} boogie_si_record_i64($i385);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10456, 20} true;
  assume {:verifier.code 0} true;
  $p386 := $i2p.i64.ref($i385);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10456, 18} true;
  assume {:verifier.code 0} true;
  $p387 := $load.ref($M.0, $p386);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10457, 31} true;
  assume {:verifier.code 0} true;
  $p388 := $p387;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10458, 18} true;
  assume {:verifier.code 0} true;
  $i389 := $load.i8($M.0, $p388);
  // WARNING: %422 = load i8, i8* %421, align 1, !dbg !6194, !verifier.code !5111
  call {:cexpr "__cil_tmp316"} boogie_si_record_i8($i389);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10459, 18} true;
  assume {:verifier.code 0} true;
  $i390 := $zext.i8.i32($i389);
  // WARNING: %423 = zext i8 %422 to i32, !dbg !6197, !verifier.code !5111
  call {:cexpr "__cil_tmp317"} boogie_si_record_i32($i390);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10460, 3} true;
  assume {:verifier.code 0} true;
  call $i391 := printk.ref.i32.i32(.str.14, $i383, $i390);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10462, 18} true;
  assume {:verifier.code 0} true;
  $i392 := $p2i.ref.i64($p6);
  // WARNING: %425 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6201, !verifier.code !5111
  call {:cexpr "__cil_tmp318"} boogie_si_record_i64($i392);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10463, 31} true;
  assume {:verifier.code 0} true;
  $i393 := $add.i64($i392, 100);
  // WARNING: %426 = add i64 %425, 100, !dbg !6204, !verifier.code !5111
  call {:cexpr "__cil_tmp319"} boogie_si_record_i64($i393);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10464, 5} true;
  assume {:verifier.code 0} true;
  $p394 := $i2p.i64.ref($i393);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10464, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p394, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10465, 18} true;
  assume {:verifier.code 0} true;
  $i395 := $p2i.ref.i64($p6);
  // WARNING: %428 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6209, !verifier.code !5111
  call {:cexpr "__cil_tmp320"} boogie_si_record_i64($i395);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10466, 31} true;
  assume {:verifier.code 0} true;
  $i396 := $add.i64($i395, 104);
  // WARNING: %429 = add i64 %428, 104, !dbg !6212, !verifier.code !5111
  call {:cexpr "__cil_tmp321"} boogie_si_record_i64($i396);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10467, 5} true;
  assume {:verifier.code 0} true;
  $p397 := $i2p.i64.ref($i396);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10467, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p397, 32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10468, 18} true;
  assume {:verifier.code 0} true;
  $i398 := $p2i.ref.i64($p6);
  // WARNING: %431 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !6217, !verifier.code !5111
  call {:cexpr "__cil_tmp322"} boogie_si_record_i64($i398);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10469, 31} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i64($i398, 112);
  // WARNING: %432 = add i64 %431, 112, !dbg !6220, !verifier.code !5111
  call {:cexpr "__cil_tmp323"} boogie_si_record_i64($i399);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10470, 5} true;
  assume {:verifier.code 0} true;
  $p400 := $i2p.i64.ref($i399);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10470, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p400, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10472, 3} true;
  assume {:verifier.code 0} true;
  $i27 := 1;
  goto $bb6;
}
const usb_stor_Bulk_reset: ref;
axiom (usb_stor_Bulk_reset == $sub.ref(0, 76347));
procedure usb_stor_Bulk_reset($p0: ref)
  returns ($r: i32);
const usb_stor_probe2: ref;
axiom (usb_stor_probe2 == $sub.ref(0, 77379));
procedure usb_stor_probe2($p0: ref)
  returns ($r: i32);
const printk: ref;
axiom (printk == $sub.ref(0, 78411));
procedure printk.ref($p0: ref)
  returns ($r: i32);
procedure printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32);
procedure printk.ref.i64($p0: ref, p.1: i64)
  returns ($r: i32);
procedure printk.ref.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure printk.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32)
  returns ($r: i32);
procedure printk.ref.i32.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32, p.5: i32)
  returns ($r: i32);
procedure printk.ref.i32.i32.i32.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32)
  returns ($r: i32);
procedure printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
const __memcpy: ref;
axiom (__memcpy == $sub.ref(0, 79443));
procedure __memcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 80475));
procedure __builtinx_memcpy()
  returns ($r: i32);
procedure __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const fill_inquiry_response: ref;
axiom (fill_inquiry_response == $sub.ref(0, 81507));
procedure fill_inquiry_response($p0: ref, $p1: ref, $i2: i32);
const alauda_check_media: ref;
axiom (alauda_check_media == $sub.ref(0, 82539));
procedure alauda_check_media($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i32;
  var $i47: i64;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i64;
  var $i59: i64;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i67: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6183, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.us_data* %0 to i64, !dbg !5115, !verifier.code !5108
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6184, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 648);
  // WARNING: %4 = add i64 %3, 648, !dbg !5120, !verifier.code !5108
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6185, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6185, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6186, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  // WARNING: call void @llvm.dbg.value(metadata %struct.alauda_info* %7, i64 0, metadata !6350, metadata !5110), !dbg !6351, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6188, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6188, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6188, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 0);
  // WARNING: %10 = add i64 %9, 0, !dbg !5134, !verifier.code !5108
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6189, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6190, 8} true;
  assume {:verifier.code 0} true;
  call $i11 := alauda_get_media_status($p0, $p10);
  // WARNING: %12 = call i32 @alauda_get_media_status(%struct.us_data* %0, i8* %11), !dbg !5140, !verifier.code !5108
  call {:cexpr "rc"} boogie_si_record_i32($i11);
  // WARNING: call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !6363, metadata !5110), !dbg !6364, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6194, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6194, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6194, 42} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 0);
  // WARNING: %15 = add i64 %14, 0, !dbg !5148, !verifier.code !5108
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6195, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6195, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  // WARNING: %17 = load i8, i8* %16, align 1, !dbg !5152, !verifier.code !5108
  call {:cexpr "__cil_tmp13"} boogie_si_record_i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6196, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  // WARNING: %18 = zext i8 %17 to i32, !dbg !5155, !verifier.code !5108
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6197, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6197, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6197, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6198, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6202, 35} true;
  assume {:verifier.code 0} true;
  $p20 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6202, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6202, 44} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 0);
  // WARNING: %25 = add i64 %24, 0, !dbg !5169, !verifier.code !5108
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6203, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6203, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i8($M.0, $p23);
  // WARNING: %27 = load i8, i8* %26, align 1, !dbg !5173, !verifier.code !5108
  call {:cexpr "__cil_tmp17"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6204, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i24);
  // WARNING: %28 = zext i8 %27 to i32, !dbg !5176, !verifier.code !5108
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6205, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i25, 31);
  // WARNING: %29 = and i32 %28, 31, !dbg !5179, !verifier.code !5108
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6206, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6206, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6218, 9} true;
  assume {:verifier.code 0} true;
  call $i36 := printk.ref(.str.15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6219, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p0);
  // WARNING: %44 = ptrtoint %struct.us_data* %0 to i64, !dbg !5214, !verifier.code !5108
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6220, 35} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 192);
  // WARNING: %45 = add i64 %44, 192, !dbg !5217, !verifier.code !5108
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6221, 25} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6221, 23} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6222, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6222, 23} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6223, 23} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  // WARNING: %50 = ptrtoint %struct.scsi_device* %49 to i64, !dbg !5227, !verifier.code !5108
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6224, 35} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 156);
  // WARNING: %51 = add i64 %50, 156, !dbg !5230, !verifier.code !5108
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6225, 25} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6225, 23} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  // WARNING: %53 = load i32, i32* %52, align 4, !dbg !5234, !verifier.code !5108
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6226, 23} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i32.i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6226, 35} true;
  assume {:verifier.code 0} true;
  $i48 := $mul.i64($i47, 48);
  // WARNING: %55 = mul i64 %54, 48, !dbg !5238, !verifier.code !5108
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6227, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64(0, $i48);
  // WARNING: %56 = add i64 0, %55, !dbg !5241, !verifier.code !5108
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6228, 23} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p0);
  // WARNING: %57 = ptrtoint %struct.us_data* %0 to i64, !dbg !5244, !verifier.code !5108
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6229, 35} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 648);
  // WARNING: %58 = add i64 %57, 648, !dbg !5247, !verifier.code !5108
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6230, 25} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6230, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6231, 23} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6232, 23} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  // WARNING: %62 = ptrtoint %struct.alauda_info* %61 to i64, !dbg !5257, !verifier.code !5108
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, $i49);
  // WARNING: %63 = add i64 %62, %56, !dbg !5260, !verifier.code !5108
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6234, 23} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6235, 9} true;
  assume {:verifier.code 0} true;
  call alauda_free_maps($p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6236, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p6);
  // WARNING: %65 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5267, !verifier.code !5108
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6237, 35} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64($i58, 100);
  // WARNING: %66 = add i64 %65, 100, !dbg !5270, !verifier.code !5108
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6238, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6238, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6239, 23} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p6);
  // WARNING: %68 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5275, !verifier.code !5108
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6240, 35} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 104);
  // WARNING: %69 = add i64 %68, 104, !dbg !5278, !verifier.code !5108
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6241, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6241, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p63, 58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6242, 23} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p6);
  // WARNING: %71 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5283, !verifier.code !5108
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6243, 35} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 112);
  // WARNING: %72 = add i64 %71, 112, !dbg !5286, !verifier.code !5108
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6244, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $i2p.i64.ref($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6244, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p66, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6246, 9} true;
  assume {:verifier.code 0} true;
  $i67 := 1;
  goto $bb8;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6207, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb5:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6211, 37} true;
  assume {:verifier.code 0} true;
  $p28 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6211, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6211, 46} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 1);
  // WARNING: %35 = add i64 %34, 1, !dbg !5193, !verifier.code !5108
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6212, 23} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6212, 21} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  // WARNING: %37 = load i8, i8* %36, align 1, !dbg !5197, !verifier.code !5108
  call {:cexpr "__cil_tmp22"} boogie_si_record_i8($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6213, 21} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  // WARNING: %38 = zext i8 %37 to i32, !dbg !5200, !verifier.code !5108
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6214, 33} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 1);
  // WARNING: %39 = and i32 %38, 1, !dbg !5203, !verifier.code !5108
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6215, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6215, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6215, 29} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6298, 1} true;
  assume {:verifier.code 0} true;
  $r := $i67;
  $exn := false;
  return;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6257, 33} true;
  assume {:verifier.code 0} true;
  $p68 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6257, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6257, 42} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 0);
  // WARNING: %80 = add i64 %79, 0, !dbg !5297, !verifier.code !5108
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6258, 19} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6258, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  // WARNING: %82 = load i8, i8* %81, align 1, !dbg !5301, !verifier.code !5108
  call {:cexpr "__cil_tmp49"} boogie_si_record_i8($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6259, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  // WARNING: %83 = zext i8 %82 to i32, !dbg !5304, !verifier.code !5108
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6260, 19} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6260, 19} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6260, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6262, 5} true;
  assume {:verifier.code 0} true;
  call $i76 := printk.ref(.str.16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6263, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p0);
  // WARNING: %88 = ptrtoint %struct.us_data* %0 to i64, !dbg !5313, !verifier.code !5108
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6264, 31} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, 192);
  // WARNING: %89 = add i64 %88, 192, !dbg !5316, !verifier.code !5108
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6265, 21} true;
  assume {:verifier.code 0} true;
  $p79 := $i2p.i64.ref($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6265, 19} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6266, 19} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6266, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6267, 19} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p82);
  // WARNING: %94 = ptrtoint %struct.scsi_device* %93 to i64, !dbg !5326, !verifier.code !5108
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6268, 31} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 156);
  // WARNING: %95 = add i64 %94, 156, !dbg !5329, !verifier.code !5108
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6269, 21} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6269, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  // WARNING: %97 = load i32, i32* %96, align 4, !dbg !5333, !verifier.code !5108
  call {:cexpr "__cil_tmp57"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6270, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i32.i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6270, 31} true;
  assume {:verifier.code 0} true;
  $i88 := $mul.i64($i87, 48);
  // WARNING: %99 = mul i64 %98, 48, !dbg !5337, !verifier.code !5108
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6271, 21} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64(0, $i88);
  // WARNING: %100 = add i64 0, %99, !dbg !5340, !verifier.code !5108
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6272, 19} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p0);
  // WARNING: %101 = ptrtoint %struct.us_data* %0 to i64, !dbg !5343, !verifier.code !5108
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6273, 31} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 648);
  // WARNING: %102 = add i64 %101, 648, !dbg !5346, !verifier.code !5108
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6274, 21} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6274, 19} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6275, 19} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6276, 19} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p94);
  // WARNING: %106 = ptrtoint %struct.alauda_info* %105 to i64, !dbg !5356, !verifier.code !5108
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6277, 31} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, $i89);
  // WARNING: %107 = add i64 %106, %100, !dbg !5359, !verifier.code !5108
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6278, 19} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6279, 5} true;
  assume {:verifier.code 0} true;
  call alauda_free_maps($p97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6280, 5} true;
  assume {:verifier.code 0} true;
  call $i98 := alauda_init_media($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6281, 19} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p6);
  // WARNING: %110 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5367, !verifier.code !5108
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6282, 31} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 100);
  // WARNING: %111 = add i64 %110, 100, !dbg !5370, !verifier.code !5108
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6283, 7} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6283, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p101, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6284, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p6);
  // WARNING: %113 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5375, !verifier.code !5108
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6285, 31} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, 104);
  // WARNING: %114 = add i64 %113, 104, !dbg !5378, !verifier.code !5108
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6286, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p104, 40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6287, 19} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p6);
  // WARNING: %116 = ptrtoint %struct.alauda_info* %7 to i64, !dbg !5383, !verifier.code !5108
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6288, 31} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i64($i105, 112);
  // WARNING: %117 = add i64 %116, 112, !dbg !5386, !verifier.code !5108
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6289, 7} true;
  assume {:verifier.code 0} true;
  $p107 := $i2p.i64.ref($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6289, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p107, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6291, 5} true;
  assume {:verifier.code 0} true;
  $i67 := 1;
  goto $bb8;
$bb13:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6296, 3} true;
  assume {:verifier.code 0} true;
  $i67 := 0;
  goto $bb8;
}
const __fswab32: ref;
axiom (__fswab32 == $sub.ref(0, 83571));
procedure __fswab32($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4183, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := __arch_swab32($i0);
  // WARNING: %2 = call i32 @__arch_swab32(i32 %0) #0, !dbg !5114, !verifier.code !5113
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4185, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const usb_stor_set_xfer_buf: ref;
axiom (usb_stor_set_xfer_buf == $sub.ref(0, 84603));
procedure usb_stor_set_xfer_buf($p0: ref, $i1: i32, $p2: ref);
const alauda_read_data: ref;
axiom (alauda_read_data == $sub.ref(0, 85635));
procedure alauda_read_data($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i32;
  var $i109: i64;
  var $i110: i64;
  var $i111: i64;
  var $i112: i64;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i32;
  var $i122: i1;
  var $i123: i32;
  var $i124: i32;
  var $i125: i32;
  var $i126: i64;
  var $p127: ref;
  var $i128: i64;
  var $i129: i64;
  var $i130: i1;
  var $i131: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i16;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i64;
  var $i143: i64;
  var $p144: ref;
  var $i145: i32;
  var $i146: i64;
  var $i147: i64;
  var $i148: i64;
  var $i149: i64;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i64;
  var $i170: i64;
  var $p171: ref;
  var $i172: i32;
  var $i173: i64;
  var $i174: i64;
  var $i175: i64;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $i181: i64;
  var $i182: i64;
  var $p183: ref;
  var $i184: i64;
  var $i185: i64;
  var $i186: i64;
  var $i187: i16;
  var $p188: ref;
  var $i189: i16;
  var $i190: i32;
  var $i191: i32;
  var $i192: i32;
  var $i193: i1;
  var $i194: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i32;
  var $i199: i32;
  var $i200: i32;
  var $i201: i32;
  var $i202: i32;
  var $i203: i1;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i32;
  var $i209: i1;
  var $i210: i32;
  var $i211: i32;
  var $i212: i64;
  var $i213: i64;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $i218: i64;
  var $i219: i64;
  var $p220: ref;
  var $i221: i32;
  var $i222: i64;
  var $i223: i64;
  var $i224: i64;
  var $i225: i64;
  var $i226: i64;
  var $i227: i64;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $i231: i64;
  var $i232: i64;
  var $p233: ref;
  var $p234: ref;
  var $i235: i64;
  var $p236: ref;
  var $p237: ref;
  var $i238: i64;
  var $p239: ref;
  var $i240: i16;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i32;
  var $i245: i64;
  var $i247: i32;
  var $i248: i32;
  var $i249: i32;
  var $i250: i32;
  var $i251: i1;
  var $i252: i32;
  var $i246: i32;
  var $i253: i64;
  var $i254: i64;
  var $p255: ref;
  var $p256: ref;
  var $i257: i32;
  var $i258: i32;
  var $i259: i32;
  var $i260: i16;
  var $i261: i32;
  var $i195: i32;
  var $i132: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !6630, metadata !5110), !dbg !6631, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !6632, metadata !5110), !dbg !6633, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8836, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.us_data* %0 to i64, !dbg !5122, !verifier.code !5110
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8837, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 192);
  // WARNING: %7 = add i64 %6, 192, !dbg !5126, !verifier.code !5110
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8838, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8838, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8839, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8839, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8840, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  // WARNING: %12 = ptrtoint %struct.scsi_device* %11 to i64, !dbg !5136, !verifier.code !5110
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8841, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 156);
  // WARNING: %13 = add i64 %12, 156, !dbg !5139, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8842, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8842, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  // WARNING: %15 = load i32, i32* %14, align 4, !dbg !5143, !verifier.code !5110
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8843, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8843, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64($i15, 48);
  // WARNING: %17 = mul i64 %16, 48, !dbg !5147, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8844, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 29);
  // WARNING: %18 = add i64 %17, 29, !dbg !5150, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8845, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64(0, $i17);
  // WARNING: %19 = add i64 0, %18, !dbg !5153, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8846, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %20 = ptrtoint %struct.us_data* %0 to i64, !dbg !5156, !verifier.code !5110
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8847, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 648);
  // WARNING: %21 = add i64 %20, 648, !dbg !5159, !verifier.code !5110
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8848, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8848, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8849, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8850, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  // WARNING: %25 = ptrtoint %struct.alauda_info* %24 to i64, !dbg !5169, !verifier.code !5110
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8851, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, $i18);
  // WARNING: %26 = add i64 %25, %19, !dbg !5172, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8852, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8852, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  // WARNING: %28 = load i8, i8* %27, align 1, !dbg !5176, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8853, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  // WARNING: %29 = zext i8 %28 to i32, !dbg !5179, !verifier.code !5110
  call {:cexpr "blockshift"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8854, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.us_data* %0 to i64, !dbg !5182, !verifier.code !5110
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8855, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 192);
  // WARNING: %31 = add i64 %30, 192, !dbg !5185, !verifier.code !5110
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8856, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8856, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8857, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8857, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8858, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  // WARNING: %36 = ptrtoint %struct.scsi_device* %35 to i64, !dbg !5195, !verifier.code !5110
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8859, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 156);
  // WARNING: %37 = add i64 %36, 156, !dbg !5198, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8860, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8860, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  // WARNING: %39 = load i32, i32* %38, align 4, !dbg !5202, !verifier.code !5110
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8861, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8861, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $mul.i64($i39, 48);
  // WARNING: %41 = mul i64 %40, 48, !dbg !5206, !verifier.code !5110
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8862, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 28);
  // WARNING: %42 = add i64 %41, 28, !dbg !5209, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8863, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64(0, $i41);
  // WARNING: %43 = add i64 0, %42, !dbg !5212, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8864, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p0);
  // WARNING: %44 = ptrtoint %struct.us_data* %0 to i64, !dbg !5215, !verifier.code !5110
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8865, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 648);
  // WARNING: %45 = add i64 %44, 648, !dbg !5218, !verifier.code !5110
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8866, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8866, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8867, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8868, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  // WARNING: %49 = ptrtoint %struct.alauda_info* %48 to i64, !dbg !5228, !verifier.code !5110
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8869, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, $i42);
  // WARNING: %50 = add i64 %49, %43, !dbg !5231, !verifier.code !5110
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8870, 19} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8870, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p50);
  // WARNING: %52 = load i8, i8* %51, align 1, !dbg !5235, !verifier.code !5110
  call {:cexpr "__cil_tmp61"} boogie_si_record_i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8871, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  // WARNING: %53 = zext i8 %52 to i32, !dbg !5238, !verifier.code !5110
  call {:cexpr "pageshift"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8872, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p0);
  // WARNING: %54 = ptrtoint %struct.us_data* %0 to i64, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8873, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 192);
  // WARNING: %55 = add i64 %54, 192, !dbg !5244, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8874, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8874, 17} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8875, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8875, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8876, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %60 = ptrtoint %struct.scsi_device* %59 to i64, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8877, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 156);
  // WARNING: %61 = add i64 %60, 156, !dbg !5257, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8878, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8878, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  // WARNING: %63 = load i32, i32* %62, align 4, !dbg !5261, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8879, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8879, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $mul.i64($i63, 48);
  // WARNING: %65 = mul i64 %64, 48, !dbg !5265, !verifier.code !5110
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8880, 29} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 12);
  // WARNING: %66 = add i64 %65, 12, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8881, 19} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64(0, $i65);
  // WARNING: %67 = add i64 0, %66, !dbg !5271, !verifier.code !5110
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8882, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p0);
  // WARNING: %68 = ptrtoint %struct.us_data* %0 to i64, !dbg !5274, !verifier.code !5110
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8883, 29} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 648);
  // WARNING: %69 = add i64 %68, 648, !dbg !5277, !verifier.code !5110
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8884, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8884, 17} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8885, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8886, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p71);
  // WARNING: %73 = ptrtoint %struct.alauda_info* %72 to i64, !dbg !5287, !verifier.code !5110
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8887, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, $i66);
  // WARNING: %74 = add i64 %73, %67, !dbg !5290, !verifier.code !5110
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8888, 17} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8888, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  // WARNING: %76 = load i32, i32* %75, align 4, !dbg !5294, !verifier.code !5110
  call {:cexpr "blocksize"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8889, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p0);
  // WARNING: %77 = ptrtoint %struct.us_data* %0 to i64, !dbg !5297, !verifier.code !5110
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8890, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 192);
  // WARNING: %78 = add i64 %77, 192, !dbg !5300, !verifier.code !5110
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8891, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8891, 17} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8892, 17} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8892, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8893, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p81);
  // WARNING: %83 = ptrtoint %struct.scsi_device* %82 to i64, !dbg !5310, !verifier.code !5110
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8894, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 156);
  // WARNING: %84 = add i64 %83, 156, !dbg !5313, !verifier.code !5110
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8895, 19} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8895, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  // WARNING: %86 = load i32, i32* %85, align 4, !dbg !5317, !verifier.code !5110
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8896, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8896, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $mul.i64($i86, 48);
  // WARNING: %88 = mul i64 %87, 48, !dbg !5321, !verifier.code !5110
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8897, 29} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 8);
  // WARNING: %89 = add i64 %88, 8, !dbg !5324, !verifier.code !5110
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8898, 19} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64(0, $i88);
  // WARNING: %90 = add i64 0, %89, !dbg !5327, !verifier.code !5110
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8899, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p0);
  // WARNING: %91 = ptrtoint %struct.us_data* %0 to i64, !dbg !5330, !verifier.code !5110
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8900, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 648);
  // WARNING: %92 = add i64 %91, 648, !dbg !5333, !verifier.code !5110
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8901, 19} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8901, 17} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8902, 17} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8903, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p94);
  // WARNING: %96 = ptrtoint %struct.alauda_info* %95 to i64, !dbg !5343, !verifier.code !5110
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8904, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, $i89);
  // WARNING: %97 = add i64 %96, %90, !dbg !5346, !verifier.code !5110
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8905, 16} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8905, 14} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  // WARNING: %99 = load i32, i32* %98, align 4, !dbg !5350, !verifier.code !5110
  call {:cexpr "pagesize"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8906, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p0);
  // WARNING: %100 = ptrtoint %struct.us_data* %0 to i64, !dbg !5353, !verifier.code !5110
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8907, 29} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 192);
  // WARNING: %101 = add i64 %100, 192, !dbg !5356, !verifier.code !5110
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8908, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8908, 17} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8909, 17} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8909, 17} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8910, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p104);
  // WARNING: %106 = ptrtoint %struct.scsi_device* %105 to i64, !dbg !5366, !verifier.code !5110
  call {:cexpr "__cil_tmp98"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8911, 29} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i64($i105, 156);
  // WARNING: %107 = add i64 %106, 156, !dbg !5369, !verifier.code !5110
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8912, 20} true;
  assume {:verifier.code 0} true;
  $p107 := $i2p.i64.ref($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8912, 18} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  // WARNING: %109 = load i32, i32* %108, align 4, !dbg !5373, !verifier.code !5110
  call {:cexpr "__cil_tmp100"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8913, 18} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i32.i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8913, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $mul.i64($i109, 48);
  // WARNING: %111 = mul i64 %110, 48, !dbg !5377, !verifier.code !5110
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8914, 31} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i64($i110, 16);
  // WARNING: %112 = add i64 %111, 16, !dbg !5380, !verifier.code !5110
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8915, 20} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i64(0, $i111);
  // WARNING: %113 = add i64 0, %112, !dbg !5383, !verifier.code !5110
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8916, 18} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($p0);
  // WARNING: %114 = ptrtoint %struct.us_data* %0 to i64, !dbg !5386, !verifier.code !5110
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8917, 31} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i113, 648);
  // WARNING: %115 = add i64 %114, 648, !dbg !5389, !verifier.code !5110
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8918, 20} true;
  assume {:verifier.code 0} true;
  $p115 := $i2p.i64.ref($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8918, 18} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8919, 18} true;
  assume {:verifier.code 0} true;
  $p117 := $bitcast.ref.ref($p116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8920, 18} true;
  assume {:verifier.code 0} true;
  $i118 := $p2i.ref.i64($p117);
  // WARNING: %119 = ptrtoint %struct.alauda_info* %118 to i64, !dbg !5399, !verifier.code !5110
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8921, 31} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i64($i118, $i112);
  // WARNING: %120 = add i64 %119, %113, !dbg !5402, !verifier.code !5110
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8922, 17} true;
  assume {:verifier.code 0} true;
  $p120 := $i2p.i64.ref($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8922, 15} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i32($M.0, $p120);
  // WARNING: %122 = load i32, i32* %121, align 4, !dbg !5406, !verifier.code !5110
  call {:cexpr "uzonesize"} boogie_si_record_i32($i121);
  // WARNING: call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !6925, metadata !5110), !dbg !6926, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !6927, metadata !5110), !dbg !6928, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !6929, metadata !5110), !dbg !6930, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !6931, metadata !5110), !dbg !6932, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8932, 20} true;
  assume {:verifier.code 0} true;
  $i122 := $ult.i32($i2, $i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8932, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8935, 3} true;
  assume {:verifier.code 0} true;
  $i123 := $i2;
  goto $bb3;
$bb2:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  $i123 := $i75;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8941, 27} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i98, 64);
  // WARNING: %127 = add i32 %99, 64, !dbg !5425, !verifier.code !5110
  call {:cexpr "__cil_tmp118"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8942, 17} true;
  assume {:verifier.code 0} true;
  $i125 := $mul.i32($i123, $i124);
  // WARNING: %128 = mul i32 %.01, %127, !dbg !5429, !verifier.code !5110
  call {:cexpr "len"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8943, 18} true;
  assume {:verifier.code 0} true;
  $i126 := $zext.i32.i64($i125);
  // WARNING: %129 = zext i32 %128 to i64, !dbg !5432, !verifier.code !5110
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i126);
  // WARNING: call void @llvm.dbg.value(metadata i64 %129, i64 0, metadata !6951, metadata !5110), !dbg !6952, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %129, i64 0, metadata !6953, metadata !5110), !dbg !6957, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4211, 13} true;
  assume {:verifier.code 0} true;
  call $p127 := __kmalloc($i126, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8949, 18} true;
  assume {:verifier.code 0} true;
  $i128 := $p2i.ref.i64($0.ref);
  // WARNING: %131 = ptrtoint i8* null to i64, !dbg !5454, !verifier.code !5110
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8950, 18} true;
  assume {:verifier.code 0} true;
  $i129 := $p2i.ref.i64($p127);
  // WARNING: %132 = ptrtoint i8* %130 to i64, !dbg !5458, !verifier.code !5110
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8951, 20} true;
  assume {:verifier.code 0} true;
  $i130 := $eq.i64($i129, $i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i130 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8953, 5} true;
  assume {:verifier.code 0} true;
  call $i131 := printk.ref(.str.23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8955, 5} true;
  assume {:verifier.code 0} true;
  $i132 := 3;
  goto $bb6;
$bb5:
  assume !(($i130 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9126, 1} true;
  assume {:verifier.code 0} true;
  $r := $i132;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8960, 26} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8960, 26} true;
  assume {:verifier.code 0} true;
  $i134 := $lshr.i64($i1, $i133);
  // WARNING: %139 = lshr i64 %1, %138, !dbg !5468, !verifier.code !5110
  call {:cexpr "__cil_tmp123"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8961, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i16($i134);
  // WARNING: %140 = trunc i64 %139 to i16, !dbg !5471, !verifier.code !5110
  call {:cexpr "lba"} boogie_si_record_i16($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8962, 18} true;
  assume {:verifier.code 0} true;
  $i136 := $p2i.ref.i64($p0);
  // WARNING: %141 = ptrtoint %struct.us_data* %0 to i64, !dbg !5474, !verifier.code !5110
  call {:cexpr "__cil_tmp124"} boogie_si_record_i64($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8963, 31} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i64($i136, 192);
  // WARNING: %142 = add i64 %141, 192, !dbg !5477, !verifier.code !5110
  call {:cexpr "__cil_tmp125"} boogie_si_record_i64($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8964, 20} true;
  assume {:verifier.code 0} true;
  $p138 := $i2p.i64.ref($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8964, 18} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8965, 18} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8965, 18} true;
  assume {:verifier.code 0} true;
  $p141 := $load.ref($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8966, 18} true;
  assume {:verifier.code 0} true;
  $i142 := $p2i.ref.i64($p141);
  // WARNING: %147 = ptrtoint %struct.scsi_device* %146 to i64, !dbg !5487, !verifier.code !5110
  call {:cexpr "__cil_tmp128"} boogie_si_record_i64($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8967, 31} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i64($i142, 156);
  // WARNING: %148 = add i64 %147, 156, !dbg !5490, !verifier.code !5110
  call {:cexpr "__cil_tmp129"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8968, 20} true;
  assume {:verifier.code 0} true;
  $p144 := $i2p.i64.ref($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8968, 18} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i32($M.0, $p144);
  // WARNING: %150 = load i32, i32* %149, align 4, !dbg !5494, !verifier.code !5110
  call {:cexpr "__cil_tmp130"} boogie_si_record_i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8969, 18} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i32.i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8969, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $mul.i64($i146, 48);
  // WARNING: %152 = mul i64 %151, 48, !dbg !5498, !verifier.code !5110
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8970, 31} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64($i147, 24);
  // WARNING: %153 = add i64 %152, 24, !dbg !5501, !verifier.code !5110
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8971, 20} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i64(0, $i148);
  // WARNING: %154 = add i64 0, %153, !dbg !5504, !verifier.code !5110
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8972, 18} true;
  assume {:verifier.code 0} true;
  $i150 := $p2i.ref.i64($p0);
  // WARNING: %155 = ptrtoint %struct.us_data* %0 to i64, !dbg !5507, !verifier.code !5110
  call {:cexpr "__cil_tmp134"} boogie_si_record_i64($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8973, 31} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i64($i150, 648);
  // WARNING: %156 = add i64 %155, 648, !dbg !5510, !verifier.code !5110
  call {:cexpr "__cil_tmp135"} boogie_si_record_i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8974, 20} true;
  assume {:verifier.code 0} true;
  $p152 := $i2p.i64.ref($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8974, 18} true;
  assume {:verifier.code 0} true;
  $p153 := $load.ref($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8975, 18} true;
  assume {:verifier.code 0} true;
  $p154 := $bitcast.ref.ref($p153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8976, 18} true;
  assume {:verifier.code 0} true;
  $i155 := $p2i.ref.i64($p154);
  // WARNING: %160 = ptrtoint %struct.alauda_info* %159 to i64, !dbg !5520, !verifier.code !5110
  call {:cexpr "__cil_tmp138"} boogie_si_record_i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8977, 31} true;
  assume {:verifier.code 0} true;
  $i156 := $add.i64($i155, $i149);
  // WARNING: %161 = add i64 %160, %154, !dbg !5523, !verifier.code !5110
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8978, 20} true;
  assume {:verifier.code 0} true;
  $p157 := $i2p.i64.ref($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8978, 18} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p157);
  // WARNING: %163 = load i32, i32* %162, align 4, !dbg !5527, !verifier.code !5110
  call {:cexpr "__cil_tmp140"} boogie_si_record_i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8979, 18} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i32.i64($i158);
  // WARNING: %164 = zext i32 %163 to i64, !dbg !5530, !verifier.code !5110
  call {:cexpr "__cil_tmp141"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8980, 26} true;
  assume {:verifier.code 0} true;
  $i160 := $and.i64($i1, $i159);
  // WARNING: %165 = and i64 %1, %164, !dbg !5533, !verifier.code !5110
  call {:cexpr "__cil_tmp142"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8981, 10} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  // WARNING: %166 = trunc i64 %165 to i32, !dbg !5536, !verifier.code !5110
  call {:cexpr "page"} boogie_si_record_i32($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8982, 29} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i28, $i52);
  // WARNING: %167 = add i32 %29, %53, !dbg !5539, !verifier.code !5110
  call {:cexpr "__cil_tmp143"} boogie_si_record_i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8983, 18} true;
  assume {:verifier.code 0} true;
  $i163 := $p2i.ref.i64($p0);
  // WARNING: %168 = ptrtoint %struct.us_data* %0 to i64, !dbg !5542, !verifier.code !5110
  call {:cexpr "__cil_tmp144"} boogie_si_record_i64($i163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8984, 31} true;
  assume {:verifier.code 0} true;
  $i164 := $add.i64($i163, 192);
  // WARNING: %169 = add i64 %168, 192, !dbg !5545, !verifier.code !5110
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8985, 20} true;
  assume {:verifier.code 0} true;
  $p165 := $i2p.i64.ref($i164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8985, 18} true;
  assume {:verifier.code 0} true;
  $p166 := $load.ref($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8986, 18} true;
  assume {:verifier.code 0} true;
  $p167 := $bitcast.ref.ref($p166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8986, 18} true;
  assume {:verifier.code 0} true;
  $p168 := $load.ref($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8987, 18} true;
  assume {:verifier.code 0} true;
  $i169 := $p2i.ref.i64($p168);
  // WARNING: %174 = ptrtoint %struct.scsi_device* %173 to i64, !dbg !5555, !verifier.code !5110
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i169);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8988, 31} true;
  assume {:verifier.code 0} true;
  $i170 := $add.i64($i169, 156);
  // WARNING: %175 = add i64 %174, 156, !dbg !5558, !verifier.code !5110
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8989, 20} true;
  assume {:verifier.code 0} true;
  $p171 := $i2p.i64.ref($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8989, 18} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.0, $p171);
  // WARNING: %177 = load i32, i32* %176, align 4, !dbg !5562, !verifier.code !5110
  call {:cexpr "__cil_tmp150"} boogie_si_record_i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8990, 18} true;
  assume {:verifier.code 0} true;
  $i173 := $zext.i32.i64($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8990, 31} true;
  assume {:verifier.code 0} true;
  $i174 := $mul.i64($i173, 48);
  // WARNING: %179 = mul i64 %178, 48, !dbg !5566, !verifier.code !5110
  call {:cexpr "__cil_tmp151"} boogie_si_record_i64($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8991, 20} true;
  assume {:verifier.code 0} true;
  $i175 := $add.i64(0, $i174);
  // WARNING: %180 = add i64 0, %179, !dbg !5569, !verifier.code !5110
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8992, 18} true;
  assume {:verifier.code 0} true;
  $i176 := $p2i.ref.i64($p0);
  // WARNING: %181 = ptrtoint %struct.us_data* %0 to i64, !dbg !5572, !verifier.code !5110
  call {:cexpr "__cil_tmp153"} boogie_si_record_i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8993, 31} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i64($i176, 648);
  // WARNING: %182 = add i64 %181, 648, !dbg !5575, !verifier.code !5110
  call {:cexpr "__cil_tmp154"} boogie_si_record_i64($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8994, 20} true;
  assume {:verifier.code 0} true;
  $p178 := $i2p.i64.ref($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8994, 18} true;
  assume {:verifier.code 0} true;
  $p179 := $load.ref($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8995, 18} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8996, 18} true;
  assume {:verifier.code 0} true;
  $i181 := $p2i.ref.i64($p180);
  // WARNING: %186 = ptrtoint %struct.alauda_info* %185 to i64, !dbg !5585, !verifier.code !5110
  call {:cexpr "__cil_tmp157"} boogie_si_record_i64($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8997, 31} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i64($i181, $i175);
  // WARNING: %187 = add i64 %186, %180, !dbg !5588, !verifier.code !5110
  call {:cexpr "__cil_tmp158"} boogie_si_record_i64($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8998, 20} true;
  assume {:verifier.code 0} true;
  $p183 := $i2p.i64.ref($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8998, 18} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i64($M.0, $p183);
  // WARNING: %189 = load i64, i64* %188, align 8, !dbg !5592, !verifier.code !5110
  call {:cexpr "__cil_tmp159"} boogie_si_record_i64($i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8999, 31} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i32.i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8999, 31} true;
  assume {:verifier.code 0} true;
  $i186 := $lshr.i64($i184, $i185);
  // WARNING: %191 = lshr i64 %189, %190, !dbg !5595, !verifier.code !5110
  call {:cexpr "__cil_tmp160"} boogie_si_record_i64($i186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9000, 13} true;
  assume {:verifier.code 0} true;
  $i187 := $trunc.i64.i16($i186);
  // WARNING: %192 = trunc i64 %191 to i16, !dbg !5598, !verifier.code !5110
  call {:cexpr "max_lba"} boogie_si_record_i16($i187);
  // WARNING: call void @llvm.dbg.value(metadata i16 %192, i64 0, metadata !7117, metadata !5110), !dbg !7118, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9003, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9006, 19} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9006, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9008, 3} true;
  assume {:verifier.code 0} true;
  $i189, $i190, $i191, $i192 := $i135, $i2, $i161, 0;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9008, 13} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9010, 17} true;
  assume {:verifier.code 0} true;
  $i193 := $ugt.i32($i190, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9010, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $i192;
  assume {:branchcond $i193} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9012, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i193 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9013, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $i194;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9016, 20} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.i16.i32($i189);
  // WARNING: %200 = zext i16 %.06 to i32, !dbg !5625, !verifier.code !5110
  call {:cexpr "__cil_tmp164"} boogie_si_record_i32($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9017, 25} true;
  assume {:verifier.code 0} true;
  $i197 := $udiv.i32($i196, $i121);
  // WARNING: %201 = udiv i32 %200, %122, !dbg !5629, !verifier.code !5110
  call {:cexpr "zone"} boogie_si_record_i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9018, 25} true;
  assume {:verifier.code 0} true;
  $i198 := $mul.i32($i197, $i121);
  // WARNING: %202 = mul i32 %201, %122, !dbg !5632, !verifier.code !5110
  call {:cexpr "__cil_tmp165"} boogie_si_record_i32($i198);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9019, 20} true;
  assume {:verifier.code 0} true;
  $i199 := $zext.i16.i32($i189);
  // WARNING: %203 = zext i16 %.06 to i32, !dbg !5635, !verifier.code !5110
  call {:cexpr "__cil_tmp166"} boogie_si_record_i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9020, 31} true;
  assume {:verifier.code 0} true;
  $i200 := $sub.i32($i199, $i198);
  // WARNING: %204 = sub i32 %203, %202, !dbg !5638, !verifier.code !5110
  call {:cexpr "lba_offset"} boogie_si_record_i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9021, 5} true;
  assume {:verifier.code 0} true;
  call alauda_ensure_map_for_zone($p0, $i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9024, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i16.i32($i187);
  // WARNING: %205 = zext i16 %192 to i32, !dbg !5642, !verifier.code !5110
  call {:cexpr "__cil_tmp167"} boogie_si_record_i32($i201);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9025, 20} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i16.i32($i189);
  // WARNING: %206 = zext i16 %.06 to i32, !dbg !5646, !verifier.code !5110
  call {:cexpr "__cil_tmp168"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9026, 22} true;
  assume {:verifier.code 0} true;
  $i203 := $sge.i32($i202, $i201);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9026, 9} true;
  assume {:verifier.code 0} true;
  $i204 := $i189;
  assume {:branchcond $i203} true;
  goto $bb14, $bb15;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9122, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9124, 3} true;
  assume {:verifier.code 0} true;
  $i132 := $i195;
  goto $bb6;
$bb14:
  assume ($i203 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9028, 22} true;
  assume {:verifier.code 0} true;
  $i205 := $zext.i16.i32($i204);
  // WARNING: %209 = zext i16 %.06.lcssa9 to i32, !dbg !5652, !verifier.code !5110
  call {:cexpr "__cil_tmp169"} boogie_si_record_i32($i205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9029, 22} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i16.i32($i187);
  // WARNING: %210 = zext i16 %192 to i32, !dbg !5657, !verifier.code !5110
  call {:cexpr "__cil_tmp170"} boogie_si_record_i32($i206);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9030, 7} true;
  assume {:verifier.code 0} true;
  call $i207 := printk.ref.i32.i32(.str.24, $i205, $i206);
  // WARNING: %211 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.24, i32 0, i32 0), i32 %209, i32 %210), !dbg !5660, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9034, 7} true;
  assume {:verifier.code 0} true;
  $i195 := 3;
  goto $bb13;
$bb15:
  assume !(($i203 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9042, 31} true;
  assume {:verifier.code 0} true;
  $i208 := $sub.i32($i75, $i191);
  // WARNING: %214 = sub i32 %76, %.04, !dbg !5664, !verifier.code !5110
  call {:cexpr "_min2___0"} boogie_si_record_i32($i208);
  // WARNING: call void @llvm.dbg.value(metadata i32 %214, i64 0, metadata !7183, metadata !5110), !dbg !7184, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %214, i64 0, metadata !7185, metadata !5110), !dbg !7186, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9048, 22} true;
  assume {:verifier.code 0} true;
  $i209 := $ult.i32($i190, $i208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9048, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9051, 5} true;
  assume {:verifier.code 0} true;
  $i210 := $i190;
  goto $bb19;
$bb18:
  assume !(($i209 == 1));
  assume {:verifier.code 0} true;
  $i210 := $i208;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  // WARNING: %.0 = phi i32 [ %.05, %216 ], [ %214, %217 ], !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9057, 17} true;
  assume {:verifier.code 0} true;
  $i211 := $shl.i32($i210, $i52);
  // WARNING: %219 = shl i32 %.0, %53, !dbg !5681, !verifier.code !5110
  call {:cexpr "len"} boogie_si_record_i32($i211);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9058, 20} true;
  assume {:verifier.code 0} true;
  $i212 := $p2i.ref.i64($p0);
  // WARNING: %220 = ptrtoint %struct.us_data* %0 to i64, !dbg !5682, !verifier.code !5110
  call {:cexpr "__cil_tmp179"} boogie_si_record_i64($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9059, 33} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i64($i212, 192);
  // WARNING: %221 = add i64 %220, 192, !dbg !5685, !verifier.code !5110
  call {:cexpr "__cil_tmp180"} boogie_si_record_i64($i213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9060, 22} true;
  assume {:verifier.code 0} true;
  $p214 := $i2p.i64.ref($i213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9060, 20} true;
  assume {:verifier.code 0} true;
  $p215 := $load.ref($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9061, 20} true;
  assume {:verifier.code 0} true;
  $p216 := $bitcast.ref.ref($p215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9061, 20} true;
  assume {:verifier.code 0} true;
  $p217 := $load.ref($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9062, 20} true;
  assume {:verifier.code 0} true;
  $i218 := $p2i.ref.i64($p217);
  // WARNING: %226 = ptrtoint %struct.scsi_device* %225 to i64, !dbg !5695, !verifier.code !5110
  call {:cexpr "__cil_tmp183"} boogie_si_record_i64($i218);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9063, 33} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i64($i218, 156);
  // WARNING: %227 = add i64 %226, 156, !dbg !5698, !verifier.code !5110
  call {:cexpr "__cil_tmp184"} boogie_si_record_i64($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9064, 22} true;
  assume {:verifier.code 0} true;
  $p220 := $i2p.i64.ref($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9064, 20} true;
  assume {:verifier.code 0} true;
  $i221 := $load.i32($M.0, $p220);
  // WARNING: %229 = load i32, i32* %228, align 4, !dbg !5702, !verifier.code !5110
  call {:cexpr "__cil_tmp185"} boogie_si_record_i32($i221);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9065, 20} true;
  assume {:verifier.code 0} true;
  $i222 := $zext.i32.i64($i221);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9065, 33} true;
  assume {:verifier.code 0} true;
  $i223 := $mul.i64($i222, 48);
  // WARNING: %231 = mul i64 %230, 48, !dbg !5706, !verifier.code !5110
  call {:cexpr "__cil_tmp186"} boogie_si_record_i64($i223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9066, 33} true;
  assume {:verifier.code 0} true;
  $i224 := $add.i64($i223, 32);
  // WARNING: %232 = add i64 %231, 32, !dbg !5709, !verifier.code !5110
  call {:cexpr "__cil_tmp187"} boogie_si_record_i64($i224);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9067, 22} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i64(0, $i224);
  // WARNING: %233 = add i64 0, %232, !dbg !5712, !verifier.code !5110
  call {:cexpr "__cil_tmp188"} boogie_si_record_i64($i225);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9068, 20} true;
  assume {:verifier.code 0} true;
  $i226 := $p2i.ref.i64($p0);
  // WARNING: %234 = ptrtoint %struct.us_data* %0 to i64, !dbg !5715, !verifier.code !5110
  call {:cexpr "__cil_tmp189"} boogie_si_record_i64($i226);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9069, 33} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i64($i226, 648);
  // WARNING: %235 = add i64 %234, 648, !dbg !5718, !verifier.code !5110
  call {:cexpr "__cil_tmp190"} boogie_si_record_i64($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9070, 22} true;
  assume {:verifier.code 0} true;
  $p228 := $i2p.i64.ref($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9070, 20} true;
  assume {:verifier.code 0} true;
  $p229 := $load.ref($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9071, 20} true;
  assume {:verifier.code 0} true;
  $p230 := $bitcast.ref.ref($p229);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9072, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $p2i.ref.i64($p230);
  // WARNING: %239 = ptrtoint %struct.alauda_info* %238 to i64, !dbg !5728, !verifier.code !5110
  call {:cexpr "__cil_tmp193"} boogie_si_record_i64($i231);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9073, 33} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i64($i231, $i225);
  // WARNING: %240 = add i64 %239, %233, !dbg !5731, !verifier.code !5110
  call {:cexpr "__cil_tmp194"} boogie_si_record_i64($i232);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9074, 22} true;
  assume {:verifier.code 0} true;
  $p233 := $i2p.i64.ref($i232);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9074, 20} true;
  assume {:verifier.code 0} true;
  $p234 := $load.ref($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9075, 33} true;
  assume {:verifier.code 0} true;
  $i235 := $zext.i32.i64($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9075, 33} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p234, $mul.ref($i235, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9076, 20} true;
  assume {:verifier.code 0} true;
  $p237 := $load.ref($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9077, 33} true;
  assume {:verifier.code 0} true;
  $i238 := $zext.i32.i64($i200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9077, 33} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p237, $mul.ref($i238, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9078, 11} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i16($M.0, $p239);
  // WARNING: %248 = load i16, i16* %247, align 2, !dbg !5747, !verifier.code !5110
  call {:cexpr "pba"} boogie_si_record_i16($i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9080, 20} true;
  assume {:verifier.code 0} true;
  $i241 := $zext.i16.i32($i240);
  // WARNING: %249 = zext i16 %248 to i32, !dbg !5750, !verifier.code !5110
  call {:cexpr "__cil_tmp199"} boogie_si_record_i32($i241);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9081, 22} true;
  assume {:verifier.code 0} true;
  $i242 := $eq.i32($i241, 65535);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9081, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i242 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9083, 22} true;
  assume {:verifier.code 0} true;
  $i243 := $zext.i16.i32($i189);
  // WARNING: %252 = zext i16 %.06 to i32, !dbg !5757, !verifier.code !5110
  call {:cexpr "__cil_tmp200"} boogie_si_record_i32($i243);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9084, 7} true;
  assume {:verifier.code 0} true;
  call $i244 := printk.ref.i32.i32.i32(.str.25, $i210, $i243, $i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9087, 22} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i32.i64($i211);
  // WARNING: %254 = zext i32 %219 to i64, !dbg !5765, !verifier.code !5110
  call {:cexpr "__cil_tmp202"} boogie_si_record_i64($i245);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9088, 7} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p127, 0, $i245, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9090, 5} true;
  assume {:verifier.code 0} true;
  $i246 := $i192;
  goto $bb22;
$bb21:
  assume !(($i242 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9092, 22} true;
  assume {:verifier.code 0} true;
  $i247 := $zext.i16.i32($i240);
  // WARNING: %256 = zext i16 %248 to i32, !dbg !5770, !verifier.code !5110
  call {:cexpr "__cil_tmp203"} boogie_si_record_i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9093, 22} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i16.i32($i189);
  // WARNING: %257 = zext i16 %.06 to i32, !dbg !5775, !verifier.code !5110
  call {:cexpr "__cil_tmp204"} boogie_si_record_i32($i248);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  call $i249 := printk.ref.i32.i32.i32.i32(.str.26, $i210, $i247, $i248, $i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9096, 16} true;
  assume {:verifier.code 0} true;
  call $i250 := alauda_read_block($p0, $i240, $i191, $i210, $p127);
  // WARNING: %259 = call i32 @alauda_read_block(%struct.us_data* %0, i16 zeroext %248, i32 %.04, i32 %.0, i8* %130), !dbg !5779, !verifier.code !5110
  call {:cexpr "result"} boogie_si_record_i32($i250);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9098, 18} true;
  assume {:verifier.code 0} true;
  $i251 := $ne.i32($i250, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9098, 11} true;
  assume {:verifier.code 0} true;
  $i252 := $i250;
  assume {:branchcond $i251} true;
  goto $bb23, $bb24;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9106, 20} true;
  assume {:verifier.code 0} true;
  $i253 := $p2i.ref.i64($p0);
  // WARNING: %265 = ptrtoint %struct.us_data* %0 to i64, !dbg !5785, !verifier.code !5110
  call {:cexpr "__cil_tmp205"} boogie_si_record_i64($i253);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9107, 33} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i64($i253, 192);
  // WARNING: %266 = add i64 %265, 192, !dbg !5789, !verifier.code !5110
  call {:cexpr "__cil_tmp206"} boogie_si_record_i64($i254);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9108, 22} true;
  assume {:verifier.code 0} true;
  $p255 := $i2p.i64.ref($i254);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9108, 20} true;
  assume {:verifier.code 0} true;
  $p256 := $load.ref($M.0, $p255);
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_cmnd* %268, i64 0, metadata !7312, metadata !5110), !dbg !7313, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9110, 5} true;
  assume {:verifier.code 0} true;
  call $i257 := usb_stor_access_xfer_buf($p127, $i211, $p256, $p4, $p3, 0);
  // WARNING: %269 = call i32 @usb_stor_access_xfer_buf(i8* %130, i32 %219, %struct.scsi_cmnd* %268, %struct.scatterlist** %5, i32* %4, i32 0), !dbg !5798, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9112, 20} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i16.i32($i189);
  // WARNING: %270 = zext i16 %.06 to i32, !dbg !5799, !verifier.code !5110
  call {:cexpr "__cil_tmp209"} boogie_si_record_i32($i258);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9113, 33} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i258, 1);
  // WARNING: %271 = add nsw i32 %270, 1, !dbg !5802, !verifier.code !5110
  call {:cexpr "__cil_tmp210"} boogie_si_record_i32($i259);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9114, 11} true;
  assume {:verifier.code 0} true;
  $i260 := $trunc.i32.i16($i259);
  // WARNING: %272 = trunc i32 %271 to i16, !dbg !5805, !verifier.code !5110
  call {:cexpr "lba"} boogie_si_record_i16($i260);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9115, 23} true;
  assume {:verifier.code 0} true;
  $i261 := $sub.i32($i190, $i210);
  // WARNING: %273 = sub i32 %.05, %.0, !dbg !5806, !verifier.code !5110
  call {:cexpr "sectors"} boogie_si_record_i32($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9008, 3} true;
  assume {:verifier.code 0} true;
  $i189, $i190, $i191, $i192 := $i260, $i261, 0, $i246;
  goto $bb8;
$bb23:
  assume ($i251 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9099, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $i252;
  goto $bb13;
$bb24:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  $i246 := $i250;
  goto $bb22;
}
const alauda_write_data: ref;
axiom (alauda_write_data == $sub.ref(0, 86667));
procedure alauda_write_data($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i1;
  var $i100: i32;
  var $i101: i32;
  var $i102: i64;
  var $p103: ref;
  var $i104: i64;
  var $i105: i64;
  var $i106: i1;
  var $i107: i32;
  var $i109: i32;
  var $i110: i32;
  var $i111: i64;
  var $p112: ref;
  var $i113: i64;
  var $i114: i64;
  var $i115: i1;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $i119: i16;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $i132: i64;
  var $i133: i64;
  var $i134: i64;
  var $i135: i64;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i64;
  var $i144: i64;
  var $i145: i32;
  var $i146: i32;
  var $i147: i64;
  var $i148: i64;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $i156: i32;
  var $i157: i64;
  var $i158: i64;
  var $i159: i64;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $i165: i64;
  var $i166: i64;
  var $p167: ref;
  var $i168: i64;
  var $i169: i64;
  var $i170: i64;
  var $i171: i16;
  var $p172: ref;
  var $i173: i32;
  var $i174: i32;
  var $i175: i16;
  var $i176: i32;
  var $i177: i1;
  var $i178: i32;
  var $i180: i32;
  var $i181: i1;
  var $i182: i32;
  var $i183: i32;
  var $i184: i32;
  var $i185: i32;
  var $i186: i1;
  var $i187: i16;
  var $i188: i32;
  var $i189: i32;
  var $i190: i32;
  var $i191: i64;
  var $i192: i64;
  var $p193: ref;
  var $p194: ref;
  var $i195: i32;
  var $i196: i32;
  var $i197: i1;
  var $i198: i32;
  var $i199: i32;
  var $i200: i32;
  var $i201: i16;
  var $i202: i32;
  var $i179: i32;
  var $i108: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !7335, metadata !5110), !dbg !7336, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !7337, metadata !5110), !dbg !7338, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9298, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.us_data* %0 to i64, !dbg !5122, !verifier.code !5110
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9299, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 192);
  // WARNING: %7 = add i64 %6, 192, !dbg !5126, !verifier.code !5110
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9300, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9300, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9301, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9301, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9302, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  // WARNING: %12 = ptrtoint %struct.scsi_device* %11 to i64, !dbg !5136, !verifier.code !5110
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9303, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 156);
  // WARNING: %13 = add i64 %12, 156, !dbg !5139, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9304, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9304, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  // WARNING: %15 = load i32, i32* %14, align 4, !dbg !5143, !verifier.code !5110
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9305, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9305, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64($i15, 48);
  // WARNING: %17 = mul i64 %16, 48, !dbg !5147, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9306, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 29);
  // WARNING: %18 = add i64 %17, 29, !dbg !5150, !verifier.code !5110
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9307, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64(0, $i17);
  // WARNING: %19 = add i64 0, %18, !dbg !5153, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9308, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %20 = ptrtoint %struct.us_data* %0 to i64, !dbg !5156, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9309, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 648);
  // WARNING: %21 = add i64 %20, 648, !dbg !5159, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9310, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9310, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9311, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9312, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  // WARNING: %25 = ptrtoint %struct.alauda_info* %24 to i64, !dbg !5169, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9313, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, $i18);
  // WARNING: %26 = add i64 %25, %19, !dbg !5172, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9314, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9314, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  // WARNING: %28 = load i8, i8* %27, align 1, !dbg !5176, !verifier.code !5110
  call {:cexpr "__cil_tmp42"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9315, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  // WARNING: %29 = zext i8 %28 to i32, !dbg !5179, !verifier.code !5110
  call {:cexpr "blockshift"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9316, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.us_data* %0 to i64, !dbg !5182, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9317, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 192);
  // WARNING: %31 = add i64 %30, 192, !dbg !5185, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9318, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9318, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9319, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9319, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9320, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  // WARNING: %36 = ptrtoint %struct.scsi_device* %35 to i64, !dbg !5195, !verifier.code !5110
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9321, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 156);
  // WARNING: %37 = add i64 %36, 156, !dbg !5198, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9322, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9322, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  // WARNING: %39 = load i32, i32* %38, align 4, !dbg !5202, !verifier.code !5110
  call {:cexpr "__cil_tmp49"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9323, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9323, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $mul.i64($i39, 48);
  // WARNING: %41 = mul i64 %40, 48, !dbg !5206, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9324, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 28);
  // WARNING: %42 = add i64 %41, 28, !dbg !5209, !verifier.code !5110
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9325, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64(0, $i41);
  // WARNING: %43 = add i64 0, %42, !dbg !5212, !verifier.code !5110
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9326, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p0);
  // WARNING: %44 = ptrtoint %struct.us_data* %0 to i64, !dbg !5215, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9327, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 648);
  // WARNING: %45 = add i64 %44, 648, !dbg !5218, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9328, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9328, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9329, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9330, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  // WARNING: %49 = ptrtoint %struct.alauda_info* %48 to i64, !dbg !5228, !verifier.code !5110
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9331, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, $i42);
  // WARNING: %50 = add i64 %49, %43, !dbg !5231, !verifier.code !5110
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9332, 19} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9332, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p50);
  // WARNING: %52 = load i8, i8* %51, align 1, !dbg !5235, !verifier.code !5110
  call {:cexpr "__cil_tmp59"} boogie_si_record_i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9333, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  // WARNING: %53 = zext i8 %52 to i32, !dbg !5238, !verifier.code !5110
  call {:cexpr "pageshift"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9334, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p0);
  // WARNING: %54 = ptrtoint %struct.us_data* %0 to i64, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9335, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 192);
  // WARNING: %55 = add i64 %54, 192, !dbg !5244, !verifier.code !5110
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9336, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9336, 17} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9337, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9337, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9338, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %60 = ptrtoint %struct.scsi_device* %59 to i64, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9339, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 156);
  // WARNING: %61 = add i64 %60, 156, !dbg !5257, !verifier.code !5110
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9340, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9340, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  // WARNING: %63 = load i32, i32* %62, align 4, !dbg !5261, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9341, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9341, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $mul.i64($i63, 48);
  // WARNING: %65 = mul i64 %64, 48, !dbg !5265, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9342, 29} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 12);
  // WARNING: %66 = add i64 %65, 12, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9343, 19} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64(0, $i65);
  // WARNING: %67 = add i64 0, %66, !dbg !5271, !verifier.code !5110
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9344, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p0);
  // WARNING: %68 = ptrtoint %struct.us_data* %0 to i64, !dbg !5274, !verifier.code !5110
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9345, 29} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 648);
  // WARNING: %69 = add i64 %68, 648, !dbg !5277, !verifier.code !5110
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9346, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9346, 17} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9347, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9348, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p71);
  // WARNING: %73 = ptrtoint %struct.alauda_info* %72 to i64, !dbg !5287, !verifier.code !5110
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9349, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, $i66);
  // WARNING: %74 = add i64 %73, %67, !dbg !5290, !verifier.code !5110
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9350, 17} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9350, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  // WARNING: %76 = load i32, i32* %75, align 4, !dbg !5294, !verifier.code !5110
  call {:cexpr "blocksize"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9351, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p0);
  // WARNING: %77 = ptrtoint %struct.us_data* %0 to i64, !dbg !5297, !verifier.code !5110
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9352, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 192);
  // WARNING: %78 = add i64 %77, 192, !dbg !5300, !verifier.code !5110
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9353, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9353, 17} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9354, 17} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9354, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9355, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p81);
  // WARNING: %83 = ptrtoint %struct.scsi_device* %82 to i64, !dbg !5310, !verifier.code !5110
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9356, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 156);
  // WARNING: %84 = add i64 %83, 156, !dbg !5313, !verifier.code !5110
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9357, 19} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9357, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  // WARNING: %86 = load i32, i32* %85, align 4, !dbg !5317, !verifier.code !5110
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9358, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9358, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $mul.i64($i86, 48);
  // WARNING: %88 = mul i64 %87, 48, !dbg !5321, !verifier.code !5110
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9359, 29} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 8);
  // WARNING: %89 = add i64 %88, 8, !dbg !5324, !verifier.code !5110
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9360, 19} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64(0, $i88);
  // WARNING: %90 = add i64 0, %89, !dbg !5327, !verifier.code !5110
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9361, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p0);
  // WARNING: %91 = ptrtoint %struct.us_data* %0 to i64, !dbg !5330, !verifier.code !5110
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9362, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 648);
  // WARNING: %92 = add i64 %91, 648, !dbg !5333, !verifier.code !5110
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9363, 19} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9363, 17} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9364, 17} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9365, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p94);
  // WARNING: %96 = ptrtoint %struct.alauda_info* %95 to i64, !dbg !5343, !verifier.code !5110
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9366, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, $i89);
  // WARNING: %97 = add i64 %96, %90, !dbg !5346, !verifier.code !5110
  call {:cexpr "__cil_tmp91"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9367, 16} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9367, 14} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  // WARNING: %99 = load i32, i32* %98, align 4, !dbg !5350, !verifier.code !5110
  call {:cexpr "pagesize"} boogie_si_record_i32($i98);
  // WARNING: call void @llvm.dbg.value(metadata i32 %99, i64 0, metadata !7574, metadata !5110), !dbg !7575, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7576, metadata !5110), !dbg !7577, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !7578, metadata !5110), !dbg !7579, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !7580, metadata !5110), !dbg !7581, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9377, 19} true;
  assume {:verifier.code 0} true;
  $i99 := $ult.i32($i2, $i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9377, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9380, 3} true;
  assume {:verifier.code 0} true;
  $i100 := $i2;
  goto $bb3;
$bb2:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  $i100 := $i75;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9386, 17} true;
  assume {:verifier.code 0} true;
  $i101 := $mul.i32($i100, $i98);
  // WARNING: %104 = mul i32 %.01, %99, !dbg !5369, !verifier.code !5110
  call {:cexpr "len"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9387, 18} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i32.i64($i101);
  // WARNING: %105 = zext i32 %104 to i64, !dbg !5373, !verifier.code !5110
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i102);
  // WARNING: call void @llvm.dbg.value(metadata i64 %105, i64 0, metadata !7597, metadata !5110), !dbg !7598, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %105, i64 0, metadata !6953, metadata !5110), !dbg !7599, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4211, 13} true;
  assume {:verifier.code 0} true;
  call $p103 := __kmalloc($i102, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9393, 18} true;
  assume {:verifier.code 0} true;
  $i104 := $p2i.ref.i64($0.ref);
  // WARNING: %107 = ptrtoint i8* null to i64, !dbg !5395, !verifier.code !5110
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9394, 18} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p103);
  // WARNING: %108 = ptrtoint i8* %106 to i64, !dbg !5399, !verifier.code !5110
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9395, 20} true;
  assume {:verifier.code 0} true;
  $i106 := $eq.i64($i105, $i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9397, 5} true;
  assume {:verifier.code 0} true;
  call $i107 := printk.ref(.str.35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9399, 5} true;
  assume {:verifier.code 0} true;
  $i108 := 3;
  goto $bb6;
$bb5:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9545, 1} true;
  assume {:verifier.code 0} true;
  $r := $i108;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9405, 27} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i98, 64);
  // WARNING: %114 = add i32 %99, 64, !dbg !5409, !verifier.code !5110
  call {:cexpr "__cil_tmp104"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9406, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $mul.i32($i109, $i75);
  // WARNING: %115 = mul i32 %114, %76, !dbg !5413, !verifier.code !5110
  call {:cexpr "__cil_tmp105"} boogie_si_record_i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9407, 18} true;
  assume {:verifier.code 0} true;
  $i111 := $zext.i32.i64($i110);
  // WARNING: %116 = zext i32 %115 to i64, !dbg !5416, !verifier.code !5110
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i111);
  // WARNING: call void @llvm.dbg.value(metadata i64 %116, i64 0, metadata !7632, metadata !5110), !dbg !7633, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %116, i64 0, metadata !6953, metadata !5110), !dbg !7634, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4211, 13} true;
  assume {:verifier.code 0} true;
  call $p112 := __kmalloc($i111, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9413, 18} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($0.ref);
  // WARNING: %118 = ptrtoint i8* null to i64, !dbg !5430, !verifier.code !5110
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9414, 18} true;
  assume {:verifier.code 0} true;
  $i114 := $p2i.ref.i64($p112);
  // WARNING: %119 = ptrtoint i8* %117 to i64, !dbg !5434, !verifier.code !5110
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9415, 20} true;
  assume {:verifier.code 0} true;
  $i115 := $eq.i64($i114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9415, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9417, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := printk.ref(.str.35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9419, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9421, 5} true;
  assume {:verifier.code 0} true;
  $i108 := 3;
  goto $bb6;
$bb9:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9426, 26} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9426, 26} true;
  assume {:verifier.code 0} true;
  $i118 := $lshr.i64($i1, $i117);
  // WARNING: %126 = lshr i64 %1, %125, !dbg !5447, !verifier.code !5110
  call {:cexpr "__cil_tmp111"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9427, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $trunc.i64.i16($i118);
  // WARNING: %127 = trunc i64 %126 to i16, !dbg !5450, !verifier.code !5110
  call {:cexpr "lba"} boogie_si_record_i16($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9428, 18} true;
  assume {:verifier.code 0} true;
  $i120 := $p2i.ref.i64($p0);
  // WARNING: %128 = ptrtoint %struct.us_data* %0 to i64, !dbg !5453, !verifier.code !5110
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9429, 31} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i64($i120, 192);
  // WARNING: %129 = add i64 %128, 192, !dbg !5456, !verifier.code !5110
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9430, 20} true;
  assume {:verifier.code 0} true;
  $p122 := $i2p.i64.ref($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9430, 18} true;
  assume {:verifier.code 0} true;
  $p123 := $load.ref($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9431, 18} true;
  assume {:verifier.code 0} true;
  $p124 := $bitcast.ref.ref($p123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9431, 18} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9432, 18} true;
  assume {:verifier.code 0} true;
  $i126 := $p2i.ref.i64($p125);
  // WARNING: %134 = ptrtoint %struct.scsi_device* %133 to i64, !dbg !5466, !verifier.code !5110
  call {:cexpr "__cil_tmp116"} boogie_si_record_i64($i126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9433, 31} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i64($i126, 156);
  // WARNING: %135 = add i64 %134, 156, !dbg !5469, !verifier.code !5110
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9434, 20} true;
  assume {:verifier.code 0} true;
  $p128 := $i2p.i64.ref($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9434, 18} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  // WARNING: %137 = load i32, i32* %136, align 4, !dbg !5473, !verifier.code !5110
  call {:cexpr "__cil_tmp118"} boogie_si_record_i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9435, 18} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i32.i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9435, 31} true;
  assume {:verifier.code 0} true;
  $i131 := $mul.i64($i130, 48);
  // WARNING: %139 = mul i64 %138, 48, !dbg !5477, !verifier.code !5110
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9436, 31} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i64($i131, 24);
  // WARNING: %140 = add i64 %139, 24, !dbg !5480, !verifier.code !5110
  call {:cexpr "__cil_tmp120"} boogie_si_record_i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9437, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i64(0, $i132);
  // WARNING: %141 = add i64 0, %140, !dbg !5483, !verifier.code !5110
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9438, 18} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p0);
  // WARNING: %142 = ptrtoint %struct.us_data* %0 to i64, !dbg !5486, !verifier.code !5110
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9439, 31} true;
  assume {:verifier.code 0} true;
  $i135 := $add.i64($i134, 648);
  // WARNING: %143 = add i64 %142, 648, !dbg !5489, !verifier.code !5110
  call {:cexpr "__cil_tmp123"} boogie_si_record_i64($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9440, 20} true;
  assume {:verifier.code 0} true;
  $p136 := $i2p.i64.ref($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9440, 18} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9441, 18} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9442, 18} true;
  assume {:verifier.code 0} true;
  $i139 := $p2i.ref.i64($p138);
  // WARNING: %147 = ptrtoint %struct.alauda_info* %146 to i64, !dbg !5499, !verifier.code !5110
  call {:cexpr "__cil_tmp126"} boogie_si_record_i64($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9443, 31} true;
  assume {:verifier.code 0} true;
  $i140 := $add.i64($i139, $i133);
  // WARNING: %148 = add i64 %147, %141, !dbg !5502, !verifier.code !5110
  call {:cexpr "__cil_tmp127"} boogie_si_record_i64($i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9444, 20} true;
  assume {:verifier.code 0} true;
  $p141 := $i2p.i64.ref($i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9444, 18} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i32($M.0, $p141);
  // WARNING: %150 = load i32, i32* %149, align 4, !dbg !5506, !verifier.code !5110
  call {:cexpr "__cil_tmp128"} boogie_si_record_i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9445, 18} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i32.i64($i142);
  // WARNING: %151 = zext i32 %150 to i64, !dbg !5509, !verifier.code !5110
  call {:cexpr "__cil_tmp129"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9446, 26} true;
  assume {:verifier.code 0} true;
  $i144 := $and.i64($i1, $i143);
  // WARNING: %152 = and i64 %1, %151, !dbg !5512, !verifier.code !5110
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9447, 10} true;
  assume {:verifier.code 0} true;
  $i145 := $trunc.i64.i32($i144);
  // WARNING: %153 = trunc i64 %152 to i32, !dbg !5515, !verifier.code !5110
  call {:cexpr "page"} boogie_si_record_i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9448, 28} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i32($i52, $i28);
  // WARNING: %154 = add i32 %53, %29, !dbg !5518, !verifier.code !5110
  call {:cexpr "__cil_tmp131"} boogie_si_record_i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9449, 18} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.i64($p0);
  // WARNING: %155 = ptrtoint %struct.us_data* %0 to i64, !dbg !5521, !verifier.code !5110
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9450, 31} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64($i147, 192);
  // WARNING: %156 = add i64 %155, 192, !dbg !5524, !verifier.code !5110
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9451, 20} true;
  assume {:verifier.code 0} true;
  $p149 := $i2p.i64.ref($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9451, 18} true;
  assume {:verifier.code 0} true;
  $p150 := $load.ref($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9452, 18} true;
  assume {:verifier.code 0} true;
  $p151 := $bitcast.ref.ref($p150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9452, 18} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9453, 18} true;
  assume {:verifier.code 0} true;
  $i153 := $p2i.ref.i64($p152);
  // WARNING: %161 = ptrtoint %struct.scsi_device* %160 to i64, !dbg !5534, !verifier.code !5110
  call {:cexpr "__cil_tmp136"} boogie_si_record_i64($i153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9454, 31} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i64($i153, 156);
  // WARNING: %162 = add i64 %161, 156, !dbg !5537, !verifier.code !5110
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9455, 20} true;
  assume {:verifier.code 0} true;
  $p155 := $i2p.i64.ref($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9455, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  // WARNING: %164 = load i32, i32* %163, align 4, !dbg !5541, !verifier.code !5110
  call {:cexpr "__cil_tmp138"} boogie_si_record_i32($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9456, 18} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i32.i64($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9456, 31} true;
  assume {:verifier.code 0} true;
  $i158 := $mul.i64($i157, 48);
  // WARNING: %166 = mul i64 %165, 48, !dbg !5545, !verifier.code !5110
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9457, 20} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64(0, $i158);
  // WARNING: %167 = add i64 0, %166, !dbg !5548, !verifier.code !5110
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9458, 18} true;
  assume {:verifier.code 0} true;
  $i160 := $p2i.ref.i64($p0);
  // WARNING: %168 = ptrtoint %struct.us_data* %0 to i64, !dbg !5551, !verifier.code !5110
  call {:cexpr "__cil_tmp141"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9459, 31} true;
  assume {:verifier.code 0} true;
  $i161 := $add.i64($i160, 648);
  // WARNING: %169 = add i64 %168, 648, !dbg !5554, !verifier.code !5110
  call {:cexpr "__cil_tmp142"} boogie_si_record_i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9460, 20} true;
  assume {:verifier.code 0} true;
  $p162 := $i2p.i64.ref($i161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9460, 18} true;
  assume {:verifier.code 0} true;
  $p163 := $load.ref($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9461, 18} true;
  assume {:verifier.code 0} true;
  $p164 := $bitcast.ref.ref($p163);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9462, 18} true;
  assume {:verifier.code 0} true;
  $i165 := $p2i.ref.i64($p164);
  // WARNING: %173 = ptrtoint %struct.alauda_info* %172 to i64, !dbg !5564, !verifier.code !5110
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9463, 31} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i64($i165, $i159);
  // WARNING: %174 = add i64 %173, %167, !dbg !5567, !verifier.code !5110
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9464, 20} true;
  assume {:verifier.code 0} true;
  $p167 := $i2p.i64.ref($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9464, 18} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i64($M.0, $p167);
  // WARNING: %176 = load i64, i64* %175, align 8, !dbg !5571, !verifier.code !5110
  call {:cexpr "__cil_tmp147"} boogie_si_record_i64($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9465, 31} true;
  assume {:verifier.code 0} true;
  $i169 := $zext.i32.i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9465, 31} true;
  assume {:verifier.code 0} true;
  $i170 := $lshr.i64($i168, $i169);
  // WARNING: %178 = lshr i64 %176, %177, !dbg !5574, !verifier.code !5110
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9466, 13} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i64.i16($i170);
  // WARNING: %179 = trunc i64 %178 to i16, !dbg !5577, !verifier.code !5110
  call {:cexpr "max_lba"} boogie_si_record_i16($i171);
  // WARNING: call void @llvm.dbg.value(metadata i16 %179, i64 0, metadata !7793, metadata !5110), !dbg !7794, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9469, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9472, 19} true;
  assume {:verifier.code 0} true;
  $p172 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9472, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9474, 3} true;
  assume {:verifier.code 0} true;
  $i173, $i174, $i175, $i176 := $i2, $i145, $i119, 0;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9474, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9476, 17} true;
  assume {:verifier.code 0} true;
  $i177 := $ugt.i32($i173, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9476, 9} true;
  assume {:verifier.code 0} true;
  $i178 := $i176;
  assume {:branchcond $i177} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9478, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i177 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9479, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $i178;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9484, 31} true;
  assume {:verifier.code 0} true;
  $i180 := $sub.i32($i75, $i174);
  // WARNING: %187 = sub i32 %76, %.04, !dbg !5606, !verifier.code !5110
  call {:cexpr "_min2___0"} boogie_si_record_i32($i180);
  // WARNING: call void @llvm.dbg.value(metadata i32 %187, i64 0, metadata !7821, metadata !5110), !dbg !7822, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %187, i64 0, metadata !7823, metadata !5110), !dbg !7824, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9490, 22} true;
  assume {:verifier.code 0} true;
  $i181 := $ult.i32($i173, $i180);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9490, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb17, $bb18;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9539, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9541, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9543, 3} true;
  assume {:verifier.code 0} true;
  $i108 := $i179;
  goto $bb6;
$bb17:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9493, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $i173;
  goto $bb19;
$bb18:
  assume !(($i181 == 1));
  assume {:verifier.code 0} true;
  $i182 := $i180;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  // WARNING: %.0 = phi i32 [ %.06, %189 ], [ %187, %190 ], !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9499, 17} true;
  assume {:verifier.code 0} true;
  $i183 := $shl.i32($i182, $i52);
  // WARNING: %192 = shl i32 %.0, %53, !dbg !5623, !verifier.code !5110
  call {:cexpr "len"} boogie_si_record_i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9501, 20} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i16.i32($i171);
  // WARNING: %193 = zext i16 %179 to i32, !dbg !5624, !verifier.code !5110
  call {:cexpr "__cil_tmp160"} boogie_si_record_i32($i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9502, 20} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i16.i32($i175);
  // WARNING: %194 = zext i16 %.03 to i32, !dbg !5628, !verifier.code !5110
  call {:cexpr "__cil_tmp161"} boogie_si_record_i32($i185);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9503, 22} true;
  assume {:verifier.code 0} true;
  $i186 := $sge.i32($i185, $i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9503, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i175;
  assume {:branchcond $i186} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i186 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9505, 22} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.i16.i32($i187);
  // WARNING: %197 = zext i16 %.03.lcssa9 to i32, !dbg !5634, !verifier.code !5110
  call {:cexpr "__cil_tmp162"} boogie_si_record_i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9506, 22} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i16.i32($i171);
  // WARNING: %198 = zext i16 %179 to i32, !dbg !5639, !verifier.code !5110
  call {:cexpr "__cil_tmp163"} boogie_si_record_i32($i189);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9507, 7} true;
  assume {:verifier.code 0} true;
  call $i190 := printk.ref.i32.i32(.str.36, $i188, $i189);
  // WARNING: %199 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.36, i32 0, i32 0), i32 %197, i32 %198), !dbg !5642, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9511, 7} true;
  assume {:verifier.code 0} true;
  $i179 := 3;
  goto $bb16;
$bb21:
  assume !(($i186 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9517, 20} true;
  assume {:verifier.code 0} true;
  $i191 := $p2i.ref.i64($p0);
  // WARNING: %202 = ptrtoint %struct.us_data* %0 to i64, !dbg !5644, !verifier.code !5110
  call {:cexpr "__cil_tmp164"} boogie_si_record_i64($i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9518, 33} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i64($i191, 192);
  // WARNING: %203 = add i64 %202, 192, !dbg !5648, !verifier.code !5110
  call {:cexpr "__cil_tmp165"} boogie_si_record_i64($i192);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9519, 22} true;
  assume {:verifier.code 0} true;
  $p193 := $i2p.i64.ref($i192);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9519, 20} true;
  assume {:verifier.code 0} true;
  $p194 := $load.ref($M.0, $p193);
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_cmnd* %205, i64 0, metadata !7867, metadata !5110), !dbg !7868, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9521, 5} true;
  assume {:verifier.code 0} true;
  call $i195 := usb_stor_access_xfer_buf($p103, $i183, $p194, $p4, $p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9522, 14} true;
  assume {:verifier.code 0} true;
  call $i196 := alauda_write_lba($p0, $i175, $i174, $i182, $p103, $p112);
  // WARNING: %207 = call i32 @alauda_write_lba(%struct.us_data* %0, i16 zeroext %.03, i32 %.04, i32 %.0, i8* %106, i8* %117), !dbg !5658, !verifier.code !5110
  call {:cexpr "result"} boogie_si_record_i32($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9524, 16} true;
  assume {:verifier.code 0} true;
  $i197 := $ne.i32($i196, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9524, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $i196;
  assume {:branchcond $i197} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i197 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9525, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $i198;
  goto $bb16;
$bb24:
  assume !(($i197 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9530, 20} true;
  assume {:verifier.code 0} true;
  $i199 := $zext.i16.i32($i175);
  // WARNING: %212 = zext i16 %.03 to i32, !dbg !5664, !verifier.code !5110
  call {:cexpr "__cil_tmp168"} boogie_si_record_i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9531, 33} true;
  assume {:verifier.code 0} true;
  $i200 := $add.i32($i199, 1);
  // WARNING: %213 = add nsw i32 %212, 1, !dbg !5667, !verifier.code !5110
  call {:cexpr "__cil_tmp169"} boogie_si_record_i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9532, 11} true;
  assume {:verifier.code 0} true;
  $i201 := $trunc.i32.i16($i200);
  // WARNING: %214 = trunc i32 %213 to i16, !dbg !5670, !verifier.code !5110
  call {:cexpr "lba"} boogie_si_record_i16($i201);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9533, 23} true;
  assume {:verifier.code 0} true;
  $i202 := $sub.i32($i173, $i182);
  // WARNING: %215 = sub i32 %.06, %.0, !dbg !5671, !verifier.code !5110
  call {:cexpr "sectors"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9474, 3} true;
  assume {:verifier.code 0} true;
  $i173, $i174, $i175, $i176 := $i202, 0, $i201, $i196;
  goto $bb11;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 87699));
procedure llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 88731));
procedure __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const kfree: ref;
axiom (kfree == $sub.ref(0, 89763));
procedure kfree($p0: ref);
const usb_stor_access_xfer_buf: ref;
axiom (usb_stor_access_xfer_buf == $sub.ref(0, 90795));
procedure usb_stor_access_xfer_buf($p0: ref, $i1: i32, $p2: ref, $p3: ref, $p4: ref, $i5: i32)
  returns ($r: i32);
const alauda_write_lba: ref;
axiom (alauda_write_lba == $sub.ref(0, 91827));
procedure alauda_write_lba($p0: ref, $i1: i16, $i2: i32, $i3: i32, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i32;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i32;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i64;
  var $i110: i64;
  var $p111: ref;
  var $i112: i32;
  var $i113: i64;
  var $i114: i64;
  var $i115: i64;
  var $i116: i64;
  var $i117: i64;
  var $i118: i64;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $i126: i64;
  var $p127: ref;
  var $p128: ref;
  var $i129: i64;
  var $p130: ref;
  var $i131: i16;
  var $i132: i32;
  var $i133: i1;
  var $i134: i32;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i64;
  var $i143: i64;
  var $p144: ref;
  var $i145: i32;
  var $i146: i64;
  var $i147: i64;
  var $i148: i64;
  var $i149: i64;
  var $i150: i64;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i64;
  var $i155: i64;
  var $p156: ref;
  var $i157: i16;
  var $i158: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i1;
  var $i162: i32;
  var $i163: i1;
  var $i164: i32;
  var $i165: i32;
  var $i166: i64;
  var $i167: i32;
  var $i168: i32;
  var $i169: i16;
  var $i170: i32;
  var $i171: i32;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $i179: i8;
  var $i180: i1;
  var $i181: i32;
  var $i182: i32;
  var $i183: i16;
  var $i184: i16;
  var $i185: i32;
  var $i186: i1;
  var $i187: i32;
  var $i188: i32;
  var $i189: i64;
  var $p190: ref;
  var $i191: i64;
  var $i192: i64;
  var $p193: ref;
  var $p194: ref;
  var $i195: i64;
  var $i196: i64;
  var $p197: ref;
  var $i198: i64;
  var $p199: ref;
  var $p200: ref;
  var $i201: i64;
  var $i202: i64;
  var $p203: ref;
  var $i204: i32;
  var $i205: i1;
  var $i206: i32;
  var $i207: i32;
  var $i208: i64;
  var $p209: ref;
  var $p210: ref;
  var $i211: i64;
  var $i212: i64;
  var $p213: ref;
  var $i214: i32;
  var $i215: i64;
  var $i216: i64;
  var $p217: ref;
  var $p218: ref;
  var $i219: i64;
  var $i220: i64;
  var $p221: ref;
  var $i222: i64;
  var $p223: ref;
  var $p224: ref;
  var $i225: i64;
  var $i226: i64;
  var $p227: ref;
  var $i228: i32;
  var $i229: i1;
  var $i230: i32;
  var $i231: i32;
  var $i232: i64;
  var $p233: ref;
  var $p234: ref;
  var $i235: i64;
  var $i236: i64;
  var $p237: ref;
  var $i238: i32;
  var $i239: i32;
  var $i240: i8;
  var $i241: i64;
  var $p242: ref;
  var $i243: i64;
  var $p244: ref;
  var $i245: i32;
  var $i246: i32;
  var $i247: i8;
  var $i248: i64;
  var $p249: ref;
  var $i250: i64;
  var $p251: ref;
  var $i252: i32;
  var $i253: i32;
  var $p254: ref;
  var $i255: i32;
  var $i256: i1;
  var $i257: i32;
  var $i258: i32;
  var $i259: i64;
  var $p260: ref;
  var $i261: i64;
  var $i262: i64;
  var $p263: ref;
  var $i264: i64;
  var $i265: i32;
  var $i266: i64;
  var $p267: ref;
  var $p268: ref;
  var $i269: i64;
  var $i270: i64;
  var $p271: ref;
  var $i272: i64;
  var $p273: ref;
  var $p274: ref;
  var $i275: i64;
  var $i276: i64;
  var $p277: ref;
  var $i278: i32;
  var $i279: i64;
  var $i280: i64;
  var $p281: ref;
  var $p282: ref;
  var $i283: i64;
  var $i284: i64;
  var $p285: ref;
  var $i286: i64;
  var $p287: ref;
  var $p288: ref;
  var $i289: i64;
  var $i290: i64;
  var $p291: ref;
  var $i292: i32;
  var $i293: i32;
  var $i294: i1;
  var $i295: i32;
  var $i296: i32;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $p300: ref;
  var $p301: ref;
  var $p302: ref;
  var $p303: ref;
  var $i304: i64;
  var $i305: i64;
  var $p306: ref;
  var $i307: i32;
  var $i308: i64;
  var $i309: i64;
  var $i310: i64;
  var $i311: i64;
  var $i312: i64;
  var $i313: i64;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $i317: i64;
  var $i318: i64;
  var $p319: ref;
  var $p320: ref;
  var $i321: i64;
  var $p322: ref;
  var $p323: ref;
  var $i324: i64;
  var $p325: ref;
  var $i326: i64;
  var $i327: i64;
  var $p328: ref;
  var $p329: ref;
  var $p330: ref;
  var $p331: ref;
  var $i332: i64;
  var $i333: i64;
  var $p334: ref;
  var $i335: i32;
  var $i336: i64;
  var $i337: i64;
  var $i338: i64;
  var $i339: i64;
  var $i340: i64;
  var $i341: i64;
  var $p342: ref;
  var $p343: ref;
  var $p344: ref;
  var $i345: i64;
  var $i346: i64;
  var $p347: ref;
  var $p348: ref;
  var $i349: i64;
  var $p350: ref;
  var $p351: ref;
  var $i352: i64;
  var $p353: ref;
  var $i354: i32;
  var $i355: i32;
  var $i356: i32;
  var $i357: i32;
  var $i358: i1;
  var $i359: i32;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i364: i64;
  var $i365: i64;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $p369: ref;
  var $i370: i64;
  var $i371: i64;
  var $p372: ref;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $i376: i64;
  var $i377: i64;
  var $i378: i64;
  var $i379: i64;
  var $p380: ref;
  var $p381: ref;
  var $p382: ref;
  var $i383: i64;
  var $i384: i64;
  var $p385: ref;
  var $p386: ref;
  var $i387: i64;
  var $p388: ref;
  var $p389: ref;
  var $i390: i64;
  var $p391: ref;
  var $i135: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(3, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !7901, metadata !5110), !dbg !7902, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !7903, metadata !5110), !dbg !7904, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7905, metadata !5110), !dbg !7906, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8216, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  // WARNING: %8 = ptrtoint %struct.us_data* %0 to i64, !dbg !5127, !verifier.code !5110
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8217, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 192);
  // WARNING: %9 = add i64 %8, 192, !dbg !5132, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8218, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8218, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8219, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8219, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8220, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  // WARNING: %14 = ptrtoint %struct.scsi_device* %13 to i64, !dbg !5142, !verifier.code !5110
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8221, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 156);
  // WARNING: %15 = add i64 %14, 156, !dbg !5145, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8222, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8222, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  // WARNING: %17 = load i32, i32* %16, align 4, !dbg !5149, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8223, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8223, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $mul.i64($i17, 48);
  // WARNING: %19 = mul i64 %18, 48, !dbg !5153, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8224, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 16);
  // WARNING: %20 = add i64 %19, 16, !dbg !5156, !verifier.code !5110
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8225, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64(0, $i19);
  // WARNING: %21 = add i64 0, %20, !dbg !5159, !verifier.code !5110
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8226, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p0);
  // WARNING: %22 = ptrtoint %struct.us_data* %0 to i64, !dbg !5162, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8227, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 648);
  // WARNING: %23 = add i64 %22, 648, !dbg !5165, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8228, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8228, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8229, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8230, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  // WARNING: %27 = ptrtoint %struct.alauda_info* %26 to i64, !dbg !5175, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8231, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, $i20);
  // WARNING: %28 = add i64 %27, %21, !dbg !5178, !verifier.code !5110
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8232, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8232, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  // WARNING: %30 = load i32, i32* %29, align 4, !dbg !5182, !verifier.code !5110
  call {:cexpr "uzonesize"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8233, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p0);
  // WARNING: %31 = ptrtoint %struct.us_data* %0 to i64, !dbg !5185, !verifier.code !5110
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8234, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 192);
  // WARNING: %32 = add i64 %31, 192, !dbg !5188, !verifier.code !5110
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8235, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8235, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8236, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8236, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8237, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  // WARNING: %37 = ptrtoint %struct.scsi_device* %36 to i64, !dbg !5198, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8238, 29} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i64($i36, 156);
  // WARNING: %38 = add i64 %37, 156, !dbg !5201, !verifier.code !5110
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8239, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8239, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  // WARNING: %40 = load i32, i32* %39, align 4, !dbg !5205, !verifier.code !5110
  call {:cexpr "__cil_tmp52"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8240, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8240, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $mul.i64($i40, 48);
  // WARNING: %42 = mul i64 %41, 48, !dbg !5209, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8241, 29} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 20);
  // WARNING: %43 = add i64 %42, 20, !dbg !5212, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8242, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64(0, $i42);
  // WARNING: %44 = add i64 0, %43, !dbg !5215, !verifier.code !5110
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8243, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p0);
  // WARNING: %45 = ptrtoint %struct.us_data* %0 to i64, !dbg !5218, !verifier.code !5110
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8244, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 648);
  // WARNING: %46 = add i64 %45, 648, !dbg !5221, !verifier.code !5110
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8245, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8245, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8246, 17} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8247, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  // WARNING: %50 = ptrtoint %struct.alauda_info* %49 to i64, !dbg !5231, !verifier.code !5110
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8248, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, $i43);
  // WARNING: %51 = add i64 %50, %44, !dbg !5234, !verifier.code !5110
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8249, 16} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8249, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  // WARNING: %53 = load i32, i32* %52, align 4, !dbg !5238, !verifier.code !5110
  call {:cexpr "zonesize"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8250, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p0);
  // WARNING: %54 = ptrtoint %struct.us_data* %0 to i64, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8251, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 192);
  // WARNING: %55 = add i64 %54, 192, !dbg !5244, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8252, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8252, 17} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8253, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8253, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8254, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %60 = ptrtoint %struct.scsi_device* %59 to i64, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8255, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 156);
  // WARNING: %61 = add i64 %60, 156, !dbg !5257, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8256, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8256, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  // WARNING: %63 = load i32, i32* %62, align 4, !dbg !5261, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8257, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8257, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $mul.i64($i63, 48);
  // WARNING: %65 = mul i64 %64, 48, !dbg !5265, !verifier.code !5110
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8258, 29} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 8);
  // WARNING: %66 = add i64 %65, 8, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8259, 19} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64(0, $i65);
  // WARNING: %67 = add i64 0, %66, !dbg !5271, !verifier.code !5110
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8260, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p0);
  // WARNING: %68 = ptrtoint %struct.us_data* %0 to i64, !dbg !5274, !verifier.code !5110
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8261, 29} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 648);
  // WARNING: %69 = add i64 %68, 648, !dbg !5277, !verifier.code !5110
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8262, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8262, 17} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8263, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8264, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p71);
  // WARNING: %73 = ptrtoint %struct.alauda_info* %72 to i64, !dbg !5287, !verifier.code !5110
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8265, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, $i66);
  // WARNING: %74 = add i64 %73, %67, !dbg !5290, !verifier.code !5110
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8266, 16} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8266, 14} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  // WARNING: %76 = load i32, i32* %75, align 4, !dbg !5294, !verifier.code !5110
  call {:cexpr "pagesize"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8267, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p0);
  // WARNING: %77 = ptrtoint %struct.us_data* %0 to i64, !dbg !5297, !verifier.code !5110
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8268, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 192);
  // WARNING: %78 = add i64 %77, 192, !dbg !5300, !verifier.code !5110
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8269, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8269, 17} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8270, 17} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8270, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8271, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p81);
  // WARNING: %83 = ptrtoint %struct.scsi_device* %82 to i64, !dbg !5310, !verifier.code !5110
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8272, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 156);
  // WARNING: %84 = add i64 %83, 156, !dbg !5313, !verifier.code !5110
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8273, 19} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8273, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  // WARNING: %86 = load i32, i32* %85, align 4, !dbg !5317, !verifier.code !5110
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8274, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8274, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $mul.i64($i86, 48);
  // WARNING: %88 = mul i64 %87, 48, !dbg !5321, !verifier.code !5110
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8275, 29} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 12);
  // WARNING: %89 = add i64 %88, 12, !dbg !5324, !verifier.code !5110
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8276, 19} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64(0, $i88);
  // WARNING: %90 = add i64 0, %89, !dbg !5327, !verifier.code !5110
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8277, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p0);
  // WARNING: %91 = ptrtoint %struct.us_data* %0 to i64, !dbg !5330, !verifier.code !5110
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8278, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 648);
  // WARNING: %92 = add i64 %91, 648, !dbg !5333, !verifier.code !5110
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8279, 19} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8279, 17} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8280, 17} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8281, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p94);
  // WARNING: %96 = ptrtoint %struct.alauda_info* %95 to i64, !dbg !5343, !verifier.code !5110
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8282, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, $i89);
  // WARNING: %97 = add i64 %96, %90, !dbg !5346, !verifier.code !5110
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8283, 17} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8283, 15} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  // WARNING: %99 = load i32, i32* %98, align 4, !dbg !5350, !verifier.code !5110
  call {:cexpr "blocksize"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8284, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i16.i32($i1);
  // WARNING: %100 = zext i16 %1 to i32, !dbg !5353, !verifier.code !5110
  call {:cexpr "__cil_tmp94"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8285, 28} true;
  assume {:verifier.code 0} true;
  $i100 := $urem.i32($i99, $i29);
  // WARNING: %101 = urem i32 %100, %30, !dbg !5356, !verifier.code !5110
  call {:cexpr "lba_offset"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8286, 17} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i16.i32($i1);
  // WARNING: %102 = zext i16 %1 to i32, !dbg !5359, !verifier.code !5110
  call {:cexpr "__cil_tmp95"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8287, 22} true;
  assume {:verifier.code 0} true;
  $i102 := $udiv.i32($i101, $i29);
  // WARNING: %103 = udiv i32 %102, %30, !dbg !5362, !verifier.code !5110
  call {:cexpr "zone"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8288, 3} true;
  assume {:verifier.code 0} true;
  call alauda_ensure_map_for_zone($p0, $i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8289, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p0);
  // WARNING: %104 = ptrtoint %struct.us_data* %0 to i64, !dbg !5366, !verifier.code !5110
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8290, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i64($i103, 192);
  // WARNING: %105 = add i64 %104, 192, !dbg !5369, !verifier.code !5110
  call {:cexpr "__cil_tmp97"} boogie_si_record_i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8291, 19} true;
  assume {:verifier.code 0} true;
  $p105 := $i2p.i64.ref($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8291, 17} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8292, 17} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8292, 17} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8293, 18} true;
  assume {:verifier.code 0} true;
  $i109 := $p2i.ref.i64($p108);
  // WARNING: %110 = ptrtoint %struct.scsi_device* %109 to i64, !dbg !5379, !verifier.code !5110
  call {:cexpr "__cil_tmp100"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8294, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i64($i109, 156);
  // WARNING: %111 = add i64 %110, 156, !dbg !5382, !verifier.code !5110
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8295, 20} true;
  assume {:verifier.code 0} true;
  $p111 := $i2p.i64.ref($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8295, 18} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  // WARNING: %113 = load i32, i32* %112, align 4, !dbg !5386, !verifier.code !5110
  call {:cexpr "__cil_tmp102"} boogie_si_record_i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8296, 18} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i32.i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8296, 31} true;
  assume {:verifier.code 0} true;
  $i114 := $mul.i64($i113, 48);
  // WARNING: %115 = mul i64 %114, 48, !dbg !5390, !verifier.code !5110
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8297, 31} true;
  assume {:verifier.code 0} true;
  $i115 := $add.i64($i114, 32);
  // WARNING: %116 = add i64 %115, 32, !dbg !5393, !verifier.code !5110
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8298, 20} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64(0, $i115);
  // WARNING: %117 = add i64 0, %116, !dbg !5396, !verifier.code !5110
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8299, 18} true;
  assume {:verifier.code 0} true;
  $i117 := $p2i.ref.i64($p0);
  // WARNING: %118 = ptrtoint %struct.us_data* %0 to i64, !dbg !5399, !verifier.code !5110
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8300, 31} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i64($i117, 648);
  // WARNING: %119 = add i64 %118, 648, !dbg !5402, !verifier.code !5110
  call {:cexpr "__cil_tmp107"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8301, 20} true;
  assume {:verifier.code 0} true;
  $p119 := $i2p.i64.ref($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8301, 18} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8302, 18} true;
  assume {:verifier.code 0} true;
  $p121 := $bitcast.ref.ref($p120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8303, 18} true;
  assume {:verifier.code 0} true;
  $i122 := $p2i.ref.i64($p121);
  // WARNING: %123 = ptrtoint %struct.alauda_info* %122 to i64, !dbg !5412, !verifier.code !5110
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8304, 31} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i64($i122, $i116);
  // WARNING: %124 = add i64 %123, %117, !dbg !5415, !verifier.code !5110
  call {:cexpr "__cil_tmp111"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8305, 20} true;
  assume {:verifier.code 0} true;
  $p124 := $i2p.i64.ref($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8305, 18} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8306, 31} true;
  assume {:verifier.code 0} true;
  $i126 := $zext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8306, 31} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p125, $mul.ref($i126, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8307, 18} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8308, 31} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i32.i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8308, 31} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p128, $mul.ref($i129, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8309, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i16($M.0, $p130);
  // WARNING: %132 = load i16, i16* %131, align 2, !dbg !5431, !verifier.code !5110
  call {:cexpr "pba"} boogie_si_record_i16($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8312, 18} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i16.i32($i131);
  // WARNING: %133 = zext i16 %132 to i32, !dbg !5434, !verifier.code !5110
  call {:cexpr "__cil_tmp116"} boogie_si_record_i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8313, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $eq.i32($i132, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8315, 5} true;
  assume {:verifier.code 0} true;
  call $i134 := printk.ref(.str.37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8317, 5} true;
  assume {:verifier.code 0} true;
  $i135 := 0;
  goto $bb3;
$bb2:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8624, 1} true;
  assume {:verifier.code 0} true;
  $r := $i135;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8323, 18} true;
  assume {:verifier.code 0} true;
  $i136 := $p2i.ref.i64($p0);
  // WARNING: %139 = ptrtoint %struct.us_data* %0 to i64, !dbg !5445, !verifier.code !5110
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8324, 31} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i64($i136, 192);
  // WARNING: %140 = add i64 %139, 192, !dbg !5449, !verifier.code !5110
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8325, 20} true;
  assume {:verifier.code 0} true;
  $p138 := $i2p.i64.ref($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8325, 18} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8326, 18} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8326, 18} true;
  assume {:verifier.code 0} true;
  $p141 := $load.ref($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8327, 18} true;
  assume {:verifier.code 0} true;
  $i142 := $p2i.ref.i64($p141);
  // WARNING: %145 = ptrtoint %struct.scsi_device* %144 to i64, !dbg !5459, !verifier.code !5110
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8328, 31} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i64($i142, 156);
  // WARNING: %146 = add i64 %145, 156, !dbg !5462, !verifier.code !5110
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8329, 20} true;
  assume {:verifier.code 0} true;
  $p144 := $i2p.i64.ref($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8329, 18} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i32($M.0, $p144);
  // WARNING: %148 = load i32, i32* %147, align 4, !dbg !5466, !verifier.code !5110
  call {:cexpr "__cil_tmp123"} boogie_si_record_i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8330, 18} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i32.i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8330, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $mul.i64($i146, 48);
  // WARNING: %150 = mul i64 %149, 48, !dbg !5470, !verifier.code !5110
  call {:cexpr "__cil_tmp124"} boogie_si_record_i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8331, 20} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i64(0, $i147);
  // WARNING: %151 = add i64 0, %150, !dbg !5473, !verifier.code !5110
  call {:cexpr "__cil_tmp125"} boogie_si_record_i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8332, 18} true;
  assume {:verifier.code 0} true;
  $i149 := $p2i.ref.i64($p0);
  // WARNING: %152 = ptrtoint %struct.us_data* %0 to i64, !dbg !5476, !verifier.code !5110
  call {:cexpr "__cil_tmp126"} boogie_si_record_i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8333, 31} true;
  assume {:verifier.code 0} true;
  $i150 := $add.i64($i149, 648);
  // WARNING: %153 = add i64 %152, 648, !dbg !5479, !verifier.code !5110
  call {:cexpr "__cil_tmp127"} boogie_si_record_i64($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8334, 20} true;
  assume {:verifier.code 0} true;
  $p151 := $i2p.i64.ref($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8334, 18} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8335, 18} true;
  assume {:verifier.code 0} true;
  $p153 := $bitcast.ref.ref($p152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8336, 18} true;
  assume {:verifier.code 0} true;
  $i154 := $p2i.ref.i64($p153);
  // WARNING: %157 = ptrtoint %struct.alauda_info* %156 to i64, !dbg !5489, !verifier.code !5110
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8337, 31} true;
  assume {:verifier.code 0} true;
  $i155 := $add.i64($i154, $i148);
  // WARNING: %158 = add i64 %157, %151, !dbg !5492, !verifier.code !5110
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8338, 18} true;
  assume {:verifier.code 0} true;
  $p156 := $i2p.i64.ref($i155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8339, 13} true;
  assume {:verifier.code 0} true;
  call $i157 := alauda_find_unused_pba($p156, $i102);
  // WARNING: %160 = call zeroext i16 @alauda_find_unused_pba(%struct.alauda_media_info* %159, i32 %103), !dbg !5498, !verifier.code !5110
  call {:cexpr "new_pba"} boogie_si_record_i16($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8341, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $ne.i16($i157, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8341, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i158 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i158 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8343, 5} true;
  assume {:verifier.code 0} true;
  call $i159 := printk.ref(.str.38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8345, 5} true;
  assume {:verifier.code 0} true;
  $i135 := 3;
  goto $bb3;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8350, 18} true;
  assume {:verifier.code 0} true;
  $i160 := $zext.i16.i32($i131);
  // WARNING: %166 = zext i16 %132 to i32, !dbg !5508, !verifier.code !5110
  call {:cexpr "__cil_tmp133"} boogie_si_record_i32($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8351, 20} true;
  assume {:verifier.code 0} true;
  $i161 := $ne.i32($i160, 65535);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8351, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8353, 14} true;
  assume {:verifier.code 0} true;
  call $i162 := alauda_read_block_raw($p0, $i131, 0, $i98, $p5);
  // WARNING: %169 = call i32 @alauda_read_block_raw(%struct.us_data* %0, i16 zeroext %132, i32 0, i32 %99, i8* %5), !dbg !5515, !verifier.code !5110
  call {:cexpr "result"} boogie_si_record_i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8355, 16} true;
  assume {:verifier.code 0} true;
  $i163 := $ne.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8355, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i161 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8363, 29} true;
  assume {:verifier.code 0} true;
  $i164 := $add.i32($i75, 64);
  // WARNING: %175 = add i32 %76, 64, !dbg !5528, !verifier.code !5110
  call {:cexpr "__cil_tmp135"} boogie_si_record_i32($i164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8364, 30} true;
  assume {:verifier.code 0} true;
  $i165 := $mul.i32($i98, $i164);
  // WARNING: %176 = mul i32 %99, %175, !dbg !5533, !verifier.code !5110
  call {:cexpr "__cil_tmp136"} boogie_si_record_i32($i165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8365, 20} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i32.i64($i165);
  // WARNING: %177 = zext i32 %176 to i64, !dbg !5536, !verifier.code !5110
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8366, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p5, 0, $i166, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8356, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $i162;
  goto $bb3;
$bb11:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8360, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8370, 29} true;
  assume {:verifier.code 0} true;
  $i167 := $shl.i32($i100, 1);
  // WARNING: %179 = shl i32 %101, 1, !dbg !5540, !verifier.code !5110
  call {:cexpr "__cil_tmp138"} boogie_si_record_i32($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8371, 31} true;
  assume {:verifier.code 0} true;
  $i168 := $or.i32($i167, 4096);
  // WARNING: %180 = or i32 %179, 4096, !dbg !5543, !verifier.code !5110
  call {:cexpr "__cil_tmp139"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8372, 10} true;
  assume {:verifier.code 0} true;
  $i169 := $trunc.i32.i16($i168);
  // WARNING: %181 = trunc i32 %180 to i16, !dbg !5546, !verifier.code !5110
  call {:cexpr "lbap"} boogie_si_record_i16($i169);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8374, 18} true;
  assume {:verifier.code 0} true;
  $i170 := $zext.i16.i32($i169);
  // WARNING: %182 = zext i16 %181 to i32, !dbg !5549, !verifier.code !5110
  call {:cexpr "__cil_tmp140"} boogie_si_record_i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8375, 31} true;
  assume {:verifier.code 0} true;
  $i171 := $and.i32($i170, 255);
  // WARNING: %183 = and i32 %182, 255, !dbg !5553, !verifier.code !5110
  call {:cexpr "__cil_tmp141"} boogie_si_record_i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8376, 18} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i16.i32($i169);
  // WARNING: %184 = zext i16 %181 to i32, !dbg !5556, !verifier.code !5110
  call {:cexpr "__cil_tmp142"} boogie_si_record_i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8377, 31} true;
  assume {:verifier.code 0} true;
  $i173 := $ashr.i32($i172, 8);
  // WARNING: %185 = ashr i32 %184, 8, !dbg !5559, !verifier.code !5110
  call {:cexpr "__cil_tmp143"} boogie_si_record_i32($i173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8378, 31} true;
  assume {:verifier.code 0} true;
  $i174 := $xor.i32($i173, $i171);
  // WARNING: %186 = xor i32 %185, %183, !dbg !5562, !verifier.code !5110
  call {:cexpr "__cil_tmp144"} boogie_si_record_i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8379, 18} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i32.i64($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8379, 31} true;
  assume {:verifier.code 0} true;
  $i176 := $mul.i64($i175, 1);
  // WARNING: %188 = mul i64 %187, 1, !dbg !5566, !verifier.code !5110
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8380, 43} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i64($p2i.ref.i64(parity), $i176);
  // WARNING: %189 = add i64 ptrtoint ([256 x i8]* @parity to i64), %188, !dbg !5569, !verifier.code !5110
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8381, 9} true;
  assume {:verifier.code 0} true;
  $p178 := $i2p.i64.ref($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8381, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i8($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8381, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $ne.i8($i179, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8381, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i180} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i180 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8382, 20} true;
  assume {:verifier.code 0} true;
  $i181 := $zext.i16.i32($i169);
  // WARNING: %194 = zext i16 %181 to i32, !dbg !5576, !verifier.code !5110
  call {:cexpr "__cil_tmp147"} boogie_si_record_i32($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8383, 33} true;
  assume {:verifier.code 0} true;
  $i182 := $xor.i32($i181, 1);
  // WARNING: %195 = xor i32 %194, 1, !dbg !5580, !verifier.code !5110
  call {:cexpr "__cil_tmp148"} boogie_si_record_i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8384, 12} true;
  assume {:verifier.code 0} true;
  $i183 := $trunc.i32.i16($i182);
  // WARNING: %196 = trunc i32 %195 to i16, !dbg !5583, !verifier.code !5110
  call {:cexpr "lbap"} boogie_si_record_i16($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8385, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $i183;
  goto $bb16;
$bb15:
  assume !(($i180 == 1));
  assume {:verifier.code 0} true;
  $i184 := $i169;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  // WARNING: %.03 = phi i16 [ %196, %193 ], [ %181, %197 ], !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8391, 3} true;
  assume {:verifier.code 0} true;
  $i185 := 0;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8391, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8395, 22} true;
  assume {:verifier.code 0} true;
  $i186 := $ult.i32($i185, $i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8395, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i186} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i186 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8397, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i186 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8398, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8402, 29} true;
  assume {:verifier.code 0} true;
  $i187 := $add.i32($i75, 64);
  // WARNING: %205 = add i32 %76, 64, !dbg !5602, !verifier.code !5110
  call {:cexpr "__cil_tmp150"} boogie_si_record_i32($i187);
  // WARNING: call void @llvm.dbg.value(metadata i32 %205, i64 0, metadata !8393, metadata !5110), !dbg !8394, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8404, 33} true;
  assume {:verifier.code 0} true;
  $i188 := $mul.i32($i185, $i187);
  // WARNING: %206 = mul i32 %.01, %205, !dbg !5608, !verifier.code !5110
  call {:cexpr "__cil_tmp152"} boogie_si_record_i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8405, 24} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i32.i64($i188);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8405, 24} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p5, $mul.ref($i189, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8406, 17} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i32.i64($i75);
  $i192 := $add.i64($i189, $i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8406, 17} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p5, $mul.ref($i192, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %210, i64 0, metadata !8404, metadata !5110), !dbg !8405, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8408, 36} true;
  assume {:verifier.code 0} true;
  $p194 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8408, 20} true;
  assume {:verifier.code 0} true;
  $i195 := $p2i.ref.i64($p194);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8408, 42} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i64($i195, 0);
  // WARNING: %213 = add i64 %212, 0, !dbg !5621, !verifier.code !5110
  call {:cexpr "__cil_tmp154"} boogie_si_record_i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8409, 20} true;
  assume {:verifier.code 0} true;
  $p197 := $i2p.i64.ref($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8410, 5} true;
  assume {:verifier.code 0} true;
  call nand_compute_ecc($p190, $p197);
  $i198 := $add.i64($i192, 13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8411, 25} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p5, $mul.ref($i198, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %215, i64 0, metadata !8418, metadata !5110), !dbg !8419, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8413, 36} true;
  assume {:verifier.code 0} true;
  $p200 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8413, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $p2i.ref.i64($p200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8413, 42} true;
  assume {:verifier.code 0} true;
  $i202 := $add.i64($i201, 0);
  // WARNING: %218 = add i64 %217, 0, !dbg !5635, !verifier.code !5110
  call {:cexpr "__cil_tmp158"} boogie_si_record_i64($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8414, 20} true;
  assume {:verifier.code 0} true;
  $p203 := $i2p.i64.ref($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8415, 15} true;
  assume {:verifier.code 0} true;
  call $i204 := nand_compare_ecc($p199, $p203);
  // WARNING: %220 = call i32 @nand_compare_ecc(i8* %215, i8* %219), !dbg !5641, !verifier.code !5110
  call {:cexpr "tmp___7"} boogie_si_record_i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8417, 9} true;
  assume {:verifier.code 0} true;
  $i205 := $ne.i32($i204, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8417, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i205} true;
  goto $bb23, $bb24;
$bb22:
  // WARNING: call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !8555, metadata !5110), !dbg !8556, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8480, 25} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8477, 3} true;
  assume {:verifier.code 0} true;
  $p254, $i255 := $p4, $i2;
  goto $bb29;
$bb23:
  assume ($i205 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8419, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i205 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8421, 22} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i16.i32($i131);
  // WARNING: %224 = zext i16 %132 to i32, !dbg !5649, !verifier.code !5110
  call {:cexpr "__cil_tmp160"} boogie_si_record_i32($i206);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8422, 7} true;
  assume {:verifier.code 0} true;
  call $i207 := printk.ref.i32.i32(.str.39, $i185, $i206);
  $i208 := $add.i64($i192, 13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8423, 27} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p5, $mul.ref($i208, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %226, i64 0, metadata !8445, metadata !5110), !dbg !8446, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8425, 38} true;
  assume {:verifier.code 0} true;
  $p210 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8425, 22} true;
  assume {:verifier.code 0} true;
  $i211 := $p2i.ref.i64($p210);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8425, 44} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i64($i211, 0);
  // WARNING: %229 = add i64 %228, 0, !dbg !5662, !verifier.code !5110
  call {:cexpr "__cil_tmp163"} boogie_si_record_i64($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8426, 22} true;
  assume {:verifier.code 0} true;
  $p213 := $i2p.i64.ref($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8427, 7} true;
  assume {:verifier.code 0} true;
  call nand_store_ecc($p209, $p213);
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8431, 29} true;
  assume {:verifier.code 0} true;
  $i214 := $udiv.i32($i75, 2);
  // WARNING: %232 = udiv i32 %76, 2, !dbg !5669, !verifier.code !5110
  call {:cexpr "__cil_tmp165"} boogie_si_record_i32($i214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8432, 25} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i32.i64($i214);
  $i216 := $add.i64($i189, $i215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8432, 25} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p5, $mul.ref($i216, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %234, i64 0, metadata !8463, metadata !5110), !dbg !8464, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8434, 36} true;
  assume {:verifier.code 0} true;
  $p218 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8434, 20} true;
  assume {:verifier.code 0} true;
  $i219 := $p2i.ref.i64($p218);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8434, 42} true;
  assume {:verifier.code 0} true;
  $i220 := $add.i64($i219, 0);
  // WARNING: %237 = add i64 %236, 0, !dbg !5680, !verifier.code !5110
  call {:cexpr "__cil_tmp168"} boogie_si_record_i64($i220);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8435, 20} true;
  assume {:verifier.code 0} true;
  $p221 := $i2p.i64.ref($i220);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8436, 5} true;
  assume {:verifier.code 0} true;
  call nand_compute_ecc($p217, $p221);
  $i222 := $add.i64($i192, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8437, 25} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p5, $mul.ref($i222, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %239, i64 0, metadata !8477, metadata !5110), !dbg !8478, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8439, 36} true;
  assume {:verifier.code 0} true;
  $p224 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8439, 20} true;
  assume {:verifier.code 0} true;
  $i225 := $p2i.ref.i64($p224);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8439, 42} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i64($i225, 0);
  // WARNING: %242 = add i64 %241, 0, !dbg !5694, !verifier.code !5110
  call {:cexpr "__cil_tmp172"} boogie_si_record_i64($i226);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8440, 20} true;
  assume {:verifier.code 0} true;
  $p227 := $i2p.i64.ref($i226);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8441, 15} true;
  assume {:verifier.code 0} true;
  call $i228 := nand_compare_ecc($p223, $p227);
  // WARNING: %244 = call i32 @nand_compare_ecc(i8* %239, i8* %243), !dbg !5700, !verifier.code !5110
  call {:cexpr "tmp___8"} boogie_si_record_i32($i228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8443, 9} true;
  assume {:verifier.code 0} true;
  $i229 := $ne.i32($i228, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8443, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i229} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i229 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8445, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i229 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8447, 22} true;
  assume {:verifier.code 0} true;
  $i230 := $zext.i16.i32($i131);
  // WARNING: %248 = zext i16 %132 to i32, !dbg !5708, !verifier.code !5110
  call {:cexpr "__cil_tmp174"} boogie_si_record_i32($i230);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8448, 7} true;
  assume {:verifier.code 0} true;
  call $i231 := printk.ref.i32.i32(.str.40, $i185, $i230);
  $i232 := $add.i64($i192, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8449, 27} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p5, $mul.ref($i232, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %250, i64 0, metadata !8504, metadata !5110), !dbg !8505, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8451, 38} true;
  assume {:verifier.code 0} true;
  $p234 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8451, 22} true;
  assume {:verifier.code 0} true;
  $i235 := $p2i.ref.i64($p234);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8451, 44} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i64($i235, 0);
  // WARNING: %253 = add i64 %252, 0, !dbg !5721, !verifier.code !5110
  call {:cexpr "__cil_tmp177"} boogie_si_record_i64($i236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8452, 22} true;
  assume {:verifier.code 0} true;
  $p237 := $i2p.i64.ref($i236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8453, 7} true;
  assume {:verifier.code 0} true;
  call nand_store_ecc($p233, $p237);
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8456, 20} true;
  assume {:verifier.code 0} true;
  $i238 := $zext.i16.i32($i184);
  // WARNING: %256 = zext i16 %.03 to i32, !dbg !5728, !verifier.code !5110
  call {:cexpr "__cil_tmp179"} boogie_si_record_i32($i238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8457, 33} true;
  assume {:verifier.code 0} true;
  $i239 := $ashr.i32($i238, 8);
  // WARNING: %257 = ashr i32 %256, 8, !dbg !5731, !verifier.code !5110
  call {:cexpr "__cil_tmp180"} boogie_si_record_i32($i239);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8458, 15} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i32.i8($i239);
  // WARNING: %258 = trunc i32 %257 to i8, !dbg !5734, !verifier.code !5110
  call {:cexpr "tmp___9"} boogie_si_record_i8($i240);
  $i241 := $add.i64($i192, 11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8459, 25} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p5, $mul.ref($i241, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8460, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p242, $i240);
  $i243 := $add.i64($i192, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8461, 25} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p5, $mul.ref($i243, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8462, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p244, $i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8463, 20} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i16.i32($i184);
  // WARNING: %261 = zext i16 %.03 to i32, !dbg !5745, !verifier.code !5110
  call {:cexpr "__cil_tmp183"} boogie_si_record_i32($i245);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8464, 33} true;
  assume {:verifier.code 0} true;
  $i246 := $and.i32($i245, 255);
  // WARNING: %262 = and i32 %261, 255, !dbg !5748, !verifier.code !5110
  call {:cexpr "__cil_tmp184"} boogie_si_record_i32($i246);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8465, 16} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i32.i8($i246);
  // WARNING: %263 = trunc i32 %262 to i8, !dbg !5751, !verifier.code !5110
  call {:cexpr "tmp___10"} boogie_si_record_i8($i247);
  $i248 := $add.i64($i192, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8466, 25} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p5, $mul.ref($i248, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8467, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p249, $i247);
  $i250 := $add.i64($i192, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8468, 25} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p5, $mul.ref($i250, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8469, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p251, $i247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8470, 11} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i185, 1);
  // WARNING: %266 = add nsw i32 %.01, 1, !dbg !5762, !verifier.code !5110
  call {:cexpr "i"} boogie_si_record_i32($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8391, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i252;
  goto $bb17;
$bb29:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8477, 13} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  // WARNING: call void @llvm.dbg.value(metadata i32 %268, i64 0, metadata !8564, metadata !5110), !dbg !8565, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8482, 22} true;
  assume {:verifier.code 0} true;
  $i256 := $ult.i32($i255, $i253);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8482, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i256} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i256 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8484, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i256 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8485, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8489, 29} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i75, 64);
  // WARNING: %275 = add i32 %76, 64, !dbg !5786, !verifier.code !5110
  call {:cexpr "__cil_tmp189"} boogie_si_record_i32($i257);
  // WARNING: call void @llvm.dbg.value(metadata i32 %275, i64 0, metadata !8577, metadata !5110), !dbg !8578, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8491, 33} true;
  assume {:verifier.code 0} true;
  $i258 := $mul.i32($i255, $i257);
  // WARNING: %276 = mul i32 %.1, %275, !dbg !5792, !verifier.code !5110
  call {:cexpr "__cil_tmp191"} boogie_si_record_i32($i258);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8492, 24} true;
  assume {:verifier.code 0} true;
  $i259 := $zext.i32.i64($i258);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8492, 24} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p5, $mul.ref($i259, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8493, 17} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i32.i64($i75);
  $i262 := $add.i64($i259, $i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8493, 17} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p5, $mul.ref($i262, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8494, 13} true;
  assume {:verifier.code 0} true;
  $i264 := $zext.i32.i64($i75);
  // WARNING: %281 = zext i32 %76 to i64, !dbg !5797, !verifier.code !5110
  call {:cexpr "__len"} boogie_si_record_i64($i264);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8497, 13} true;
  assume {:verifier.code 0} true;
  call $i265 := __builtinx_memcpy.ref.ref.i64($p260, $p254, $i264);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8498, 17} true;
  assume {:verifier.code 0} true;
  $i266 := $zext.i32.i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8498, 17} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p254, $mul.ref($i266, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %284, i64 0, metadata !8555, metadata !5110), !dbg !8556, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8500, 36} true;
  assume {:verifier.code 0} true;
  $p268 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8500, 20} true;
  assume {:verifier.code 0} true;
  $i269 := $p2i.ref.i64($p268);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8500, 42} true;
  assume {:verifier.code 0} true;
  $i270 := $add.i64($i269, 0);
  // WARNING: %287 = add i64 %286, 0, !dbg !5810, !verifier.code !5110
  call {:cexpr "__cil_tmp195"} boogie_si_record_i64($i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8501, 20} true;
  assume {:verifier.code 0} true;
  $p271 := $i2p.i64.ref($i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8502, 5} true;
  assume {:verifier.code 0} true;
  call nand_compute_ecc($p260, $p271);
  $i272 := $add.i64($i262, 13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8503, 25} true;
  assume {:verifier.code 0} true;
  $p273 := $add.ref($p5, $mul.ref($i272, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %289, i64 0, metadata !8607, metadata !5110), !dbg !8608, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8505, 36} true;
  assume {:verifier.code 0} true;
  $p274 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8505, 20} true;
  assume {:verifier.code 0} true;
  $i275 := $p2i.ref.i64($p274);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8505, 42} true;
  assume {:verifier.code 0} true;
  $i276 := $add.i64($i275, 0);
  // WARNING: %292 = add i64 %291, 0, !dbg !5824, !verifier.code !5110
  call {:cexpr "__cil_tmp199"} boogie_si_record_i64($i276);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8506, 20} true;
  assume {:verifier.code 0} true;
  $p277 := $i2p.i64.ref($i276);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8507, 5} true;
  assume {:verifier.code 0} true;
  call nand_store_ecc($p273, $p277);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8508, 29} true;
  assume {:verifier.code 0} true;
  $i278 := $udiv.i32($i75, 2);
  // WARNING: %294 = udiv i32 %76, 2, !dbg !5831, !verifier.code !5110
  call {:cexpr "__cil_tmp201"} boogie_si_record_i32($i278);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8509, 25} true;
  assume {:verifier.code 0} true;
  $i279 := $zext.i32.i64($i278);
  $i280 := $add.i64($i259, $i279);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8509, 25} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p5, $mul.ref($i280, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %296, i64 0, metadata !8624, metadata !5110), !dbg !8625, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8511, 36} true;
  assume {:verifier.code 0} true;
  $p282 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8511, 20} true;
  assume {:verifier.code 0} true;
  $i283 := $p2i.ref.i64($p282);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8511, 42} true;
  assume {:verifier.code 0} true;
  $i284 := $add.i64($i283, 0);
  // WARNING: %299 = add i64 %298, 0, !dbg !5841, !verifier.code !5110
  call {:cexpr "__cil_tmp204"} boogie_si_record_i64($i284);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8512, 20} true;
  assume {:verifier.code 0} true;
  $p285 := $i2p.i64.ref($i284);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8513, 5} true;
  assume {:verifier.code 0} true;
  call nand_compute_ecc($p281, $p285);
  $i286 := $add.i64($i262, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8514, 25} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p5, $mul.ref($i286, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %301, i64 0, metadata !8638, metadata !5110), !dbg !8639, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8516, 36} true;
  assume {:verifier.code 0} true;
  $p288 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8516, 20} true;
  assume {:verifier.code 0} true;
  $i289 := $p2i.ref.i64($p288);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8516, 42} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i64($i289, 0);
  // WARNING: %304 = add i64 %303, 0, !dbg !5855, !verifier.code !5110
  call {:cexpr "__cil_tmp208"} boogie_si_record_i64($i290);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8517, 20} true;
  assume {:verifier.code 0} true;
  $p291 := $i2p.i64.ref($i290);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8518, 5} true;
  assume {:verifier.code 0} true;
  call nand_store_ecc($p287, $p291);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8519, 11} true;
  assume {:verifier.code 0} true;
  $i292 := $add.i32($i255, 1);
  // WARNING: %306 = add nsw i32 %.1, 1, !dbg !5862, !verifier.code !5110
  call {:cexpr "i"} boogie_si_record_i32($i292);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8477, 3} true;
  assume {:verifier.code 0} true;
  $p254, $i255 := $p267, $i292;
  goto $bb29;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8525, 12} true;
  assume {:verifier.code 0} true;
  call $i293 := alauda_write_block($p0, $i157, $p5);
  // WARNING: %308 = call i32 @alauda_write_block(%struct.us_data* %0, i16 zeroext %160, i8* %5), !dbg !5866, !verifier.code !5110
  call {:cexpr "result"} boogie_si_record_i32($i293);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8527, 14} true;
  assume {:verifier.code 0} true;
  $i294 := $ne.i32($i293, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8527, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i294} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i294 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8528, 5} true;
  assume {:verifier.code 0} true;
  $i135 := $i293;
  goto $bb3;
$bb36:
  assume !(($i294 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8533, 23} true;
  assume {:verifier.code 0} true;
  $i295 := $mul.i32($i102, $i52);
  // WARNING: %313 = mul i32 %103, %53, !dbg !5873, !verifier.code !5110
  call {:cexpr "__cil_tmp210"} boogie_si_record_i32($i295);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8534, 18} true;
  assume {:verifier.code 0} true;
  $i296 := $zext.i16.i32($i157);
  // WARNING: %314 = zext i16 %160 to i32, !dbg !5877, !verifier.code !5110
  call {:cexpr "__cil_tmp211"} boogie_si_record_i32($i296);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8535, 33} true;
  assume {:verifier.code 0} true;
  $i297 := $sub.i32($i296, $i295);
  // WARNING: %315 = sub i32 %314, %313, !dbg !5880, !verifier.code !5110
  call {:cexpr "new_pba_offset"} boogie_si_record_i32($i297);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8536, 18} true;
  assume {:verifier.code 0} true;
  $i298 := $p2i.ref.i64($p0);
  // WARNING: %316 = ptrtoint %struct.us_data* %0 to i64, !dbg !5883, !verifier.code !5110
  call {:cexpr "__cil_tmp212"} boogie_si_record_i64($i298);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8537, 31} true;
  assume {:verifier.code 0} true;
  $i299 := $add.i64($i298, 192);
  // WARNING: %317 = add i64 %316, 192, !dbg !5886, !verifier.code !5110
  call {:cexpr "__cil_tmp213"} boogie_si_record_i64($i299);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8538, 20} true;
  assume {:verifier.code 0} true;
  $p300 := $i2p.i64.ref($i299);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8538, 18} true;
  assume {:verifier.code 0} true;
  $p301 := $load.ref($M.0, $p300);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8539, 18} true;
  assume {:verifier.code 0} true;
  $p302 := $bitcast.ref.ref($p301);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8539, 18} true;
  assume {:verifier.code 0} true;
  $p303 := $load.ref($M.0, $p302);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8540, 18} true;
  assume {:verifier.code 0} true;
  $i304 := $p2i.ref.i64($p303);
  // WARNING: %322 = ptrtoint %struct.scsi_device* %321 to i64, !dbg !5896, !verifier.code !5110
  call {:cexpr "__cil_tmp216"} boogie_si_record_i64($i304);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8541, 31} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i64($i304, 156);
  // WARNING: %323 = add i64 %322, 156, !dbg !5899, !verifier.code !5110
  call {:cexpr "__cil_tmp217"} boogie_si_record_i64($i305);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8542, 20} true;
  assume {:verifier.code 0} true;
  $p306 := $i2p.i64.ref($i305);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8542, 18} true;
  assume {:verifier.code 0} true;
  $i307 := $load.i32($M.0, $p306);
  // WARNING: %325 = load i32, i32* %324, align 4, !dbg !5903, !verifier.code !5110
  call {:cexpr "__cil_tmp218"} boogie_si_record_i32($i307);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8543, 18} true;
  assume {:verifier.code 0} true;
  $i308 := $zext.i32.i64($i307);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8543, 31} true;
  assume {:verifier.code 0} true;
  $i309 := $mul.i64($i308, 48);
  // WARNING: %327 = mul i64 %326, 48, !dbg !5907, !verifier.code !5110
  call {:cexpr "__cil_tmp219"} boogie_si_record_i64($i309);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8544, 31} true;
  assume {:verifier.code 0} true;
  $i310 := $add.i64($i309, 40);
  // WARNING: %328 = add i64 %327, 40, !dbg !5910, !verifier.code !5110
  call {:cexpr "__cil_tmp220"} boogie_si_record_i64($i310);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8545, 20} true;
  assume {:verifier.code 0} true;
  $i311 := $add.i64(0, $i310);
  // WARNING: %329 = add i64 0, %328, !dbg !5913, !verifier.code !5110
  call {:cexpr "__cil_tmp221"} boogie_si_record_i64($i311);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8546, 18} true;
  assume {:verifier.code 0} true;
  $i312 := $p2i.ref.i64($p0);
  // WARNING: %330 = ptrtoint %struct.us_data* %0 to i64, !dbg !5916, !verifier.code !5110
  call {:cexpr "__cil_tmp222"} boogie_si_record_i64($i312);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8547, 31} true;
  assume {:verifier.code 0} true;
  $i313 := $add.i64($i312, 648);
  // WARNING: %331 = add i64 %330, 648, !dbg !5919, !verifier.code !5110
  call {:cexpr "__cil_tmp223"} boogie_si_record_i64($i313);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8548, 20} true;
  assume {:verifier.code 0} true;
  $p314 := $i2p.i64.ref($i313);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8548, 18} true;
  assume {:verifier.code 0} true;
  $p315 := $load.ref($M.0, $p314);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8549, 18} true;
  assume {:verifier.code 0} true;
  $p316 := $bitcast.ref.ref($p315);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8550, 18} true;
  assume {:verifier.code 0} true;
  $i317 := $p2i.ref.i64($p316);
  // WARNING: %335 = ptrtoint %struct.alauda_info* %334 to i64, !dbg !5929, !verifier.code !5110
  call {:cexpr "__cil_tmp226"} boogie_si_record_i64($i317);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8551, 31} true;
  assume {:verifier.code 0} true;
  $i318 := $add.i64($i317, $i311);
  // WARNING: %336 = add i64 %335, %329, !dbg !5932, !verifier.code !5110
  call {:cexpr "__cil_tmp227"} boogie_si_record_i64($i318);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8552, 20} true;
  assume {:verifier.code 0} true;
  $p319 := $i2p.i64.ref($i318);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8552, 18} true;
  assume {:verifier.code 0} true;
  $p320 := $load.ref($M.0, $p319);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8553, 31} true;
  assume {:verifier.code 0} true;
  $i321 := $zext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8553, 31} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($p320, $mul.ref($i321, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8554, 18} true;
  assume {:verifier.code 0} true;
  $p323 := $load.ref($M.0, $p322);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8555, 31} true;
  assume {:verifier.code 0} true;
  $i324 := $zext.i32.i64($i297);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8555, 31} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p323, $mul.ref($i324, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8556, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p325, $i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8557, 18} true;
  assume {:verifier.code 0} true;
  $i326 := $p2i.ref.i64($p0);
  // WARNING: %344 = ptrtoint %struct.us_data* %0 to i64, !dbg !5949, !verifier.code !5110
  call {:cexpr "__cil_tmp232"} boogie_si_record_i64($i326);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8558, 31} true;
  assume {:verifier.code 0} true;
  $i327 := $add.i64($i326, 192);
  // WARNING: %345 = add i64 %344, 192, !dbg !5952, !verifier.code !5110
  call {:cexpr "__cil_tmp233"} boogie_si_record_i64($i327);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8559, 20} true;
  assume {:verifier.code 0} true;
  $p328 := $i2p.i64.ref($i327);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8559, 18} true;
  assume {:verifier.code 0} true;
  $p329 := $load.ref($M.0, $p328);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8560, 18} true;
  assume {:verifier.code 0} true;
  $p330 := $bitcast.ref.ref($p329);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8560, 18} true;
  assume {:verifier.code 0} true;
  $p331 := $load.ref($M.0, $p330);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8561, 18} true;
  assume {:verifier.code 0} true;
  $i332 := $p2i.ref.i64($p331);
  // WARNING: %350 = ptrtoint %struct.scsi_device* %349 to i64, !dbg !5962, !verifier.code !5110
  call {:cexpr "__cil_tmp236"} boogie_si_record_i64($i332);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8562, 31} true;
  assume {:verifier.code 0} true;
  $i333 := $add.i64($i332, 156);
  // WARNING: %351 = add i64 %350, 156, !dbg !5965, !verifier.code !5110
  call {:cexpr "__cil_tmp237"} boogie_si_record_i64($i333);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8563, 20} true;
  assume {:verifier.code 0} true;
  $p334 := $i2p.i64.ref($i333);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8563, 18} true;
  assume {:verifier.code 0} true;
  $i335 := $load.i32($M.0, $p334);
  // WARNING: %353 = load i32, i32* %352, align 4, !dbg !5969, !verifier.code !5110
  call {:cexpr "__cil_tmp238"} boogie_si_record_i32($i335);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8564, 18} true;
  assume {:verifier.code 0} true;
  $i336 := $zext.i32.i64($i335);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8564, 31} true;
  assume {:verifier.code 0} true;
  $i337 := $mul.i64($i336, 48);
  // WARNING: %355 = mul i64 %354, 48, !dbg !5973, !verifier.code !5110
  call {:cexpr "__cil_tmp239"} boogie_si_record_i64($i337);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8565, 31} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i64($i337, 32);
  // WARNING: %356 = add i64 %355, 32, !dbg !5976, !verifier.code !5110
  call {:cexpr "__cil_tmp240"} boogie_si_record_i64($i338);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8566, 20} true;
  assume {:verifier.code 0} true;
  $i339 := $add.i64(0, $i338);
  // WARNING: %357 = add i64 0, %356, !dbg !5979, !verifier.code !5110
  call {:cexpr "__cil_tmp241"} boogie_si_record_i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8567, 18} true;
  assume {:verifier.code 0} true;
  $i340 := $p2i.ref.i64($p0);
  // WARNING: %358 = ptrtoint %struct.us_data* %0 to i64, !dbg !5982, !verifier.code !5110
  call {:cexpr "__cil_tmp242"} boogie_si_record_i64($i340);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8568, 31} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i64($i340, 648);
  // WARNING: %359 = add i64 %358, 648, !dbg !5985, !verifier.code !5110
  call {:cexpr "__cil_tmp243"} boogie_si_record_i64($i341);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8569, 20} true;
  assume {:verifier.code 0} true;
  $p342 := $i2p.i64.ref($i341);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8569, 18} true;
  assume {:verifier.code 0} true;
  $p343 := $load.ref($M.0, $p342);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8570, 18} true;
  assume {:verifier.code 0} true;
  $p344 := $bitcast.ref.ref($p343);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8571, 18} true;
  assume {:verifier.code 0} true;
  $i345 := $p2i.ref.i64($p344);
  // WARNING: %363 = ptrtoint %struct.alauda_info* %362 to i64, !dbg !5995, !verifier.code !5110
  call {:cexpr "__cil_tmp246"} boogie_si_record_i64($i345);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8572, 31} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i64($i345, $i339);
  // WARNING: %364 = add i64 %363, %357, !dbg !5998, !verifier.code !5110
  call {:cexpr "__cil_tmp247"} boogie_si_record_i64($i346);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8573, 20} true;
  assume {:verifier.code 0} true;
  $p347 := $i2p.i64.ref($i346);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8573, 18} true;
  assume {:verifier.code 0} true;
  $p348 := $load.ref($M.0, $p347);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8574, 31} true;
  assume {:verifier.code 0} true;
  $i349 := $zext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8574, 31} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p348, $mul.ref($i349, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8575, 18} true;
  assume {:verifier.code 0} true;
  $p351 := $load.ref($M.0, $p350);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8576, 31} true;
  assume {:verifier.code 0} true;
  $i352 := $zext.i32.i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8576, 31} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p351, $mul.ref($i352, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8577, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p353, $i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8578, 18} true;
  assume {:verifier.code 0} true;
  $i354 := $zext.i16.i32($i1);
  // WARNING: %372 = zext i16 %1 to i32, !dbg !6015, !verifier.code !5110
  call {:cexpr "__cil_tmp252"} boogie_si_record_i32($i354);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8579, 18} true;
  assume {:verifier.code 0} true;
  $i355 := $zext.i16.i32($i157);
  // WARNING: %373 = zext i16 %160 to i32, !dbg !6018, !verifier.code !5110
  call {:cexpr "__cil_tmp253"} boogie_si_record_i32($i355);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8580, 3} true;
  assume {:verifier.code 0} true;
  call $i356 := printk.ref.i32.i32(.str.41, $i354, $i355);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8584, 18} true;
  assume {:verifier.code 0} true;
  $i357 := $zext.i16.i32($i131);
  // WARNING: %375 = zext i16 %132 to i32, !dbg !6022, !verifier.code !5110
  call {:cexpr "__cil_tmp254"} boogie_si_record_i32($i357);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8585, 20} true;
  assume {:verifier.code 0} true;
  $i358 := $ne.i32($i357, 65535);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8585, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i358 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8587, 25} true;
  assume {:verifier.code 0} true;
  $i359 := $mul.i32($i102, $i52);
  // WARNING: %378 = mul i32 %103, %53, !dbg !6029, !verifier.code !5110
  call {:cexpr "__cil_tmp255"} boogie_si_record_i32($i359);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8588, 20} true;
  assume {:verifier.code 0} true;
  $i360 := $zext.i16.i32($i131);
  // WARNING: %379 = zext i16 %132 to i32, !dbg !6034, !verifier.code !5110
  call {:cexpr "__cil_tmp256"} boogie_si_record_i32($i360);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8589, 31} true;
  assume {:verifier.code 0} true;
  $i361 := $sub.i32($i360, $i359);
  // WARNING: %380 = sub i32 %379, %378, !dbg !6037, !verifier.code !5110
  call {:cexpr "pba_offset"} boogie_si_record_i32($i361);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8590, 14} true;
  assume {:verifier.code 0} true;
  call $i362 := alauda_erase_block($p0, $i131);
  // WARNING: %381 = call i32 @alauda_erase_block(%struct.us_data* %0, i16 zeroext %132), !dbg !6040, !verifier.code !5110
  call {:cexpr "result"} boogie_si_record_i32($i362);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8592, 16} true;
  assume {:verifier.code 0} true;
  $i363 := $ne.i32($i362, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8592, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i358 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i363 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8593, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $i362;
  goto $bb3;
$bb41:
  assume !(($i363 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8597, 20} true;
  assume {:verifier.code 0} true;
  $i364 := $p2i.ref.i64($p0);
  // WARNING: %386 = ptrtoint %struct.us_data* %0 to i64, !dbg !6046, !verifier.code !5110
  call {:cexpr "__cil_tmp257"} boogie_si_record_i64($i364);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8598, 33} true;
  assume {:verifier.code 0} true;
  $i365 := $add.i64($i364, 192);
  // WARNING: %387 = add i64 %386, 192, !dbg !6049, !verifier.code !5110
  call {:cexpr "__cil_tmp258"} boogie_si_record_i64($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8599, 22} true;
  assume {:verifier.code 0} true;
  $p366 := $i2p.i64.ref($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8599, 20} true;
  assume {:verifier.code 0} true;
  $p367 := $load.ref($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8600, 20} true;
  assume {:verifier.code 0} true;
  $p368 := $bitcast.ref.ref($p367);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8600, 20} true;
  assume {:verifier.code 0} true;
  $p369 := $load.ref($M.0, $p368);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8601, 20} true;
  assume {:verifier.code 0} true;
  $i370 := $p2i.ref.i64($p369);
  // WARNING: %392 = ptrtoint %struct.scsi_device* %391 to i64, !dbg !6059, !verifier.code !5110
  call {:cexpr "__cil_tmp261"} boogie_si_record_i64($i370);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8602, 33} true;
  assume {:verifier.code 0} true;
  $i371 := $add.i64($i370, 156);
  // WARNING: %393 = add i64 %392, 156, !dbg !6062, !verifier.code !5110
  call {:cexpr "__cil_tmp262"} boogie_si_record_i64($i371);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8603, 22} true;
  assume {:verifier.code 0} true;
  $p372 := $i2p.i64.ref($i371);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8603, 20} true;
  assume {:verifier.code 0} true;
  $i373 := $load.i32($M.0, $p372);
  // WARNING: %395 = load i32, i32* %394, align 4, !dbg !6066, !verifier.code !5110
  call {:cexpr "__cil_tmp263"} boogie_si_record_i32($i373);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8604, 20} true;
  assume {:verifier.code 0} true;
  $i374 := $zext.i32.i64($i373);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8604, 33} true;
  assume {:verifier.code 0} true;
  $i375 := $mul.i64($i374, 48);
  // WARNING: %397 = mul i64 %396, 48, !dbg !6070, !verifier.code !5110
  call {:cexpr "__cil_tmp264"} boogie_si_record_i64($i375);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8605, 33} true;
  assume {:verifier.code 0} true;
  $i376 := $add.i64($i375, 40);
  // WARNING: %398 = add i64 %397, 40, !dbg !6073, !verifier.code !5110
  call {:cexpr "__cil_tmp265"} boogie_si_record_i64($i376);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8606, 22} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i64(0, $i376);
  // WARNING: %399 = add i64 0, %398, !dbg !6076, !verifier.code !5110
  call {:cexpr "__cil_tmp266"} boogie_si_record_i64($i377);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8607, 20} true;
  assume {:verifier.code 0} true;
  $i378 := $p2i.ref.i64($p0);
  // WARNING: %400 = ptrtoint %struct.us_data* %0 to i64, !dbg !6079, !verifier.code !5110
  call {:cexpr "__cil_tmp267"} boogie_si_record_i64($i378);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8608, 33} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i64($i378, 648);
  // WARNING: %401 = add i64 %400, 648, !dbg !6082, !verifier.code !5110
  call {:cexpr "__cil_tmp268"} boogie_si_record_i64($i379);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8609, 22} true;
  assume {:verifier.code 0} true;
  $p380 := $i2p.i64.ref($i379);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8609, 20} true;
  assume {:verifier.code 0} true;
  $p381 := $load.ref($M.0, $p380);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8610, 20} true;
  assume {:verifier.code 0} true;
  $p382 := $bitcast.ref.ref($p381);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8611, 20} true;
  assume {:verifier.code 0} true;
  $i383 := $p2i.ref.i64($p382);
  // WARNING: %405 = ptrtoint %struct.alauda_info* %404 to i64, !dbg !6092, !verifier.code !5110
  call {:cexpr "__cil_tmp271"} boogie_si_record_i64($i383);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8612, 33} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i64($i383, $i377);
  // WARNING: %406 = add i64 %405, %399, !dbg !6095, !verifier.code !5110
  call {:cexpr "__cil_tmp272"} boogie_si_record_i64($i384);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8613, 22} true;
  assume {:verifier.code 0} true;
  $p385 := $i2p.i64.ref($i384);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8613, 20} true;
  assume {:verifier.code 0} true;
  $p386 := $load.ref($M.0, $p385);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8614, 33} true;
  assume {:verifier.code 0} true;
  $i387 := $zext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8614, 33} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p386, $mul.ref($i387, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8615, 20} true;
  assume {:verifier.code 0} true;
  $p389 := $load.ref($M.0, $p388);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8616, 33} true;
  assume {:verifier.code 0} true;
  $i390 := $zext.i32.i64($i361);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8616, 33} true;
  assume {:verifier.code 0} true;
  $p391 := $add.ref($p389, $mul.ref($i390, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8617, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p391, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8618, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 8622, 3} true;
  assume {:verifier.code 0} true;
  $i135 := 0;
  goto $bb3;
}
const alauda_ensure_map_for_zone: ref;
axiom (alauda_ensure_map_for_zone == $sub.ref(0, 92859));
procedure alauda_ensure_map_for_zone($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $i31: i32;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $i61: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !8907, metadata !5110), !dbg !8908, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7240, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($0.ref);
  // WARNING: %3 = ptrtoint i8* null to i64, !dbg !5118, !verifier.code !5113
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7241, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  // WARNING: %4 = ptrtoint %struct.us_data* %0 to i64, !dbg !5123, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7242, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($i3, 192);
  // WARNING: %5 = add i64 %4, 192, !dbg !5126, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7243, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7243, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7244, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7244, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7245, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  // WARNING: %10 = ptrtoint %struct.scsi_device* %9 to i64, !dbg !5136, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7246, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 156);
  // WARNING: %11 = add i64 %10, 156, !dbg !5139, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7247, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7247, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  // WARNING: %13 = load i32, i32* %12, align 4, !dbg !5143, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7248, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7248, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $mul.i64($i13, 48);
  // WARNING: %15 = mul i64 %14, 48, !dbg !5147, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7249, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 32);
  // WARNING: %16 = add i64 %15, 32, !dbg !5150, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7250, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64(0, $i15);
  // WARNING: %17 = add i64 0, %16, !dbg !5153, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7251, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p0);
  // WARNING: %18 = ptrtoint %struct.us_data* %0 to i64, !dbg !5156, !verifier.code !5113
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7252, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 648);
  // WARNING: %19 = add i64 %18, 648, !dbg !5159, !verifier.code !5113
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7253, 19} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7253, 17} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7254, 17} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7255, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  // WARNING: %23 = ptrtoint %struct.alauda_info* %22 to i64, !dbg !5169, !verifier.code !5113
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7256, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, $i16);
  // WARNING: %24 = add i64 %23, %17, !dbg !5172, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7257, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7257, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7258, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7258, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p25, $mul.ref($i26, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7259, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7260, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  // WARNING: %30 = ptrtoint i16* %29 to i64, !dbg !5185, !verifier.code !5113
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7261, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7261, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7263, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := alauda_read_map($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7265, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7268, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($0.ref);
  // WARNING: %35 = ptrtoint i8* null to i64, !dbg !5197, !verifier.code !5113
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7269, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p0);
  // WARNING: %36 = ptrtoint %struct.us_data* %0 to i64, !dbg !5202, !verifier.code !5113
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7270, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 192);
  // WARNING: %37 = add i64 %36, 192, !dbg !5205, !verifier.code !5113
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7271, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7271, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7272, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7272, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7273, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  // WARNING: %42 = ptrtoint %struct.scsi_device* %41 to i64, !dbg !5215, !verifier.code !5113
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7274, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 156);
  // WARNING: %43 = add i64 %42, 156, !dbg !5218, !verifier.code !5113
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7275, 21} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7275, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  // WARNING: %45 = load i32, i32* %44, align 4, !dbg !5222, !verifier.code !5113
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7276, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i32.i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7276, 31} true;
  assume {:verifier.code 0} true;
  $i44 := $mul.i64($i43, 48);
  // WARNING: %47 = mul i64 %46, 48, !dbg !5226, !verifier.code !5113
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7277, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 40);
  // WARNING: %48 = add i64 %47, 40, !dbg !5229, !verifier.code !5113
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7278, 21} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64(0, $i45);
  // WARNING: %49 = add i64 0, %48, !dbg !5232, !verifier.code !5113
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7279, 19} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p0);
  // WARNING: %50 = ptrtoint %struct.us_data* %0 to i64, !dbg !5235, !verifier.code !5113
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7280, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 648);
  // WARNING: %51 = add i64 %50, 648, !dbg !5238, !verifier.code !5113
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7281, 21} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7281, 19} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7282, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7283, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p51);
  // WARNING: %55 = ptrtoint %struct.alauda_info* %54 to i64, !dbg !5248, !verifier.code !5113
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7284, 31} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, $i46);
  // WARNING: %56 = add i64 %55, %49, !dbg !5251, !verifier.code !5113
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7285, 21} true;
  assume {:verifier.code 0} true;
  $p54 := $i2p.i64.ref($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7285, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7286, 31} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7286, 31} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p55, $mul.ref($i56, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7287, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7288, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %62 = ptrtoint i16* %61 to i64, !dbg !5264, !verifier.code !5113
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7289, 21} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i64($i59, $i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7289, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7299, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7291, 7} true;
  assume {:verifier.code 0} true;
  call $i61 := alauda_read_map($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const alauda_find_unused_pba: ref;
axiom (alauda_find_unused_pba == $sub.ref(0, 93891));
procedure alauda_find_unused_pba($p0: ref, $i1: i32)
  returns ($r: i16)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i64;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $i30: i32;
  var $i29: i16;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.alauda_media_info* %0, i64 0, metadata !9073, metadata !5110), !dbg !9074, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6606, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6607, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 40);
  // WARNING: %4 = add i64 %3, 40, !dbg !5120, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6608, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6608, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6609, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6609, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, $mul.ref($i6, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6610, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  // WARNING: call void @llvm.dbg.value(metadata i16* %9, i64 0, metadata !9092, metadata !5110), !dbg !9093, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6613, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6613, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6616, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p0);
  // WARNING: %12 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5139, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6617, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 20);
  // WARNING: %13 = add i64 %12, 20, !dbg !5144, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6618, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6618, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  // WARNING: %15 = load i32, i32* %14, align 4, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6619, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ult.i32($i9, $i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6619, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6621, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6622, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6626, 30} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6626, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p8, $mul.ref($i15, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6627, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i16($M.0, $p16);
  // WARNING: %22 = load i16, i16* %21, align 2, !dbg !5162, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i16($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6628, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i16.i32($i17);
  // WARNING: %23 = zext i16 %22 to i32, !dbg !5165, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6629, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 65535);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6629, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $i9;
  assume {:branchcond $i19} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6647, 3} true;
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb9;
$bb7:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6631, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p0);
  // WARNING: %26 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5171, !verifier.code !5113
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6632, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 30);
  // WARNING: %27 = add i64 %26, 30, !dbg !5176, !verifier.code !5113
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6633, 23} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6633, 21} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i8($M.0, $p23);
  // WARNING: %29 = load i8, i8* %28, align 1, !dbg !5180, !verifier.code !5113
  call {:cexpr "__cil_tmp17"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6634, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i24);
  // WARNING: %30 = zext i8 %29 to i32, !dbg !5183, !verifier.code !5113
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6635, 26} true;
  assume {:verifier.code 0} true;
  $i26 := $shl.i32($i1, $i25);
  // WARNING: %31 = shl i32 %1, %30, !dbg !5186, !verifier.code !5113
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6636, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26, $i20);
  // WARNING: %32 = add i32 %31, %.01.lcssa2, !dbg !5189, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6637, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i16($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6637, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $i28;
  goto $bb9;
$bb8:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6649, 1} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6643, 11} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i32($i9, 1);
  // WARNING: %36 = add i32 %.01, 1, !dbg !5194, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6613, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i30;
  goto $bb1;
}
const alauda_read_block_raw: ref;
axiom (alauda_read_block_raw == $sub.ref(0, 94923));
procedure alauda_read_block_raw($p0: ref, $i1: i16, $i2: i32, $i3: i32, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $i44: i8;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i8;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i32;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $p108: ref;
  var $i109: i32;
  var $i78: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(9, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !9164, metadata !5110), !dbg !9165, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !9166, metadata !5110), !dbg !9167, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9168, metadata !5110), !dbg !9169, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [9 x i8]* %6, metadata !9174, metadata !5110), !dbg !9178, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7537, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7537, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7537, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 0);
  // WARNING: %9 = add i64 %8, 0, !dbg !5133, !verifier.code !5110
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7538, 5} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7538, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 64);
  // WARNING: store i8 64, i8* %10, align 1, !dbg !5137, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7540, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7540, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7540, 43} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 1);
  // WARNING: %13 = add i64 %12, 1, !dbg !5142, !verifier.code !5110
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7541, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7541, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, $sub.i8(0, 108));
  // WARNING: store i8 -108, i8* %14, align 1, !dbg !5146, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7543, 33} true;
  assume {:verifier.code 0} true;
  $p14 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7543, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7543, 43} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 2);
  // WARNING: %17 = add i64 %16, 2, !dbg !5151, !verifier.code !5110
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7544, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i16.i32($i1);
  // WARNING: %18 = zext i16 %1 to i32, !dbg !5154, !verifier.code !5110
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7545, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $ashr.i32($i17, 3);
  // WARNING: %19 = ashr i32 %18, 3, !dbg !5157, !verifier.code !5110
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7546, 37} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7546, 5} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7546, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, $i19);
  // WARNING: store i8 %20, i8* %21, align 1, !dbg !5162, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7548, 33} true;
  assume {:verifier.code 0} true;
  $p21 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7548, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7548, 43} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 3);
  // WARNING: %24 = add i64 %23, 3, !dbg !5167, !verifier.code !5110
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7549, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i1);
  // WARNING: %25 = zext i16 %1 to i32, !dbg !5170, !verifier.code !5110
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7550, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $ashr.i32($i24, 11);
  // WARNING: %26 = ashr i32 %25, 11, !dbg !5173, !verifier.code !5110
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7551, 37} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7551, 5} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7551, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i26);
  // WARNING: store i8 %27, i8* %28, align 1, !dbg !5178, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7553, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7553, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7553, 43} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 4);
  // WARNING: %31 = add i64 %30, 4, !dbg !5183, !verifier.code !5110
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7554, 5} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7554, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, 0);
  // WARNING: store i8 0, i8* %32, align 1, !dbg !5187, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7556, 33} true;
  assume {:verifier.code 0} true;
  $p32 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7556, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7556, 43} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 5);
  // WARNING: %35 = add i64 %34, 5, !dbg !5192, !verifier.code !5110
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7557, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i16.i32($i1);
  // WARNING: %36 = zext i16 %1 to i32, !dbg !5195, !verifier.code !5110
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7558, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i35, 15);
  // WARNING: %37 = and i32 %36, 15, !dbg !5198, !verifier.code !5110
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7559, 29} true;
  assume {:verifier.code 0} true;
  $i37 := $shl.i32($i36, 5);
  // WARNING: %38 = shl i32 %37, 5, !dbg !5201, !verifier.code !5110
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i37);
  // WARNING: call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !9254, metadata !5110), !dbg !9255, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7561, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i37, $i2);
  // WARNING: %39 = add i32 %38, %2, !dbg !5206, !verifier.code !5110
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7562, 37} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i8($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7562, 5} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7562, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, $i39);
  // WARNING: store i8 %40, i8* %41, align 1, !dbg !5211, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7564, 33} true;
  assume {:verifier.code 0} true;
  $p41 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7564, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7564, 43} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 6);
  // WARNING: %44 = add i64 %43, 6, !dbg !5216, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7565, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7565, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7565, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, $i44);
  // WARNING: store i8 %45, i8* %46, align 1, !dbg !5221, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7567, 33} true;
  assume {:verifier.code 0} true;
  $p46 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7567, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7567, 43} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 7);
  // WARNING: %49 = add i64 %48, 7, !dbg !5226, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7568, 5} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7568, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, 0);
  // WARNING: store i8 0, i8* %50, align 1, !dbg !5230, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7570, 33} true;
  assume {:verifier.code 0} true;
  $p50 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7570, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7570, 43} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 8);
  // WARNING: %53 = add i64 %52, 8, !dbg !5235, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7571, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p0);
  // WARNING: %54 = ptrtoint %struct.us_data* %0 to i64, !dbg !5238, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7572, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 192);
  // WARNING: %55 = add i64 %54, 192, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7573, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7573, 17} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7574, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7574, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7575, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  // WARNING: %60 = ptrtoint %struct.scsi_device* %59 to i64, !dbg !5251, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7576, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 156);
  // WARNING: %61 = add i64 %60, 156, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7577, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7577, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  // WARNING: %63 = load i32, i32* %62, align 4, !dbg !5258, !verifier.code !5110
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7578, 37} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7578, 5} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7578, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7579, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i16.i32($i1);
  // WARNING: %66 = zext i16 %1 to i32, !dbg !5264, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7580, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := printk.ref.i32.i32.i32(.str.34, $i65, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7582, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p0);
  // WARNING: %68 = ptrtoint %struct.us_data* %0 to i64, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7583, 29} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 112);
  // WARNING: %69 = add i64 %68, 112, !dbg !5271, !verifier.code !5110
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7584, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7584, 17} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  // WARNING: %71 = load i32, i32* %70, align 4, !dbg !5275, !verifier.code !5110
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i70);
  // WARNING: call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !9328, metadata !5110), !dbg !9329, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7586, 33} true;
  assume {:verifier.code 0} true;
  $p71 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7586, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7586, 43} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i64($i72, 0);
  // WARNING: %74 = add i64 %73, 0, !dbg !5282, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7587, 17} true;
  assume {:verifier.code 0} true;
  $p74 := $i2p.i64.ref($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7590, 17} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7591, 8} true;
  assume {:verifier.code 0} true;
  call $i76 := usb_stor_bulk_transfer_buf($p0, $i70, $p74, 9, $p75);
  // WARNING: %77 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %71, i8* %75, i32 9, i32* %76), !dbg !5295, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7593, 10} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7593, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7594, 5} true;
  assume {:verifier.code 0} true;
  $i78 := $i76;
  goto $bb3;
$bb2:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7629, 1} true;
  assume {:verifier.code 0} true;
  $r := $i78;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7599, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p0);
  // WARNING: %82 = ptrtoint %struct.us_data* %0 to i64, !dbg !5303, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7600, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 116);
  // WARNING: %83 = add i64 %82, 116, !dbg !5307, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7601, 19} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7601, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p81);
  // WARNING: %85 = load i32, i32* %84, align 4, !dbg !5311, !verifier.code !5110
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7603, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p0);
  // WARNING: %86 = ptrtoint %struct.us_data* %0 to i64, !dbg !5316, !verifier.code !5110
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7604, 29} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 192);
  // WARNING: %87 = add i64 %86, 192, !dbg !5319, !verifier.code !5110
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7605, 19} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7605, 17} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7606, 17} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7606, 17} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7607, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p88);
  // WARNING: %92 = ptrtoint %struct.scsi_device* %91 to i64, !dbg !5329, !verifier.code !5110
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7608, 29} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, 156);
  // WARNING: %93 = add i64 %92, 156, !dbg !5332, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7609, 19} true;
  assume {:verifier.code 0} true;
  $p91 := $i2p.i64.ref($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7609, 17} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  // WARNING: %95 = load i32, i32* %94, align 4, !dbg !5336, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7610, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i32.i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7610, 29} true;
  assume {:verifier.code 0} true;
  $i94 := $mul.i64($i93, 48);
  // WARNING: %97 = mul i64 %96, 48, !dbg !5340, !verifier.code !5110
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7611, 29} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 8);
  // WARNING: %98 = add i64 %97, 8, !dbg !5343, !verifier.code !5110
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7612, 19} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64(0, $i95);
  // WARNING: %99 = add i64 0, %98, !dbg !5346, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7613, 17} true;
  assume {:verifier.code 0} true;
  $i97 := $p2i.ref.i64($p0);
  // WARNING: %100 = ptrtoint %struct.us_data* %0 to i64, !dbg !5349, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7614, 29} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i97, 648);
  // WARNING: %101 = add i64 %100, 648, !dbg !5352, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7615, 19} true;
  assume {:verifier.code 0} true;
  $p99 := $i2p.i64.ref($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7615, 17} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7616, 17} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7617, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p101);
  // WARNING: %105 = ptrtoint %struct.alauda_info* %104 to i64, !dbg !5362, !verifier.code !5110
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7618, 29} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, $i96);
  // WARNING: %106 = add i64 %105, %99, !dbg !5365, !verifier.code !5110
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7619, 19} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7619, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  // WARNING: %108 = load i32, i32* %107, align 4, !dbg !5369, !verifier.code !5110
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7620, 29} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105, 64);
  // WARNING: %109 = add i32 %108, 64, !dbg !5372, !verifier.code !5110
  call {:cexpr "__cil_tmp74"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7621, 29} true;
  assume {:verifier.code 0} true;
  $i107 := $mul.i32($i106, $i3);
  // WARNING: %110 = mul i32 %109, %3, !dbg !5375, !verifier.code !5110
  call {:cexpr "__cil_tmp75"} boogie_si_record_i32($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7623, 17} true;
  assume {:verifier.code 0} true;
  $p108 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7624, 13} true;
  assume {:verifier.code 0} true;
  call $i109 := usb_stor_bulk_transfer_buf($p0, $i82, $p4, $i107, $p108);
  // WARNING: %112 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %85, i8* %4, i32 %110, i32* %111), !dbg !5383, !verifier.code !5110
  call {:cexpr "tmp___7"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7627, 3} true;
  assume {:verifier.code 0} true;
  $i78 := $i109;
  goto $bb3;
}
const nand_compute_ecc: ref;
axiom (nand_compute_ecc == $sub.ref(0, 95955));
procedure nand_compute_ecc($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i8;
  var $i13: i32;
  var $i14: i1;
  var $i15: i8;
  var $i16: i64;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $i23: i64;
  var $p24: ref;
  var $i25: i8;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i8;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $i41: i32;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $p61: ref;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i64;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $i89: i8;
  var $i90: i1;
  var $i91: i32;
  var $p92: ref;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $i97: i8;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $p104: ref;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $i110: i32;
  var $p111: ref;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $i115: i8;
  var $i116: i32;
  var $i117: i32;
  var $p118: ref;
  var $i119: i64;
  var $i120: i64;
  var $p121: ref;
  var $i122: i8;
  var $i123: i32;
  var $i124: i32;
  var $i125: i32;
  var $i126: i32;
  var $i127: i32;
  var $i128: i64;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i8;
  var $i133: i1;
  var $i134: i32;
  var $p135: ref;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $i140: i8;
  var $p141: ref;
  var $i142: i64;
  var $i143: i64;
  var $i144: i64;
  var $p145: ref;
  var $i146: i8;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [8 x i8]* %3, metadata !9447, metadata !5110), !dbg !9449, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !9450, metadata !5110), !dbg !9451, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4668, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4668, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4670, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4670, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4672, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4673, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4675, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4675, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i64($i5, 1);
  // WARNING: %11 = mul i64 %10, 1, !dbg !5137, !verifier.code !5110
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4676, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4676, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4676, 42} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, $i6);
  // WARNING: %14 = add i64 %13, %11, !dbg !5142, !verifier.code !5110
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4677, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4677, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4678, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i3, 1);
  // WARNING: %16 = add nsw i32 %.03, 1, !dbg !5147, !verifier.code !5110
  call {:cexpr "j"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4668, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i11;
  goto $bb1;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4684, 3} true;
  assume {:verifier.code 0} true;
  $i12, $i13 := 0, 0;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4684, 13} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4686, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i13, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4686, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $i12;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4688, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4689, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4691, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4691, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, $mul.ref($i16, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4692, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  // WARNING: %26 = load i8, i8* %25, align 1, !dbg !5168, !verifier.code !5110
  call {:cexpr "__cil_tmp14"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4693, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  // WARNING: %27 = zext i8 %26 to i32, !dbg !5171, !verifier.code !5110
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4694, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i12);
  // WARNING: %28 = zext i8 %.04 to i32, !dbg !5174, !verifier.code !5110
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4695, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $xor.i32($i20, $i19);
  // WARNING: %29 = xor i32 %28, %27, !dbg !5177, !verifier.code !5110
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4696, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  // WARNING: %30 = trunc i32 %29 to i8, !dbg !5180, !verifier.code !5110
  call {:cexpr "par"} boogie_si_record_i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4697, 24} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4697, 24} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, $mul.ref($i23, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4698, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  // WARNING: %33 = load i8, i8* %32, align 1, !dbg !5184, !verifier.code !5110
  call {:cexpr "__cil_tmp19"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4699, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4699, 31} true;
  assume {:verifier.code 0} true;
  $i27 := $mul.i64($i26, 1);
  // WARNING: %35 = mul i64 %34, 1, !dbg !5188, !verifier.code !5110
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4700, 44} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($p2i.ref.i64(parity), $i27);
  // WARNING: %36 = add i64 ptrtoint ([256 x i8]* @parity to i64), %35, !dbg !5191, !verifier.code !5110
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4701, 13} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4701, 11} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  // WARNING: %38 = load i8, i8* %37, align 1, !dbg !5195, !verifier.code !5110
  call {:cexpr "bit"} boogie_si_record_i8($i30);
  // WARNING: call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !9527, metadata !5110), !dbg !9528, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4704, 5} true;
  assume {:verifier.code 0} true;
  $i31 := 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4737, 33} true;
  assume {:verifier.code 0} true;
  $p55 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4737, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4737, 40} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 0);
  // WARNING: %74 = add i64 %73, 0, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4738, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4738, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  // WARNING: %76 = load i8, i8* %75, align 1, !dbg !5272, !verifier.code !5110
  call {:cexpr "__cil_tmp34"} boogie_si_record_i8($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4739, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  // WARNING: %77 = zext i8 %76 to i32, !dbg !5275, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i60);
  // WARNING: call void @llvm.dbg.value(metadata i32 %77, i64 0, metadata !9607, metadata !5110), !dbg !9608, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4741, 33} true;
  assume {:verifier.code 0} true;
  $p61 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4741, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4741, 40} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 1);
  // WARNING: %80 = add i64 %79, 1, !dbg !5282, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4742, 19} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4742, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p64);
  // WARNING: %82 = load i8, i8* %81, align 1, !dbg !5286, !verifier.code !5110
  call {:cexpr "__cil_tmp38"} boogie_si_record_i8($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4743, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  // WARNING: %83 = zext i8 %82 to i32, !dbg !5289, !verifier.code !5110
  call {:cexpr "__cil_tmp39"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4744, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $shl.i32($i66, 2);
  // WARNING: %84 = shl i32 %83, 2, !dbg !5292, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i32($i67);
  // WARNING: call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !9624, metadata !5110), !dbg !9625, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4746, 33} true;
  assume {:verifier.code 0} true;
  $p68 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4746, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4746, 40} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 2);
  // WARNING: %87 = add i64 %86, 2, !dbg !5299, !verifier.code !5110
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4747, 19} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4747, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  // WARNING: %89 = load i8, i8* %88, align 1, !dbg !5303, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i8($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4748, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  // WARNING: %90 = zext i8 %89 to i32, !dbg !5306, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4749, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $shl.i32($i73, 4);
  // WARNING: %91 = shl i32 %90, 4, !dbg !5309, !verifier.code !5110
  call {:cexpr "__cil_tmp45"} boogie_si_record_i32($i74);
  // WARNING: call void @llvm.dbg.value(metadata i32 %91, i64 0, metadata !9641, metadata !5110), !dbg !9642, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4751, 33} true;
  assume {:verifier.code 0} true;
  $p75 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4751, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4751, 40} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 3);
  // WARNING: %94 = add i64 %93, 3, !dbg !5316, !verifier.code !5110
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4752, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4752, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  // WARNING: %96 = load i8, i8* %95, align 1, !dbg !5320, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i8($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4753, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  // WARNING: %97 = zext i8 %96 to i32, !dbg !5323, !verifier.code !5110
  call {:cexpr "__cil_tmp49"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4754, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $shl.i32($i80, 6);
  // WARNING: %98 = shl i32 %97, 6, !dbg !5326, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4755, 29} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i32($i81, $i74);
  // WARNING: %99 = add nsw i32 %98, %91, !dbg !5329, !verifier.code !5110
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4756, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i82, $i67);
  // WARNING: %100 = add nsw i32 %99, %84, !dbg !5332, !verifier.code !5110
  call {:cexpr "__cil_tmp52"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4757, 19} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i83, $i60);
  // WARNING: %101 = add nsw i32 %100, %77, !dbg !5335, !verifier.code !5110
  call {:cexpr "a"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4759, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4759, 21} true;
  assume {:verifier.code 0} true;
  $i86 := $mul.i64($i85, 1);
  // WARNING: %103 = mul i64 %102, 1, !dbg !5340, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4760, 42} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($p2i.ref.i64(parity), $i86);
  // WARNING: %104 = add i64 ptrtoint ([256 x i8]* @parity to i64), %103, !dbg !5343, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4761, 9} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4761, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4761, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i8($i89, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4761, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb22, $bb23;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4704, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4706, 13} true;
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4706, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4708, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4709, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4712, 23} true;
  assume {:verifier.code 0} true;
  $i33 := $shl.i32(1, $i31);
  // WARNING: %45 = shl i32 1, %.1, !dbg !5210, !verifier.code !5110
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4713, 23} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i13, $i33);
  // WARNING: %46 = and i32 %.02, %45, !dbg !5214, !verifier.code !5110
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4714, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4714, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb19, $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4732, 11} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i13, 1);
  // WARNING: %70 = add nsw i32 %.02, 1, !dbg !5260, !verifier.code !5110
  call {:cexpr "i"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4684, 3} true;
  assume {:verifier.code 0} true;
  $i12, $i13 := $i22, $i54;
  goto $bb7;
$bb19:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4715, 23} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4715, 25} true;
  assume {:verifier.code 0} true;
  $i37 := $mul.i64($i36, 1);
  // WARNING: %50 = mul i64 %49, 1, !dbg !5222, !verifier.code !5110
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4716, 39} true;
  assume {:verifier.code 0} true;
  $p38 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4716, 23} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4716, 46} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, $i37);
  // WARNING: %53 = add i64 %52, %50, !dbg !5227, !verifier.code !5110
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4717, 23} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i30);
  // WARNING: %54 = zext i8 %38 to i32, !dbg !5230, !verifier.code !5110
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4718, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4718, 25} true;
  assume {:verifier.code 0} true;
  $i43 := $mul.i64($i42, 1);
  // WARNING: %56 = mul i64 %55, 1, !dbg !5234, !verifier.code !5110
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4719, 39} true;
  assume {:verifier.code 0} true;
  $p44 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4719, 23} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4719, 46} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, $i43);
  // WARNING: %59 = add i64 %58, %56, !dbg !5239, !verifier.code !5110
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4720, 25} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4720, 23} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  // WARNING: %61 = load i8, i8* %60, align 1, !dbg !5243, !verifier.code !5110
  call {:cexpr "__cil_tmp29"} boogie_si_record_i8($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4721, 23} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  // WARNING: %62 = zext i8 %61 to i32, !dbg !5246, !verifier.code !5110
  call {:cexpr "__cil_tmp30"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4722, 35} true;
  assume {:verifier.code 0} true;
  $i50 := $xor.i32($i49, $i41);
  // WARNING: %63 = xor i32 %62, %54, !dbg !5249, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4723, 43} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4723, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4723, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4724, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4728, 13} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i31, 1);
  // WARNING: %68 = add nsw i32 %.1, 1, !dbg !5256, !verifier.code !5110
  call {:cexpr "j"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4704, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $i53;
  goto $bb13;
$bb22:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4763, 3} true;
  assume {:verifier.code 0} true;
  $i91 := 170;
  goto $bb24;
$bb23:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  $i91 := 0;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4767, 21} true;
  assume {:verifier.code 0} true;
  $p92 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4768, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $shl.i32($i84, 1);
  // WARNING: %112 = shl i32 %101, 1, !dbg !5357, !verifier.code !5110
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4769, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $xor.i32($i84, $i93);
  // WARNING: %113 = xor i32 %101, %112, !dbg !5360, !verifier.code !5110
  call {:cexpr "__cil_tmp57"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4770, 29} true;
  assume {:verifier.code 0} true;
  $i95 := $xor.i32($i94, $i91);
  // WARNING: %114 = xor i32 %113, %.01, !dbg !5363, !verifier.code !5110
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4771, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $xor.i32($i95, $sub.i32(0, 1));
  // WARNING: %115 = xor i32 %114, -1, !dbg !5366, !verifier.code !5110
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4772, 18} true;
  assume {:verifier.code 0} true;
  $i97 := $trunc.i32.i8($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4772, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p92, $i97);
  // WARNING: store i8 %116, i8* %111, align 1, !dbg !5370, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4774, 33} true;
  assume {:verifier.code 0} true;
  $p98 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4774, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4774, 40} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 4);
  // WARNING: %119 = add i64 %118, 4, !dbg !5375, !verifier.code !5110
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4775, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4775, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i8($M.0, $p101);
  // WARNING: %121 = load i8, i8* %120, align 1, !dbg !5379, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i8($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4776, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i102);
  // WARNING: %122 = zext i8 %121 to i32, !dbg !5382, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i32($i103);
  // WARNING: call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !9714, metadata !5110), !dbg !9715, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4778, 33} true;
  assume {:verifier.code 0} true;
  $p104 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4778, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4778, 40} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i64($i105, 5);
  // WARNING: %125 = add i64 %124, 5, !dbg !5389, !verifier.code !5110
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4779, 19} true;
  assume {:verifier.code 0} true;
  $p107 := $i2p.i64.ref($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4779, 17} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p107);
  // WARNING: %127 = load i8, i8* %126, align 1, !dbg !5393, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i8($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4780, 17} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  // WARNING: %128 = zext i8 %127 to i32, !dbg !5396, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4781, 29} true;
  assume {:verifier.code 0} true;
  $i110 := $shl.i32($i109, 2);
  // WARNING: %129 = shl i32 %128, 2, !dbg !5399, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i110);
  // WARNING: call void @llvm.dbg.value(metadata i32 %129, i64 0, metadata !9731, metadata !5110), !dbg !9732, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4783, 33} true;
  assume {:verifier.code 0} true;
  $p111 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4783, 17} true;
  assume {:verifier.code 0} true;
  $i112 := $p2i.ref.i64($p111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4783, 40} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i64($i112, 6);
  // WARNING: %132 = add i64 %131, 6, !dbg !5406, !verifier.code !5110
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4784, 19} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4784, 17} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i8($M.0, $p114);
  // WARNING: %134 = load i8, i8* %133, align 1, !dbg !5410, !verifier.code !5110
  call {:cexpr "__cil_tmp71"} boogie_si_record_i8($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4785, 17} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i8.i32($i115);
  // WARNING: %135 = zext i8 %134 to i32, !dbg !5413, !verifier.code !5110
  call {:cexpr "__cil_tmp72"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4786, 29} true;
  assume {:verifier.code 0} true;
  $i117 := $shl.i32($i116, 4);
  // WARNING: %136 = shl i32 %135, 4, !dbg !5416, !verifier.code !5110
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i117);
  // WARNING: call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !9748, metadata !5110), !dbg !9749, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4788, 33} true;
  assume {:verifier.code 0} true;
  $p118 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4788, 17} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4788, 40} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64($i119, 7);
  // WARNING: %139 = add i64 %138, 7, !dbg !5423, !verifier.code !5110
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4789, 19} true;
  assume {:verifier.code 0} true;
  $p121 := $i2p.i64.ref($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4789, 17} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.0, $p121);
  // WARNING: %141 = load i8, i8* %140, align 1, !dbg !5427, !verifier.code !5110
  call {:cexpr "__cil_tmp76"} boogie_si_record_i8($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4790, 17} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i122);
  // WARNING: %142 = zext i8 %141 to i32, !dbg !5430, !verifier.code !5110
  call {:cexpr "__cil_tmp77"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4791, 29} true;
  assume {:verifier.code 0} true;
  $i124 := $shl.i32($i123, 6);
  // WARNING: %143 = shl i32 %142, 6, !dbg !5433, !verifier.code !5110
  call {:cexpr "__cil_tmp78"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4792, 29} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i124, $i117);
  // WARNING: %144 = add nsw i32 %143, %136, !dbg !5436, !verifier.code !5110
  call {:cexpr "__cil_tmp79"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4793, 29} true;
  assume {:verifier.code 0} true;
  $i126 := $add.i32($i125, $i110);
  // WARNING: %145 = add nsw i32 %144, %129, !dbg !5439, !verifier.code !5110
  call {:cexpr "__cil_tmp80"} boogie_si_record_i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4794, 19} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i32($i126, $i103);
  // WARNING: %146 = add nsw i32 %145, %122, !dbg !5442, !verifier.code !5110
  call {:cexpr "a"} boogie_si_record_i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4796, 17} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4796, 21} true;
  assume {:verifier.code 0} true;
  $i129 := $mul.i64($i128, 1);
  // WARNING: %148 = mul i64 %147, 1, !dbg !5445, !verifier.code !5110
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4797, 42} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i64($p2i.ref.i64(parity), $i129);
  // WARNING: %149 = add i64 ptrtoint ([256 x i8]* @parity to i64), %148, !dbg !5448, !verifier.code !5110
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4798, 9} true;
  assume {:verifier.code 0} true;
  $p131 := $i2p.i64.ref($i130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4798, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i8($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4798, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $ne.i8($i132, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4798, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4800, 3} true;
  assume {:verifier.code 0} true;
  $i134 := 170;
  goto $bb27;
$bb26:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  $i134 := 0;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4804, 21} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4805, 19} true;
  assume {:verifier.code 0} true;
  $i136 := $shl.i32($i127, 1);
  // WARNING: %157 = shl i32 %146, 1, !dbg !5462, !verifier.code !5110
  call {:cexpr "__cil_tmp84"} boogie_si_record_i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4806, 19} true;
  assume {:verifier.code 0} true;
  $i137 := $xor.i32($i127, $i136);
  // WARNING: %158 = xor i32 %146, %157, !dbg !5465, !verifier.code !5110
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4807, 29} true;
  assume {:verifier.code 0} true;
  $i138 := $xor.i32($i137, $i134);
  // WARNING: %159 = xor i32 %158, %.0, !dbg !5468, !verifier.code !5110
  call {:cexpr "__cil_tmp86"} boogie_si_record_i32($i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4808, 17} true;
  assume {:verifier.code 0} true;
  $i139 := $xor.i32($i138, $sub.i32(0, 1));
  // WARNING: %160 = xor i32 %159, -1, !dbg !5471, !verifier.code !5110
  call {:cexpr "__cil_tmp87"} boogie_si_record_i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4809, 18} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i32.i8($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4809, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p135, $i140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4810, 21} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4811, 17} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4811, 21} true;
  assume {:verifier.code 0} true;
  $i143 := $mul.i64($i142, 1);
  // WARNING: %164 = mul i64 %163, 1, !dbg !5480, !verifier.code !5110
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4812, 40} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i64($p2i.ref.i64(ecc2), $i143);
  // WARNING: %165 = add i64 ptrtoint ([256 x i8]* @ecc2 to i64), %164, !dbg !5483, !verifier.code !5110
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4813, 20} true;
  assume {:verifier.code 0} true;
  $p145 := $i2p.i64.ref($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4813, 18} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4813, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p141, $i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4814, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const nand_compare_ecc: ref;
axiom (nand_compare_ecc == $sub.ref(0, 96987));
procedure nand_compare_ecc($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4840, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4841, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  // WARNING: %4 = load i8, i8* %3, align 1, !dbg !5121, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4842, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  // WARNING: %5 = zext i8 %4 to i32, !dbg !5124, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4843, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4844, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %6, align 1, !dbg !5130, !verifier.code !5113
  call {:cexpr "__cil_tmp8"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4845, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  // WARNING: %8 = zext i8 %7 to i32, !dbg !5133, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4846, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4846, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4848, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4849, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  // WARNING: %12 = load i8, i8* %11, align 1, !dbg !5144, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4850, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  // WARNING: %13 = zext i8 %12 to i32, !dbg !5147, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4851, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4852, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  // WARNING: %15 = load i8, i8* %14, align 1, !dbg !5153, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4853, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  // WARNING: %16 = zext i8 %15 to i32, !dbg !5156, !verifier.code !5113
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4854, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, $i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4854, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb9;
$bb3:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4856, 25} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4857, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  // WARNING: %20 = load i8, i8* %19, align 1, !dbg !5167, !verifier.code !5113
  call {:cexpr "__cil_tmp17"} boogie_si_record_i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4858, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  // WARNING: %21 = zext i8 %20 to i32, !dbg !5170, !verifier.code !5113
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4859, 26} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4860, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  // WARNING: %23 = load i8, i8* %22, align 1, !dbg !5176, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4861, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  // WARNING: %24 = zext i8 %23 to i32, !dbg !5179, !verifier.code !5113
  call {:cexpr "__cil_tmp21"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4862, 23} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, $i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4862, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb8;
$bb5:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4864, 7} true;
  assume {:verifier.code 0} true;
  $i23 := 1;
  goto $bb7;
$bb6:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i23 := 0;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4868, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4872, 3} true;
  assume {:verifier.code 0} true;
  $i25 := $i24;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4876, 3} true;
  assume {:verifier.code 0} true;
  $r := $i25;
  $exn := false;
  return;
}
const nand_store_ecc: ref;
axiom (nand_store_ecc == $sub.ref(0, 98019));
procedure nand_store_ecc($p0: ref, $p1: ref)
{
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !9907, metadata !5110), !dbg !9908, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4889, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $uge.i64(3, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4889, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4893, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := __memcpy($p0, $p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4895, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4899, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := __builtinx_memcpy.ref.ref.i64($p0, $p1, 3);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4902, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const alauda_write_block: ref;
axiom (alauda_write_block == $sub.ref(0, 99051));
procedure alauda_write_block($p0: ref, $i1: i16, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $i27: i32;
  var $i28: i32;
  var $i29: i8;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i8;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $i63: i32;
  var $i64: i8;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $i93: i32;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $i98: i64;
  var $i99: i64;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i32;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $i119: i64;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $p132: ref;
  var $i133: i32;
  var $i134: i1;
  var $i135: i32;
  var $i79: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(9, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !9936, metadata !5110), !dbg !9937, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7821, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %5 = ptrtoint %struct.us_data* %0 to i64, !dbg !5123, !verifier.code !5110
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7822, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 648);
  // WARNING: %6 = add i64 %5, 648, !dbg !5128, !verifier.code !5110
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7823, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7823, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7824, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  // WARNING: call void @llvm.dbg.value(metadata %struct.alauda_info* %9, i64 0, metadata !9957, metadata !5110), !dbg !9958, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7826, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7826, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7826, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 0);
  // WARNING: %12 = add i64 %11, 0, !dbg !5142, !verifier.code !5110
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7827, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7827, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 64);
  // WARNING: store i8 64, i8* %13, align 1, !dbg !5146, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7829, 33} true;
  assume {:verifier.code 0} true;
  $p13 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7829, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7829, 43} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 1);
  // WARNING: %16 = add i64 %15, 1, !dbg !5151, !verifier.code !5110
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7830, 5} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7830, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $sub.i8(0, 76));
  // WARNING: store i8 -76, i8* %17, align 1, !dbg !5155, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7832, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7832, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7832, 43} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 2);
  // WARNING: %20 = add i64 %19, 2, !dbg !5160, !verifier.code !5110
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7833, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i1);
  // WARNING: %21 = zext i16 %1 to i32, !dbg !5163, !verifier.code !5110
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7834, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $ashr.i32($i20, 3);
  // WARNING: %22 = ashr i32 %21, 3, !dbg !5166, !verifier.code !5110
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7835, 37} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7835, 5} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7835, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p23, $i22);
  // WARNING: store i8 %23, i8* %24, align 1, !dbg !5171, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7837, 33} true;
  assume {:verifier.code 0} true;
  $p24 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7837, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7837, 43} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 3);
  // WARNING: %27 = add i64 %26, 3, !dbg !5176, !verifier.code !5110
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7838, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i16.i32($i1);
  // WARNING: %28 = zext i16 %1 to i32, !dbg !5179, !verifier.code !5110
  call {:cexpr "__cil_tmp21"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7839, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $ashr.i32($i27, 11);
  // WARNING: %29 = ashr i32 %28, 11, !dbg !5182, !verifier.code !5110
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7840, 37} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i32.i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7840, 5} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7840, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, $i29);
  // WARNING: store i8 %30, i8* %31, align 1, !dbg !5187, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7842, 33} true;
  assume {:verifier.code 0} true;
  $p31 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7842, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7842, 43} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 4);
  // WARNING: %34 = add i64 %33, 4, !dbg !5192, !verifier.code !5110
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7843, 5} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7843, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, 0);
  // WARNING: store i8 0, i8* %35, align 1, !dbg !5196, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7845, 33} true;
  assume {:verifier.code 0} true;
  $p35 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7845, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7845, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i64($i36, 5);
  // WARNING: %38 = add i64 %37, 5, !dbg !5201, !verifier.code !5110
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7846, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i1);
  // WARNING: %39 = zext i16 %1 to i32, !dbg !5204, !verifier.code !5110
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7847, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 15);
  // WARNING: %40 = and i32 %39, 15, !dbg !5207, !verifier.code !5110
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7848, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $shl.i32($i39, 5);
  // WARNING: %41 = shl i32 %40, 5, !dbg !5210, !verifier.code !5110
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7849, 37} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7849, 5} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7849, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i41);
  // WARNING: store i8 %42, i8* %43, align 1, !dbg !5215, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7851, 33} true;
  assume {:verifier.code 0} true;
  $p43 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7851, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7851, 43} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 6);
  // WARNING: %46 = add i64 %45, 6, !dbg !5220, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7852, 5} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7852, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, 32);
  // WARNING: store i8 32, i8* %47, align 1, !dbg !5224, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7854, 33} true;
  assume {:verifier.code 0} true;
  $p47 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7854, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7854, 43} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, 7);
  // WARNING: %50 = add i64 %49, 7, !dbg !5229, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7855, 5} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7855, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p50, 0);
  // WARNING: store i8 0, i8* %51, align 1, !dbg !5233, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7857, 33} true;
  assume {:verifier.code 0} true;
  $p51 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7857, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7857, 43} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 8);
  // WARNING: %54 = add i64 %53, 8, !dbg !5238, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7858, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p0);
  // WARNING: %55 = ptrtoint %struct.us_data* %0 to i64, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7859, 29} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 192);
  // WARNING: %56 = add i64 %55, 192, !dbg !5244, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7860, 19} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7860, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7861, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7861, 17} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7862, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p59);
  // WARNING: %61 = ptrtoint %struct.scsi_device* %60 to i64, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7863, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 156);
  // WARNING: %62 = add i64 %61, 156, !dbg !5257, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7864, 19} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7864, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  // WARNING: %64 = load i32, i32* %63, align 4, !dbg !5261, !verifier.code !5110
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7865, 37} true;
  assume {:verifier.code 0} true;
  $i64 := $trunc.i32.i8($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7865, 5} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7865, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7866, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i16.i32($i1);
  // WARNING: %67 = zext i16 %1 to i32, !dbg !5267, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7867, 3} true;
  assume {:verifier.code 0} true;
  call $i67 := printk.ref.i32(.str.42, $i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7868, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $p2i.ref.i64($p0);
  // WARNING: %69 = ptrtoint %struct.us_data* %0 to i64, !dbg !5271, !verifier.code !5110
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7869, 29} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i64($i68, 112);
  // WARNING: %70 = add i64 %69, 112, !dbg !5274, !verifier.code !5110
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7870, 19} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7870, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  // WARNING: %72 = load i32, i32* %71, align 4, !dbg !5278, !verifier.code !5110
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i71);
  // WARNING: call void @llvm.dbg.value(metadata i32 %72, i64 0, metadata !10100, metadata !5110), !dbg !10101, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7872, 33} true;
  assume {:verifier.code 0} true;
  $p72 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7872, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7872, 43} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 0);
  // WARNING: %75 = add i64 %74, 0, !dbg !5285, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7873, 17} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7876, 17} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7877, 8} true;
  assume {:verifier.code 0} true;
  call $i77 := usb_stor_bulk_transfer_buf($p0, $i71, $p75, 9, $p76);
  // WARNING: %78 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %72, i8* %76, i32 9, i32* %77), !dbg !5298, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7879, 10} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7879, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7880, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  goto $bb3;
$bb2:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7940, 1} true;
  assume {:verifier.code 0} true;
  $r := $i79;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7885, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p8);
  // WARNING: %83 = ptrtoint %struct.alauda_info* %9 to i64, !dbg !5306, !verifier.code !5110
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7886, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 96);
  // WARNING: %84 = add i64 %83, 96, !dbg !5310, !verifier.code !5110
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7887, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7887, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  // WARNING: %86 = load i32, i32* %85, align 4, !dbg !5314, !verifier.code !5110
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i83);
  // WARNING: call void @llvm.dbg.value(metadata i32 %86, i64 0, metadata !10136, metadata !5110), !dbg !10137, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7890, 17} true;
  assume {:verifier.code 0} true;
  $i84 := $p2i.ref.i64($p0);
  // WARNING: %87 = ptrtoint %struct.us_data* %0 to i64, !dbg !5321, !verifier.code !5110
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7891, 29} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64($i84, 192);
  // WARNING: %88 = add i64 %87, 192, !dbg !5324, !verifier.code !5110
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7892, 19} true;
  assume {:verifier.code 0} true;
  $p86 := $i2p.i64.ref($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7892, 17} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7893, 17} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7893, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7894, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $p2i.ref.i64($p89);
  // WARNING: %93 = ptrtoint %struct.scsi_device* %92 to i64, !dbg !5334, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7895, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 156);
  // WARNING: %94 = add i64 %93, 156, !dbg !5337, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7896, 19} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7896, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  // WARNING: %96 = load i32, i32* %95, align 4, !dbg !5341, !verifier.code !5110
  call {:cexpr "__cil_tmp64"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7897, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7897, 29} true;
  assume {:verifier.code 0} true;
  $i95 := $mul.i64($i94, 48);
  // WARNING: %98 = mul i64 %97, 48, !dbg !5345, !verifier.code !5110
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7898, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, 12);
  // WARNING: %99 = add i64 %98, 12, !dbg !5348, !verifier.code !5110
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7899, 19} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64(0, $i96);
  // WARNING: %100 = add i64 0, %99, !dbg !5351, !verifier.code !5110
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7900, 17} true;
  assume {:verifier.code 0} true;
  $i98 := $p2i.ref.i64($p0);
  // WARNING: %101 = ptrtoint %struct.us_data* %0 to i64, !dbg !5354, !verifier.code !5110
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7901, 29} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i64($i98, 648);
  // WARNING: %102 = add i64 %101, 648, !dbg !5357, !verifier.code !5110
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7902, 19} true;
  assume {:verifier.code 0} true;
  $p100 := $i2p.i64.ref($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7902, 17} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7903, 17} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7904, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p102);
  // WARNING: %106 = ptrtoint %struct.alauda_info* %105 to i64, !dbg !5367, !verifier.code !5110
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7905, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i64($i103, $i97);
  // WARNING: %107 = add i64 %106, %100, !dbg !5370, !verifier.code !5110
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7906, 19} true;
  assume {:verifier.code 0} true;
  $p105 := $i2p.i64.ref($i104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7906, 17} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  // WARNING: %109 = load i32, i32* %108, align 4, !dbg !5374, !verifier.code !5110
  call {:cexpr "__cil_tmp74"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7907, 17} true;
  assume {:verifier.code 0} true;
  $i107 := $p2i.ref.i64($p0);
  // WARNING: %110 = ptrtoint %struct.us_data* %0 to i64, !dbg !5377, !verifier.code !5110
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7908, 29} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i64($i107, 192);
  // WARNING: %111 = add i64 %110, 192, !dbg !5380, !verifier.code !5110
  call {:cexpr "__cil_tmp76"} boogie_si_record_i64($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7909, 19} true;
  assume {:verifier.code 0} true;
  $p109 := $i2p.i64.ref($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7909, 17} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7910, 17} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7910, 17} true;
  assume {:verifier.code 0} true;
  $p112 := $load.ref($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7911, 17} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($p112);
  // WARNING: %116 = ptrtoint %struct.scsi_device* %115 to i64, !dbg !5390, !verifier.code !5110
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7912, 29} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i113, 156);
  // WARNING: %117 = add i64 %116, 156, !dbg !5393, !verifier.code !5110
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7913, 19} true;
  assume {:verifier.code 0} true;
  $p115 := $i2p.i64.ref($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7913, 17} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  // WARNING: %119 = load i32, i32* %118, align 4, !dbg !5397, !verifier.code !5110
  call {:cexpr "__cil_tmp81"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7914, 17} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i32.i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7914, 29} true;
  assume {:verifier.code 0} true;
  $i118 := $mul.i64($i117, 48);
  // WARNING: %121 = mul i64 %120, 48, !dbg !5401, !verifier.code !5110
  call {:cexpr "__cil_tmp82"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7915, 29} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i64($i118, 8);
  // WARNING: %122 = add i64 %121, 8, !dbg !5404, !verifier.code !5110
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7916, 19} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64(0, $i119);
  // WARNING: %123 = add i64 0, %122, !dbg !5407, !verifier.code !5110
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i120);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7917, 17} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p0);
  // WARNING: %124 = ptrtoint %struct.us_data* %0 to i64, !dbg !5410, !verifier.code !5110
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7918, 29} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i121, 648);
  // WARNING: %125 = add i64 %124, 648, !dbg !5413, !verifier.code !5110
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7919, 19} true;
  assume {:verifier.code 0} true;
  $p123 := $i2p.i64.ref($i122);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7919, 17} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7920, 17} true;
  assume {:verifier.code 0} true;
  $p125 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7921, 17} true;
  assume {:verifier.code 0} true;
  $i126 := $p2i.ref.i64($p125);
  // WARNING: %129 = ptrtoint %struct.alauda_info* %128 to i64, !dbg !5423, !verifier.code !5110
  call {:cexpr "__cil_tmp89"} boogie_si_record_i64($i126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7922, 29} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i64($i126, $i120);
  // WARNING: %130 = add i64 %129, %123, !dbg !5426, !verifier.code !5110
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7923, 19} true;
  assume {:verifier.code 0} true;
  $p128 := $i2p.i64.ref($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7923, 17} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  // WARNING: %132 = load i32, i32* %131, align 4, !dbg !5430, !verifier.code !5110
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7924, 29} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i32($i129, 64);
  // WARNING: %133 = add i32 %132, 64, !dbg !5433, !verifier.code !5110
  call {:cexpr "__cil_tmp92"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7925, 29} true;
  assume {:verifier.code 0} true;
  $i131 := $mul.i32($i130, $i106);
  // WARNING: %134 = mul i32 %133, %109, !dbg !5436, !verifier.code !5110
  call {:cexpr "__cil_tmp93"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7927, 17} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7928, 8} true;
  assume {:verifier.code 0} true;
  call $i133 := usb_stor_bulk_transfer_buf($p0, $i83, $p2, $i131, $p132);
  // WARNING: %136 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %86, i8* %2, i32 %134, i32* %135), !dbg !5444, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7930, 10} true;
  assume {:verifier.code 0} true;
  $i134 := $ne.i32($i133, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7931, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $i133;
  goto $bb3;
$bb6:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7936, 13} true;
  assume {:verifier.code 0} true;
  call $i135 := alauda_check_status2($p0);
  // WARNING: %141 = call i32 @alauda_check_status2(%struct.us_data* %0), !dbg !5450, !verifier.code !5110
  call {:cexpr "tmp___7"} boogie_si_record_i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7938, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i135;
  goto $bb3;
}
const alauda_erase_block: ref;
axiom (alauda_erase_block == $sub.ref(0, 100083));
procedure alauda_erase_block($p0: ref, $i1: i16)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i32;
  var $i23: i32;
  var $i24: i8;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i8;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $i59: i8;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i32;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i73: i1;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i78: i32;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i8;
  var $i91: i32;
  var $p92: ref;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i8;
  var $i97: i32;
  var $i98: i32;
  var $i74: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(9, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !10280, metadata !5110), !dbg !10281, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !10286, metadata !5110), !dbg !10287, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7369, 32} true;
  assume {:verifier.code 0} true;
  $p4 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7369, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7369, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 0);
  // WARNING: %7 = add i64 %6, 0, !dbg !5130, !verifier.code !5110
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7370, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7370, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 64);
  // WARNING: store i8 64, i8* %8, align 1, !dbg !5134, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7372, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7372, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7372, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 1);
  // WARNING: %11 = add i64 %10, 1, !dbg !5139, !verifier.code !5110
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7373, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7373, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $sub.i8(0, 93));
  // WARNING: store i8 -93, i8* %12, align 1, !dbg !5143, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7375, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7375, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7375, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 2);
  // WARNING: %15 = add i64 %14, 2, !dbg !5148, !verifier.code !5110
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7376, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i1);
  // WARNING: %16 = zext i16 %1 to i32, !dbg !5151, !verifier.code !5110
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7377, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $ashr.i32($i15, 3);
  // WARNING: %17 = ashr i32 %16, 3, !dbg !5154, !verifier.code !5110
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7378, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7378, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7378, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, $i17);
  // WARNING: store i8 %18, i8* %19, align 1, !dbg !5159, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7380, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7380, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7380, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 3);
  // WARNING: %22 = add i64 %21, 3, !dbg !5164, !verifier.code !5110
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7381, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i1);
  // WARNING: %23 = zext i16 %1 to i32, !dbg !5167, !verifier.code !5110
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7382, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $ashr.i32($i22, 11);
  // WARNING: %24 = ashr i32 %23, 11, !dbg !5170, !verifier.code !5110
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7383, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i32.i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7383, 5} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7383, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, $i24);
  // WARNING: store i8 %25, i8* %26, align 1, !dbg !5175, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7385, 33} true;
  assume {:verifier.code 0} true;
  $p26 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7385, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7385, 43} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 4);
  // WARNING: %29 = add i64 %28, 4, !dbg !5180, !verifier.code !5110
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7386, 5} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7386, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 0);
  // WARNING: store i8 0, i8* %30, align 1, !dbg !5184, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7388, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7388, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7388, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 5);
  // WARNING: %33 = add i64 %32, 5, !dbg !5189, !verifier.code !5110
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7389, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i16.i32($i1);
  // WARNING: %34 = zext i16 %1 to i32, !dbg !5192, !verifier.code !5110
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7390, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 15);
  // WARNING: %35 = and i32 %34, 15, !dbg !5195, !verifier.code !5110
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7391, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $shl.i32($i34, 5);
  // WARNING: %36 = shl i32 %35, 5, !dbg !5198, !verifier.code !5110
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7392, 37} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7392, 5} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7392, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, $i36);
  // WARNING: store i8 %37, i8* %38, align 1, !dbg !5203, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7394, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7394, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7394, 43} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 6);
  // WARNING: %41 = add i64 %40, 6, !dbg !5208, !verifier.code !5110
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7395, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7395, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, 2);
  // WARNING: store i8 2, i8* %42, align 1, !dbg !5212, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7397, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7397, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7397, 43} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 7);
  // WARNING: %45 = add i64 %44, 7, !dbg !5217, !verifier.code !5110
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7398, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7398, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 0);
  // WARNING: store i8 0, i8* %46, align 1, !dbg !5221, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7400, 33} true;
  assume {:verifier.code 0} true;
  $p46 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7400, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7400, 43} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 8);
  // WARNING: %49 = add i64 %48, 8, !dbg !5226, !verifier.code !5110
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7401, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p0);
  // WARNING: %50 = ptrtoint %struct.us_data* %0 to i64, !dbg !5229, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7402, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, 192);
  // WARNING: %51 = add i64 %50, 192, !dbg !5232, !verifier.code !5110
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7403, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7403, 17} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7404, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7404, 17} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7405, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  // WARNING: %56 = ptrtoint %struct.scsi_device* %55 to i64, !dbg !5242, !verifier.code !5110
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7406, 29} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 156);
  // WARNING: %57 = add i64 %56, 156, !dbg !5245, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7407, 19} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7407, 17} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  // WARNING: %59 = load i32, i32* %58, align 4, !dbg !5249, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7408, 37} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7408, 5} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7408, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7409, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i1);
  // WARNING: %62 = zext i16 %1 to i32, !dbg !5255, !verifier.code !5110
  call {:cexpr "__cil_tmp38"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7410, 3} true;
  assume {:verifier.code 0} true;
  call $i62 := printk.ref.i32(.str.44, $i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7411, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p0);
  // WARNING: %64 = ptrtoint %struct.us_data* %0 to i64, !dbg !5259, !verifier.code !5110
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7412, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 112);
  // WARNING: %65 = add i64 %64, 112, !dbg !5262, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7413, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7413, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  // WARNING: %67 = load i32, i32* %66, align 4, !dbg !5266, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i66);
  // WARNING: call void @llvm.dbg.value(metadata i32 %67, i64 0, metadata !10431, metadata !5110), !dbg !10432, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7415, 33} true;
  assume {:verifier.code 0} true;
  $p67 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7415, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $p2i.ref.i64($p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7415, 43} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i64($i68, 0);
  // WARNING: %70 = add i64 %69, 0, !dbg !5273, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7416, 17} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7419, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7420, 8} true;
  assume {:verifier.code 0} true;
  call $i72 := usb_stor_bulk_transfer_buf($p0, $i66, $p70, 9, $p71);
  // WARNING: %73 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %67, i8* %71, i32 9, i32* %72), !dbg !5286, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7422, 10} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7422, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7423, 5} true;
  assume {:verifier.code 0} true;
  $i74 := $i72;
  goto $bb3;
$bb2:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7458, 1} true;
  assume {:verifier.code 0} true;
  $r := $i74;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7428, 17} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p0);
  // WARNING: %78 = ptrtoint %struct.us_data* %0 to i64, !dbg !5294, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7429, 29} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i64($i75, 116);
  // WARNING: %79 = add i64 %78, 116, !dbg !5298, !verifier.code !5110
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7430, 19} true;
  assume {:verifier.code 0} true;
  $p77 := $i2p.i64.ref($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7430, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  // WARNING: %81 = load i32, i32* %80, align 4, !dbg !5302, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i78);
  // WARNING: call void @llvm.dbg.value(metadata i32 %81, i64 0, metadata !10467, metadata !5110), !dbg !10468, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7432, 33} true;
  assume {:verifier.code 0} true;
  $p79 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7432, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7432, 39} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 0);
  // WARNING: %84 = add i64 %83, 0, !dbg !5309, !verifier.code !5110
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7433, 17} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7436, 17} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7437, 8} true;
  assume {:verifier.code 0} true;
  call $i84 := usb_stor_bulk_transfer_buf($p0, $i78, $p82, 2, $p83);
  // WARNING: %87 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %81, i8* %85, i32 2, i32* %86), !dbg !5322, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7439, 10} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7439, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7440, 5} true;
  assume {:verifier.code 0} true;
  $i74 := $i84;
  goto $bb3;
$bb6:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7446, 33} true;
  assume {:verifier.code 0} true;
  $p86 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7446, 17} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7446, 39} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 0);
  // WARNING: %94 = add i64 %93, 0, !dbg !5333, !verifier.code !5110
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7447, 19} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7447, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i8($M.0, $p89);
  // WARNING: %96 = load i8, i8* %95, align 1, !dbg !5337, !verifier.code !5110
  call {:cexpr "__cil_tmp59"} boogie_si_record_i8($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7448, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i90);
  // WARNING: %97 = zext i8 %96 to i32, !dbg !5340, !verifier.code !5110
  call {:cexpr "__cil_tmp60"} boogie_si_record_i32($i91);
  // WARNING: call void @llvm.dbg.value(metadata i32 %97, i64 0, metadata !10505, metadata !5110), !dbg !10506, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7450, 33} true;
  assume {:verifier.code 0} true;
  $p92 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7450, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $p2i.ref.i64($p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7450, 39} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i64($i93, 1);
  // WARNING: %100 = add i64 %99, 1, !dbg !5347, !verifier.code !5110
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7451, 19} true;
  assume {:verifier.code 0} true;
  $p95 := $i2p.i64.ref($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7451, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i8($M.0, $p95);
  // WARNING: %102 = load i8, i8* %101, align 1, !dbg !5351, !verifier.code !5110
  call {:cexpr "__cil_tmp63"} boogie_si_record_i8($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7452, 17} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i8.i32($i96);
  // WARNING: %103 = zext i8 %102 to i32, !dbg !5354, !verifier.code !5110
  call {:cexpr "__cil_tmp64"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7453, 3} true;
  assume {:verifier.code 0} true;
  call $i98 := printk.ref.i32.i32(.str.45, $i91, $i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7456, 3} true;
  assume {:verifier.code 0} true;
  $i74 := $i84;
  goto $bb3;
}
const usb_stor_bulk_transfer_buf: ref;
axiom (usb_stor_bulk_transfer_buf == $sub.ref(0, 101115));
procedure usb_stor_bulk_transfer_buf($p0: ref, $i1: i32, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: i32);
const alauda_check_status2: ref;
axiom (alauda_check_status2 == $sub.ref(0, 102147));
procedure alauda_check_status2($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i32;
  var $i48: i8;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $i65: i32;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $p73: ref;
  var $i74: i64;
  var $i75: i64;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $p85: ref;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i32;
  var $p92: ref;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i8;
  var $i97: i32;
  var $i98: i32;
  var $i99: i1;
  var $i61: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(9, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(3, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [3 x i8]* %3, metadata !10529, metadata !5110), !dbg !10530, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6366, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6366, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6366, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 0);
  // WARNING: %6 = add i64 %5, 0, !dbg !5126, !verifier.code !5108
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6367, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6367, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 64);
  // WARNING: store i8 64, i8* %7, align 1, !dbg !5130, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6369, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6369, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6369, 42} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 1);
  // WARNING: %10 = add i64 %9, 1, !dbg !5135, !verifier.code !5108
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6370, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6370, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $sub.i8(0, 73));
  // WARNING: store i8 -73, i8* %11, align 1, !dbg !5139, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6372, 33} true;
  assume {:verifier.code 0} true;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6372, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6372, 43} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 2);
  // WARNING: %14 = add i64 %13, 2, !dbg !5144, !verifier.code !5108
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6373, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6373, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 0);
  // WARNING: store i8 0, i8* %15, align 1, !dbg !5148, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6375, 33} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6375, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6375, 43} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 3);
  // WARNING: %18 = add i64 %17, 3, !dbg !5153, !verifier.code !5108
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6376, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6376, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  // WARNING: store i8 0, i8* %19, align 1, !dbg !5157, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6378, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6378, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6378, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 4);
  // WARNING: %22 = add i64 %21, 4, !dbg !5162, !verifier.code !5108
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6379, 5} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6379, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, 0);
  // WARNING: store i8 0, i8* %23, align 1, !dbg !5166, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6381, 33} true;
  assume {:verifier.code 0} true;
  $p23 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6381, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6381, 43} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 5);
  // WARNING: %26 = add i64 %25, 5, !dbg !5171, !verifier.code !5108
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6382, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6382, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, 0);
  // WARNING: store i8 0, i8* %27, align 1, !dbg !5175, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6384, 33} true;
  assume {:verifier.code 0} true;
  $p27 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6384, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6384, 43} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 6);
  // WARNING: %30 = add i64 %29, 6, !dbg !5180, !verifier.code !5108
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6385, 5} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6385, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, 3);
  // WARNING: store i8 3, i8* %31, align 1, !dbg !5184, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6387, 33} true;
  assume {:verifier.code 0} true;
  $p31 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6387, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6387, 43} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 7);
  // WARNING: %34 = add i64 %33, 7, !dbg !5189, !verifier.code !5108
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6388, 5} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6388, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, 0);
  // WARNING: store i8 0, i8* %35, align 1, !dbg !5193, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6390, 33} true;
  assume {:verifier.code 0} true;
  $p35 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6390, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6390, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i64($i36, 8);
  // WARNING: %38 = add i64 %37, 8, !dbg !5198, !verifier.code !5108
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6391, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p0);
  // WARNING: %39 = ptrtoint %struct.us_data* %0 to i64, !dbg !5201, !verifier.code !5108
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6392, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 192);
  // WARNING: %40 = add i64 %39, 192, !dbg !5204, !verifier.code !5108
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6393, 19} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6393, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6394, 17} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6394, 17} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6395, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p43);
  // WARNING: %45 = ptrtoint %struct.scsi_device* %44 to i64, !dbg !5214, !verifier.code !5108
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6396, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 156);
  // WARNING: %46 = add i64 %45, 156, !dbg !5217, !verifier.code !5108
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6397, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6397, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  // WARNING: %48 = load i32, i32* %47, align 4, !dbg !5221, !verifier.code !5108
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6398, 37} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6398, 5} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6398, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6399, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p0);
  // WARNING: %51 = ptrtoint %struct.us_data* %0 to i64, !dbg !5227, !verifier.code !5108
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6400, 29} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 112);
  // WARNING: %52 = add i64 %51, 112, !dbg !5230, !verifier.code !5108
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6401, 19} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6401, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  // WARNING: %54 = load i32, i32* %53, align 4, !dbg !5234, !verifier.code !5108
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i53);
  // WARNING: call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !10646, metadata !5110), !dbg !10647, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6403, 33} true;
  assume {:verifier.code 0} true;
  $p54 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6403, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6403, 43} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 0);
  // WARNING: %57 = add i64 %56, 0, !dbg !5241, !verifier.code !5108
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6404, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6407, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6408, 8} true;
  assume {:verifier.code 0} true;
  call $i59 := usb_stor_bulk_transfer_buf($p0, $i53, $p57, 9, $p58);
  // WARNING: %60 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %54, i8* %58, i32 9, i32* %59), !dbg !5254, !verifier.code !5108
  call {:cexpr "rc"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6410, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6410, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6411, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $i59;
  goto $bb3;
$bb2:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6461, 1} true;
  assume {:verifier.code 0} true;
  $r := $i61;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6416, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p0);
  // WARNING: %65 = ptrtoint %struct.us_data* %0 to i64, !dbg !5262, !verifier.code !5108
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6417, 29} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 116);
  // WARNING: %66 = add i64 %65, 116, !dbg !5266, !verifier.code !5108
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6418, 19} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6418, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  // WARNING: %68 = load i32, i32* %67, align 4, !dbg !5270, !verifier.code !5108
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i65);
  // WARNING: call void @llvm.dbg.value(metadata i32 %68, i64 0, metadata !10682, metadata !5110), !dbg !10683, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6420, 33} true;
  assume {:verifier.code 0} true;
  $p66 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6420, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6420, 40} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 0);
  // WARNING: %71 = add i64 %70, 0, !dbg !5277, !verifier.code !5108
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6421, 17} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6424, 17} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6425, 8} true;
  assume {:verifier.code 0} true;
  call $i71 := usb_stor_bulk_transfer_buf($p0, $i65, $p69, 3, $p70);
  // WARNING: %74 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %68, i8* %72, i32 3, i32* %73), !dbg !5290, !verifier.code !5108
  call {:cexpr "rc"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6427, 10} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6428, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $i71;
  goto $bb3;
$bb6:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6434, 33} true;
  assume {:verifier.code 0} true;
  $p73 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6434, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6434, 40} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i74, 0);
  // WARNING: %81 = add i64 %80, 0, !dbg !5301, !verifier.code !5108
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6435, 19} true;
  assume {:verifier.code 0} true;
  $p76 := $i2p.i64.ref($i75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6435, 17} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  // WARNING: %83 = load i8, i8* %82, align 1, !dbg !5305, !verifier.code !5108
  call {:cexpr "__cil_tmp50"} boogie_si_record_i8($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6436, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  // WARNING: %84 = zext i8 %83 to i32, !dbg !5308, !verifier.code !5108
  call {:cexpr "__cil_tmp51"} boogie_si_record_i32($i78);
  // WARNING: call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !10720, metadata !5110), !dbg !10721, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6438, 33} true;
  assume {:verifier.code 0} true;
  $p79 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6438, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6438, 40} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 1);
  // WARNING: %87 = add i64 %86, 1, !dbg !5315, !verifier.code !5108
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6439, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6439, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  // WARNING: %89 = load i8, i8* %88, align 1, !dbg !5319, !verifier.code !5108
  call {:cexpr "__cil_tmp54"} boogie_si_record_i8($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6440, 17} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  // WARNING: %90 = zext i8 %89 to i32, !dbg !5322, !verifier.code !5108
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i84);
  // WARNING: call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !10734, metadata !5110), !dbg !10735, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6442, 33} true;
  assume {:verifier.code 0} true;
  $p85 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6442, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6442, 40} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i64($i86, 2);
  // WARNING: %93 = add i64 %92, 2, !dbg !5329, !verifier.code !5108
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6443, 19} true;
  assume {:verifier.code 0} true;
  $p88 := $i2p.i64.ref($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6443, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  // WARNING: %95 = load i8, i8* %94, align 1, !dbg !5333, !verifier.code !5108
  call {:cexpr "__cil_tmp58"} boogie_si_record_i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6444, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  // WARNING: %96 = zext i8 %95 to i32, !dbg !5336, !verifier.code !5108
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6445, 3} true;
  assume {:verifier.code 0} true;
  call $i91 := printk.ref.i32.i32.i32(.str.43, $i78, $i84, $i90);
  // WARNING: %97 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.43, i32 0, i32 0), i32 %84, i32 %90, i32 %96), !dbg !5339, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6450, 33} true;
  assume {:verifier.code 0} true;
  $p92 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6450, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $p2i.ref.i64($p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6450, 40} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i64($i93, 0);
  // WARNING: %100 = add i64 %99, 0, !dbg !5345, !verifier.code !5108
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6451, 19} true;
  assume {:verifier.code 0} true;
  $p95 := $i2p.i64.ref($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6451, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i8($M.0, $p95);
  // WARNING: %102 = load i8, i8* %101, align 1, !dbg !5349, !verifier.code !5108
  call {:cexpr "__cil_tmp62"} boogie_si_record_i8($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6452, 17} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i8.i32($i96);
  // WARNING: %103 = zext i8 %102 to i32, !dbg !5352, !verifier.code !5108
  call {:cexpr "__cil_tmp63"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6453, 19} true;
  assume {:verifier.code 0} true;
  $i98 := $and.i32($i97, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6453, 19} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6453, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6454, 5} true;
  assume {:verifier.code 0} true;
  $i61 := 4;
  goto $bb3;
$bb9:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6459, 3} true;
  assume {:verifier.code 0} true;
  $i61 := 0;
  goto $bb3;
}
const alauda_read_map: ref;
axiom (alauda_read_map == $sub.ref(0, 103179));
procedure alauda_read_map($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $i62: i1;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i32;
  var $i67: i32;
  var $i68: i1;
  var $i69: i64;
  var $p70: ref;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i1;
  var $i80: i32;
  var $i81: i1;
  var $i82: i64;
  var $p83: ref;
  var $i84: i8;
  var $i85: i32;
  var $i86: i1;
  var $i87: i32;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $i91: i32;
  var $i92: i1;
  var $i93: i64;
  var $p94: ref;
  var $i95: i8;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $p104: ref;
  var $i105: i8;
  var $i106: i32;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $p110: ref;
  var $i111: i8;
  var $i112: i32;
  var $p113: ref;
  var $i114: i8;
  var $i115: i32;
  var $p116: ref;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i64;
  var $p121: ref;
  var $p122: ref;
  var $i123: i8;
  var $i124: i32;
  var $i125: i32;
  var $i126: i1;
  var $p127: ref;
  var $i128: i8;
  var $i129: i32;
  var $p130: ref;
  var $i131: i8;
  var $i132: i32;
  var $p133: ref;
  var $i134: i8;
  var $i135: i32;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i32;
  var $i140: i64;
  var $p141: ref;
  var $p142: ref;
  var $i143: i8;
  var $i144: i32;
  var $p145: ref;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $i153: i8;
  var $i154: i1;
  var $p155: ref;
  var $i156: i8;
  var $i157: i32;
  var $p158: ref;
  var $i159: i8;
  var $i160: i32;
  var $i161: i32;
  var $i162: i64;
  var $p163: ref;
  var $p164: ref;
  var $i165: i8;
  var $i166: i16;
  var $i167: i32;
  var $i168: i32;
  var $p169: ref;
  var $i170: i8;
  var $i171: i16;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i32;
  var $i176: i32;
  var $i177: i1;
  var $i178: i32;
  var $i179: i64;
  var $p180: ref;
  var $i181: i16;
  var $i182: i32;
  var $i183: i1;
  var $i184: i64;
  var $p185: ref;
  var $i186: i16;
  var $i187: i32;
  var $i188: i32;
  var $i189: i64;
  var $p190: ref;
  var $i191: i16;
  var $i192: i64;
  var $p193: ref;
  var $i194: i16;
  var $i195: i32;
  var $i196: i64;
  var $i197: i64;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i64;
  var $i203: i64;
  var $p204: ref;
  var $i205: i32;
  var $i206: i64;
  var $i207: i64;
  var $i208: i64;
  var $i209: i64;
  var $i210: i64;
  var $i211: i64;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $i215: i64;
  var $i216: i64;
  var $p217: ref;
  var $p218: ref;
  var $i219: i64;
  var $p220: ref;
  var $i221: i64;
  var $i222: i64;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $i227: i64;
  var $i228: i64;
  var $p229: ref;
  var $i230: i32;
  var $i231: i64;
  var $i232: i64;
  var $i233: i64;
  var $i234: i64;
  var $i235: i64;
  var $i236: i64;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $i240: i64;
  var $i241: i64;
  var $p242: ref;
  var $p243: ref;
  var $i244: i64;
  var $p245: ref;
  var $p247: ref;
  var $p248: ref;
  var $i246: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !10776, metadata !5110), !dbg !10777, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6834, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.us_data* %0 to i64, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6835, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 376);
  // WARNING: %4 = add i64 %3, 376, !dbg !5121, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6836, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6836, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6837, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.us_data* %0 to i64, !dbg !5128, !verifier.code !5113
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6838, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 192);
  // WARNING: %8 = add i64 %7, 192, !dbg !5131, !verifier.code !5113
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6839, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6839, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6840, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6840, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6841, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  // WARNING: %13 = ptrtoint %struct.scsi_device* %12 to i64, !dbg !5141, !verifier.code !5113
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6842, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 156);
  // WARNING: %14 = add i64 %13, 156, !dbg !5144, !verifier.code !5113
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6843, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6843, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  // WARNING: %16 = load i32, i32* %15, align 4, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6844, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6844, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $mul.i64($i16, 48);
  // WARNING: %18 = mul i64 %17, 48, !dbg !5152, !verifier.code !5113
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6845, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 20);
  // WARNING: %19 = add i64 %18, 20, !dbg !5155, !verifier.code !5113
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6846, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64(0, $i18);
  // WARNING: %20 = add i64 0, %19, !dbg !5158, !verifier.code !5113
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6847, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p0);
  // WARNING: %21 = ptrtoint %struct.us_data* %0 to i64, !dbg !5161, !verifier.code !5113
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6848, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 648);
  // WARNING: %22 = add i64 %21, 648, !dbg !5164, !verifier.code !5113
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6849, 19} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6849, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6850, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6851, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  // WARNING: %26 = ptrtoint %struct.alauda_info* %25 to i64, !dbg !5174, !verifier.code !5113
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6852, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, $i19);
  // WARNING: %27 = add i64 %26, %20, !dbg !5177, !verifier.code !5113
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6853, 16} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6853, 14} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  // WARNING: %29 = load i32, i32* %28, align 4, !dbg !5181, !verifier.code !5113
  call {:cexpr "zonesize"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6854, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  // WARNING: %30 = ptrtoint %struct.us_data* %0 to i64, !dbg !5184, !verifier.code !5113
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6855, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 192);
  // WARNING: %31 = add i64 %30, 192, !dbg !5187, !verifier.code !5113
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6856, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6856, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6857, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6857, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6858, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  // WARNING: %36 = ptrtoint %struct.scsi_device* %35 to i64, !dbg !5197, !verifier.code !5113
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6859, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 156);
  // WARNING: %37 = add i64 %36, 156, !dbg !5200, !verifier.code !5113
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6860, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6860, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  // WARNING: %39 = load i32, i32* %38, align 4, !dbg !5204, !verifier.code !5113
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6861, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6861, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $mul.i64($i39, 48);
  // WARNING: %41 = mul i64 %40, 48, !dbg !5208, !verifier.code !5113
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6862, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 16);
  // WARNING: %42 = add i64 %41, 16, !dbg !5211, !verifier.code !5113
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6863, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64(0, $i41);
  // WARNING: %43 = add i64 0, %42, !dbg !5214, !verifier.code !5113
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6864, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p0);
  // WARNING: %44 = ptrtoint %struct.us_data* %0 to i64, !dbg !5217, !verifier.code !5113
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6865, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 648);
  // WARNING: %45 = add i64 %44, 648, !dbg !5220, !verifier.code !5113
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6866, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6866, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6867, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6868, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  // WARNING: %49 = ptrtoint %struct.alauda_info* %48 to i64, !dbg !5230, !verifier.code !5113
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6869, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, $i42);
  // WARNING: %50 = add i64 %49, %43, !dbg !5233, !verifier.code !5113
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6870, 17} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6870, 15} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  // WARNING: %52 = load i32, i32* %51, align 4, !dbg !5237, !verifier.code !5113
  call {:cexpr "uzonesize"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6871, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $mul.i32($i1, $i51);
  // WARNING: %53 = mul i32 %1, %52, !dbg !5240, !verifier.code !5113
  call {:cexpr "zone_base_lba"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6872, 24} true;
  assume {:verifier.code 0} true;
  $i53 := $mul.i32($i1, $i28);
  // WARNING: %54 = mul i32 %1, %29, !dbg !5243, !verifier.code !5113
  call {:cexpr "zone_base_pba"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6873, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i32.i64($i28);
  // WARNING: %55 = zext i32 %29 to i64, !dbg !5246, !verifier.code !5113
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6874, 13} true;
  assume {:verifier.code 0} true;
  call $p55 := kcalloc($i54, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6875, 16} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6876, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i32.i64($i28);
  // WARNING: %58 = zext i32 %29 to i64, !dbg !5255, !verifier.code !5113
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6877, 13} true;
  assume {:verifier.code 0} true;
  call $p58 := kcalloc($i57, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6878, 16} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6882, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($0.ref);
  // WARNING: %61 = ptrtoint i8* null to i64, !dbg !5266, !verifier.code !5113
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6883, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p56);
  // WARNING: %62 = ptrtoint i16* %57 to i64, !dbg !5270, !verifier.code !5113
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6884, 19} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i64($i61, $i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6884, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6886, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i62 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6890, 19} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($0.ref);
  // WARNING: %66 = ptrtoint i8* null to i64, !dbg !5282, !verifier.code !5113
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6891, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p59);
  // WARNING: %67 = ptrtoint i16* %60 to i64, !dbg !5287, !verifier.code !5113
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6892, 21} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i64($i64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6892, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7182, 18} true;
  assume {:verifier.code 0} true;
  $p247 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7183, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7184, 18} true;
  assume {:verifier.code 0} true;
  $p248 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7185, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p248);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7186, 3} true;
  assume {:verifier.code 0} true;
  $i246 := 3;
  goto $bb59;
$bb4:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6894, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb5:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6902, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := printk.ref.i32(.str.27, $i1);
  // WARNING: %73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.27, i32 0, i32 0), i32 %1), !dbg !5295, !verifier.code !5113
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6906, 3} true;
  assume {:verifier.code 0} true;
  $i67 := 0;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6906, 13} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6910, 21} true;
  assume {:verifier.code 0} true;
  $i68 := $ult.i32($i67, $i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6910, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6912, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6913, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6917, 30} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6917, 30} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p59, $mul.ref($i69, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6918, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p70, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6919, 30} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6919, 30} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p56, $mul.ref($i71, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6920, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p72, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6921, 11} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i67, 1);
  // WARNING: %84 = add nsw i32 %.01, 1, !dbg !5324, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6906, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i73;
  goto $bb8;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6927, 3} true;
  assume {:verifier.code 0} true;
  $i74 := 0;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6927, 13} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6931, 21} true;
  assume {:verifier.code 0} true;
  $i75 := $ult.i32($i74, $i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6931, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6933, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i75 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6934, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6939, 30} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i53, $i74);
  // WARNING: %92 = add i32 %54, %.12, !dbg !5345, !verifier.code !5113
  call {:cexpr "blocknum"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6940, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  // WARNING: %93 = trunc i32 %92 to i16, !dbg !5349, !verifier.code !5113
  call {:cexpr "__cil_tmp66"} boogie_si_record_i16($i77);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6941, 14} true;
  assume {:verifier.code 0} true;
  call $i78 := alauda_get_redu_data($p0, $i77, $p5);
  // WARNING: %94 = call i32 @alauda_get_redu_data(%struct.us_data* %0, i16 zeroext %93, i8* %6), !dbg !5352, !verifier.code !5113
  call {:cexpr "result"} boogie_si_record_i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6943, 16} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6943, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7140, 18} true;
  assume {:verifier.code 0} true;
  $i196 := $p2i.ref.i64($p0);
  // WARNING: %249 = ptrtoint %struct.us_data* %0 to i64, !dbg !5701, !verifier.code !5113
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7141, 31} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i64($i196, 192);
  // WARNING: %250 = add i64 %249, 192, !dbg !5704, !verifier.code !5113
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7142, 20} true;
  assume {:verifier.code 0} true;
  $p198 := $i2p.i64.ref($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7142, 18} true;
  assume {:verifier.code 0} true;
  $p199 := $load.ref($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7143, 18} true;
  assume {:verifier.code 0} true;
  $p200 := $bitcast.ref.ref($p199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7143, 18} true;
  assume {:verifier.code 0} true;
  $p201 := $load.ref($M.0, $p200);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7144, 18} true;
  assume {:verifier.code 0} true;
  $i202 := $p2i.ref.i64($p201);
  // WARNING: %255 = ptrtoint %struct.scsi_device* %254 to i64, !dbg !5714, !verifier.code !5113
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7145, 31} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i64($i202, 156);
  // WARNING: %256 = add i64 %255, 156, !dbg !5717, !verifier.code !5113
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7146, 20} true;
  assume {:verifier.code 0} true;
  $p204 := $i2p.i64.ref($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7146, 18} true;
  assume {:verifier.code 0} true;
  $i205 := $load.i32($M.0, $p204);
  // WARNING: %258 = load i32, i32* %257, align 4, !dbg !5721, !verifier.code !5113
  call {:cexpr "__cil_tmp151"} boogie_si_record_i32($i205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7147, 18} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i32.i64($i205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7147, 31} true;
  assume {:verifier.code 0} true;
  $i207 := $mul.i64($i206, 48);
  // WARNING: %260 = mul i64 %259, 48, !dbg !5725, !verifier.code !5113
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i207);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7148, 31} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i64($i207, 32);
  // WARNING: %261 = add i64 %260, 32, !dbg !5728, !verifier.code !5113
  call {:cexpr "__cil_tmp153"} boogie_si_record_i64($i208);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7149, 20} true;
  assume {:verifier.code 0} true;
  $i209 := $add.i64(0, $i208);
  // WARNING: %262 = add i64 0, %261, !dbg !5731, !verifier.code !5113
  call {:cexpr "__cil_tmp154"} boogie_si_record_i64($i209);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7150, 18} true;
  assume {:verifier.code 0} true;
  $i210 := $p2i.ref.i64($p0);
  // WARNING: %263 = ptrtoint %struct.us_data* %0 to i64, !dbg !5734, !verifier.code !5113
  call {:cexpr "__cil_tmp155"} boogie_si_record_i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7151, 31} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i64($i210, 648);
  // WARNING: %264 = add i64 %263, 648, !dbg !5737, !verifier.code !5113
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i211);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7152, 20} true;
  assume {:verifier.code 0} true;
  $p212 := $i2p.i64.ref($i211);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7152, 18} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7153, 18} true;
  assume {:verifier.code 0} true;
  $p214 := $bitcast.ref.ref($p213);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7154, 18} true;
  assume {:verifier.code 0} true;
  $i215 := $p2i.ref.i64($p214);
  // WARNING: %268 = ptrtoint %struct.alauda_info* %267 to i64, !dbg !5747, !verifier.code !5113
  call {:cexpr "__cil_tmp159"} boogie_si_record_i64($i215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7155, 31} true;
  assume {:verifier.code 0} true;
  $i216 := $add.i64($i215, $i209);
  // WARNING: %269 = add i64 %268, %262, !dbg !5750, !verifier.code !5113
  call {:cexpr "__cil_tmp160"} boogie_si_record_i64($i216);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7156, 20} true;
  assume {:verifier.code 0} true;
  $p217 := $i2p.i64.ref($i216);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7156, 18} true;
  assume {:verifier.code 0} true;
  $p218 := $load.ref($M.0, $p217);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7157, 31} true;
  assume {:verifier.code 0} true;
  $i219 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7157, 31} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p218, $mul.ref($i219, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7158, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p220, $p55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7159, 18} true;
  assume {:verifier.code 0} true;
  $i221 := $p2i.ref.i64($p0);
  // WARNING: %274 = ptrtoint %struct.us_data* %0 to i64, !dbg !5761, !verifier.code !5113
  call {:cexpr "__cil_tmp163"} boogie_si_record_i64($i221);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7160, 31} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i64($i221, 192);
  // WARNING: %275 = add i64 %274, 192, !dbg !5764, !verifier.code !5113
  call {:cexpr "__cil_tmp164"} boogie_si_record_i64($i222);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7161, 20} true;
  assume {:verifier.code 0} true;
  $p223 := $i2p.i64.ref($i222);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7161, 18} true;
  assume {:verifier.code 0} true;
  $p224 := $load.ref($M.0, $p223);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7162, 18} true;
  assume {:verifier.code 0} true;
  $p225 := $bitcast.ref.ref($p224);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7162, 18} true;
  assume {:verifier.code 0} true;
  $p226 := $load.ref($M.0, $p225);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7163, 18} true;
  assume {:verifier.code 0} true;
  $i227 := $p2i.ref.i64($p226);
  // WARNING: %280 = ptrtoint %struct.scsi_device* %279 to i64, !dbg !5774, !verifier.code !5113
  call {:cexpr "__cil_tmp167"} boogie_si_record_i64($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7164, 31} true;
  assume {:verifier.code 0} true;
  $i228 := $add.i64($i227, 156);
  // WARNING: %281 = add i64 %280, 156, !dbg !5777, !verifier.code !5113
  call {:cexpr "__cil_tmp168"} boogie_si_record_i64($i228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7165, 20} true;
  assume {:verifier.code 0} true;
  $p229 := $i2p.i64.ref($i228);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7165, 18} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p229);
  // WARNING: %283 = load i32, i32* %282, align 4, !dbg !5781, !verifier.code !5113
  call {:cexpr "__cil_tmp169"} boogie_si_record_i32($i230);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7166, 18} true;
  assume {:verifier.code 0} true;
  $i231 := $zext.i32.i64($i230);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7166, 31} true;
  assume {:verifier.code 0} true;
  $i232 := $mul.i64($i231, 48);
  // WARNING: %285 = mul i64 %284, 48, !dbg !5785, !verifier.code !5113
  call {:cexpr "__cil_tmp170"} boogie_si_record_i64($i232);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7167, 31} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i64($i232, 40);
  // WARNING: %286 = add i64 %285, 40, !dbg !5788, !verifier.code !5113
  call {:cexpr "__cil_tmp171"} boogie_si_record_i64($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7168, 20} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i64(0, $i233);
  // WARNING: %287 = add i64 0, %286, !dbg !5791, !verifier.code !5113
  call {:cexpr "__cil_tmp172"} boogie_si_record_i64($i234);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7169, 18} true;
  assume {:verifier.code 0} true;
  $i235 := $p2i.ref.i64($p0);
  // WARNING: %288 = ptrtoint %struct.us_data* %0 to i64, !dbg !5794, !verifier.code !5113
  call {:cexpr "__cil_tmp173"} boogie_si_record_i64($i235);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7170, 31} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i64($i235, 648);
  // WARNING: %289 = add i64 %288, 648, !dbg !5797, !verifier.code !5113
  call {:cexpr "__cil_tmp174"} boogie_si_record_i64($i236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7171, 20} true;
  assume {:verifier.code 0} true;
  $p237 := $i2p.i64.ref($i236);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7171, 18} true;
  assume {:verifier.code 0} true;
  $p238 := $load.ref($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7172, 18} true;
  assume {:verifier.code 0} true;
  $p239 := $bitcast.ref.ref($p238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7173, 18} true;
  assume {:verifier.code 0} true;
  $i240 := $p2i.ref.i64($p239);
  // WARNING: %293 = ptrtoint %struct.alauda_info* %292 to i64, !dbg !5807, !verifier.code !5113
  call {:cexpr "__cil_tmp177"} boogie_si_record_i64($i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7174, 31} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i64($i240, $i234);
  // WARNING: %294 = add i64 %293, %287, !dbg !5810, !verifier.code !5113
  call {:cexpr "__cil_tmp178"} boogie_si_record_i64($i241);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7175, 20} true;
  assume {:verifier.code 0} true;
  $p242 := $i2p.i64.ref($i241);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7175, 18} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7176, 31} true;
  assume {:verifier.code 0} true;
  $i244 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7176, 31} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p243, $mul.ref($i244, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7177, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p245, $p58);
  // WARNING: store i16* %60, i16** %298, align 8, !dbg !5820, !verifier.code !5113
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7179, 3} true;
  assume {:verifier.code 0} true;
  $i246 := 0;
  goto $bb59;
$bb20:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6945, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb21:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6951, 5} true;
  assume {:verifier.code 0} true;
  $i80 := 0;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6951, 15} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6953, 13} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i80, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6953, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6955, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i81 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6956, 9} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6959, 26} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6959, 26} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p5, $mul.ref($i82, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6960, 21} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.0, $p83);
  // WARNING: %107 = load i8, i8* %106, align 1, !dbg !5376, !verifier.code !5113
  call {:cexpr "__cil_tmp68"} boogie_si_record_i8($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6961, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i84);
  // WARNING: %108 = zext i8 %107 to i32, !dbg !5379, !verifier.code !5113
  call {:cexpr "__cil_tmp69"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6962, 23} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6962, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb29, $bb30;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6973, 30} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6973, 30} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p59, $mul.ref($i88, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6974, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p89, $sub.i16(0, 3));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6975, 5} true;
  assume {:verifier.code 0} true;
  call $i90 := printk.ref.i32(.str.28, $i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6977, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb29:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6963, 9} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6981, 5} true;
  assume {:verifier.code 0} true;
  $i91 := 0;
  goto $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6968, 13} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i80, 1);
  // WARNING: %113 = add nsw i32 %.0, 1, !dbg !5387, !verifier.code !5113
  call {:cexpr "j"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6951, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $i87;
  goto $bb23;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7136, 11} true;
  assume {:verifier.code 0} true;
  $i195 := $add.i32($i74, 1);
  // WARNING: %247 = add nsw i32 %.12, 1, !dbg !5697, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i195);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6927, 3} true;
  assume {:verifier.code 0} true;
  $i74 := $i195;
  goto $bb14;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6981, 15} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6983, 13} true;
  assume {:verifier.code 0} true;
  $i92 := $slt.i32($i91, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6983, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6985, 7} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i92 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6986, 9} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6989, 26} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i32.i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6989, 26} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p5, $mul.ref($i93, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6990, 21} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i8($M.0, $p94);
  // WARNING: %127 = load i8, i8* %126, align 1, !dbg !5414, !verifier.code !5113
  call {:cexpr "__cil_tmp72"} boogie_si_record_i8($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6991, 21} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i8.i32($i95);
  // WARNING: %128 = zext i8 %127 to i32, !dbg !5417, !verifier.code !5113
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6992, 23} true;
  assume {:verifier.code 0} true;
  $i97 := $ne.i32($i96, 255);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6992, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $i91;
  assume {:branchcond $i97} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7002, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb40:
  assume ($i97 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6993, 9} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7004, 11} true;
  assume {:verifier.code 0} true;
  $i100 := $slt.i32($i98, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7004, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb44, $bb45;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6998, 13} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i91, 1);
  // WARNING: %133 = add nsw i32 %.1, 1, !dbg !5425, !verifier.code !5113
  call {:cexpr "j"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6981, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $i99;
  goto $bb34;
$bb44:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7006, 26} true;
  assume {:verifier.code 0} true;
  $p101 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7007, 21} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i8($M.0, $p101);
  // WARNING: %139 = load i8, i8* %138, align 1, !dbg !5438, !verifier.code !5113
  call {:cexpr "__cil_tmp75"} boogie_si_record_i8($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7008, 21} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i102);
  // WARNING: %140 = zext i8 %139 to i32, !dbg !5441, !verifier.code !5113
  call {:cexpr "__cil_tmp76"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7009, 26} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7010, 21} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i8($M.0, $p104);
  // WARNING: %142 = load i8, i8* %141, align 1, !dbg !5447, !verifier.code !5113
  call {:cexpr "__cil_tmp78"} boogie_si_record_i8($i105);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7011, 21} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i8.i32($i105);
  // WARNING: %143 = zext i8 %142 to i32, !dbg !5450, !verifier.code !5113
  call {:cexpr "__cil_tmp79"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7012, 26} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7013, 21} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p107);
  // WARNING: %145 = load i8, i8* %144, align 1, !dbg !5456, !verifier.code !5113
  call {:cexpr "__cil_tmp81"} boogie_si_record_i8($i108);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7014, 21} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  // WARNING: %146 = zext i8 %145 to i32, !dbg !5459, !verifier.code !5113
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7015, 26} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p5, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7016, 21} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i8($M.0, $p110);
  // WARNING: %148 = load i8, i8* %147, align 1, !dbg !5465, !verifier.code !5113
  call {:cexpr "__cil_tmp84"} boogie_si_record_i8($i111);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7017, 21} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i8.i32($i111);
  // WARNING: %149 = zext i8 %148 to i32, !dbg !5468, !verifier.code !5113
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7018, 26} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7019, 21} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i8($M.0, $p113);
  // WARNING: %151 = load i8, i8* %150, align 1, !dbg !5474, !verifier.code !5113
  call {:cexpr "__cil_tmp87"} boogie_si_record_i8($i114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7020, 21} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i8.i32($i114);
  // WARNING: %152 = zext i8 %151 to i32, !dbg !5477, !verifier.code !5113
  call {:cexpr "__cil_tmp88"} boogie_si_record_i32($i115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7021, 26} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p5, 5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7022, 21} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i8($M.0, $p116);
  // WARNING: %154 = load i8, i8* %153, align 1, !dbg !5483, !verifier.code !5113
  call {:cexpr "__cil_tmp90"} boogie_si_record_i8($i117);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7023, 21} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i8.i32($i117);
  // WARNING: %155 = zext i8 %154 to i32, !dbg !5486, !verifier.code !5113
  call {:cexpr "__cil_tmp91"} boogie_si_record_i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7024, 7} true;
  assume {:verifier.code 0} true;
  call $i119 := printk.ref.i32.i32.i32.i32.i32.i32.i32(.str.29, $i76, $i103, $i106, $i109, $i112, $i115, $i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7027, 32} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7027, 32} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p59, $mul.ref($i120, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7028, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p121, $sub.i16(0, 3));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7030, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb45:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7035, 24} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p5, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7036, 19} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i8($M.0, $p122);
  // WARNING: %162 = load i8, i8* %161, align 1, !dbg !5499, !verifier.code !5113
  call {:cexpr "__cil_tmp94"} boogie_si_record_i8($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7037, 19} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i8.i32($i123);
  // WARNING: %163 = zext i8 %162 to i32, !dbg !5502, !verifier.code !5113
  call {:cexpr "__cil_tmp95"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7038, 31} true;
  assume {:verifier.code 0} true;
  $i125 := $ashr.i32($i124, 4);
  // WARNING: %164 = ashr i32 %163, 4, !dbg !5505, !verifier.code !5113
  call {:cexpr "__cil_tmp96"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7039, 21} true;
  assume {:verifier.code 0} true;
  $i126 := $ne.i32($i125, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7039, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7041, 26} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p5, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7042, 21} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i8($M.0, $p127);
  // WARNING: %168 = load i8, i8* %167, align 1, !dbg !5516, !verifier.code !5113
  call {:cexpr "__cil_tmp98"} boogie_si_record_i8($i128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7043, 21} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i128);
  // WARNING: %169 = zext i8 %168 to i32, !dbg !5519, !verifier.code !5113
  call {:cexpr "__cil_tmp99"} boogie_si_record_i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7044, 27} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p5, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7045, 22} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i8($M.0, $p130);
  // WARNING: %171 = load i8, i8* %170, align 1, !dbg !5525, !verifier.code !5113
  call {:cexpr "__cil_tmp101"} boogie_si_record_i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7046, 22} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i32($i131);
  // WARNING: %172 = zext i8 %171 to i32, !dbg !5528, !verifier.code !5113
  call {:cexpr "__cil_tmp102"} boogie_si_record_i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7047, 27} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p5, 11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7048, 22} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i8($M.0, $p133);
  // WARNING: %174 = load i8, i8* %173, align 1, !dbg !5534, !verifier.code !5113
  call {:cexpr "__cil_tmp104"} boogie_si_record_i8($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7049, 22} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i134);
  // WARNING: %175 = zext i8 %174 to i32, !dbg !5537, !verifier.code !5113
  call {:cexpr "__cil_tmp105"} boogie_si_record_i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7050, 27} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7051, 22} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  // WARNING: %177 = load i8, i8* %176, align 1, !dbg !5543, !verifier.code !5113
  call {:cexpr "__cil_tmp107"} boogie_si_record_i8($i137);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7052, 22} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  // WARNING: %178 = zext i8 %177 to i32, !dbg !5546, !verifier.code !5113
  call {:cexpr "__cil_tmp108"} boogie_si_record_i32($i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7053, 7} true;
  assume {:verifier.code 0} true;
  call $i139 := printk.ref.i32.i32.i32.i32.i32(.str.30, $i76, $i129, $i132, $i135, $i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7055, 33} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7055, 33} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p59, $mul.ref($i140, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7056, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p141, $sub.i16(0, 3));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7058, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb48:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7064, 25} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p5, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7065, 20} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i8($M.0, $p142);
  // WARNING: %185 = load i8, i8* %184, align 1, !dbg !5559, !verifier.code !5113
  call {:cexpr "__cil_tmp111"} boogie_si_record_i8($i143);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7066, 20} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i8.i32($i143);
  // WARNING: %186 = zext i8 %185 to i32, !dbg !5562, !verifier.code !5113
  call {:cexpr "__cil_tmp112"} boogie_si_record_i32($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7067, 25} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p5, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7068, 20} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  // WARNING: %188 = load i8, i8* %187, align 1, !dbg !5568, !verifier.code !5113
  call {:cexpr "__cil_tmp114"} boogie_si_record_i8($i146);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7069, 20} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i146);
  // WARNING: %189 = zext i8 %188 to i32, !dbg !5571, !verifier.code !5113
  call {:cexpr "__cil_tmp115"} boogie_si_record_i32($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7070, 33} true;
  assume {:verifier.code 0} true;
  $i148 := $xor.i32($i147, $i144);
  // WARNING: %190 = xor i32 %189, %186, !dbg !5574, !verifier.code !5113
  call {:cexpr "__cil_tmp116"} boogie_si_record_i32($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7071, 20} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7071, 33} true;
  assume {:verifier.code 0} true;
  $i150 := $mul.i64($i149, 1);
  // WARNING: %192 = mul i64 %191, 1, !dbg !5578, !verifier.code !5113
  call {:cexpr "__cil_tmp117"} boogie_si_record_i64($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7072, 45} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i64($p2i.ref.i64(parity), $i150);
  // WARNING: %193 = add i64 ptrtoint ([256 x i8]* @parity to i64), %192, !dbg !5581, !verifier.code !5113
  call {:cexpr "__cil_tmp118"} boogie_si_record_i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7073, 11} true;
  assume {:verifier.code 0} true;
  $p152 := $i2p.i64.ref($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7073, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i8($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7073, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i8($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7073, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7075, 27} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p5, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7076, 22} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i8($M.0, $p155);
  // WARNING: %199 = load i8, i8* %198, align 1, !dbg !5593, !verifier.code !5113
  call {:cexpr "__cil_tmp120"} boogie_si_record_i8($i156);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7077, 22} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i8.i32($i156);
  // WARNING: %200 = zext i8 %199 to i32, !dbg !5596, !verifier.code !5113
  call {:cexpr "__cil_tmp121"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7078, 27} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p5, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7079, 22} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i8($M.0, $p158);
  // WARNING: %202 = load i8, i8* %201, align 1, !dbg !5602, !verifier.code !5113
  call {:cexpr "__cil_tmp123"} boogie_si_record_i8($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7080, 22} true;
  assume {:verifier.code 0} true;
  $i160 := $zext.i8.i32($i159);
  // WARNING: %203 = zext i8 %202 to i32, !dbg !5605, !verifier.code !5113
  call {:cexpr "__cil_tmp124"} boogie_si_record_i32($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7081, 7} true;
  assume {:verifier.code 0} true;
  call $i161 := printk.ref.i32.i32.i32(.str.31, $i74, $i157, $i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7083, 33} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7083, 33} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p59, $mul.ref($i162, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7084, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p163, $sub.i16(0, 3));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7086, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb51:
  assume !(($i154 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7091, 25} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p5, 6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7092, 20} true;
  assume {:verifier.code 0} true;
  $i165 := $load.i8($M.0, $p164);
  // WARNING: %210 = load i8, i8* %209, align 1, !dbg !5617, !verifier.code !5113
  call {:cexpr "__cil_tmp127"} boogie_si_record_i8($i165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7093, 20} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i8.i16($i165);
  // WARNING: %211 = zext i8 %210 to i16, !dbg !5620, !verifier.code !5113
  call {:cexpr "__cil_tmp128"} boogie_si_record_i16($i166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7094, 20} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i16.i32($i166);
  // WARNING: %212 = zext i16 %211 to i32, !dbg !5623, !verifier.code !5113
  call {:cexpr "__cil_tmp129"} boogie_si_record_i32($i167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7095, 33} true;
  assume {:verifier.code 0} true;
  $i168 := $shl.i32($i167, 8);
  // WARNING: %213 = shl i32 %212, 8, !dbg !5626, !verifier.code !5113
  call {:cexpr "__cil_tmp130"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7096, 25} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p5, 7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7097, 20} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i8($M.0, $p169);
  // WARNING: %215 = load i8, i8* %214, align 1, !dbg !5632, !verifier.code !5113
  call {:cexpr "__cil_tmp132"} boogie_si_record_i8($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7098, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $zext.i8.i16($i170);
  // WARNING: %216 = zext i8 %215 to i16, !dbg !5635, !verifier.code !5113
  call {:cexpr "__cil_tmp133"} boogie_si_record_i16($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7099, 20} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i16.i32($i171);
  // WARNING: %217 = zext i16 %216 to i32, !dbg !5638, !verifier.code !5113
  call {:cexpr "__cil_tmp134"} boogie_si_record_i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7100, 33} true;
  assume {:verifier.code 0} true;
  $i173 := $or.i32($i172, $i168);
  // WARNING: %218 = or i32 %217, %213, !dbg !5641, !verifier.code !5113
  call {:cexpr "__cil_tmp135"} boogie_si_record_i32($i173);
  // WARNING: call void @llvm.dbg.value(metadata i32 %218, i64 0, metadata !11306, metadata !5110), !dbg !11307, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7102, 31} true;
  assume {:verifier.code 0} true;
  $i174 := $and.i32($i173, 2047);
  // WARNING: %219 = and i32 %218, 2047, !dbg !5646, !verifier.code !5113
  call {:cexpr "__cil_tmp136"} boogie_si_record_i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7103, 31} true;
  assume {:verifier.code 0} true;
  $i175 := $lshr.i32($i174, 1);
  // WARNING: %220 = lshr i32 %219, 1, !dbg !5649, !verifier.code !5113
  call {:cexpr "lba_offset"} boogie_si_record_i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7104, 27} true;
  assume {:verifier.code 0} true;
  $i176 := $add.i32($i175, $i52);
  // WARNING: %221 = add i32 %220, %53, !dbg !5650, !verifier.code !5113
  call {:cexpr "lba_real"} boogie_si_record_i32($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7105, 20} true;
  assume {:verifier.code 0} true;
  $i177 := $uge.i32($i175, $i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7105, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7107, 7} true;
  assume {:verifier.code 0} true;
  call $i178 := printk.ref.i32.i32(.str.32, $i176, $i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7109, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb54:
  assume !(($i177 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7114, 31} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.i32.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7114, 31} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p56, $mul.ref($i179, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7115, 20} true;
  assume {:verifier.code 0} true;
  $i181 := $load.i16($M.0, $p180);
  // WARNING: %229 = load i16, i16* %228, align 2, !dbg !5664, !verifier.code !5113
  call {:cexpr "__cil_tmp138"} boogie_si_record_i16($i181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7116, 20} true;
  assume {:verifier.code 0} true;
  $i182 := $zext.i16.i32($i181);
  // WARNING: %230 = zext i16 %229 to i32, !dbg !5667, !verifier.code !5113
  call {:cexpr "__cil_tmp139"} boogie_si_record_i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7117, 22} true;
  assume {:verifier.code 0} true;
  $i183 := $ne.i32($i182, 65535);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7117, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i183 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7119, 33} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i32.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7119, 33} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p56, $mul.ref($i184, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7120, 22} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i16($M.0, $p185);
  // WARNING: %235 = load i16, i16* %234, align 2, !dbg !5678, !verifier.code !5113
  call {:cexpr "__cil_tmp141"} boogie_si_record_i16($i186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7121, 22} true;
  assume {:verifier.code 0} true;
  $i187 := $zext.i16.i32($i186);
  // WARNING: %236 = zext i16 %235 to i32, !dbg !5681, !verifier.code !5113
  call {:cexpr "__cil_tmp142"} boogie_si_record_i32($i187);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7122, 7} true;
  assume {:verifier.code 0} true;
  call $i188 := printk.ref.i32.i32.i32(.str.33, $i176, $i187, $i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7125, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb57:
  assume !(($i183 == 1));
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7130, 31} true;
  assume {:verifier.code 0} true;
  $i189 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7130, 31} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p59, $mul.ref($i189, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7131, 21} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i32.i16($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7131, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p190, $i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7132, 31} true;
  assume {:verifier.code 0} true;
  $i192 := $zext.i32.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7132, 31} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p56, $mul.ref($i192, 2));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7133, 21} true;
  assume {:verifier.code 0} true;
  $i194 := $trunc.i32.i16($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7133, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p193, $i194);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7134, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb59:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7188, 3} true;
  assume {:verifier.code 0} true;
  $r := $i246;
  $exn := false;
  return;
}
const kcalloc: ref;
axiom (kcalloc == $sub.ref(0, 104211));
procedure kcalloc($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11500, metadata !5110), !dbg !11501, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11502, metadata !5110), !dbg !11503, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4249, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $or.i32($i2, 32768);
  // WARNING: %4 = or i32 %2, 32768, !dbg !5118, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4250, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := kmalloc_array($i0, $i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4252, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const alauda_get_redu_data: ref;
axiom (alauda_get_redu_data == $sub.ref(0, 105243));
procedure alauda_get_redu_data($p0: ref, $i1: i16, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i32;
  var $i23: i32;
  var $i24: i8;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i8;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $i59: i8;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i1;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $p77: ref;
  var $i78: i32;
  var $i72: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(9, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !11516, metadata !5110), !dbg !11517, !verifier.code !5108
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [9 x i8]* %4, metadata !11522, metadata !5110), !dbg !11523, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6517, 32} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6517, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6517, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 0);
  // WARNING: %7 = add i64 %6, 0, !dbg !5129, !verifier.code !5110
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6518, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6518, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 64);
  // WARNING: store i8 64, i8* %8, align 1, !dbg !5133, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6520, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6520, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6520, 43} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 1);
  // WARNING: %11 = add i64 %10, 1, !dbg !5138, !verifier.code !5110
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6521, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6521, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $sub.i8(0, 123));
  // WARNING: store i8 -123, i8* %12, align 1, !dbg !5142, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6523, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6523, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6523, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 2);
  // WARNING: %15 = add i64 %14, 2, !dbg !5147, !verifier.code !5110
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6524, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i1);
  // WARNING: %16 = zext i16 %1 to i32, !dbg !5150, !verifier.code !5110
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6525, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $ashr.i32($i15, 3);
  // WARNING: %17 = ashr i32 %16, 3, !dbg !5153, !verifier.code !5110
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6526, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6526, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6526, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, $i17);
  // WARNING: store i8 %18, i8* %19, align 1, !dbg !5158, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6528, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6528, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6528, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 3);
  // WARNING: %22 = add i64 %21, 3, !dbg !5163, !verifier.code !5110
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6529, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i1);
  // WARNING: %23 = zext i16 %1 to i32, !dbg !5166, !verifier.code !5110
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6530, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $ashr.i32($i22, 11);
  // WARNING: %24 = ashr i32 %23, 11, !dbg !5169, !verifier.code !5110
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6531, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i32.i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6531, 5} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6531, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, $i24);
  // WARNING: store i8 %25, i8* %26, align 1, !dbg !5174, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6533, 33} true;
  assume {:verifier.code 0} true;
  $p26 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6533, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6533, 43} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 4);
  // WARNING: %29 = add i64 %28, 4, !dbg !5179, !verifier.code !5110
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6534, 5} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6534, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 0);
  // WARNING: store i8 0, i8* %30, align 1, !dbg !5183, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6536, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6536, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6536, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 5);
  // WARNING: %33 = add i64 %32, 5, !dbg !5188, !verifier.code !5110
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6537, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i16.i32($i1);
  // WARNING: %34 = zext i16 %1 to i32, !dbg !5191, !verifier.code !5110
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6538, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 15);
  // WARNING: %35 = and i32 %34, 15, !dbg !5194, !verifier.code !5110
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6539, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $shl.i32($i34, 5);
  // WARNING: %36 = shl i32 %35, 5, !dbg !5197, !verifier.code !5110
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6540, 37} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6540, 5} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6540, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, $i36);
  // WARNING: store i8 %37, i8* %38, align 1, !dbg !5202, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6542, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6542, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6542, 43} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 6);
  // WARNING: %41 = add i64 %40, 6, !dbg !5207, !verifier.code !5110
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6543, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6543, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, 0);
  // WARNING: store i8 0, i8* %42, align 1, !dbg !5211, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6545, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6545, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6545, 43} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 7);
  // WARNING: %45 = add i64 %44, 7, !dbg !5216, !verifier.code !5110
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6546, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6546, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 0);
  // WARNING: store i8 0, i8* %46, align 1, !dbg !5220, !verifier.code !5110
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6548, 33} true;
  assume {:verifier.code 0} true;
  $p46 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6548, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6548, 43} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 8);
  // WARNING: %49 = add i64 %48, 8, !dbg !5225, !verifier.code !5110
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6549, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p0);
  // WARNING: %50 = ptrtoint %struct.us_data* %0 to i64, !dbg !5228, !verifier.code !5110
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6550, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, 192);
  // WARNING: %51 = add i64 %50, 192, !dbg !5231, !verifier.code !5110
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6551, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6551, 17} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6552, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6552, 17} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6553, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  // WARNING: %56 = ptrtoint %struct.scsi_device* %55 to i64, !dbg !5241, !verifier.code !5110
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6554, 29} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 156);
  // WARNING: %57 = add i64 %56, 156, !dbg !5244, !verifier.code !5110
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6555, 19} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6555, 17} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  // WARNING: %59 = load i32, i32* %58, align 4, !dbg !5248, !verifier.code !5110
  call {:cexpr "__cil_tmp38"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6556, 37} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6556, 5} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6556, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6557, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p0);
  // WARNING: %62 = ptrtoint %struct.us_data* %0 to i64, !dbg !5254, !verifier.code !5110
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6558, 29} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 112);
  // WARNING: %63 = add i64 %62, 112, !dbg !5257, !verifier.code !5110
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6559, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6559, 17} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  // WARNING: %65 = load i32, i32* %64, align 4, !dbg !5261, !verifier.code !5110
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i64);
  // WARNING: call void @llvm.dbg.value(metadata i32 %65, i64 0, metadata !11663, metadata !5110), !dbg !11664, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6561, 33} true;
  assume {:verifier.code 0} true;
  $p65 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6561, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6561, 43} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i64($i66, 0);
  // WARNING: %68 = add i64 %67, 0, !dbg !5268, !verifier.code !5110
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6562, 17} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6565, 17} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6566, 8} true;
  assume {:verifier.code 0} true;
  call $i70 := usb_stor_bulk_transfer_buf($p0, $i64, $p68, 9, $p69);
  // WARNING: %71 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %65, i8* %69, i32 9, i32* %70), !dbg !5281, !verifier.code !5110
  call {:cexpr "rc"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6568, 10} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6568, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6569, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $i70;
  goto $bb3;
$bb2:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6584, 1} true;
  assume {:verifier.code 0} true;
  $r := $i72;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6574, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p0);
  // WARNING: %76 = ptrtoint %struct.us_data* %0 to i64, !dbg !5289, !verifier.code !5110
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6575, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 116);
  // WARNING: %77 = add i64 %76, 116, !dbg !5293, !verifier.code !5110
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6576, 19} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6576, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  // WARNING: %79 = load i32, i32* %78, align 4, !dbg !5297, !verifier.code !5110
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6579, 17} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6580, 13} true;
  assume {:verifier.code 0} true;
  call $i78 := usb_stor_bulk_transfer_buf($p0, $i76, $p2, 16, $p77);
  // WARNING: %81 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %79, i8* %2, i32 16, i32* %80), !dbg !5307, !verifier.code !5110
  call {:cexpr "tmp___7"} boogie_si_record_i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6582, 3} true;
  assume {:verifier.code 0} true;
  $i72 := $i78;
  goto $bb3;
}
const kmalloc_array: ref;
axiom (kmalloc_array == $sub.ref(0, 106275));
procedure kmalloc_array($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $i7: i64;
  var $p8: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11714, metadata !5110), !dbg !11715, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11716, metadata !5110), !dbg !11717, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4223, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4223, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4225, 39} true;
  assume {:verifier.code 0} true;
  $i4 := $udiv.i64($sub.i64(0, 1), $i1);
  // WARNING: %6 = udiv i64 -1, %1, !dbg !5122, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4226, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ugt.i64($i0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4226, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4227, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb5;
$bb4:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4241, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4232, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4236, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  // WARNING: %13 = mul i64 %0, %1, !dbg !5133, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4237, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := __kmalloc($i7, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4239, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p8;
  goto $bb5;
}
const alauda_read_block: ref;
axiom (alauda_read_block == $sub.ref(0, 107307));
procedure alauda_read_block($p0: ref, $i1: i16, $i2: i32, $i3: i32, $p4: ref)
  returns ($r: i32)
{
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $i40: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.us_data* %0, i64 0, metadata !11745, metadata !5110), !dbg !11746, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !11747, metadata !5110), !dbg !11748, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11749, metadata !5110), !dbg !11750, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7667, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.us_data* %0 to i64, !dbg !5122, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7668, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 192);
  // WARNING: %7 = add i64 %6, 192, !dbg !5127, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7669, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7669, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7670, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7670, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7671, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  // WARNING: %12 = ptrtoint %struct.scsi_device* %11 to i64, !dbg !5137, !verifier.code !5113
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7672, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 156);
  // WARNING: %13 = add i64 %12, 156, !dbg !5140, !verifier.code !5113
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7673, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7673, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  // WARNING: %15 = load i32, i32* %14, align 4, !dbg !5144, !verifier.code !5113
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7674, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7674, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64($i15, 48);
  // WARNING: %17 = mul i64 %16, 48, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7675, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 8);
  // WARNING: %18 = add i64 %17, 8, !dbg !5151, !verifier.code !5113
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7676, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64(0, $i17);
  // WARNING: %19 = add i64 0, %18, !dbg !5154, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7677, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %20 = ptrtoint %struct.us_data* %0 to i64, !dbg !5157, !verifier.code !5113
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7678, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 648);
  // WARNING: %21 = add i64 %20, 648, !dbg !5160, !verifier.code !5113
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7679, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7679, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7680, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7681, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  // WARNING: %25 = ptrtoint %struct.alauda_info* %24 to i64, !dbg !5170, !verifier.code !5113
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7682, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, $i18);
  // WARNING: %26 = add i64 %25, %19, !dbg !5173, !verifier.code !5113
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7683, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7683, 14} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  // WARNING: %28 = load i32, i32* %27, align 4, !dbg !5177, !verifier.code !5113
  call {:cexpr "pagesize"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7684, 8} true;
  assume {:verifier.code 0} true;
  call $i28 := alauda_read_block_raw($p0, $i1, $i2, $i3, $p4);
  // WARNING: %29 = call i32 @alauda_read_block_raw(%struct.us_data* %0, i16 zeroext %1, i32 %2, i32 %3, i8* %4), !dbg !5180, !verifier.code !5113
  call {:cexpr "rc"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7686, 10} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7686, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7687, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7724, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7693, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7693, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7697, 21} true;
  assume {:verifier.code 0} true;
  $i31 := $ult.i32($i30, $i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7697, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7699, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7700, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7705, 31} true;
  assume {:verifier.code 0} true;
  $i32 := $mul.i32($i30, $i27);
  // WARNING: %40 = mul i32 %.01, %28, !dbg !5207, !verifier.code !5113
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i32);
  // WARNING: call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !11842, metadata !5110), !dbg !11843, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7707, 28} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i27, 64);
  // WARNING: %41 = add i32 %28, 64, !dbg !5213, !verifier.code !5113
  call {:cexpr "__cil_tmp30"} boogie_si_record_i32($i33);
  // WARNING: call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !11847, metadata !5110), !dbg !11848, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7709, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $mul.i32($i30, $i33);
  // WARNING: %42 = mul i32 %.01, %41, !dbg !5218, !verifier.code !5113
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i34);
  // WARNING: call void @llvm.dbg.value(metadata i32 %42, i64 0, metadata !11852, metadata !5110), !dbg !11853, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7711, 24} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7711, 24} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, $mul.ref($i35, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7713, 24} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7713, 24} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, $mul.ref($i37, 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7715, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i27);
  // WARNING: %47 = zext i32 %28 to i64, !dbg !5233, !verifier.code !5113
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7716, 5} true;
  assume {:verifier.code 0} true;
  call llvm.memmove.p0i8.p0i8.i64($p36, $p38, $i39, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7717, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i30, 1);
  // WARNING: %48 = add nsw i32 %.01, 1, !dbg !5237, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7693, 3} true;
  assume {:verifier.code 0} true;
  $i30 := $i40;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 7722, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const llvm.memmove.p0i8.p0i8.i64: ref;
axiom (llvm.memmove.p0i8.p0i8.i64 == $sub.ref(0, 108339));
procedure llvm.memmove.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const __arch_swab32: ref;
axiom (__arch_swab32 == $sub.ref(0, 109371));
procedure __arch_swab32($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  call $i1 := devirtbounce(0, $i0);
  // WARNING: %2 = call i32 @devirtbounce(i32 (i32)* asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}", i32 %0)
  call {:cexpr "val"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4173, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const alauda_get_media_status: ref;
axiom (alauda_get_media_status == $sub.ref(0, 110403));
procedure alauda_get_media_status($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5089, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.us_data* %0 to i64, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5090, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 192);
  // WARNING: %4 = add i64 %3, 192, !dbg !5121, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5091, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5091, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5092, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5092, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5093, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.scsi_device* %8 to i64, !dbg !5131, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5094, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 156);
  // WARNING: %10 = add i64 %9, 156, !dbg !5134, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5095, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5095, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  // WARNING: %12 = load i32, i32* %11, align 4, !dbg !5138, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5096, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5096, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5098, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 8;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $sub.i8(0, 104);
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5103, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p0);
  // WARNING: %17 = ptrtoint %struct.us_data* %0 to i64, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5104, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 124);
  // WARNING: %18 = add i64 %17, 124, !dbg !5152, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5105, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5105, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  // WARNING: %20 = load i32, i32* %19, align 4, !dbg !5156, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i17);
  // WARNING: call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !11929, metadata !5110), !dbg !11930, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8 -64, i64 0, metadata !11931, metadata !5110), !dbg !11932, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !11933, metadata !5110), !dbg !11934, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11937, metadata !5110), !dbg !11938, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5111, 8} true;
  assume {:verifier.code 0} true;
  call $i18 := usb_stor_ctrl_transfer($p0, $i17, $i13, $sub.i8(0, 64), 0, 1, $p1, 2);
  // WARNING: %21 = call i32 @usb_stor_ctrl_transfer(%struct.us_data* %0, i32 %20, i8 zeroext %.0, i8 zeroext -64, i16 zeroext 0, i16 zeroext 1, i8* %1, i16 zeroext 2), !dbg !5169, !verifier.code !5113
  call {:cexpr "rc"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5113, 22} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5114, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  // WARNING: %23 = load i8, i8* %22, align 1, !dbg !5175, !verifier.code !5113
  call {:cexpr "__cil_tmp21"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5115, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  // WARNING: %24 = zext i8 %23 to i32, !dbg !5178, !verifier.code !5113
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5116, 22} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5117, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  // WARNING: %26 = load i8, i8* %25, align 1, !dbg !5184, !verifier.code !5113
  call {:cexpr "__cil_tmp24"} boogie_si_record_i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5118, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  // WARNING: %27 = zext i8 %26 to i32, !dbg !5187, !verifier.code !5113
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5119, 3} true;
  assume {:verifier.code 0} true;
  call $i25 := printk.ref.i32.i32(.str.17, $i21, $i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const alauda_free_maps: ref;
axiom (alauda_free_maps == $sub.ref(0, 111435));
procedure alauda_free_maps($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $i55: i32;
  var $i56: i1;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4961, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5114, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4962, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 28);
  // WARNING: %3 = add i64 %2, 28, !dbg !5118, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4963, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4963, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  // WARNING: %5 = load i8, i8* %4, align 1, !dbg !5122, !verifier.code !5113
  call {:cexpr "__cil_tmp7"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4964, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  // WARNING: %6 = zext i8 %5 to i32, !dbg !5125, !verifier.code !5113
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4965, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5128, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4966, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 29);
  // WARNING: %8 = add i64 %7, 29, !dbg !5131, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4967, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4967, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  // WARNING: %10 = load i8, i8* %9, align 1, !dbg !5135, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4968, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  // WARNING: %11 = zext i8 %10 to i32, !dbg !5138, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4969, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p0);
  // WARNING: %12 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5141, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4970, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 30);
  // WARNING: %13 = add i64 %12, 30, !dbg !5144, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4971, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4971, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  // WARNING: %15 = load i8, i8* %14, align 1, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp15"} boogie_si_record_i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4972, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  // WARNING: %16 = zext i8 %15 to i32, !dbg !5151, !verifier.code !5113
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4973, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15, $i10);
  // WARNING: %17 = add nsw i32 %16, %11, !dbg !5154, !verifier.code !5113
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4974, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i16, $i5);
  // WARNING: %18 = add nsw i32 %17, %6, !dbg !5157, !verifier.code !5113
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i17);
  // WARNING: call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !12013, metadata !5110), !dbg !12014, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4976, 17} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4976, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i64($M.0, $p18);
  // WARNING: %20 = load i64, i64* %19, align 8, !dbg !5162, !verifier.code !5113
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4977, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4977, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $lshr.i64($i19, $i20);
  // WARNING: %22 = lshr i64 %20, %21, !dbg !5165, !verifier.code !5113
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4978, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i64.i32($i21);
  // WARNING: %23 = trunc i64 %22 to i32, !dbg !5168, !verifier.code !5113
  call {:cexpr "num_zones"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4981, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($0.ref);
  // WARNING: %24 = ptrtoint i8* null to i64, !dbg !5173, !verifier.code !5113
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4982, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p0);
  // WARNING: %25 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5177, !verifier.code !5113
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4983, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 32);
  // WARNING: %26 = add i64 %25, 32, !dbg !5180, !verifier.code !5113
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4984, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4984, 17} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4985, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p27);
  // WARNING: %29 = ptrtoint i16** %28 to i64, !dbg !5187, !verifier.code !5113
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4986, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i64($i28, $i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4986, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4989, 5} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb3;
$bb2:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4989, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4991, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $ult.i32($i30, $i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4991, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4993, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4994, 9} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4997, 21} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p0);
  // WARNING: %38 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5208, !verifier.code !5113
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4998, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 32);
  // WARNING: %39 = add i64 %38, 32, !dbg !5212, !verifier.code !5113
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4999, 23} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4999, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5000, 33} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i32.i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5000, 33} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p35, $mul.ref($i36, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5001, 21} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5002, 21} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5003, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5004, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p0);
  // WARNING: %46 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5229, !verifier.code !5113
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5005, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 32);
  // WARNING: %47 = add i64 %46, 32, !dbg !5232, !verifier.code !5113
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5006, 23} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5006, 21} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5007, 33} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5007, 33} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p43, $mul.ref($i44, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5009, 22} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5009, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5010, 13} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i30, 1);
  // WARNING: %53 = add i32 %.0, 1, !dbg !5246, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4989, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $i47;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5015, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5021, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($0.ref);
  // WARNING: %57 = ptrtoint i8* null to i64, !dbg !5253, !verifier.code !5113
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5022, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p0);
  // WARNING: %58 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5257, !verifier.code !5113
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5023, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, 40);
  // WARNING: %59 = add i64 %58, 40, !dbg !5260, !verifier.code !5113
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5024, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5024, 17} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5025, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  // WARNING: %62 = ptrtoint i16** %61 to i64, !dbg !5267, !verifier.code !5113
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5026, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, $i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5026, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5029, 5} true;
  assume {:verifier.code 0} true;
  $i55 := 0;
  goto $bb12;
$bb11:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5029, 15} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5031, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $ult.i32($i55, $i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5031, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5033, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i56 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5034, 9} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5037, 21} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p0);
  // WARNING: %71 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5286, !verifier.code !5113
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5038, 33} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i64($i57, 40);
  // WARNING: %72 = add i64 %71, 40, !dbg !5290, !verifier.code !5113
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5039, 23} true;
  assume {:verifier.code 0} true;
  $p59 := $i2p.i64.ref($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5039, 21} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5040, 33} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5040, 33} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p60, $mul.ref($i61, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5041, 21} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5042, 21} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5043, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5044, 21} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p0);
  // WARNING: %79 = ptrtoint %struct.alauda_media_info* %0 to i64, !dbg !5307, !verifier.code !5113
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5045, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 40);
  // WARNING: %80 = add i64 %79, 40, !dbg !5310, !verifier.code !5113
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5046, 23} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5046, 21} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5047, 33} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i32.i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5047, 33} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p68, $mul.ref($i69, 8));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5049, 22} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5049, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p70, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5050, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i55, 1);
  // WARNING: %86 = add i32 %.1, 1, !dbg !5324, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5029, 5} true;
  assume {:verifier.code 0} true;
  $i55 := $i72;
  goto $bb12;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5055, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5059, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const alauda_init_media: ref;
axiom (alauda_init_media == $sub.ref(0, 112467));
procedure alauda_init_media($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i8;
  var $i30: i32;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $p37: ref;
  var $i38: i8;
  var $i39: i32;
  var $i40: i32;
  var $p41: ref;
  var $i42: i8;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $i46: i1;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $p53: ref;
  var $i54: i8;
  var $i55: i32;
  var $p56: ref;
  var $i57: i8;
  var $i58: i32;
  var $i59: i32;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $i72: i64;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $i79: i64;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i32;
  var $i86: i64;
  var $p87: ref;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $p96: ref;
  var $i97: i32;
  var $i98: i64;
  var $i99: i64;
  var $i100: i64;
  var $i101: i64;
  var $i102: i64;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i64;
  var $i110: i64;
  var $i111: i32;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i32;
  var $i122: i64;
  var $i123: i64;
  var $i124: i64;
  var $i125: i64;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $i131: i64;
  var $i132: i64;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $i136: i8;
  var $p137: ref;
  var $i138: i64;
  var $i139: i64;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i32;
  var $i148: i64;
  var $i149: i64;
  var $i150: i64;
  var $i151: i64;
  var $i152: i64;
  var $i153: i64;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $i157: i64;
  var $i158: i64;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i8;
  var $p163: ref;
  var $i164: i64;
  var $i165: i64;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $i173: i32;
  var $i174: i64;
  var $i175: i64;
  var $i176: i64;
  var $i177: i64;
  var $i178: i64;
  var $i179: i64;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: i64;
  var $i184: i64;
  var $i185: i64;
  var $i186: i64;
  var $p187: ref;
  var $i188: i8;
  var $p189: ref;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $i196: i64;
  var $i197: i64;
  var $p198: ref;
  var $i199: i32;
  var $i200: i64;
  var $i201: i64;
  var $i202: i64;
  var $i203: i64;
  var $i204: i64;
  var $i205: i64;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i64;
  var $i210: i64;
  var $i211: i64;
  var $i212: i64;
  var $p213: ref;
  var $i214: i8;
  var $i215: i32;
  var $i216: i32;
  var $p217: ref;
  var $i218: i64;
  var $i219: i64;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $i224: i64;
  var $i225: i64;
  var $p226: ref;
  var $i227: i32;
  var $i228: i64;
  var $i229: i64;
  var $i230: i64;
  var $i231: i64;
  var $i232: i64;
  var $i233: i64;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $i237: i64;
  var $i238: i64;
  var $i239: i64;
  var $i240: i64;
  var $p241: ref;
  var $i242: i8;
  var $i243: i32;
  var $i244: i32;
  var $p245: ref;
  var $i246: i64;
  var $i247: i64;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $i252: i64;
  var $i253: i64;
  var $p254: ref;
  var $i255: i32;
  var $i256: i64;
  var $i257: i64;
  var $i258: i64;
  var $i259: i64;
  var $i260: i64;
  var $i261: i64;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $i265: i64;
  var $i266: i64;
  var $i267: i64;
  var $i268: i64;
  var $p269: ref;
  var $i270: i8;
  var $i271: i32;
  var $i272: i32;
  var $p273: ref;
  var $i274: i64;
  var $i275: i64;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $i280: i64;
  var $i281: i64;
  var $p282: ref;
  var $i283: i32;
  var $i284: i64;
  var $i285: i64;
  var $i286: i64;
  var $i287: i64;
  var $i288: i64;
  var $i289: i64;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $i293: i64;
  var $i294: i64;
  var $i295: i64;
  var $i296: i64;
  var $p297: ref;
  var $i298: i8;
  var $i299: i32;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $p303: ref;
  var $i304: i64;
  var $i305: i64;
  var $p306: ref;
  var $p307: ref;
  var $p308: ref;
  var $p309: ref;
  var $i310: i64;
  var $i311: i64;
  var $p312: ref;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i64;
  var $i317: i64;
  var $i318: i64;
  var $i319: i64;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $i323: i64;
  var $i324: i64;
  var $i325: i64;
  var $i326: i64;
  var $p327: ref;
  var $p328: ref;
  var $p329: ref;
  var $p330: ref;
  var $i331: i64;
  var $i332: i64;
  var $p333: ref;
  var $i334: i32;
  var $i335: i64;
  var $i336: i64;
  var $i337: i64;
  var $i338: i64;
  var $i339: i64;
  var $i340: i64;
  var $p341: ref;
  var $p342: ref;
  var $p343: ref;
  var $i344: i64;
  var $i345: i64;
  var $p346: ref;
  var $i347: i32;
  var $i348: i32;
  var $p349: ref;
  var $i350: i64;
  var $i351: i64;
  var $p352: ref;
  var $p353: ref;
  var $p354: ref;
  var $p355: ref;
  var $i356: i64;
  var $i357: i64;
  var $p358: ref;
  var $i359: i32;
  var $i360: i64;
  var $i361: i64;
  var $i362: i64;
  var $i363: i64;
  var $i364: i64;
  var $i365: i64;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $i369: i64;
  var $i370: i64;
  var $p371: ref;
  var $i372: i8;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $p379: ref;
  var $i380: i64;
  var $i381: i64;
  var $p382: ref;
  var $i383: i32;
  var $i384: i64;
  var $i385: i64;
  var $i386: i64;
  var $i387: i64;
  var $i388: i64;
  var $i389: i64;
  var $p390: ref;
  var $p391: ref;
  var $p392: ref;
  var $i393: i64;
  var $i394: i64;
  var $p395: ref;
  var $i396: i8;
  var $i397: i32;
  var $i398: i64;
  var $i399: i64;
  var $p400: ref;
  var $p401: ref;
  var $p402: ref;
  var $p403: ref;
  var $i404: i64;
  var $i405: i64;
  var $p406: ref;
  var $i407: i32;
  var $i408: i64;
  var $i409: i64;
  var $i410: i64;
  var $i411: i64;
  var $i412: i64;
  var $i413: i64;
  var $p414: ref;
  var $p415: ref;
  var $p416: ref;
  var $i417: i64;
  var $i418: i64;
  var $p419: ref;
  var $i420: i8;
  var $i421: i32;
  var $i422: i32;
  var $i423: i32;
  var $i424: i64;
  var $i425: i64;
  var $p426: ref;
  var $p427: ref;
  var $p428: ref;
  var $p429: ref;
  var $i430: i64;
  var $i431: i64;
  var $p432: ref;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $i436: i64;
  var $i437: i64;
  var $i438: i64;
  var $p439: ref;
  var $p440: ref;
  var $p441: ref;
  var $i442: i64;
  var $i443: i64;
  var $p444: ref;
  var $i445: i64;
  var $i446: i64;
  var $i447: i64;
  var $i448: i32;
  var $i449: i64;
  var $p450: ref;
  var $i451: i64;
  var $i452: i64;
  var $p453: ref;
  var $p454: ref;
  var $p455: ref;
  var $p456: ref;
  var $i457: i64;
  var $i458: i64;
  var $p459: ref;
  var $i460: i32;
  var $i461: i64;
  var $i462: i64;
  var $i463: i64;
  var $i464: i64;
  var $i465: i64;
  var $i466: i64;
  var $p467: ref;
  var $p468: ref;
  var $p469: ref;
  var $i470: i64;
  var $i471: i64;
  var $p472: ref;
  var $p473: ref;
  var $i474: i64;
  var $p475: ref;
  var $i476: i64;
  var $i477: i64;
  var $p478: ref;
  var $p479: ref;
  var $p480: ref;
  var $p481: ref;
  var $i482: i64;
  var $i483: i64;
  var $p484: ref;
  var $i485: i32;
  var $i486: i64;
  var $i487: i64;
  var $i488: i64;
  var $i489: i64;
  var $i490: i64;
  var $i491: i64;
  var $p492: ref;
  var $p493: ref;
  var $p494: ref;
  var $i495: i64;
  var $i496: i64;
  var $p497: ref;
  var $p498: ref;
  var $i499: i32;
  var $i500: i1;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5647, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.us_data* %0 to i64, !dbg !5112, !verifier.code !5111
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5648, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 376);
  // WARNING: %3 = add i64 %2, 376, !dbg !5116, !verifier.code !5111
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5649, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5649, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !12197, metadata !5110), !dbg !12198, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5652, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5652, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5654, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5654, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5656, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5657, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5660, 5} true;
  assume {:verifier.code 0} true;
  call msleep(20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5661, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := alauda_get_media_status($p0, $p4);
  // WARNING: %12 = call i32 @alauda_get_media_status(%struct.us_data* %0, i8* %5), !dbg !5139, !verifier.code !5111
  call {:cexpr "tmp___7"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5663, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5682, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := printk.ref(.str.18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5683, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := alauda_ack_media($p0);
  // WARNING: %27 = call i32 @alauda_ack_media(%struct.us_data* %0), !dbg !5167, !verifier.code !5111
  call {:cexpr "tmp___8"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5685, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5685, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb14, $bb15;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5664, 7} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6107, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5669, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5670, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  // WARNING: %18 = load i8, i8* %17, align 1, !dbg !5151, !verifier.code !5111
  call {:cexpr "__cil_tmp16"} boogie_si_record_i8($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5671, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  // WARNING: %19 = zext i8 %18 to i32, !dbg !5154, !verifier.code !5111
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5672, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i12, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5672, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5672, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5674, 5} true;
  assume {:verifier.code 0} true;
  $i15 := 1;
  goto $bb13;
$bb12:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  $i15 := $i5;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5652, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i15;
  goto $bb1;
$bb14:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5686, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb15:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5691, 3} true;
  assume {:verifier.code 0} true;
  call msleep(10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5692, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := alauda_get_media_status($p0, $p4);
  // WARNING: %32 = call i32 @alauda_get_media_status(%struct.us_data* %0, i8* %5), !dbg !5177, !verifier.code !5111
  call {:cexpr "tmp___9"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5694, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5694, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5695, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb18:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5700, 22} true;
  assume {:verifier.code 0} true;
  $p21 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5701, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  // WARNING: %38 = load i8, i8* %37, align 1, !dbg !5189, !verifier.code !5111
  call {:cexpr "__cil_tmp19"} boogie_si_record_i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5702, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  // WARNING: %39 = zext i8 %38 to i32, !dbg !5192, !verifier.code !5111
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5703, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5703, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5705, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := printk.ref(.str.19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5707, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb21:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5713, 14} true;
  assume {:verifier.code 0} true;
  call $i26 := alauda_get_media_signature($p0, $p4);
  // WARNING: %45 = call i32 @alauda_get_media_signature(%struct.us_data* %0, i8* %5), !dbg !5202, !verifier.code !5111
  call {:cexpr "tmp___10"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5715, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5715, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5716, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb24:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5721, 22} true;
  assume {:verifier.code 0} true;
  $p28 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5722, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  // WARNING: %51 = load i8, i8* %50, align 1, !dbg !5215, !verifier.code !5111
  call {:cexpr "__cil_tmp22"} boogie_si_record_i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5723, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  // WARNING: %52 = zext i8 %51 to i32, !dbg !5218, !verifier.code !5111
  call {:cexpr "__cil_tmp23"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5724, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5725, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  // WARNING: %54 = load i8, i8* %53, align 1, !dbg !5224, !verifier.code !5111
  call {:cexpr "__cil_tmp25"} boogie_si_record_i8($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5726, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  // WARNING: %55 = zext i8 %54 to i32, !dbg !5227, !verifier.code !5111
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5727, 22} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5728, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  // WARNING: %57 = load i8, i8* %56, align 1, !dbg !5233, !verifier.code !5111
  call {:cexpr "__cil_tmp28"} boogie_si_record_i8($i35);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5729, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  // WARNING: %58 = zext i8 %57 to i32, !dbg !5236, !verifier.code !5111
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5730, 22} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5731, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i8($M.0, $p37);
  // WARNING: %60 = load i8, i8* %59, align 1, !dbg !5242, !verifier.code !5111
  call {:cexpr "__cil_tmp31"} boogie_si_record_i8($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5732, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  // WARNING: %61 = zext i8 %60 to i32, !dbg !5245, !verifier.code !5111
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5733, 3} true;
  assume {:verifier.code 0} true;
  call $i40 := printk.ref.i32.i32.i32.i32(.str.20, $i30, $i33, $i36, $i39);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5735, 22} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5736, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  // WARNING: %64 = load i8, i8* %63, align 1, !dbg !5252, !verifier.code !5111
  call {:cexpr "__cil_tmp34"} boogie_si_record_i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5737, 16} true;
  assume {:verifier.code 0} true;
  call $p43 := alauda_card_find_id($i42);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5741, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($0.ref);
  // WARNING: %66 = ptrtoint i8* null to i64, !dbg !5260, !verifier.code !5111
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5742, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p43);
  // WARNING: %67 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5264, !verifier.code !5111
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5743, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i64($i45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5743, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5745, 24} true;
  assume {:verifier.code 0} true;
  $p47 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5746, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  // WARNING: %71 = load i8, i8* %70, align 1, !dbg !5275, !verifier.code !5111
  call {:cexpr "__cil_tmp39"} boogie_si_record_i8($i48);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5747, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  // WARNING: %72 = zext i8 %71 to i32, !dbg !5278, !verifier.code !5111
  call {:cexpr "__cil_tmp40"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5748, 24} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5749, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p50);
  // WARNING: %74 = load i8, i8* %73, align 1, !dbg !5284, !verifier.code !5111
  call {:cexpr "__cil_tmp42"} boogie_si_record_i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5750, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  // WARNING: %75 = zext i8 %74 to i32, !dbg !5287, !verifier.code !5111
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5751, 24} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5752, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i8($M.0, $p53);
  // WARNING: %77 = load i8, i8* %76, align 1, !dbg !5293, !verifier.code !5111
  call {:cexpr "__cil_tmp45"} boogie_si_record_i8($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5753, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i54);
  // WARNING: %78 = zext i8 %77 to i32, !dbg !5296, !verifier.code !5111
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5754, 24} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5755, 19} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p56);
  // WARNING: %80 = load i8, i8* %79, align 1, !dbg !5302, !verifier.code !5111
  call {:cexpr "__cil_tmp48"} boogie_si_record_i8($i57);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5756, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i57);
  // WARNING: %81 = zext i8 %80 to i32, !dbg !5305, !verifier.code !5111
  call {:cexpr "__cil_tmp49"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5757, 5} true;
  assume {:verifier.code 0} true;
  call $i59 := printk.ref.i32.i32.i32.i32(.str.21, $i49, $i52, $i55, $i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5760, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb27:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5766, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p0);
  // WARNING: %85 = ptrtoint %struct.us_data* %0 to i64, !dbg !5310, !verifier.code !5111
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5767, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 192);
  // WARNING: %86 = add i64 %85, 192, !dbg !5314, !verifier.code !5111
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5768, 19} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5768, 17} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5769, 17} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5769, 17} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5770, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p65);
  // WARNING: %91 = ptrtoint %struct.scsi_device* %90 to i64, !dbg !5324, !verifier.code !5111
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5771, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i64($i66, 156);
  // WARNING: %92 = add i64 %91, 156, !dbg !5327, !verifier.code !5111
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5772, 19} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i67);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5772, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  // WARNING: %94 = load i32, i32* %93, align 4, !dbg !5331, !verifier.code !5111
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5773, 17} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5773, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $mul.i64($i70, 48);
  // WARNING: %96 = mul i64 %95, 48, !dbg !5335, !verifier.code !5111
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i71);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5774, 19} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64(0, $i71);
  // WARNING: %97 = add i64 0, %96, !dbg !5338, !verifier.code !5111
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5775, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p0);
  // WARNING: %98 = ptrtoint %struct.us_data* %0 to i64, !dbg !5341, !verifier.code !5111
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5776, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 648);
  // WARNING: %99 = add i64 %98, 648, !dbg !5344, !verifier.code !5111
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5777, 19} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5777, 17} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5778, 17} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5779, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p77);
  // WARNING: %103 = ptrtoint %struct.alauda_info* %102 to i64, !dbg !5354, !verifier.code !5111
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5780, 29} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78, $i72);
  // WARNING: %104 = add i64 %103, %97, !dbg !5357, !verifier.code !5111
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5781, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p43);
  // WARNING: %105 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5360, !verifier.code !5111
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5782, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 1);
  // WARNING: %106 = add i64 %105, 1, !dbg !5363, !verifier.code !5111
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5783, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5783, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  // WARNING: %108 = load i8, i8* %107, align 1, !dbg !5367, !verifier.code !5111
  call {:cexpr "__cil_tmp67"} boogie_si_record_i8($i83);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5784, 17} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  // WARNING: %109 = zext i8 %108 to i32, !dbg !5370, !verifier.code !5111
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5785, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $shl.i32(1, $i84);
  // WARNING: %110 = shl i32 1, %109, !dbg !5373, !verifier.code !5111
  call {:cexpr "__cil_tmp69"} boogie_si_record_i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5786, 37} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5786, 5} true;
  assume {:verifier.code 0} true;
  $p87 := $i2p.i64.ref($i79);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5786, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5787, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p0);
  // WARNING: %113 = ptrtoint %struct.us_data* %0 to i64, !dbg !5379, !verifier.code !5111
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5788, 29} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64($i88, 192);
  // WARNING: %114 = add i64 %113, 192, !dbg !5382, !verifier.code !5111
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5789, 19} true;
  assume {:verifier.code 0} true;
  $p90 := $i2p.i64.ref($i89);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5789, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5790, 17} true;
  assume {:verifier.code 0} true;
  $p92 := $bitcast.ref.ref($p91);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5790, 17} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5791, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p93);
  // WARNING: %119 = ptrtoint %struct.scsi_device* %118 to i64, !dbg !5392, !verifier.code !5111
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i94);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5792, 29} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 156);
  // WARNING: %120 = add i64 %119, 156, !dbg !5395, !verifier.code !5111
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5793, 19} true;
  assume {:verifier.code 0} true;
  $p96 := $i2p.i64.ref($i95);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5793, 17} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  // WARNING: %122 = load i32, i32* %121, align 4, !dbg !5399, !verifier.code !5111
  call {:cexpr "__cil_tmp76"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5794, 17} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i32.i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5794, 29} true;
  assume {:verifier.code 0} true;
  $i99 := $mul.i64($i98, 48);
  // WARNING: %124 = mul i64 %123, 48, !dbg !5403, !verifier.code !5111
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5795, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64(0, $i99);
  // WARNING: %125 = add i64 0, %124, !dbg !5406, !verifier.code !5111
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5796, 17} true;
  assume {:verifier.code 0} true;
  $i101 := $p2i.ref.i64($p0);
  // WARNING: %126 = ptrtoint %struct.us_data* %0 to i64, !dbg !5409, !verifier.code !5111
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5797, 29} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i101, 648);
  // WARNING: %127 = add i64 %126, 648, !dbg !5412, !verifier.code !5111
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5798, 19} true;
  assume {:verifier.code 0} true;
  $p103 := $i2p.i64.ref($i102);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5798, 17} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5799, 17} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5800, 17} true;
  assume {:verifier.code 0} true;
  $i106 := $p2i.ref.i64($p105);
  // WARNING: %131 = ptrtoint %struct.alauda_info* %130 to i64, !dbg !5422, !verifier.code !5111
  call {:cexpr "__cil_tmp83"} boogie_si_record_i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5801, 29} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i64($i106, $i100);
  // WARNING: %132 = add i64 %131, %125, !dbg !5425, !verifier.code !5111
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5802, 19} true;
  assume {:verifier.code 0} true;
  $p108 := $i2p.i64.ref($i107);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5802, 17} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i64($M.0, $p108);
  // WARNING: %134 = load i64, i64* %133, align 8, !dbg !5429, !verifier.code !5111
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5803, 29} true;
  assume {:verifier.code 0} true;
  $i110 := $lshr.i64($i109, 20);
  // WARNING: %135 = lshr i64 %134, 20, !dbg !5432, !verifier.code !5111
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5804, 3} true;
  assume {:verifier.code 0} true;
  call $i111 := printk.ref.i64(.str.22, $i110);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5805, 17} true;
  assume {:verifier.code 0} true;
  $i112 := $p2i.ref.i64($p0);
  // WARNING: %137 = ptrtoint %struct.us_data* %0 to i64, !dbg !5436, !verifier.code !5111
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5806, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i64($i112, 192);
  // WARNING: %138 = add i64 %137, 192, !dbg !5439, !verifier.code !5111
  call {:cexpr "__cil_tmp88"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5807, 19} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i113);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5807, 17} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5808, 17} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p115);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5808, 17} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5809, 17} true;
  assume {:verifier.code 0} true;
  $i118 := $p2i.ref.i64($p117);
  // WARNING: %143 = ptrtoint %struct.scsi_device* %142 to i64, !dbg !5449, !verifier.code !5111
  call {:cexpr "__cil_tmp91"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5810, 29} true;
  assume {:verifier.code 0} true;
  $i119 := $add.i64($i118, 156);
  // WARNING: %144 = add i64 %143, 156, !dbg !5452, !verifier.code !5111
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5811, 19} true;
  assume {:verifier.code 0} true;
  $p120 := $i2p.i64.ref($i119);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5811, 17} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i32($M.0, $p120);
  // WARNING: %146 = load i32, i32* %145, align 4, !dbg !5456, !verifier.code !5111
  call {:cexpr "__cil_tmp93"} boogie_si_record_i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5812, 17} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i32.i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5812, 29} true;
  assume {:verifier.code 0} true;
  $i123 := $mul.i64($i122, 48);
  // WARNING: %148 = mul i64 %147, 48, !dbg !5460, !verifier.code !5111
  call {:cexpr "__cil_tmp94"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5813, 29} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i64($i123, 28);
  // WARNING: %149 = add i64 %148, 28, !dbg !5463, !verifier.code !5111
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i124);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5814, 19} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64(0, $i124);
  // WARNING: %150 = add i64 0, %149, !dbg !5466, !verifier.code !5111
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5815, 17} true;
  assume {:verifier.code 0} true;
  $i126 := $p2i.ref.i64($p0);
  // WARNING: %151 = ptrtoint %struct.us_data* %0 to i64, !dbg !5469, !verifier.code !5111
  call {:cexpr "__cil_tmp97"} boogie_si_record_i64($i126);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5816, 29} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i64($i126, 648);
  // WARNING: %152 = add i64 %151, 648, !dbg !5472, !verifier.code !5111
  call {:cexpr "__cil_tmp98"} boogie_si_record_i64($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5817, 19} true;
  assume {:verifier.code 0} true;
  $p128 := $i2p.i64.ref($i127);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5817, 17} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5818, 18} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5819, 18} true;
  assume {:verifier.code 0} true;
  $i131 := $p2i.ref.i64($p130);
  // WARNING: %156 = ptrtoint %struct.alauda_info* %155 to i64, !dbg !5482, !verifier.code !5111
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5820, 31} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i64($i131, $i125);
  // WARNING: %157 = add i64 %156, %150, !dbg !5485, !verifier.code !5111
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5821, 18} true;
  assume {:verifier.code 0} true;
  $i133 := $p2i.ref.i64($p43);
  // WARNING: %158 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5488, !verifier.code !5111
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i133);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5822, 31} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i64($i133, 2);
  // WARNING: %159 = add i64 %158, 2, !dbg !5491, !verifier.code !5111
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5823, 40} true;
  assume {:verifier.code 0} true;
  $p135 := $i2p.i64.ref($i134);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5823, 38} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5823, 5} true;
  assume {:verifier.code 0} true;
  $p137 := $i2p.i64.ref($i132);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5823, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p137, $i136);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5824, 18} true;
  assume {:verifier.code 0} true;
  $i138 := $p2i.ref.i64($p0);
  // WARNING: %163 = ptrtoint %struct.us_data* %0 to i64, !dbg !5498, !verifier.code !5111
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i138);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5825, 31} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i64($i138, 192);
  // WARNING: %164 = add i64 %163, 192, !dbg !5501, !verifier.code !5111
  call {:cexpr "__cil_tmp106"} boogie_si_record_i64($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5826, 20} true;
  assume {:verifier.code 0} true;
  $p140 := $i2p.i64.ref($i139);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5826, 18} true;
  assume {:verifier.code 0} true;
  $p141 := $load.ref($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5827, 18} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p141);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5827, 18} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5828, 18} true;
  assume {:verifier.code 0} true;
  $i144 := $p2i.ref.i64($p143);
  // WARNING: %169 = ptrtoint %struct.scsi_device* %168 to i64, !dbg !5511, !verifier.code !5111
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5829, 31} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i64($i144, 156);
  // WARNING: %170 = add i64 %169, 156, !dbg !5514, !verifier.code !5111
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5830, 20} true;
  assume {:verifier.code 0} true;
  $p146 := $i2p.i64.ref($i145);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5830, 18} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i32($M.0, $p146);
  // WARNING: %172 = load i32, i32* %171, align 4, !dbg !5518, !verifier.code !5111
  call {:cexpr "__cil_tmp111"} boogie_si_record_i32($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5831, 18} true;
  assume {:verifier.code 0} true;
  $i148 := $zext.i32.i64($i147);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5831, 31} true;
  assume {:verifier.code 0} true;
  $i149 := $mul.i64($i148, 48);
  // WARNING: %174 = mul i64 %173, 48, !dbg !5522, !verifier.code !5111
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5832, 31} true;
  assume {:verifier.code 0} true;
  $i150 := $add.i64($i149, 29);
  // WARNING: %175 = add i64 %174, 29, !dbg !5525, !verifier.code !5111
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i150);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5833, 20} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i64(0, $i150);
  // WARNING: %176 = add i64 0, %175, !dbg !5528, !verifier.code !5111
  call {:cexpr "__cil_tmp114"} boogie_si_record_i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5834, 18} true;
  assume {:verifier.code 0} true;
  $i152 := $p2i.ref.i64($p0);
  // WARNING: %177 = ptrtoint %struct.us_data* %0 to i64, !dbg !5531, !verifier.code !5111
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i152);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5835, 31} true;
  assume {:verifier.code 0} true;
  $i153 := $add.i64($i152, 648);
  // WARNING: %178 = add i64 %177, 648, !dbg !5534, !verifier.code !5111
  call {:cexpr "__cil_tmp116"} boogie_si_record_i64($i153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5836, 20} true;
  assume {:verifier.code 0} true;
  $p154 := $i2p.i64.ref($i153);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5836, 18} true;
  assume {:verifier.code 0} true;
  $p155 := $load.ref($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5837, 18} true;
  assume {:verifier.code 0} true;
  $p156 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5838, 18} true;
  assume {:verifier.code 0} true;
  $i157 := $p2i.ref.i64($p156);
  // WARNING: %182 = ptrtoint %struct.alauda_info* %181 to i64, !dbg !5544, !verifier.code !5111
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i157);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5839, 31} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i64($i157, $i151);
  // WARNING: %183 = add i64 %182, %176, !dbg !5547, !verifier.code !5111
  call {:cexpr "__cil_tmp120"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5840, 18} true;
  assume {:verifier.code 0} true;
  $i159 := $p2i.ref.i64($p43);
  // WARNING: %184 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5550, !verifier.code !5111
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5841, 31} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i64($i159, 3);
  // WARNING: %185 = add i64 %184, 3, !dbg !5553, !verifier.code !5111
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5842, 40} true;
  assume {:verifier.code 0} true;
  $p161 := $i2p.i64.ref($i160);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5842, 38} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i8($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5842, 5} true;
  assume {:verifier.code 0} true;
  $p163 := $i2p.i64.ref($i158);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5842, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p163, $i162);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5843, 18} true;
  assume {:verifier.code 0} true;
  $i164 := $p2i.ref.i64($p0);
  // WARNING: %189 = ptrtoint %struct.us_data* %0 to i64, !dbg !5560, !verifier.code !5111
  call {:cexpr "__cil_tmp123"} boogie_si_record_i64($i164);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5844, 31} true;
  assume {:verifier.code 0} true;
  $i165 := $add.i64($i164, 192);
  // WARNING: %190 = add i64 %189, 192, !dbg !5563, !verifier.code !5111
  call {:cexpr "__cil_tmp124"} boogie_si_record_i64($i165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5845, 20} true;
  assume {:verifier.code 0} true;
  $p166 := $i2p.i64.ref($i165);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5845, 18} true;
  assume {:verifier.code 0} true;
  $p167 := $load.ref($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5846, 18} true;
  assume {:verifier.code 0} true;
  $p168 := $bitcast.ref.ref($p167);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5846, 18} true;
  assume {:verifier.code 0} true;
  $p169 := $load.ref($M.0, $p168);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5847, 18} true;
  assume {:verifier.code 0} true;
  $i170 := $p2i.ref.i64($p169);
  // WARNING: %195 = ptrtoint %struct.scsi_device* %194 to i64, !dbg !5573, !verifier.code !5111
  call {:cexpr "__cil_tmp127"} boogie_si_record_i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5848, 31} true;
  assume {:verifier.code 0} true;
  $i171 := $add.i64($i170, 156);
  // WARNING: %196 = add i64 %195, 156, !dbg !5576, !verifier.code !5111
  call {:cexpr "__cil_tmp128"} boogie_si_record_i64($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5849, 20} true;
  assume {:verifier.code 0} true;
  $p172 := $i2p.i64.ref($i171);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5849, 18} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i32($M.0, $p172);
  // WARNING: %198 = load i32, i32* %197, align 4, !dbg !5580, !verifier.code !5111
  call {:cexpr "__cil_tmp129"} boogie_si_record_i32($i173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5850, 18} true;
  assume {:verifier.code 0} true;
  $i174 := $zext.i32.i64($i173);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5850, 31} true;
  assume {:verifier.code 0} true;
  $i175 := $mul.i64($i174, 48);
  // WARNING: %200 = mul i64 %199, 48, !dbg !5584, !verifier.code !5111
  call {:cexpr "__cil_tmp130"} boogie_si_record_i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5851, 31} true;
  assume {:verifier.code 0} true;
  $i176 := $add.i64($i175, 30);
  // WARNING: %201 = add i64 %200, 30, !dbg !5587, !verifier.code !5111
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5852, 20} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i64(0, $i176);
  // WARNING: %202 = add i64 0, %201, !dbg !5590, !verifier.code !5111
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i177);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5853, 18} true;
  assume {:verifier.code 0} true;
  $i178 := $p2i.ref.i64($p0);
  // WARNING: %203 = ptrtoint %struct.us_data* %0 to i64, !dbg !5593, !verifier.code !5111
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i178);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5854, 31} true;
  assume {:verifier.code 0} true;
  $i179 := $add.i64($i178, 648);
  // WARNING: %204 = add i64 %203, 648, !dbg !5596, !verifier.code !5111
  call {:cexpr "__cil_tmp134"} boogie_si_record_i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5855, 20} true;
  assume {:verifier.code 0} true;
  $p180 := $i2p.i64.ref($i179);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5855, 18} true;
  assume {:verifier.code 0} true;
  $p181 := $load.ref($M.0, $p180);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5856, 18} true;
  assume {:verifier.code 0} true;
  $p182 := $bitcast.ref.ref($p181);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5857, 18} true;
  assume {:verifier.code 0} true;
  $i183 := $p2i.ref.i64($p182);
  // WARNING: %208 = ptrtoint %struct.alauda_info* %207 to i64, !dbg !5606, !verifier.code !5111
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i183);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5858, 31} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i64($i183, $i177);
  // WARNING: %209 = add i64 %208, %202, !dbg !5609, !verifier.code !5111
  call {:cexpr "__cil_tmp138"} boogie_si_record_i64($i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5859, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $p2i.ref.i64($p43);
  // WARNING: %210 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5612, !verifier.code !5111
  call {:cexpr "__cil_tmp139"} boogie_si_record_i64($i185);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5860, 31} true;
  assume {:verifier.code 0} true;
  $i186 := $add.i64($i185, 4);
  // WARNING: %211 = add i64 %210, 4, !dbg !5615, !verifier.code !5111
  call {:cexpr "__cil_tmp140"} boogie_si_record_i64($i186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5861, 40} true;
  assume {:verifier.code 0} true;
  $p187 := $i2p.i64.ref($i186);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5861, 38} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i8($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5861, 5} true;
  assume {:verifier.code 0} true;
  $p189 := $i2p.i64.ref($i184);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5861, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p189, $i188);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5862, 18} true;
  assume {:verifier.code 0} true;
  $i190 := $p2i.ref.i64($p0);
  // WARNING: %215 = ptrtoint %struct.us_data* %0 to i64, !dbg !5622, !verifier.code !5111
  call {:cexpr "__cil_tmp141"} boogie_si_record_i64($i190);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5863, 31} true;
  assume {:verifier.code 0} true;
  $i191 := $add.i64($i190, 192);
  // WARNING: %216 = add i64 %215, 192, !dbg !5625, !verifier.code !5111
  call {:cexpr "__cil_tmp142"} boogie_si_record_i64($i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5864, 20} true;
  assume {:verifier.code 0} true;
  $p192 := $i2p.i64.ref($i191);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5864, 18} true;
  assume {:verifier.code 0} true;
  $p193 := $load.ref($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5865, 18} true;
  assume {:verifier.code 0} true;
  $p194 := $bitcast.ref.ref($p193);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5865, 18} true;
  assume {:verifier.code 0} true;
  $p195 := $load.ref($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5866, 18} true;
  assume {:verifier.code 0} true;
  $i196 := $p2i.ref.i64($p195);
  // WARNING: %221 = ptrtoint %struct.scsi_device* %220 to i64, !dbg !5635, !verifier.code !5111
  call {:cexpr "__cil_tmp145"} boogie_si_record_i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5867, 31} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i64($i196, 156);
  // WARNING: %222 = add i64 %221, 156, !dbg !5638, !verifier.code !5111
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5868, 20} true;
  assume {:verifier.code 0} true;
  $p198 := $i2p.i64.ref($i197);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5868, 18} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i32($M.0, $p198);
  // WARNING: %224 = load i32, i32* %223, align 4, !dbg !5642, !verifier.code !5111
  call {:cexpr "__cil_tmp147"} boogie_si_record_i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5869, 18} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i32.i64($i199);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5869, 31} true;
  assume {:verifier.code 0} true;
  $i201 := $mul.i64($i200, 48);
  // WARNING: %226 = mul i64 %225, 48, !dbg !5646, !verifier.code !5111
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i201);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5870, 31} true;
  assume {:verifier.code 0} true;
  $i202 := $add.i64($i201, 8);
  // WARNING: %227 = add i64 %226, 8, !dbg !5649, !verifier.code !5111
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i202);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5871, 20} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i64(0, $i202);
  // WARNING: %228 = add i64 0, %227, !dbg !5652, !verifier.code !5111
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i203);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5872, 18} true;
  assume {:verifier.code 0} true;
  $i204 := $p2i.ref.i64($p0);
  // WARNING: %229 = ptrtoint %struct.us_data* %0 to i64, !dbg !5655, !verifier.code !5111
  call {:cexpr "__cil_tmp151"} boogie_si_record_i64($i204);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5873, 31} true;
  assume {:verifier.code 0} true;
  $i205 := $add.i64($i204, 648);
  // WARNING: %230 = add i64 %229, 648, !dbg !5658, !verifier.code !5111
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5874, 20} true;
  assume {:verifier.code 0} true;
  $p206 := $i2p.i64.ref($i205);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5874, 18} true;
  assume {:verifier.code 0} true;
  $p207 := $load.ref($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5875, 18} true;
  assume {:verifier.code 0} true;
  $p208 := $bitcast.ref.ref($p207);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5876, 18} true;
  assume {:verifier.code 0} true;
  $i209 := $p2i.ref.i64($p208);
  // WARNING: %234 = ptrtoint %struct.alauda_info* %233 to i64, !dbg !5668, !verifier.code !5111
  call {:cexpr "__cil_tmp155"} boogie_si_record_i64($i209);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5877, 31} true;
  assume {:verifier.code 0} true;
  $i210 := $add.i64($i209, $i203);
  // WARNING: %235 = add i64 %234, %228, !dbg !5671, !verifier.code !5111
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5878, 18} true;
  assume {:verifier.code 0} true;
  $i211 := $p2i.ref.i64($p43);
  // WARNING: %236 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5674, !verifier.code !5111
  call {:cexpr "__cil_tmp157"} boogie_si_record_i64($i211);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5879, 31} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i64($i211, 2);
  // WARNING: %237 = add i64 %236, 2, !dbg !5677, !verifier.code !5111
  call {:cexpr "__cil_tmp158"} boogie_si_record_i64($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5880, 20} true;
  assume {:verifier.code 0} true;
  $p213 := $i2p.i64.ref($i212);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5880, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i8($M.0, $p213);
  // WARNING: %239 = load i8, i8* %238, align 1, !dbg !5681, !verifier.code !5111
  call {:cexpr "__cil_tmp159"} boogie_si_record_i8($i214);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5881, 18} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i8.i32($i214);
  // WARNING: %240 = zext i8 %239 to i32, !dbg !5684, !verifier.code !5111
  call {:cexpr "__cil_tmp160"} boogie_si_record_i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5882, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $shl.i32(1, $i215);
  // WARNING: %241 = shl i32 1, %240, !dbg !5687, !verifier.code !5111
  call {:cexpr "__cil_tmp161"} boogie_si_record_i32($i216);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5883, 5} true;
  assume {:verifier.code 0} true;
  $p217 := $i2p.i64.ref($i210);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5883, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p217, $i216);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5884, 18} true;
  assume {:verifier.code 0} true;
  $i218 := $p2i.ref.i64($p0);
  // WARNING: %243 = ptrtoint %struct.us_data* %0 to i64, !dbg !5692, !verifier.code !5111
  call {:cexpr "__cil_tmp162"} boogie_si_record_i64($i218);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5885, 31} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i64($i218, 192);
  // WARNING: %244 = add i64 %243, 192, !dbg !5695, !verifier.code !5111
  call {:cexpr "__cil_tmp163"} boogie_si_record_i64($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5886, 20} true;
  assume {:verifier.code 0} true;
  $p220 := $i2p.i64.ref($i219);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5886, 18} true;
  assume {:verifier.code 0} true;
  $p221 := $load.ref($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5887, 18} true;
  assume {:verifier.code 0} true;
  $p222 := $bitcast.ref.ref($p221);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5887, 18} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5888, 18} true;
  assume {:verifier.code 0} true;
  $i224 := $p2i.ref.i64($p223);
  // WARNING: %249 = ptrtoint %struct.scsi_device* %248 to i64, !dbg !5705, !verifier.code !5111
  call {:cexpr "__cil_tmp166"} boogie_si_record_i64($i224);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5889, 31} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i64($i224, 156);
  // WARNING: %250 = add i64 %249, 156, !dbg !5708, !verifier.code !5111
  call {:cexpr "__cil_tmp167"} boogie_si_record_i64($i225);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5890, 20} true;
  assume {:verifier.code 0} true;
  $p226 := $i2p.i64.ref($i225);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5890, 18} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i32($M.0, $p226);
  // WARNING: %252 = load i32, i32* %251, align 4, !dbg !5712, !verifier.code !5111
  call {:cexpr "__cil_tmp168"} boogie_si_record_i32($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5891, 18} true;
  assume {:verifier.code 0} true;
  $i228 := $zext.i32.i64($i227);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5891, 31} true;
  assume {:verifier.code 0} true;
  $i229 := $mul.i64($i228, 48);
  // WARNING: %254 = mul i64 %253, 48, !dbg !5716, !verifier.code !5111
  call {:cexpr "__cil_tmp169"} boogie_si_record_i64($i229);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5892, 31} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i64($i229, 12);
  // WARNING: %255 = add i64 %254, 12, !dbg !5719, !verifier.code !5111
  call {:cexpr "__cil_tmp170"} boogie_si_record_i64($i230);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5893, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i64(0, $i230);
  // WARNING: %256 = add i64 0, %255, !dbg !5722, !verifier.code !5111
  call {:cexpr "__cil_tmp171"} boogie_si_record_i64($i231);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5894, 18} true;
  assume {:verifier.code 0} true;
  $i232 := $p2i.ref.i64($p0);
  // WARNING: %257 = ptrtoint %struct.us_data* %0 to i64, !dbg !5725, !verifier.code !5111
  call {:cexpr "__cil_tmp172"} boogie_si_record_i64($i232);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5895, 31} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i64($i232, 648);
  // WARNING: %258 = add i64 %257, 648, !dbg !5728, !verifier.code !5111
  call {:cexpr "__cil_tmp173"} boogie_si_record_i64($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5896, 20} true;
  assume {:verifier.code 0} true;
  $p234 := $i2p.i64.ref($i233);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5896, 18} true;
  assume {:verifier.code 0} true;
  $p235 := $load.ref($M.0, $p234);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5897, 18} true;
  assume {:verifier.code 0} true;
  $p236 := $bitcast.ref.ref($p235);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5898, 18} true;
  assume {:verifier.code 0} true;
  $i237 := $p2i.ref.i64($p236);
  // WARNING: %262 = ptrtoint %struct.alauda_info* %261 to i64, !dbg !5738, !verifier.code !5111
  call {:cexpr "__cil_tmp176"} boogie_si_record_i64($i237);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5899, 31} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i64($i237, $i231);
  // WARNING: %263 = add i64 %262, %256, !dbg !5741, !verifier.code !5111
  call {:cexpr "__cil_tmp177"} boogie_si_record_i64($i238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5900, 18} true;
  assume {:verifier.code 0} true;
  $i239 := $p2i.ref.i64($p43);
  // WARNING: %264 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5744, !verifier.code !5111
  call {:cexpr "__cil_tmp178"} boogie_si_record_i64($i239);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5901, 31} true;
  assume {:verifier.code 0} true;
  $i240 := $add.i64($i239, 3);
  // WARNING: %265 = add i64 %264, 3, !dbg !5747, !verifier.code !5111
  call {:cexpr "__cil_tmp179"} boogie_si_record_i64($i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5902, 20} true;
  assume {:verifier.code 0} true;
  $p241 := $i2p.i64.ref($i240);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5902, 18} true;
  assume {:verifier.code 0} true;
  $i242 := $load.i8($M.0, $p241);
  // WARNING: %267 = load i8, i8* %266, align 1, !dbg !5751, !verifier.code !5111
  call {:cexpr "__cil_tmp180"} boogie_si_record_i8($i242);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5903, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $zext.i8.i32($i242);
  // WARNING: %268 = zext i8 %267 to i32, !dbg !5754, !verifier.code !5111
  call {:cexpr "__cil_tmp181"} boogie_si_record_i32($i243);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5904, 20} true;
  assume {:verifier.code 0} true;
  $i244 := $shl.i32(1, $i243);
  // WARNING: %269 = shl i32 1, %268, !dbg !5757, !verifier.code !5111
  call {:cexpr "__cil_tmp182"} boogie_si_record_i32($i244);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5905, 5} true;
  assume {:verifier.code 0} true;
  $p245 := $i2p.i64.ref($i238);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5905, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p245, $i244);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5906, 18} true;
  assume {:verifier.code 0} true;
  $i246 := $p2i.ref.i64($p0);
  // WARNING: %271 = ptrtoint %struct.us_data* %0 to i64, !dbg !5762, !verifier.code !5111
  call {:cexpr "__cil_tmp183"} boogie_si_record_i64($i246);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5907, 31} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i64($i246, 192);
  // WARNING: %272 = add i64 %271, 192, !dbg !5765, !verifier.code !5111
  call {:cexpr "__cil_tmp184"} boogie_si_record_i64($i247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5908, 20} true;
  assume {:verifier.code 0} true;
  $p248 := $i2p.i64.ref($i247);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5908, 18} true;
  assume {:verifier.code 0} true;
  $p249 := $load.ref($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5909, 18} true;
  assume {:verifier.code 0} true;
  $p250 := $bitcast.ref.ref($p249);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5909, 18} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5910, 18} true;
  assume {:verifier.code 0} true;
  $i252 := $p2i.ref.i64($p251);
  // WARNING: %277 = ptrtoint %struct.scsi_device* %276 to i64, !dbg !5775, !verifier.code !5111
  call {:cexpr "__cil_tmp187"} boogie_si_record_i64($i252);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5911, 31} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i64($i252, 156);
  // WARNING: %278 = add i64 %277, 156, !dbg !5778, !verifier.code !5111
  call {:cexpr "__cil_tmp188"} boogie_si_record_i64($i253);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5912, 20} true;
  assume {:verifier.code 0} true;
  $p254 := $i2p.i64.ref($i253);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5912, 18} true;
  assume {:verifier.code 0} true;
  $i255 := $load.i32($M.0, $p254);
  // WARNING: %280 = load i32, i32* %279, align 4, !dbg !5782, !verifier.code !5111
  call {:cexpr "__cil_tmp189"} boogie_si_record_i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5913, 18} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i32.i64($i255);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5913, 31} true;
  assume {:verifier.code 0} true;
  $i257 := $mul.i64($i256, 48);
  // WARNING: %282 = mul i64 %281, 48, !dbg !5786, !verifier.code !5111
  call {:cexpr "__cil_tmp190"} boogie_si_record_i64($i257);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5914, 31} true;
  assume {:verifier.code 0} true;
  $i258 := $add.i64($i257, 20);
  // WARNING: %283 = add i64 %282, 20, !dbg !5789, !verifier.code !5111
  call {:cexpr "__cil_tmp191"} boogie_si_record_i64($i258);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5915, 20} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i64(0, $i258);
  // WARNING: %284 = add i64 0, %283, !dbg !5792, !verifier.code !5111
  call {:cexpr "__cil_tmp192"} boogie_si_record_i64($i259);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5916, 18} true;
  assume {:verifier.code 0} true;
  $i260 := $p2i.ref.i64($p0);
  // WARNING: %285 = ptrtoint %struct.us_data* %0 to i64, !dbg !5795, !verifier.code !5111
  call {:cexpr "__cil_tmp193"} boogie_si_record_i64($i260);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5917, 31} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i64($i260, 648);
  // WARNING: %286 = add i64 %285, 648, !dbg !5798, !verifier.code !5111
  call {:cexpr "__cil_tmp194"} boogie_si_record_i64($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5918, 20} true;
  assume {:verifier.code 0} true;
  $p262 := $i2p.i64.ref($i261);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5918, 18} true;
  assume {:verifier.code 0} true;
  $p263 := $load.ref($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5919, 18} true;
  assume {:verifier.code 0} true;
  $p264 := $bitcast.ref.ref($p263);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5920, 18} true;
  assume {:verifier.code 0} true;
  $i265 := $p2i.ref.i64($p264);
  // WARNING: %290 = ptrtoint %struct.alauda_info* %289 to i64, !dbg !5808, !verifier.code !5111
  call {:cexpr "__cil_tmp197"} boogie_si_record_i64($i265);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5921, 31} true;
  assume {:verifier.code 0} true;
  $i266 := $add.i64($i265, $i259);
  // WARNING: %291 = add i64 %290, %284, !dbg !5811, !verifier.code !5111
  call {:cexpr "__cil_tmp198"} boogie_si_record_i64($i266);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5922, 18} true;
  assume {:verifier.code 0} true;
  $i267 := $p2i.ref.i64($p43);
  // WARNING: %292 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5814, !verifier.code !5111
  call {:cexpr "__cil_tmp199"} boogie_si_record_i64($i267);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5923, 31} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i64($i267, 4);
  // WARNING: %293 = add i64 %292, 4, !dbg !5817, !verifier.code !5111
  call {:cexpr "__cil_tmp200"} boogie_si_record_i64($i268);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5924, 20} true;
  assume {:verifier.code 0} true;
  $p269 := $i2p.i64.ref($i268);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5924, 18} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i8($M.0, $p269);
  // WARNING: %295 = load i8, i8* %294, align 1, !dbg !5821, !verifier.code !5111
  call {:cexpr "__cil_tmp201"} boogie_si_record_i8($i270);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5925, 18} true;
  assume {:verifier.code 0} true;
  $i271 := $zext.i8.i32($i270);
  // WARNING: %296 = zext i8 %295 to i32, !dbg !5824, !verifier.code !5111
  call {:cexpr "__cil_tmp202"} boogie_si_record_i32($i271);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5926, 20} true;
  assume {:verifier.code 0} true;
  $i272 := $shl.i32(1, $i271);
  // WARNING: %297 = shl i32 1, %296, !dbg !5827, !verifier.code !5111
  call {:cexpr "__cil_tmp203"} boogie_si_record_i32($i272);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5927, 5} true;
  assume {:verifier.code 0} true;
  $p273 := $i2p.i64.ref($i266);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5927, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p273, $i272);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5928, 18} true;
  assume {:verifier.code 0} true;
  $i274 := $p2i.ref.i64($p0);
  // WARNING: %299 = ptrtoint %struct.us_data* %0 to i64, !dbg !5832, !verifier.code !5111
  call {:cexpr "__cil_tmp204"} boogie_si_record_i64($i274);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5929, 31} true;
  assume {:verifier.code 0} true;
  $i275 := $add.i64($i274, 192);
  // WARNING: %300 = add i64 %299, 192, !dbg !5835, !verifier.code !5111
  call {:cexpr "__cil_tmp205"} boogie_si_record_i64($i275);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5930, 20} true;
  assume {:verifier.code 0} true;
  $p276 := $i2p.i64.ref($i275);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5930, 18} true;
  assume {:verifier.code 0} true;
  $p277 := $load.ref($M.0, $p276);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5931, 18} true;
  assume {:verifier.code 0} true;
  $p278 := $bitcast.ref.ref($p277);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5931, 18} true;
  assume {:verifier.code 0} true;
  $p279 := $load.ref($M.0, $p278);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5932, 18} true;
  assume {:verifier.code 0} true;
  $i280 := $p2i.ref.i64($p279);
  // WARNING: %305 = ptrtoint %struct.scsi_device* %304 to i64, !dbg !5845, !verifier.code !5111
  call {:cexpr "__cil_tmp208"} boogie_si_record_i64($i280);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5933, 31} true;
  assume {:verifier.code 0} true;
  $i281 := $add.i64($i280, 156);
  // WARNING: %306 = add i64 %305, 156, !dbg !5848, !verifier.code !5111
  call {:cexpr "__cil_tmp209"} boogie_si_record_i64($i281);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5934, 20} true;
  assume {:verifier.code 0} true;
  $p282 := $i2p.i64.ref($i281);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5934, 18} true;
  assume {:verifier.code 0} true;
  $i283 := $load.i32($M.0, $p282);
  // WARNING: %308 = load i32, i32* %307, align 4, !dbg !5852, !verifier.code !5111
  call {:cexpr "__cil_tmp210"} boogie_si_record_i32($i283);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5935, 18} true;
  assume {:verifier.code 0} true;
  $i284 := $zext.i32.i64($i283);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5935, 31} true;
  assume {:verifier.code 0} true;
  $i285 := $mul.i64($i284, 48);
  // WARNING: %310 = mul i64 %309, 48, !dbg !5856, !verifier.code !5111
  call {:cexpr "__cil_tmp211"} boogie_si_record_i64($i285);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5936, 31} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i64($i285, 16);
  // WARNING: %311 = add i64 %310, 16, !dbg !5859, !verifier.code !5111
  call {:cexpr "__cil_tmp212"} boogie_si_record_i64($i286);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5937, 20} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i64(0, $i286);
  // WARNING: %312 = add i64 0, %311, !dbg !5862, !verifier.code !5111
  call {:cexpr "__cil_tmp213"} boogie_si_record_i64($i287);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5938, 18} true;
  assume {:verifier.code 0} true;
  $i288 := $p2i.ref.i64($p0);
  // WARNING: %313 = ptrtoint %struct.us_data* %0 to i64, !dbg !5865, !verifier.code !5111
  call {:cexpr "__cil_tmp214"} boogie_si_record_i64($i288);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5939, 31} true;
  assume {:verifier.code 0} true;
  $i289 := $add.i64($i288, 648);
  // WARNING: %314 = add i64 %313, 648, !dbg !5868, !verifier.code !5111
  call {:cexpr "__cil_tmp215"} boogie_si_record_i64($i289);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5940, 20} true;
  assume {:verifier.code 0} true;
  $p290 := $i2p.i64.ref($i289);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5940, 18} true;
  assume {:verifier.code 0} true;
  $p291 := $load.ref($M.0, $p290);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5941, 18} true;
  assume {:verifier.code 0} true;
  $p292 := $bitcast.ref.ref($p291);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5942, 18} true;
  assume {:verifier.code 0} true;
  $i293 := $p2i.ref.i64($p292);
  // WARNING: %318 = ptrtoint %struct.alauda_info* %317 to i64, !dbg !5878, !verifier.code !5111
  call {:cexpr "__cil_tmp218"} boogie_si_record_i64($i293);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5943, 31} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i64($i293, $i287);
  // WARNING: %319 = add i64 %318, %312, !dbg !5881, !verifier.code !5111
  call {:cexpr "__cil_tmp219"} boogie_si_record_i64($i294);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5944, 18} true;
  assume {:verifier.code 0} true;
  $i295 := $p2i.ref.i64($p43);
  // WARNING: %320 = ptrtoint %struct.alauda_card_info* %65 to i64, !dbg !5884, !verifier.code !5111
  call {:cexpr "__cil_tmp220"} boogie_si_record_i64($i295);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5945, 31} true;
  assume {:verifier.code 0} true;
  $i296 := $add.i64($i295, 4);
  // WARNING: %321 = add i64 %320, 4, !dbg !5887, !verifier.code !5111
  call {:cexpr "__cil_tmp221"} boogie_si_record_i64($i296);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5946, 20} true;
  assume {:verifier.code 0} true;
  $p297 := $i2p.i64.ref($i296);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5946, 18} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i8($M.0, $p297);
  // WARNING: %323 = load i8, i8* %322, align 1, !dbg !5891, !verifier.code !5111
  call {:cexpr "__cil_tmp222"} boogie_si_record_i8($i298);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5947, 18} true;
  assume {:verifier.code 0} true;
  $i299 := $zext.i8.i32($i298);
  // WARNING: %324 = zext i8 %323 to i32, !dbg !5894, !verifier.code !5111
  call {:cexpr "__cil_tmp223"} boogie_si_record_i32($i299);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5948, 20} true;
  assume {:verifier.code 0} true;
  $i300 := $shl.i32(1, $i299);
  // WARNING: %325 = shl i32 1, %324, !dbg !5897, !verifier.code !5111
  call {:cexpr "__cil_tmp224"} boogie_si_record_i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5949, 31} true;
  assume {:verifier.code 0} true;
  $i301 := $sdiv.i32($i300, 128);
  // WARNING: %326 = sdiv i32 %325, 128, !dbg !5900, !verifier.code !5111
  call {:cexpr "__cil_tmp225"} boogie_si_record_i32($i301);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5950, 31} true;
  assume {:verifier.code 0} true;
  $i302 := $mul.i32($i301, 125);
  // WARNING: %327 = mul nsw i32 %326, 125, !dbg !5903, !verifier.code !5111
  call {:cexpr "__cil_tmp226"} boogie_si_record_i32($i302);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5951, 5} true;
  assume {:verifier.code 0} true;
  $p303 := $i2p.i64.ref($i294);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5951, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p303, $i302);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5952, 18} true;
  assume {:verifier.code 0} true;
  $i304 := $p2i.ref.i64($p0);
  // WARNING: %329 = ptrtoint %struct.us_data* %0 to i64, !dbg !5908, !verifier.code !5111
  call {:cexpr "__cil_tmp227"} boogie_si_record_i64($i304);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5953, 31} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i64($i304, 192);
  // WARNING: %330 = add i64 %329, 192, !dbg !5911, !verifier.code !5111
  call {:cexpr "__cil_tmp228"} boogie_si_record_i64($i305);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5954, 20} true;
  assume {:verifier.code 0} true;
  $p306 := $i2p.i64.ref($i305);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5954, 18} true;
  assume {:verifier.code 0} true;
  $p307 := $load.ref($M.0, $p306);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5955, 18} true;
  assume {:verifier.code 0} true;
  $p308 := $bitcast.ref.ref($p307);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5955, 18} true;
  assume {:verifier.code 0} true;
  $p309 := $load.ref($M.0, $p308);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5956, 18} true;
  assume {:verifier.code 0} true;
  $i310 := $p2i.ref.i64($p309);
  // WARNING: %335 = ptrtoint %struct.scsi_device* %334 to i64, !dbg !5921, !verifier.code !5111
  call {:cexpr "__cil_tmp231"} boogie_si_record_i64($i310);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5957, 31} true;
  assume {:verifier.code 0} true;
  $i311 := $add.i64($i310, 156);
  // WARNING: %336 = add i64 %335, 156, !dbg !5924, !verifier.code !5111
  call {:cexpr "__cil_tmp232"} boogie_si_record_i64($i311);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5958, 20} true;
  assume {:verifier.code 0} true;
  $p312 := $i2p.i64.ref($i311);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5958, 18} true;
  assume {:verifier.code 0} true;
  $i313 := $load.i32($M.0, $p312);
  // WARNING: %338 = load i32, i32* %337, align 4, !dbg !5928, !verifier.code !5111
  call {:cexpr "__cil_tmp233"} boogie_si_record_i32($i313);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5959, 18} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i32.i64($i313);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5959, 31} true;
  assume {:verifier.code 0} true;
  $i315 := $mul.i64($i314, 48);
  // WARNING: %340 = mul i64 %339, 48, !dbg !5932, !verifier.code !5111
  call {:cexpr "__cil_tmp234"} boogie_si_record_i64($i315);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5960, 31} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i64($i315, 24);
  // WARNING: %341 = add i64 %340, 24, !dbg !5935, !verifier.code !5111
  call {:cexpr "__cil_tmp235"} boogie_si_record_i64($i316);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5961, 20} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i64(0, $i316);
  // WARNING: %342 = add i64 0, %341, !dbg !5938, !verifier.code !5111
  call {:cexpr "__cil_tmp236"} boogie_si_record_i64($i317);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5962, 18} true;
  assume {:verifier.code 0} true;
  $i318 := $p2i.ref.i64($p0);
  // WARNING: %343 = ptrtoint %struct.us_data* %0 to i64, !dbg !5941, !verifier.code !5111
  call {:cexpr "__cil_tmp237"} boogie_si_record_i64($i318);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5963, 31} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i64($i318, 648);
  // WARNING: %344 = add i64 %343, 648, !dbg !5944, !verifier.code !5111
  call {:cexpr "__cil_tmp238"} boogie_si_record_i64($i319);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5964, 20} true;
  assume {:verifier.code 0} true;
  $p320 := $i2p.i64.ref($i319);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5964, 18} true;
  assume {:verifier.code 0} true;
  $p321 := $load.ref($M.0, $p320);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5965, 18} true;
  assume {:verifier.code 0} true;
  $p322 := $bitcast.ref.ref($p321);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5966, 18} true;
  assume {:verifier.code 0} true;
  $i323 := $p2i.ref.i64($p322);
  // WARNING: %348 = ptrtoint %struct.alauda_info* %347 to i64, !dbg !5954, !verifier.code !5111
  call {:cexpr "__cil_tmp241"} boogie_si_record_i64($i323);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5967, 31} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i64($i323, $i317);
  // WARNING: %349 = add i64 %348, %342, !dbg !5957, !verifier.code !5111
  call {:cexpr "__cil_tmp242"} boogie_si_record_i64($i324);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5968, 18} true;
  assume {:verifier.code 0} true;
  $i325 := $p2i.ref.i64($p0);
  // WARNING: %350 = ptrtoint %struct.us_data* %0 to i64, !dbg !5960, !verifier.code !5111
  call {:cexpr "__cil_tmp243"} boogie_si_record_i64($i325);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5969, 31} true;
  assume {:verifier.code 0} true;
  $i326 := $add.i64($i325, 192);
  // WARNING: %351 = add i64 %350, 192, !dbg !5963, !verifier.code !5111
  call {:cexpr "__cil_tmp244"} boogie_si_record_i64($i326);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5970, 20} true;
  assume {:verifier.code 0} true;
  $p327 := $i2p.i64.ref($i326);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5970, 18} true;
  assume {:verifier.code 0} true;
  $p328 := $load.ref($M.0, $p327);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5971, 18} true;
  assume {:verifier.code 0} true;
  $p329 := $bitcast.ref.ref($p328);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5971, 18} true;
  assume {:verifier.code 0} true;
  $p330 := $load.ref($M.0, $p329);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5972, 18} true;
  assume {:verifier.code 0} true;
  $i331 := $p2i.ref.i64($p330);
  // WARNING: %356 = ptrtoint %struct.scsi_device* %355 to i64, !dbg !5973, !verifier.code !5111
  call {:cexpr "__cil_tmp247"} boogie_si_record_i64($i331);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5973, 31} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i64($i331, 156);
  // WARNING: %357 = add i64 %356, 156, !dbg !5976, !verifier.code !5111
  call {:cexpr "__cil_tmp248"} boogie_si_record_i64($i332);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5974, 20} true;
  assume {:verifier.code 0} true;
  $p333 := $i2p.i64.ref($i332);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5974, 18} true;
  assume {:verifier.code 0} true;
  $i334 := $load.i32($M.0, $p333);
  // WARNING: %359 = load i32, i32* %358, align 4, !dbg !5980, !verifier.code !5111
  call {:cexpr "__cil_tmp249"} boogie_si_record_i32($i334);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5975, 18} true;
  assume {:verifier.code 0} true;
  $i335 := $zext.i32.i64($i334);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5975, 31} true;
  assume {:verifier.code 0} true;
  $i336 := $mul.i64($i335, 48);
  // WARNING: %361 = mul i64 %360, 48, !dbg !5984, !verifier.code !5111
  call {:cexpr "__cil_tmp250"} boogie_si_record_i64($i336);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5976, 31} true;
  assume {:verifier.code 0} true;
  $i337 := $add.i64($i336, 12);
  // WARNING: %362 = add i64 %361, 12, !dbg !5987, !verifier.code !5111
  call {:cexpr "__cil_tmp251"} boogie_si_record_i64($i337);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5977, 20} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i64(0, $i337);
  // WARNING: %363 = add i64 0, %362, !dbg !5990, !verifier.code !5111
  call {:cexpr "__cil_tmp252"} boogie_si_record_i64($i338);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5978, 18} true;
  assume {:verifier.code 0} true;
  $i339 := $p2i.ref.i64($p0);
  // WARNING: %364 = ptrtoint %struct.us_data* %0 to i64, !dbg !5993, !verifier.code !5111
  call {:cexpr "__cil_tmp253"} boogie_si_record_i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5979, 31} true;
  assume {:verifier.code 0} true;
  $i340 := $add.i64($i339, 648);
  // WARNING: %365 = add i64 %364, 648, !dbg !5996, !verifier.code !5111
  call {:cexpr "__cil_tmp254"} boogie_si_record_i64($i340);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5980, 20} true;
  assume {:verifier.code 0} true;
  $p341 := $i2p.i64.ref($i340);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5980, 18} true;
  assume {:verifier.code 0} true;
  $p342 := $load.ref($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5981, 18} true;
  assume {:verifier.code 0} true;
  $p343 := $bitcast.ref.ref($p342);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5982, 18} true;
  assume {:verifier.code 0} true;
  $i344 := $p2i.ref.i64($p343);
  // WARNING: %369 = ptrtoint %struct.alauda_info* %368 to i64, !dbg !6006, !verifier.code !5111
  call {:cexpr "__cil_tmp257"} boogie_si_record_i64($i344);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5983, 31} true;
  assume {:verifier.code 0} true;
  $i345 := $add.i64($i344, $i338);
  // WARNING: %370 = add i64 %369, %363, !dbg !6009, !verifier.code !5111
  call {:cexpr "__cil_tmp258"} boogie_si_record_i64($i345);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5984, 20} true;
  assume {:verifier.code 0} true;
  $p346 := $i2p.i64.ref($i345);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5984, 18} true;
  assume {:verifier.code 0} true;
  $i347 := $load.i32($M.0, $p346);
  // WARNING: %372 = load i32, i32* %371, align 4, !dbg !6013, !verifier.code !5111
  call {:cexpr "__cil_tmp259"} boogie_si_record_i32($i347);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5985, 50} true;
  assume {:verifier.code 0} true;
  $i348 := $sub.i32($i347, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5985, 5} true;
  assume {:verifier.code 0} true;
  $p349 := $i2p.i64.ref($i324);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5985, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p349, $i348);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5986, 18} true;
  assume {:verifier.code 0} true;
  $i350 := $p2i.ref.i64($p0);
  // WARNING: %375 = ptrtoint %struct.us_data* %0 to i64, !dbg !6019, !verifier.code !5111
  call {:cexpr "__cil_tmp260"} boogie_si_record_i64($i350);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5987, 31} true;
  assume {:verifier.code 0} true;
  $i351 := $add.i64($i350, 192);
  // WARNING: %376 = add i64 %375, 192, !dbg !6022, !verifier.code !5111
  call {:cexpr "__cil_tmp261"} boogie_si_record_i64($i351);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5988, 20} true;
  assume {:verifier.code 0} true;
  $p352 := $i2p.i64.ref($i351);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5988, 18} true;
  assume {:verifier.code 0} true;
  $p353 := $load.ref($M.0, $p352);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5989, 18} true;
  assume {:verifier.code 0} true;
  $p354 := $bitcast.ref.ref($p353);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5989, 18} true;
  assume {:verifier.code 0} true;
  $p355 := $load.ref($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5990, 18} true;
  assume {:verifier.code 0} true;
  $i356 := $p2i.ref.i64($p355);
  // WARNING: %381 = ptrtoint %struct.scsi_device* %380 to i64, !dbg !6032, !verifier.code !5111
  call {:cexpr "__cil_tmp264"} boogie_si_record_i64($i356);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5991, 31} true;
  assume {:verifier.code 0} true;
  $i357 := $add.i64($i356, 156);
  // WARNING: %382 = add i64 %381, 156, !dbg !6035, !verifier.code !5111
  call {:cexpr "__cil_tmp265"} boogie_si_record_i64($i357);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5992, 20} true;
  assume {:verifier.code 0} true;
  $p358 := $i2p.i64.ref($i357);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5992, 18} true;
  assume {:verifier.code 0} true;
  $i359 := $load.i32($M.0, $p358);
  // WARNING: %384 = load i32, i32* %383, align 4, !dbg !6039, !verifier.code !5111
  call {:cexpr "__cil_tmp266"} boogie_si_record_i32($i359);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5993, 18} true;
  assume {:verifier.code 0} true;
  $i360 := $zext.i32.i64($i359);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5993, 31} true;
  assume {:verifier.code 0} true;
  $i361 := $mul.i64($i360, 48);
  // WARNING: %386 = mul i64 %385, 48, !dbg !6043, !verifier.code !5111
  call {:cexpr "__cil_tmp267"} boogie_si_record_i64($i361);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5994, 31} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i64($i361, 28);
  // WARNING: %387 = add i64 %386, 28, !dbg !6046, !verifier.code !5111
  call {:cexpr "__cil_tmp268"} boogie_si_record_i64($i362);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5995, 20} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i64(0, $i362);
  // WARNING: %388 = add i64 0, %387, !dbg !6049, !verifier.code !5111
  call {:cexpr "__cil_tmp269"} boogie_si_record_i64($i363);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5996, 18} true;
  assume {:verifier.code 0} true;
  $i364 := $p2i.ref.i64($p0);
  // WARNING: %389 = ptrtoint %struct.us_data* %0 to i64, !dbg !6052, !verifier.code !5111
  call {:cexpr "__cil_tmp270"} boogie_si_record_i64($i364);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5997, 31} true;
  assume {:verifier.code 0} true;
  $i365 := $add.i64($i364, 648);
  // WARNING: %390 = add i64 %389, 648, !dbg !6055, !verifier.code !5111
  call {:cexpr "__cil_tmp271"} boogie_si_record_i64($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5998, 20} true;
  assume {:verifier.code 0} true;
  $p366 := $i2p.i64.ref($i365);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5998, 18} true;
  assume {:verifier.code 0} true;
  $p367 := $load.ref($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5999, 18} true;
  assume {:verifier.code 0} true;
  $p368 := $bitcast.ref.ref($p367);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6000, 18} true;
  assume {:verifier.code 0} true;
  $i369 := $p2i.ref.i64($p368);
  // WARNING: %394 = ptrtoint %struct.alauda_info* %393 to i64, !dbg !6065, !verifier.code !5111
  call {:cexpr "__cil_tmp274"} boogie_si_record_i64($i369);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6001, 31} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i64($i369, $i363);
  // WARNING: %395 = add i64 %394, %388, !dbg !6068, !verifier.code !5111
  call {:cexpr "__cil_tmp275"} boogie_si_record_i64($i370);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6002, 20} true;
  assume {:verifier.code 0} true;
  $p371 := $i2p.i64.ref($i370);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6002, 18} true;
  assume {:verifier.code 0} true;
  $i372 := $load.i8($M.0, $p371);
  // WARNING: %397 = load i8, i8* %396, align 1, !dbg !6072, !verifier.code !5111
  call {:cexpr "__cil_tmp276"} boogie_si_record_i8($i372);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6003, 18} true;
  assume {:verifier.code 0} true;
  $i373 := $zext.i8.i32($i372);
  // WARNING: %398 = zext i8 %397 to i32, !dbg !6075, !verifier.code !5111
  call {:cexpr "__cil_tmp277"} boogie_si_record_i32($i373);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6004, 18} true;
  assume {:verifier.code 0} true;
  $i374 := $p2i.ref.i64($p0);
  // WARNING: %399 = ptrtoint %struct.us_data* %0 to i64, !dbg !6078, !verifier.code !5111
  call {:cexpr "__cil_tmp278"} boogie_si_record_i64($i374);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6005, 31} true;
  assume {:verifier.code 0} true;
  $i375 := $add.i64($i374, 192);
  // WARNING: %400 = add i64 %399, 192, !dbg !6081, !verifier.code !5111
  call {:cexpr "__cil_tmp279"} boogie_si_record_i64($i375);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6006, 20} true;
  assume {:verifier.code 0} true;
  $p376 := $i2p.i64.ref($i375);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6006, 18} true;
  assume {:verifier.code 0} true;
  $p377 := $load.ref($M.0, $p376);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6007, 18} true;
  assume {:verifier.code 0} true;
  $p378 := $bitcast.ref.ref($p377);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6007, 18} true;
  assume {:verifier.code 0} true;
  $p379 := $load.ref($M.0, $p378);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6008, 18} true;
  assume {:verifier.code 0} true;
  $i380 := $p2i.ref.i64($p379);
  // WARNING: %405 = ptrtoint %struct.scsi_device* %404 to i64, !dbg !6091, !verifier.code !5111
  call {:cexpr "__cil_tmp282"} boogie_si_record_i64($i380);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6009, 31} true;
  assume {:verifier.code 0} true;
  $i381 := $add.i64($i380, 156);
  // WARNING: %406 = add i64 %405, 156, !dbg !6094, !verifier.code !5111
  call {:cexpr "__cil_tmp283"} boogie_si_record_i64($i381);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6010, 20} true;
  assume {:verifier.code 0} true;
  $p382 := $i2p.i64.ref($i381);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6010, 18} true;
  assume {:verifier.code 0} true;
  $i383 := $load.i32($M.0, $p382);
  // WARNING: %408 = load i32, i32* %407, align 4, !dbg !6098, !verifier.code !5111
  call {:cexpr "__cil_tmp284"} boogie_si_record_i32($i383);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6011, 18} true;
  assume {:verifier.code 0} true;
  $i384 := $zext.i32.i64($i383);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6011, 31} true;
  assume {:verifier.code 0} true;
  $i385 := $mul.i64($i384, 48);
  // WARNING: %410 = mul i64 %409, 48, !dbg !6102, !verifier.code !5111
  call {:cexpr "__cil_tmp285"} boogie_si_record_i64($i385);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6012, 31} true;
  assume {:verifier.code 0} true;
  $i386 := $add.i64($i385, 29);
  // WARNING: %411 = add i64 %410, 29, !dbg !6105, !verifier.code !5111
  call {:cexpr "__cil_tmp286"} boogie_si_record_i64($i386);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6013, 20} true;
  assume {:verifier.code 0} true;
  $i387 := $add.i64(0, $i386);
  // WARNING: %412 = add i64 0, %411, !dbg !6108, !verifier.code !5111
  call {:cexpr "__cil_tmp287"} boogie_si_record_i64($i387);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6014, 18} true;
  assume {:verifier.code 0} true;
  $i388 := $p2i.ref.i64($p0);
  // WARNING: %413 = ptrtoint %struct.us_data* %0 to i64, !dbg !6111, !verifier.code !5111
  call {:cexpr "__cil_tmp288"} boogie_si_record_i64($i388);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6015, 31} true;
  assume {:verifier.code 0} true;
  $i389 := $add.i64($i388, 648);
  // WARNING: %414 = add i64 %413, 648, !dbg !6114, !verifier.code !5111
  call {:cexpr "__cil_tmp289"} boogie_si_record_i64($i389);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6016, 20} true;
  assume {:verifier.code 0} true;
  $p390 := $i2p.i64.ref($i389);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6016, 18} true;
  assume {:verifier.code 0} true;
  $p391 := $load.ref($M.0, $p390);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6017, 18} true;
  assume {:verifier.code 0} true;
  $p392 := $bitcast.ref.ref($p391);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6018, 18} true;
  assume {:verifier.code 0} true;
  $i393 := $p2i.ref.i64($p392);
  // WARNING: %418 = ptrtoint %struct.alauda_info* %417 to i64, !dbg !6124, !verifier.code !5111
  call {:cexpr "__cil_tmp292"} boogie_si_record_i64($i393);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6019, 31} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i64($i393, $i387);
  // WARNING: %419 = add i64 %418, %412, !dbg !6127, !verifier.code !5111
  call {:cexpr "__cil_tmp293"} boogie_si_record_i64($i394);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6020, 20} true;
  assume {:verifier.code 0} true;
  $p395 := $i2p.i64.ref($i394);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6020, 18} true;
  assume {:verifier.code 0} true;
  $i396 := $load.i8($M.0, $p395);
  // WARNING: %421 = load i8, i8* %420, align 1, !dbg !6131, !verifier.code !5111
  call {:cexpr "__cil_tmp294"} boogie_si_record_i8($i396);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6021, 18} true;
  assume {:verifier.code 0} true;
  $i397 := $zext.i8.i32($i396);
  // WARNING: %422 = zext i8 %421 to i32, !dbg !6134, !verifier.code !5111
  call {:cexpr "__cil_tmp295"} boogie_si_record_i32($i397);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6022, 18} true;
  assume {:verifier.code 0} true;
  $i398 := $p2i.ref.i64($p0);
  // WARNING: %423 = ptrtoint %struct.us_data* %0 to i64, !dbg !6137, !verifier.code !5111
  call {:cexpr "__cil_tmp296"} boogie_si_record_i64($i398);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6023, 31} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i64($i398, 192);
  // WARNING: %424 = add i64 %423, 192, !dbg !6140, !verifier.code !5111
  call {:cexpr "__cil_tmp297"} boogie_si_record_i64($i399);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6024, 20} true;
  assume {:verifier.code 0} true;
  $p400 := $i2p.i64.ref($i399);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6024, 18} true;
  assume {:verifier.code 0} true;
  $p401 := $load.ref($M.0, $p400);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6025, 18} true;
  assume {:verifier.code 0} true;
  $p402 := $bitcast.ref.ref($p401);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6025, 18} true;
  assume {:verifier.code 0} true;
  $p403 := $load.ref($M.0, $p402);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6026, 18} true;
  assume {:verifier.code 0} true;
  $i404 := $p2i.ref.i64($p403);
  // WARNING: %429 = ptrtoint %struct.scsi_device* %428 to i64, !dbg !6150, !verifier.code !5111
  call {:cexpr "__cil_tmp300"} boogie_si_record_i64($i404);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6027, 31} true;
  assume {:verifier.code 0} true;
  $i405 := $add.i64($i404, 156);
  // WARNING: %430 = add i64 %429, 156, !dbg !6153, !verifier.code !5111
  call {:cexpr "__cil_tmp301"} boogie_si_record_i64($i405);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6028, 20} true;
  assume {:verifier.code 0} true;
  $p406 := $i2p.i64.ref($i405);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6028, 18} true;
  assume {:verifier.code 0} true;
  $i407 := $load.i32($M.0, $p406);
  // WARNING: %432 = load i32, i32* %431, align 4, !dbg !6157, !verifier.code !5111
  call {:cexpr "__cil_tmp302"} boogie_si_record_i32($i407);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6029, 18} true;
  assume {:verifier.code 0} true;
  $i408 := $zext.i32.i64($i407);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6029, 31} true;
  assume {:verifier.code 0} true;
  $i409 := $mul.i64($i408, 48);
  // WARNING: %434 = mul i64 %433, 48, !dbg !6161, !verifier.code !5111
  call {:cexpr "__cil_tmp303"} boogie_si_record_i64($i409);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6030, 31} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i64($i409, 30);
  // WARNING: %435 = add i64 %434, 30, !dbg !6164, !verifier.code !5111
  call {:cexpr "__cil_tmp304"} boogie_si_record_i64($i410);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6031, 20} true;
  assume {:verifier.code 0} true;
  $i411 := $add.i64(0, $i410);
  // WARNING: %436 = add i64 0, %435, !dbg !6167, !verifier.code !5111
  call {:cexpr "__cil_tmp305"} boogie_si_record_i64($i411);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6032, 18} true;
  assume {:verifier.code 0} true;
  $i412 := $p2i.ref.i64($p0);
  // WARNING: %437 = ptrtoint %struct.us_data* %0 to i64, !dbg !6170, !verifier.code !5111
  call {:cexpr "__cil_tmp306"} boogie_si_record_i64($i412);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6033, 31} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i64($i412, 648);
  // WARNING: %438 = add i64 %437, 648, !dbg !6173, !verifier.code !5111
  call {:cexpr "__cil_tmp307"} boogie_si_record_i64($i413);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6034, 20} true;
  assume {:verifier.code 0} true;
  $p414 := $i2p.i64.ref($i413);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6034, 18} true;
  assume {:verifier.code 0} true;
  $p415 := $load.ref($M.0, $p414);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6035, 18} true;
  assume {:verifier.code 0} true;
  $p416 := $bitcast.ref.ref($p415);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6036, 18} true;
  assume {:verifier.code 0} true;
  $i417 := $p2i.ref.i64($p416);
  // WARNING: %442 = ptrtoint %struct.alauda_info* %441 to i64, !dbg !6183, !verifier.code !5111
  call {:cexpr "__cil_tmp310"} boogie_si_record_i64($i417);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6037, 31} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i64($i417, $i411);
  // WARNING: %443 = add i64 %442, %436, !dbg !6186, !verifier.code !5111
  call {:cexpr "__cil_tmp311"} boogie_si_record_i64($i418);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6038, 20} true;
  assume {:verifier.code 0} true;
  $p419 := $i2p.i64.ref($i418);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6038, 18} true;
  assume {:verifier.code 0} true;
  $i420 := $load.i8($M.0, $p419);
  // WARNING: %445 = load i8, i8* %444, align 1, !dbg !6190, !verifier.code !5111
  call {:cexpr "__cil_tmp312"} boogie_si_record_i8($i420);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6039, 18} true;
  assume {:verifier.code 0} true;
  $i421 := $zext.i8.i32($i420);
  // WARNING: %446 = zext i8 %445 to i32, !dbg !6193, !verifier.code !5111
  call {:cexpr "__cil_tmp313"} boogie_si_record_i32($i421);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6040, 31} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i421, $i397);
  // WARNING: %447 = add nsw i32 %446, %422, !dbg !6196, !verifier.code !5111
  call {:cexpr "__cil_tmp314"} boogie_si_record_i32($i422);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6041, 31} true;
  assume {:verifier.code 0} true;
  $i423 := $add.i32($i422, $i373);
  // WARNING: %448 = add nsw i32 %447, %398, !dbg !6199, !verifier.code !5111
  call {:cexpr "__cil_tmp315"} boogie_si_record_i32($i423);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6042, 18} true;
  assume {:verifier.code 0} true;
  $i424 := $p2i.ref.i64($p0);
  // WARNING: %449 = ptrtoint %struct.us_data* %0 to i64, !dbg !6202, !verifier.code !5111
  call {:cexpr "__cil_tmp316"} boogie_si_record_i64($i424);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6043, 31} true;
  assume {:verifier.code 0} true;
  $i425 := $add.i64($i424, 192);
  // WARNING: %450 = add i64 %449, 192, !dbg !6205, !verifier.code !5111
  call {:cexpr "__cil_tmp317"} boogie_si_record_i64($i425);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6044, 20} true;
  assume {:verifier.code 0} true;
  $p426 := $i2p.i64.ref($i425);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6044, 18} true;
  assume {:verifier.code 0} true;
  $p427 := $load.ref($M.0, $p426);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6045, 18} true;
  assume {:verifier.code 0} true;
  $p428 := $bitcast.ref.ref($p427);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6045, 18} true;
  assume {:verifier.code 0} true;
  $p429 := $load.ref($M.0, $p428);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6046, 18} true;
  assume {:verifier.code 0} true;
  $i430 := $p2i.ref.i64($p429);
  // WARNING: %455 = ptrtoint %struct.scsi_device* %454 to i64, !dbg !6215, !verifier.code !5111
  call {:cexpr "__cil_tmp320"} boogie_si_record_i64($i430);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6047, 31} true;
  assume {:verifier.code 0} true;
  $i431 := $add.i64($i430, 156);
  // WARNING: %456 = add i64 %455, 156, !dbg !6218, !verifier.code !5111
  call {:cexpr "__cil_tmp321"} boogie_si_record_i64($i431);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6048, 20} true;
  assume {:verifier.code 0} true;
  $p432 := $i2p.i64.ref($i431);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6048, 18} true;
  assume {:verifier.code 0} true;
  $i433 := $load.i32($M.0, $p432);
  // WARNING: %458 = load i32, i32* %457, align 4, !dbg !6222, !verifier.code !5111
  call {:cexpr "__cil_tmp322"} boogie_si_record_i32($i433);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6049, 18} true;
  assume {:verifier.code 0} true;
  $i434 := $zext.i32.i64($i433);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6049, 31} true;
  assume {:verifier.code 0} true;
  $i435 := $mul.i64($i434, 48);
  // WARNING: %460 = mul i64 %459, 48, !dbg !6226, !verifier.code !5111
  call {:cexpr "__cil_tmp323"} boogie_si_record_i64($i435);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6050, 20} true;
  assume {:verifier.code 0} true;
  $i436 := $add.i64(0, $i435);
  // WARNING: %461 = add i64 0, %460, !dbg !6229, !verifier.code !5111
  call {:cexpr "__cil_tmp324"} boogie_si_record_i64($i436);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6051, 18} true;
  assume {:verifier.code 0} true;
  $i437 := $p2i.ref.i64($p0);
  // WARNING: %462 = ptrtoint %struct.us_data* %0 to i64, !dbg !6232, !verifier.code !5111
  call {:cexpr "__cil_tmp325"} boogie_si_record_i64($i437);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6052, 31} true;
  assume {:verifier.code 0} true;
  $i438 := $add.i64($i437, 648);
  // WARNING: %463 = add i64 %462, 648, !dbg !6235, !verifier.code !5111
  call {:cexpr "__cil_tmp326"} boogie_si_record_i64($i438);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6053, 20} true;
  assume {:verifier.code 0} true;
  $p439 := $i2p.i64.ref($i438);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6053, 18} true;
  assume {:verifier.code 0} true;
  $p440 := $load.ref($M.0, $p439);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6054, 18} true;
  assume {:verifier.code 0} true;
  $p441 := $bitcast.ref.ref($p440);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6055, 18} true;
  assume {:verifier.code 0} true;
  $i442 := $p2i.ref.i64($p441);
  // WARNING: %467 = ptrtoint %struct.alauda_info* %466 to i64, !dbg !6245, !verifier.code !5111
  call {:cexpr "__cil_tmp329"} boogie_si_record_i64($i442);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6056, 31} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i64($i442, $i436);
  // WARNING: %468 = add i64 %467, %461, !dbg !6248, !verifier.code !5111
  call {:cexpr "__cil_tmp330"} boogie_si_record_i64($i443);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6057, 20} true;
  assume {:verifier.code 0} true;
  $p444 := $i2p.i64.ref($i443);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6057, 18} true;
  assume {:verifier.code 0} true;
  $i445 := $load.i64($M.0, $p444);
  // WARNING: %470 = load i64, i64* %469, align 8, !dbg !6252, !verifier.code !5111
  call {:cexpr "__cil_tmp331"} boogie_si_record_i64($i445);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6058, 31} true;
  assume {:verifier.code 0} true;
  $i446 := $zext.i32.i64($i423);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6058, 31} true;
  assume {:verifier.code 0} true;
  $i447 := $lshr.i64($i445, $i446);
  // WARNING: %472 = lshr i64 %470, %471, !dbg !6255, !verifier.code !5111
  call {:cexpr "__cil_tmp332"} boogie_si_record_i64($i447);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6059, 15} true;
  assume {:verifier.code 0} true;
  $i448 := $trunc.i64.i32($i447);
  // WARNING: %473 = trunc i64 %472 to i32, !dbg !6258, !verifier.code !5111
  call {:cexpr "num_zones"} boogie_si_record_i32($i448);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6060, 18} true;
  assume {:verifier.code 0} true;
  $i449 := $zext.i32.i64($i448);
  // WARNING: %474 = zext i32 %473 to i64, !dbg !6261, !verifier.code !5111
  call {:cexpr "__cil_tmp333"} boogie_si_record_i64($i449);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6061, 14} true;
  assume {:verifier.code 0} true;
  call $p450 := kcalloc($i449, 8, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6062, 18} true;
  assume {:verifier.code 0} true;
  $i451 := $p2i.ref.i64($p0);
  // WARNING: %476 = ptrtoint %struct.us_data* %0 to i64, !dbg !6267, !verifier.code !5111
  call {:cexpr "__cil_tmp334"} boogie_si_record_i64($i451);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6063, 31} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i64($i451, 192);
  // WARNING: %477 = add i64 %476, 192, !dbg !6270, !verifier.code !5111
  call {:cexpr "__cil_tmp335"} boogie_si_record_i64($i452);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6064, 20} true;
  assume {:verifier.code 0} true;
  $p453 := $i2p.i64.ref($i452);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6064, 18} true;
  assume {:verifier.code 0} true;
  $p454 := $load.ref($M.0, $p453);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6065, 18} true;
  assume {:verifier.code 0} true;
  $p455 := $bitcast.ref.ref($p454);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6065, 18} true;
  assume {:verifier.code 0} true;
  $p456 := $load.ref($M.0, $p455);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6066, 18} true;
  assume {:verifier.code 0} true;
  $i457 := $p2i.ref.i64($p456);
  // WARNING: %482 = ptrtoint %struct.scsi_device* %481 to i64, !dbg !6280, !verifier.code !5111
  call {:cexpr "__cil_tmp338"} boogie_si_record_i64($i457);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6067, 31} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i64($i457, 156);
  // WARNING: %483 = add i64 %482, 156, !dbg !6283, !verifier.code !5111
  call {:cexpr "__cil_tmp339"} boogie_si_record_i64($i458);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6068, 20} true;
  assume {:verifier.code 0} true;
  $p459 := $i2p.i64.ref($i458);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6068, 18} true;
  assume {:verifier.code 0} true;
  $i460 := $load.i32($M.0, $p459);
  // WARNING: %485 = load i32, i32* %484, align 4, !dbg !6287, !verifier.code !5111
  call {:cexpr "__cil_tmp340"} boogie_si_record_i32($i460);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6069, 18} true;
  assume {:verifier.code 0} true;
  $i461 := $zext.i32.i64($i460);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6069, 31} true;
  assume {:verifier.code 0} true;
  $i462 := $mul.i64($i461, 48);
  // WARNING: %487 = mul i64 %486, 48, !dbg !6291, !verifier.code !5111
  call {:cexpr "__cil_tmp341"} boogie_si_record_i64($i462);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6070, 31} true;
  assume {:verifier.code 0} true;
  $i463 := $add.i64($i462, 40);
  // WARNING: %488 = add i64 %487, 40, !dbg !6294, !verifier.code !5111
  call {:cexpr "__cil_tmp342"} boogie_si_record_i64($i463);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6071, 20} true;
  assume {:verifier.code 0} true;
  $i464 := $add.i64(0, $i463);
  // WARNING: %489 = add i64 0, %488, !dbg !6297, !verifier.code !5111
  call {:cexpr "__cil_tmp343"} boogie_si_record_i64($i464);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6072, 18} true;
  assume {:verifier.code 0} true;
  $i465 := $p2i.ref.i64($p0);
  // WARNING: %490 = ptrtoint %struct.us_data* %0 to i64, !dbg !6300, !verifier.code !5111
  call {:cexpr "__cil_tmp344"} boogie_si_record_i64($i465);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6073, 31} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i64($i465, 648);
  // WARNING: %491 = add i64 %490, 648, !dbg !6303, !verifier.code !5111
  call {:cexpr "__cil_tmp345"} boogie_si_record_i64($i466);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6074, 20} true;
  assume {:verifier.code 0} true;
  $p467 := $i2p.i64.ref($i466);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6074, 18} true;
  assume {:verifier.code 0} true;
  $p468 := $load.ref($M.0, $p467);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6075, 18} true;
  assume {:verifier.code 0} true;
  $p469 := $bitcast.ref.ref($p468);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6076, 18} true;
  assume {:verifier.code 0} true;
  $i470 := $p2i.ref.i64($p469);
  // WARNING: %495 = ptrtoint %struct.alauda_info* %494 to i64, !dbg !6313, !verifier.code !5111
  call {:cexpr "__cil_tmp348"} boogie_si_record_i64($i470);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6077, 31} true;
  assume {:verifier.code 0} true;
  $i471 := $add.i64($i470, $i464);
  // WARNING: %496 = add i64 %495, %489, !dbg !6316, !verifier.code !5111
  call {:cexpr "__cil_tmp349"} boogie_si_record_i64($i471);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6078, 30} true;
  assume {:verifier.code 0} true;
  $p472 := $bitcast.ref.ref($p450);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6078, 5} true;
  assume {:verifier.code 0} true;
  $p473 := $i2p.i64.ref($i471);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6078, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p473, $p450);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6079, 18} true;
  assume {:verifier.code 0} true;
  $i474 := $zext.i32.i64($i448);
  // WARNING: %499 = zext i32 %473 to i64, !dbg !6322, !verifier.code !5111
  call {:cexpr "__cil_tmp350"} boogie_si_record_i64($i474);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6080, 14} true;
  assume {:verifier.code 0} true;
  call $p475 := kcalloc($i474, 8, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6081, 18} true;
  assume {:verifier.code 0} true;
  $i476 := $p2i.ref.i64($p0);
  // WARNING: %501 = ptrtoint %struct.us_data* %0 to i64, !dbg !6328, !verifier.code !5111
  call {:cexpr "__cil_tmp351"} boogie_si_record_i64($i476);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6082, 31} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i64($i476, 192);
  // WARNING: %502 = add i64 %501, 192, !dbg !6331, !verifier.code !5111
  call {:cexpr "__cil_tmp352"} boogie_si_record_i64($i477);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6083, 20} true;
  assume {:verifier.code 0} true;
  $p478 := $i2p.i64.ref($i477);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6083, 18} true;
  assume {:verifier.code 0} true;
  $p479 := $load.ref($M.0, $p478);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6084, 18} true;
  assume {:verifier.code 0} true;
  $p480 := $bitcast.ref.ref($p479);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6084, 18} true;
  assume {:verifier.code 0} true;
  $p481 := $load.ref($M.0, $p480);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6085, 18} true;
  assume {:verifier.code 0} true;
  $i482 := $p2i.ref.i64($p481);
  // WARNING: %507 = ptrtoint %struct.scsi_device* %506 to i64, !dbg !6341, !verifier.code !5111
  call {:cexpr "__cil_tmp355"} boogie_si_record_i64($i482);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6086, 31} true;
  assume {:verifier.code 0} true;
  $i483 := $add.i64($i482, 156);
  // WARNING: %508 = add i64 %507, 156, !dbg !6344, !verifier.code !5111
  call {:cexpr "__cil_tmp356"} boogie_si_record_i64($i483);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6087, 20} true;
  assume {:verifier.code 0} true;
  $p484 := $i2p.i64.ref($i483);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6087, 18} true;
  assume {:verifier.code 0} true;
  $i485 := $load.i32($M.0, $p484);
  // WARNING: %510 = load i32, i32* %509, align 4, !dbg !6348, !verifier.code !5111
  call {:cexpr "__cil_tmp357"} boogie_si_record_i32($i485);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6088, 18} true;
  assume {:verifier.code 0} true;
  $i486 := $zext.i32.i64($i485);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6088, 31} true;
  assume {:verifier.code 0} true;
  $i487 := $mul.i64($i486, 48);
  // WARNING: %512 = mul i64 %511, 48, !dbg !6352, !verifier.code !5111
  call {:cexpr "__cil_tmp358"} boogie_si_record_i64($i487);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6089, 31} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i64($i487, 32);
  // WARNING: %513 = add i64 %512, 32, !dbg !6355, !verifier.code !5111
  call {:cexpr "__cil_tmp359"} boogie_si_record_i64($i488);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6090, 20} true;
  assume {:verifier.code 0} true;
  $i489 := $add.i64(0, $i488);
  // WARNING: %514 = add i64 0, %513, !dbg !6358, !verifier.code !5111
  call {:cexpr "__cil_tmp360"} boogie_si_record_i64($i489);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6091, 18} true;
  assume {:verifier.code 0} true;
  $i490 := $p2i.ref.i64($p0);
  // WARNING: %515 = ptrtoint %struct.us_data* %0 to i64, !dbg !6361, !verifier.code !5111
  call {:cexpr "__cil_tmp361"} boogie_si_record_i64($i490);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6092, 31} true;
  assume {:verifier.code 0} true;
  $i491 := $add.i64($i490, 648);
  // WARNING: %516 = add i64 %515, 648, !dbg !6364, !verifier.code !5111
  call {:cexpr "__cil_tmp362"} boogie_si_record_i64($i491);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6093, 20} true;
  assume {:verifier.code 0} true;
  $p492 := $i2p.i64.ref($i491);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6093, 18} true;
  assume {:verifier.code 0} true;
  $p493 := $load.ref($M.0, $p492);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6094, 18} true;
  assume {:verifier.code 0} true;
  $p494 := $bitcast.ref.ref($p493);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6095, 18} true;
  assume {:verifier.code 0} true;
  $i495 := $p2i.ref.i64($p494);
  // WARNING: %520 = ptrtoint %struct.alauda_info* %519 to i64, !dbg !6374, !verifier.code !5111
  call {:cexpr "__cil_tmp365"} boogie_si_record_i64($i495);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6096, 31} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i64($i495, $i489);
  // WARNING: %521 = add i64 %520, %514, !dbg !6377, !verifier.code !5111
  call {:cexpr "__cil_tmp366"} boogie_si_record_i64($i496);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6097, 30} true;
  assume {:verifier.code 0} true;
  $p497 := $bitcast.ref.ref($p475);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6097, 5} true;
  assume {:verifier.code 0} true;
  $p498 := $i2p.i64.ref($i496);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6097, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p498, $p475);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6098, 14} true;
  assume {:verifier.code 0} true;
  call $i499 := alauda_reset_media($p0);
  // WARNING: %524 = call i32 @alauda_reset_media(%struct.us_data* %0), !dbg !6383, !verifier.code !5111
  call {:cexpr "tmp___13"} boogie_si_record_i32($i499);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6100, 16} true;
  assume {:verifier.code 0} true;
  $i500 := $ne.i32($i499, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6100, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i500} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i500 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6101, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 3;
  goto $bb9;
$bb30:
  assume !(($i500 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 6105, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb9;
}
const msleep: ref;
axiom (msleep == $sub.ref(0, 113499));
procedure msleep($i0: i32);
const alauda_ack_media: ref;
axiom (alauda_ack_media == $sub.ref(0, 114531));
procedure alauda_ack_media($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i8;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5146, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.us_data* %0 to i64, !dbg !5112, !verifier.code !5111
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5147, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 192);
  // WARNING: %3 = add i64 %2, 192, !dbg !5117, !verifier.code !5111
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5148, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5148, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5149, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5149, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5150, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  // WARNING: %8 = ptrtoint %struct.scsi_device* %7 to i64, !dbg !5127, !verifier.code !5111
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5151, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 156);
  // WARNING: %9 = add i64 %8, 156, !dbg !5130, !verifier.code !5111
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5152, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5152, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  // WARNING: %11 = load i32, i32* %10, align 4, !dbg !5134, !verifier.code !5111
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5153, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5153, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5155, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 10;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $sub.i8(0, 102);
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5160, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  // WARNING: %16 = ptrtoint %struct.us_data* %0 to i64, !dbg !5144, !verifier.code !5111
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5161, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 120);
  // WARNING: %17 = add i64 %16, 120, !dbg !5148, !verifier.code !5111
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5162, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5162, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  // WARNING: %19 = load i32, i32* %18, align 4, !dbg !5152, !verifier.code !5111
  call {:cexpr "__cil_tmp13"} boogie_si_record_i32($i16);
  // WARNING: call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !13513, metadata !5110), !dbg !13514, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8 64, i64 0, metadata !13515, metadata !5110), !dbg !13516, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !13517, metadata !5110), !dbg !13518, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !13521, metadata !5110), !dbg !13522, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5168, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := usb_stor_ctrl_transfer($p0, $i16, $i12, 64, 0, 1, $0.ref, 0);
  // WARNING: %20 = call i32 @usb_stor_ctrl_transfer(%struct.us_data* %0, i32 %19, i8 zeroext %.0, i8 zeroext 64, i16 zeroext 0, i16 zeroext 1, i8* null, i16 zeroext 0), !dbg !5165, !verifier.code !5111
  call {:cexpr "tmp___7"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5171, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
}
const alauda_get_media_signature: ref;
axiom (alauda_get_media_signature == $sub.ref(0, 115563));
procedure alauda_get_media_signature($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5195, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.us_data* %0 to i64, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5196, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 192);
  // WARNING: %4 = add i64 %3, 192, !dbg !5121, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5197, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5197, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5198, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5198, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5199, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.scsi_device* %8 to i64, !dbg !5131, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5200, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 156);
  // WARNING: %10 = add i64 %9, 156, !dbg !5134, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5201, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5201, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  // WARNING: %12 = load i32, i32* %11, align 4, !dbg !5138, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5202, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5204, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i8(0, 122);
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $sub.i8(0, 106);
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5209, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p0);
  // WARNING: %17 = ptrtoint %struct.us_data* %0 to i64, !dbg !5148, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5210, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 124);
  // WARNING: %18 = add i64 %17, 124, !dbg !5152, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5211, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5211, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  // WARNING: %20 = load i32, i32* %19, align 4, !dbg !5156, !verifier.code !5113
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i17);
  // WARNING: call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !13575, metadata !5110), !dbg !13576, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8 -64, i64 0, metadata !13577, metadata !5110), !dbg !13578, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !13579, metadata !5110), !dbg !13580, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !13583, metadata !5110), !dbg !13584, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5217, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := usb_stor_ctrl_transfer($p0, $i17, $i13, $sub.i8(0, 64), 0, 0, $p1, 4);
  // WARNING: %21 = call i32 @usb_stor_ctrl_transfer(%struct.us_data* %0, i32 %20, i8 zeroext %.0, i8 zeroext -64, i16 zeroext 0, i16 zeroext 0, i8* %1, i16 zeroext 4), !dbg !5169, !verifier.code !5113
  call {:cexpr "tmp___7"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5220, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const alauda_card_find_id: ref;
axiom (alauda_card_find_id == $sub.ref(0, 116595));
procedure alauda_card_find_id($i0: i8)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i23: i32;
  var $p24: ref;
  var $p22: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !13594, metadata !5110), !dbg !13595, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4400, 3} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4400, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4403, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4403, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $mul.i64($i2, 5);
  // WARNING: %5 = mul i64 %4, 5, !dbg !5124, !verifier.code !5113
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4404, 52} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($p2i.ref.i64(alauda_card_ids), $i3);
  // WARNING: %6 = add i64 ptrtoint ([20 x %struct.alauda_card_info]* @alauda_card_ids to i64), %5, !dbg !5127, !verifier.code !5113
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4405, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4405, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  // WARNING: %8 = load i8, i8* %7, align 1, !dbg !5131, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4406, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  // WARNING: %9 = zext i8 %8 to i32, !dbg !5134, !verifier.code !5113
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4407, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4407, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4409, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4410, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4414, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i0);
  // WARNING: %14 = zext i8 %0 to i32, !dbg !5144, !verifier.code !5113
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4415, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4415, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $mul.i64($i10, 5);
  // WARNING: %16 = mul i64 %15, 5, !dbg !5150, !verifier.code !5113
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4416, 52} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($p2i.ref.i64(alauda_card_ids), $i11);
  // WARNING: %17 = add i64 ptrtoint ([20 x %struct.alauda_card_info]* @alauda_card_ids to i64), %16, !dbg !5153, !verifier.code !5113
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4417, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4417, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  // WARNING: %19 = load i8, i8* %18, align 1, !dbg !5157, !verifier.code !5113
  call {:cexpr "__cil_tmp10"} boogie_si_record_i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4418, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  // WARNING: %20 = zext i8 %19 to i32, !dbg !5160, !verifier.code !5113
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4419, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, $i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4419, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $i1;
  assume {:branchcond $i16} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4435, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4435, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $0.ref;
  goto $bb9;
$bb7:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4421, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4421, 23} true;
  assume {:verifier.code 0} true;
  $i19 := $mul.i64($i18, 5);
  // WARNING: %24 = mul i64 %23, 5, !dbg !5169, !verifier.code !5113
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4422, 55} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($p2i.ref.i64(alauda_card_ids), $i19);
  // WARNING: %25 = add i64 ptrtoint ([20 x %struct.alauda_card_info]* @alauda_card_ids to i64), %24, !dbg !5172, !verifier.code !5113
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4423, 15} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4423, 7} true;
  assume {:verifier.code 0} true;
  $p22 := $p21;
  goto $bb9;
$bb8:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4438, 1} true;
  assume {:verifier.code 0} true;
  $r := $p22;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4429, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i1, 1);
  // WARNING: %29 = add nsw i32 %.01, 1, !dbg !5177, !verifier.code !5113
  call {:cexpr "i"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4400, 3} true;
  assume {:verifier.code 0} true;
  $i1 := $i23;
  goto $bb1;
}
const alauda_reset_media: ref;
axiom (alauda_reset_media == $sub.ref(0, 117627));
procedure alauda_reset_media($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i8;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5249, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.us_data* %0 to i64, !dbg !5112, !verifier.code !5111
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5250, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 376);
  // WARNING: %3 = add i64 %2, 376, !dbg !5117, !verifier.code !5111
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5251, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5251, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !13684, metadata !5110), !dbg !13685, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5254, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p4, 0, 9, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5255, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5256, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 64);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5257, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5258, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, $sub.i8(0, 32));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5259, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5260, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %9 = ptrtoint %struct.us_data* %0 to i64, !dbg !5140, !verifier.code !5111
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5261, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 192);
  // WARNING: %10 = add i64 %9, 192, !dbg !5143, !verifier.code !5111
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5262, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5262, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5263, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5263, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5264, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  // WARNING: %15 = ptrtoint %struct.scsi_device* %14 to i64, !dbg !5153, !verifier.code !5111
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5265, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 156);
  // WARNING: %16 = add i64 %15, 156, !dbg !5156, !verifier.code !5111
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5266, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5266, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  // WARNING: %18 = load i32, i32* %17, align 4, !dbg !5160, !verifier.code !5111
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5267, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5267, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, $i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5268, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %20 = ptrtoint %struct.us_data* %0 to i64, !dbg !5165, !verifier.code !5111
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5269, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 112);
  // WARNING: %21 = add i64 %20, 112, !dbg !5168, !verifier.code !5111
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5270, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5270, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  // WARNING: %23 = load i32, i32* %22, align 4, !dbg !5172, !verifier.code !5111
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5273, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5274, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := usb_stor_bulk_transfer_buf($p0, $i22, $p4, 9, $p23);
  // WARNING: %25 = call i32 @usb_stor_bulk_transfer_buf(%struct.us_data* %0, i32 %23, i8* %5, i32 9, i32* %24), !dbg !5182, !verifier.code !5111
  call {:cexpr "tmp___7"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 5276, 3} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
}
const usb_stor_ctrl_transfer: ref;
axiom (usb_stor_ctrl_transfer == $sub.ref(0, 118659));
procedure usb_stor_ctrl_transfer($p0: ref, $i1: i32, $i2: i8, $i3: i8, $i4: i16, $i5: i16, $p6: ref, $i7: i16)
  returns ($r: i32);
const init_alauda: ref;
axiom (init_alauda == $sub.ref(0, 119691));
procedure init_alauda($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i1;
  var $i18: i32;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i32;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i32;
  var $p47: ref;
  var $i19: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9645, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.us_data* %0 to i64, !dbg !5112, !verifier.code !5111
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9646, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 80);
  // WARNING: %3 = add i64 %2, 80, !dbg !5117, !verifier.code !5111
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9647, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9647, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9648, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  // WARNING: %6 = ptrtoint %struct.usb_interface* %5 to i64, !dbg !5124, !verifier.code !5111
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9649, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 8);
  // WARNING: %7 = add i64 %6, 8, !dbg !5127, !verifier.code !5111
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9650, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9650, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9651, 3} true;
  assume {:verifier.code 0} true;
  call nand_init_ecc();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9652, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  // WARNING: %10 = ptrtoint %struct.us_data* %0 to i64, !dbg !5135, !verifier.code !5111
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9653, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 648);
  // WARNING: %11 = add i64 %10, 648, !dbg !5138, !verifier.code !5111
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9654, 29} true;
  assume {:verifier.code 0} true;
  call $p11 := kzalloc(120, 16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9654, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9654, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $p11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9657, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  // WARNING: %14 = ptrtoint %struct.us_data* %0 to i64, !dbg !5144, !verifier.code !5111
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9658, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 648);
  // WARNING: %15 = add i64 %14, 648, !dbg !5148, !verifier.code !5111
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9659, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9659, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9660, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.ref($p16, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9660, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9662, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref(.str.8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9664, 5} true;
  assume {:verifier.code 0} true;
  $i19 := 3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9701, 1} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9670, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p0);
  // WARNING: %23 = ptrtoint %struct.us_data* %0 to i64, !dbg !5162, !verifier.code !5111
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9671, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 648);
  // WARNING: %24 = add i64 %23, 648, !dbg !5166, !verifier.code !5111
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9672, 19} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9672, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9673, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9674, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p0);
  // WARNING: %28 = ptrtoint %struct.us_data* %0 to i64, !dbg !5176, !verifier.code !5111
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9675, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 656);
  // WARNING: %29 = add i64 %28, 656, !dbg !5179, !verifier.code !5111
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9676, 5} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9676, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p27, alauda_info_destructor);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9677, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p0);
  // WARNING: %31 = ptrtoint %struct.us_data* %0 to i64, !dbg !5184, !verifier.code !5111
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9678, 29} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 72);
  // WARNING: %32 = add i64 %31, 72, !dbg !5187, !verifier.code !5111
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9679, 19} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9679, 17} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %34, i64 0, metadata !13829, metadata !5110), !dbg !13830, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9681, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p8);
  // WARNING: %35 = ptrtoint %struct.usb_host_interface* %9 to i64, !dbg !5196, !verifier.code !5111
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9682, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 16);
  // WARNING: %36 = add i64 %35, 16, !dbg !5199, !verifier.code !5111
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9683, 19} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9683, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9684, 29} true;
  assume {:verifier.code 0} true;
  $p36 := $p35;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9685, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  // WARNING: %40 = ptrtoint %struct.usb_host_endpoint* %39 to i64, !dbg !5209, !verifier.code !5111
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9686, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 2);
  // WARNING: %41 = add i64 %40, 2, !dbg !5212, !verifier.code !5111
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9687, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9687, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  // WARNING: %43 = load i8, i8* %42, align 1, !dbg !5216, !verifier.code !5111
  call {:cexpr "__cil_tmp30"} boogie_si_record_i8($i40);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9688, 17} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  // WARNING: %44 = zext i8 %43 to i32, !dbg !5219, !verifier.code !5111
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9689, 29} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i32($i41, 15);
  // WARNING: %45 = and i32 %44, 15, !dbg !5222, !verifier.code !5111
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i42);
  // WARNING: call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !13860, metadata !5110), !dbg !13861, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9691, 13} true;
  assume {:verifier.code 0} true;
  call $i43 := __create_pipe($p31, $i42);
  // WARNING: %46 = call i32 @__create_pipe(%struct.usb_device* %34, i32 %45), !dbg !5227, !verifier.code !5111
  call {:cexpr "tmp___7"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9692, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p24);
  // WARNING: %47 = ptrtoint %struct.alauda_info* %27 to i64, !dbg !5230, !verifier.code !5111
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9693, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 96);
  // WARNING: %48 = add i64 %47, 96, !dbg !5233, !verifier.code !5111
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i45);
  // WARNING: call void @llvm.dbg.value(metadata i64 %48, i64 0, metadata !13871, metadata !5110), !dbg !13872, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i32 -1073741824, i64 0, metadata !13873, metadata !5110), !dbg !13874, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9696, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $or.i32($sub.i32(0, 1073741824), $i43);
  // WARNING: %49 = or i32 -1073741824, %46, !dbg !5240, !verifier.code !5111
  call {:cexpr "__cil_tmp38"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9697, 5} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9697, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, $i46);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9699, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb3;
}
const nand_init_ecc: ref;
axiom (nand_init_ecc == $sub.ref(0, 120723));
procedure nand_init_ecc()
{
  var $i0: i64;
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $i7: i32;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i8;
  var $i47: i1;
  var $i48: i32;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $i52: i32;
  var $i53: i32;
  var $i54: i32;
  var $i55: i32;
  var $i56: i8;
  var $p57: ref;
  var $i58: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4472, 41} true;
  assume {:verifier.code 0} true;
  $i0 := $add.i64($p2i.ref.i64(parity), 0);
  // WARNING: %1 = add i64 ptrtoint ([256 x i8]* @parity to i64), 0, !dbg !5112, !verifier.code !5111
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4473, 5} true;
  assume {:verifier.code 0} true;
  $p1 := $i2p.i64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4473, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, 0);
  // WARNING: store i8 0, i8* %2, align 1, !dbg !5117, !verifier.code !5111
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4476, 3} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4476, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4478, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i2, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4478, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4480, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4481, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4483, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4483, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i4, 1);
  // WARNING: %10 = mul i64 %9, 1, !dbg !5133, !verifier.code !5111
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4484, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($p2i.ref.i64(parity), $i5);
  // WARNING: %11 = add i64 ptrtoint ([256 x i8]* @parity to i64), %10, !dbg !5136, !verifier.code !5111
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4485, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i2, 1);
  // WARNING: %12 = sub nsw i32 %.0, 1, !dbg !5139, !verifier.code !5111
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4486, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i2, $i7);
  // WARNING: %13 = and i32 %.0, %12, !dbg !5142, !verifier.code !5111
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4487, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4487, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $mul.i64($i9, 1);
  // WARNING: %15 = mul i64 %14, 1, !dbg !5146, !verifier.code !5111
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4488, 44} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($p2i.ref.i64(parity), $i10);
  // WARNING: %16 = add i64 ptrtoint ([256 x i8]* @parity to i64), %15, !dbg !5149, !verifier.code !5111
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4489, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4489, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  // WARNING: %18 = load i8, i8* %17, align 1, !dbg !5153, !verifier.code !5111
  call {:cexpr "__cil_tmp13"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4490, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  // WARNING: %19 = zext i8 %18 to i32, !dbg !5156, !verifier.code !5111
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4491, 31} true;
  assume {:verifier.code 0} true;
  $i15 := $xor.i32($i14, 1);
  // WARNING: %20 = xor i32 %19, 1, !dbg !5159, !verifier.code !5111
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4492, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4492, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4492, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4493, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i2, 1);
  // WARNING: %23 = add nsw i32 %.0, 1, !dbg !5165, !verifier.code !5111
  call {:cexpr "i"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4476, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i18;
  goto $bb1;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4499, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4499, 13} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4501, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i19, 256);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4501, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4503, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4504, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13956, metadata !5110), !dbg !13957, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4509, 5} true;
  assume {:verifier.code 0} true;
  $i21, $i22 := 0, 0;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4571, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4509, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4511, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i22, 8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4511, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $i21;
  assume {:branchcond $i23} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4513, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4514, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4517, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $shl.i32(1, $i22);
  // WARNING: %37 = shl i32 1, %.01, !dbg !5197, !verifier.code !5111
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4518, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i19, $i25);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4518, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4518, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb19, $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4552, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4552, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $mul.i64($i42, 1);
  // WARNING: %64 = mul i64 %63, 1, !dbg !5242, !verifier.code !5111
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4553, 44} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($p2i.ref.i64(parity), $i43);
  // WARNING: %65 = add i64 ptrtoint ([256 x i8]* @parity to i64), %64, !dbg !5245, !verifier.code !5111
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4554, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4554, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4554, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i8($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4554, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb31, $bb32;
$bb19:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4520, 25} true;
  assume {:verifier.code 0} true;
  $i28 := $and.i32($i22, 1);
  // WARNING: %41 = and i32 %.01, 1, !dbg !5204, !verifier.code !5111
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4521, 25} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4521, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i40 := $i21;
  goto $bb30;
$bb21:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4522, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $xor.i32($i21, 4);
  // WARNING: %44 = xor i32 %.02, 4, !dbg !5212, !verifier.code !5111
  call {:cexpr "a"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4523, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $i30;
  goto $bb23;
$bb22:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i31 := $i21;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4528, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i32($i22, 2);
  // WARNING: %47 = and i32 %.01, 2, !dbg !5215, !verifier.code !5111
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4529, 25} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4529, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4530, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $xor.i32($i31, 16);
  // WARNING: %50 = xor i32 %.13, 16, !dbg !5222, !verifier.code !5111
  call {:cexpr "a"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4531, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $i34;
  goto $bb26;
$bb25:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  $i35 := $i31;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4536, 25} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i22, 4);
  // WARNING: %53 = and i32 %.01, 4, !dbg !5225, !verifier.code !5111
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4537, 25} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4537, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4538, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $xor.i32($i35, 64);
  // WARNING: %56 = xor i32 %.2, 64, !dbg !5232, !verifier.code !5111
  call {:cexpr "a"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4539, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $i38;
  goto $bb29;
$bb28:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  $i39 := $i35;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4543, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $i39;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4547, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i22, 1);
  // WARNING: %61 = add nsw i32 %.01, 1, !dbg !5236, !verifier.code !5111
  call {:cexpr "j"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4509, 5} true;
  assume {:verifier.code 0} true;
  $i21, $i22 := $i40, $i41;
  goto $bb13;
$bb31:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4556, 5} true;
  assume {:verifier.code 0} true;
  $i48 := 168;
  goto $bb33;
$bb32:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  $i48 := 0;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4560, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4560, 21} true;
  assume {:verifier.code 0} true;
  $i50 := $mul.i64($i49, 1);
  // WARNING: %73 = mul i64 %72, 1, !dbg !5257, !verifier.code !5111
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4561, 42} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($p2i.ref.i64(ecc2), $i50);
  // WARNING: %74 = add i64 ptrtoint ([256 x i8]* @ecc2 to i64), %73, !dbg !5260, !verifier.code !5111
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4562, 21} true;
  assume {:verifier.code 0} true;
  $i52 := $shl.i32($i24, 1);
  // WARNING: %75 = shl i32 %.02.lcssa, 1, !dbg !5263, !verifier.code !5111
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4563, 21} true;
  assume {:verifier.code 0} true;
  $i53 := $xor.i32($i24, $i52);
  // WARNING: %76 = xor i32 %.02.lcssa, %75, !dbg !5266, !verifier.code !5111
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4564, 31} true;
  assume {:verifier.code 0} true;
  $i54 := $xor.i32($i53, $i48);
  // WARNING: %77 = xor i32 %76, %.04, !dbg !5269, !verifier.code !5111
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4565, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $xor.i32($i54, $sub.i32(0, 1));
  // WARNING: %78 = xor i32 %77, -1, !dbg !5272, !verifier.code !5111
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4566, 39} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i32.i8($i55);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4566, 7} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4566, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4567, 11} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i19, 1);
  // WARNING: %81 = add nsw i32 %.1, 1, !dbg !5278, !verifier.code !5111
  call {:cexpr "i"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4499, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i58;
  goto $bb7;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 121755));
procedure kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !14059, metadata !5110), !dbg !14060, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4262, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $or.i32($i1, 32768);
  // WARNING: %3 = or i32 %1, 32768, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !14066, metadata !5110), !dbg !14067, !verifier.code !5108
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6953, metadata !5110), !dbg !14068, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4211, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := __kmalloc($i0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4265, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const alauda_info_destructor: ref;
axiom (alauda_info_destructor == $sub.ref(0, 122787));
procedure alauda_info_destructor($p0: ref)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9564, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9565, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.ref($p1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9565, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9566, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9603, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9572, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9572, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9574, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9574, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9576, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9577, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9580, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9580, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i64($i5, 48);
  // WARNING: %14 = mul i64 %13, 48, !dbg !5137, !verifier.code !5111
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9581, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64(0, $i6);
  // WARNING: %15 = add i64 0, %14, !dbg !5140, !verifier.code !5111
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9582, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p1);
  // WARNING: %16 = ptrtoint %struct.alauda_info* %2 to i64, !dbg !5143, !verifier.code !5111
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9583, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, $i7);
  // WARNING: %17 = add i64 %16, %15, !dbg !5146, !verifier.code !5111
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9584, 18} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9585, 5} true;
  assume {:verifier.code 0} true;
  call alauda_free_maps($p10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9586, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  // WARNING: %19 = ptrtoint %struct.alauda_media_info* %18 to i64, !dbg !5153, !verifier.code !5111
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9587, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 32);
  // WARNING: %20 = add i64 %19, 32, !dbg !5156, !verifier.code !5111
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9588, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9588, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9589, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9590, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p15);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9591, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p10);
  // WARNING: %24 = ptrtoint %struct.alauda_media_info* %18 to i64, !dbg !5167, !verifier.code !5111
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9592, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 40);
  // WARNING: %25 = add i64 %24, 40, !dbg !5170, !verifier.code !5111
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9593, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9593, 19} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9594, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9595, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p20);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9596, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i3, 1);
  // WARNING: %29 = add nsw i32 %.0, 1, !dbg !5181, !verifier.code !5111
  call {:cexpr "port"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9572, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i21;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 9601, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const __create_pipe: ref;
axiom (__create_pipe == $sub.ref(0, 123819));
procedure __create_pipe($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %0, i64 0, metadata !14157, metadata !5110), !dbg !14158, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4280, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $shl.i32($i1, 15);
  // WARNING: %3 = shl i32 %1, 15, !dbg !5116, !verifier.code !5113
  call {:cexpr "__cil_tmp3"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4281, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4281, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  // WARNING: %5 = load i32, i32* %4, align 4, !dbg !5121, !verifier.code !5113
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4282, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i4, 8);
  // WARNING: %6 = shl i32 %5, 8, !dbg !5124, !verifier.code !5113
  call {:cexpr "__cil_tmp5"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !14170, metadata !5110), !dbg !14171, !verifier.code !5108
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4284, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, $i2);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 4284, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 124851));
procedure main()
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10623, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10623, 20} true;
  assume {:verifier.code 0} true;
  $M.1 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10624, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  // WARNING: call void @ldv_initialize(), !dbg !5112, !verifier.code !5111
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10628, 3} true;
  assume {:verifier.code 0} true;
  $i0 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10628, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10631, 15} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  // WARNING: %3 = call i32 @__VERIFIER_nondet_int(), !dbg !5120, !verifier.code !5123
  call {:cexpr "tmp___8"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10633, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10633, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10635, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10637, 51} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10637, 51} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  // WARNING: %8 = zext i1 %7 to i32, !dbg !5131, !verifier.code !5111
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10638, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10638, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10646, 15} true;
  assume {:verifier.code 1} true;
  call $i6 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i6);
  // WARNING: %14 = call i32 @__VERIFIER_nondet_int(), !dbg !5143, !verifier.code !5123
  call {:cexpr "tmp___7"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10648, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10648, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb10, $bb11;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10641, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb7:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10640, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10679, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb10:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10649, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10652, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10655, 44} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10655, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10671, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $i0;
  goto $bb24;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10653, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb15, $bb16;
$bb15:
  assume (0 == 1);
  assume {:verifier.code 0} true;
  assume false;
$bb16:
  assume !((0 == 1));
  assume {:verifier.code 0} true;
  assume false;
$bb17:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10657, 33} true;
  assume {:verifier.code 0} true;
  call $i9 := alauda_probe($u0, $u1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10657, 31} true;
  assume {:verifier.code 0} true;
  $M.2 := $i9;
  call {:cexpr "res_alauda_probe_27"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10658, 34} true;
  assume {:verifier.code 0} true;
  $i10 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10658, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i10);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10660, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10660, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10660, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i13 := $i0;
  goto $bb23;
$bb19:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10661, 13} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10682, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10684, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10666, 9} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10669, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10628, 3} true;
  assume {:verifier.code 0} true;
  $i0 := $i14;
  goto $bb1;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 125883));
procedure ldv_initialize();
const ldv_check_return_value: ref;
axiom (ldv_check_return_value == $sub.ref(0, 126915));
procedure ldv_check_return_value($i0: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 127947));
procedure ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10819, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10819, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10821, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10823, 5} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10826, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_blast_assert: ref;
axiom (ldv_blast_assert == $sub.ref(0, 128979));
procedure ldv_blast_assert()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10690, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10691, 10} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--storage--ums-alauda.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-71ysqV.c", 10693, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 130011));
procedure __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14267, metadata !5110), !dbg !14268, !verifier.code !5108
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 131043));
procedure __SMACK_code.ref($p0: ref);
procedure __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 132075));
procedure __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 133107));
procedure __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 134139));
procedure __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 135171));
procedure __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 136203));
procedure __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 137235));
procedure __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 138267));
procedure __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 139299));
procedure __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 140331));
procedure __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 141363));
procedure __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 142395));
procedure __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !5108, !verifier.code !5109
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 143427));
procedure __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 144459));
procedure __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 145491));
procedure __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 146523));
procedure __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 147555));
procedure __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 148587));
procedure __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 149619));
procedure __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 150651));
procedure __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 151683));
procedure __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 152715));
procedure __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 153747));
procedure __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 154779));
procedure __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 155811));
procedure __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 156843));
procedure __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 157875));
procedure __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 158907));
procedure __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 159939));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure boogie_si_record_bool (i: bool);
procedure boogie_si_record_i1 (i: i1);
procedure boogie_si_record_i8 (i: i8);
procedure boogie_si_record_i16 (i: i16);
procedure boogie_si_record_i24 (i: i24);
procedure boogie_si_record_i32 (i: i32);
procedure boogie_si_record_i40 (i: i40);
procedure boogie_si_record_i48 (i: i48);
procedure boogie_si_record_i56 (i: i56);
procedure boogie_si_record_i64 (i: i64);
procedure boogie_si_record_i88 (i: i88);
procedure boogie_si_record_i96 (i: i96);
procedure boogie_si_record_i128 (i: i128);
procedure boogie_si_record_bv1 (i: bv1);
procedure boogie_si_record_bv8 (i: bv8);
procedure boogie_si_record_bv16 (i: bv16);
procedure boogie_si_record_bv24 (i: bv24);
procedure boogie_si_record_bv32 (i: bv32);
procedure boogie_si_record_bv40 (i: bv40);
procedure boogie_si_record_bv48 (i: bv48);
procedure boogie_si_record_bv56 (i: bv56);
procedure boogie_si_record_bv64 (i: bv64);
procedure boogie_si_record_bv88 (i: bv88);
procedure boogie_si_record_bv96 (i: bv96);
procedure boogie_si_record_bv128 (i: bv128);
procedure boogie_si_record_ref (i: ref);
procedure boogie_si_record_float (i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 160971));
procedure __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 162003));
procedure __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 163035));
procedure llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 164067));
procedure __SMACK_static_init()
{
$bb0:
  $M.1 := 0;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
  $M.3 := 1;
  call {:cexpr "ldv_mutex"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, llvm.used, __mod_description47);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 8), __mod_author48);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 16), __mod_license49);
  $M.0 := $store.i8($M.0, __mod_description47, 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 1), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 2), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 3), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 4), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 5), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 6), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 7), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 8), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 9), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 10), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 11), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 12), 68);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 13), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 14), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 15), 118);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 16), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 17), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 18), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 19), 102);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 20), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 21), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 22), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 23), 65);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 24), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 25), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 26), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 27), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 28), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 29), 45);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 30), 98);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 31), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 32), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 33), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 34), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 35), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 36), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 37), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 38), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 39), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 40), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 41), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 42), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 43), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 44), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 45), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 46), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 47), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description47, 48), 0);
  $M.0 := $store.i8($M.0, __mod_author48, 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 1), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 2), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 3), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 4), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 5), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 6), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 7), 68);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 8), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 9), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 10), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 11), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 12), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 13), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 14), 68);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 16), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 17), 107);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 18), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 19), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 20), 60);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 21), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 22), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 23), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 24), 64);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 25), 103);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 26), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 27), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 28), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 29), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 30), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 31), 46);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 32), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 33), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 34), 103);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 35), 62);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author48, 36), 0);
  $M.0 := $store.i8($M.0, __mod_license49, 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 2), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 4), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 5), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 6), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 7), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 8), 71);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 9), 80);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 10), 76);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license49, 11), 0);
  $M.4 := $store.i8($M.4, alauda_card_ids, 110);
  $M.5 := $store.i8($M.5, $add.ref(alauda_card_ids, 1), 20);
  $M.6 := $store.i8($M.6, $add.ref(alauda_card_ids, 2), 8);
  $M.7 := $store.i8($M.7, $add.ref(alauda_card_ids, 3), 4);
  $M.8 := $store.i8($M.8, $add.ref(alauda_card_ids, 4), 8);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 5), $sub.i8(0, 24));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 5), 1), 20);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 5), 2), 8);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 5), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 5), 4), 8);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 10), $sub.i8(0, 20));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 10), 1), 20);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 10), 2), 8);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 10), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 10), 4), 8);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 15), 100);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 15), 1), 21);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 15), 2), 8);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 15), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 15), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 20), $sub.i8(0, 22));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 20), 1), 21);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 20), 2), 8);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 20), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 20), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 25), 107);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 25), 1), 22);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 25), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 25), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 25), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 30), $sub.i8(0, 29));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 30), 1), 22);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 30), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 30), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 30), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 35), $sub.i8(0, 27));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 35), 1), 22);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 35), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 35), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 35), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 40), $sub.i8(0, 26));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 40), 1), 23);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 40), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 40), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 40), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 45), 115);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 45), 1), 24);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 45), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 45), 3), 5);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 45), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 50), 117);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 50), 1), 25);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 50), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 50), 3), 5);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 50), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 55), 118);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 55), 1), 26);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 55), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 55), 3), 5);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 55), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 60), 121);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 60), 1), 27);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 60), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 60), 3), 5);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 60), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 65), 113);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 65), 1), 28);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 65), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 65), 3), 5);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 65), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 70), 93);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 70), 1), 21);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 70), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 70), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 70), 4), 8);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 75), $sub.i8(0, 43));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 75), 1), 22);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 75), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 75), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 75), 4), 9);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 80), $sub.i8(0, 42));
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 80), 1), 23);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 80), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 80), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 80), 4), 10);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 85), 87);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 85), 1), 24);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 85), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 85), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 85), 4), 11);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 90), 88);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 90), 1), 25);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 90), 2), 9);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 90), 3), 4);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 90), 4), 12);
  $M.4 := $store.i8($M.4, $add.ref(alauda_card_ids, 95), 0);
  $M.5 := $store.i8($M.5, $add.ref($add.ref(alauda_card_ids, 95), 1), 0);
  $M.6 := $store.i8($M.6, $add.ref($add.ref(alauda_card_ids, 95), 2), 0);
  $M.7 := $store.i8($M.7, $add.ref($add.ref(alauda_card_ids, 95), 3), 0);
  $M.8 := $store.i8($M.8, $add.ref($add.ref(alauda_card_ids, 95), 4), 0);
  $M.9 := $store.i8($M.9, inquiry_response, 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 1), $sub.i8(0, 128));
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 2), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 3), 1);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 4), 31);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 5), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 6), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 7), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 8), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 9), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 10), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 11), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 12), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 13), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 14), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 15), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 16), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 17), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 18), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 19), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 20), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 21), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 22), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 23), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 24), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 25), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 26), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 27), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 28), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 29), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 30), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 31), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 32), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 33), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 34), 0);
  $M.9 := $store.i8($M.9, $add.ref(inquiry_response, 35), 0);
  $M.10 := $store.i8($M.10, ecc2, 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 1), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 2), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 3), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 4), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 5), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 6), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 7), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 8), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 9), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 10), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 11), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 12), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 13), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 14), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 15), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 16), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 17), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 18), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 19), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 20), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 21), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 22), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 23), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 24), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 25), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 26), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 27), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 28), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 29), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 30), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 31), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 32), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 33), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 34), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 35), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 36), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 37), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 38), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 39), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 40), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 41), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 42), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 43), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 44), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 45), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 46), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 47), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 48), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 49), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 50), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 51), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 52), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 53), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 54), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 55), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 56), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 57), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 58), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 59), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 60), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 61), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 62), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 63), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 64), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 65), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 66), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 67), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 68), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 69), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 70), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 71), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 72), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 73), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 74), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 75), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 76), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 77), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 78), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 79), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 80), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 81), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 82), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 83), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 84), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 85), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 86), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 87), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 88), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 89), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 90), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 91), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 92), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 93), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 94), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 95), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 96), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 97), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 98), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 99), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 100), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 101), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 102), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 103), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 104), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 105), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 106), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 107), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 108), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 109), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 110), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 111), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 112), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 113), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 114), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 115), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 116), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 117), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 118), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 119), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 120), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 121), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 122), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 123), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 124), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 125), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 126), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 127), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 128), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 129), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 130), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 131), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 132), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 133), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 134), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 135), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 136), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 137), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 138), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 139), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 140), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 141), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 142), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 143), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 144), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 145), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 146), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 147), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 148), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 149), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 150), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 151), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 152), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 153), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 154), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 155), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 156), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 157), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 158), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 159), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 160), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 161), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 162), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 163), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 164), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 165), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 166), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 167), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 168), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 169), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 170), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 171), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 172), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 173), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 174), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 175), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 176), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 177), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 178), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 179), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 180), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 181), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 182), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 183), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 184), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 185), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 186), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 187), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 188), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 189), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 190), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 191), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 192), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 193), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 194), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 195), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 196), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 197), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 198), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 199), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 200), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 201), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 202), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 203), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 204), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 205), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 206), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 207), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 208), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 209), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 210), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 211), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 212), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 213), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 214), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 215), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 216), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 217), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 218), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 219), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 220), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 221), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 222), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 223), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 224), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 225), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 226), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 227), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 228), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 229), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 230), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 231), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 232), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 233), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 234), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 235), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 236), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 237), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 238), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 239), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 240), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 241), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 242), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 243), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 244), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 245), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 246), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 247), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 248), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 249), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 250), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 251), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 252), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 253), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 254), 0);
  $M.10 := $store.i8($M.10, $add.ref(ecc2, 255), 0);
  $M.11 := $store.i8($M.11, parity, 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 1), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 2), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 3), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 4), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 5), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 6), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 7), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 8), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 9), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 10), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 11), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 12), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 13), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 14), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 15), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 16), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 17), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 18), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 19), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 20), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 21), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 22), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 23), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 24), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 25), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 26), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 27), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 28), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 29), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 30), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 31), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 32), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 33), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 34), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 35), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 36), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 37), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 38), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 39), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 40), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 41), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 42), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 43), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 44), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 45), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 46), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 47), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 48), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 49), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 50), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 51), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 52), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 53), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 54), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 55), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 56), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 57), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 58), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 59), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 60), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 61), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 62), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 63), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 64), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 65), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 66), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 67), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 68), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 69), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 70), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 71), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 72), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 73), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 74), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 75), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 76), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 77), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 78), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 79), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 80), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 81), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 82), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 83), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 84), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 85), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 86), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 87), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 88), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 89), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 90), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 91), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 92), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 93), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 94), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 95), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 96), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 97), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 98), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 99), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 100), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 101), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 102), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 103), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 104), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 105), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 106), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 107), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 108), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 109), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 110), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 111), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 112), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 113), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 114), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 115), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 116), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 117), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 118), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 119), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 120), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 121), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 122), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 123), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 124), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 125), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 126), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 127), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 128), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 129), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 130), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 131), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 132), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 133), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 134), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 135), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 136), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 137), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 138), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 139), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 140), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 141), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 142), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 143), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 144), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 145), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 146), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 147), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 148), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 149), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 150), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 151), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 152), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 153), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 154), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 155), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 156), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 157), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 158), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 159), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 160), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 161), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 162), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 163), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 164), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 165), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 166), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 167), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 168), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 169), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 170), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 171), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 172), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 173), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 174), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 175), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 176), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 177), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 178), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 179), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 180), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 181), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 182), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 183), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 184), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 185), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 186), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 187), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 188), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 189), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 190), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 191), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 192), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 193), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 194), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 195), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 196), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 197), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 198), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 199), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 200), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 201), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 202), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 203), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 204), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 205), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 206), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 207), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 208), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 209), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 210), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 211), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 212), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 213), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 214), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 215), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 216), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 217), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 218), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 219), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 220), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 221), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 222), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 223), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 224), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 225), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 226), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 227), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 228), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 229), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 230), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 231), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 232), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 233), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 234), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 235), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 236), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 237), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 238), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 239), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 240), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 241), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 242), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 243), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 244), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 245), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 246), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 247), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 248), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 249), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 250), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 251), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 252), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 253), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 254), 0);
  $M.11 := $store.i8($M.11, $add.ref(parity, 255), 0);
  $M.12 := $store.ref($M.12, alauda_unusual_dev_list, .str.4);
  $M.13 := $store.ref($M.13, $add.ref(alauda_unusual_dev_list, 8), .str.5);
  $M.14 := $store.i8($M.14, $add.ref(alauda_unusual_dev_list, 16), 6);
  $M.15 := $store.i8($M.15, $add.ref(alauda_unusual_dev_list, 17), $sub.i8(0, 12));
  $M.16 := $store.ref($M.16, $add.ref(alauda_unusual_dev_list, 24), init_alauda);
  $M.12 := $store.ref($M.12, $add.ref(alauda_unusual_dev_list, 32), .str.6);
  $M.13 := $store.ref($M.13, $add.ref($add.ref(alauda_unusual_dev_list, 32), 8), .str.7);
  $M.14 := $store.i8($M.14, $add.ref($add.ref(alauda_unusual_dev_list, 32), 16), 6);
  $M.15 := $store.i8($M.15, $add.ref($add.ref(alauda_unusual_dev_list, 32), 17), $sub.i8(0, 12));
  $M.16 := $store.ref($M.16, $add.ref($add.ref(alauda_unusual_dev_list, 32), 24), init_alauda);
  $M.17 := .str.2;
  $M.18 := alauda_probe;
  $M.19 := usb_stor_disconnect;
  $M.20 := $0.ref;
  $M.21 := usb_stor_suspend;
  $M.22 := usb_stor_resume;
  $M.23 := usb_stor_reset_resume;
  $M.24 := usb_stor_pre_reset;
  $M.25 := usb_stor_post_reset;
  $M.26 := alauda_usb_ids;
  $M.27 := 0;
  $M.28 := 0;
  $M.29 := 0;
  $M.30 := $0.ref;
  $M.31 := $0.ref;
  $M.32 := $0.ref;
  $M.33 := $0.ref;
  $M.34 := $0.ref;
  $M.35 := $0.ref;
  $M.36 := $0.ref;
  $M.37 := 0;
  $M.38 := $0.ref;
  $M.39 := $0.ref;
  $M.40 := $0.ref;
  $M.41 := $0.ref;
  $M.42 := $0.ref;
  $M.43 := $0.ref;
  $M.44 := $0.ref;
  $M.45 := $0.ref;
  $M.46 := $0.ref;
  $M.47 := 0;
  $M.48 := 5;
  $M.49 := $store.i16($M.49, alauda_usb_ids, 15);
  $M.50 := $store.i16($M.50, $add.ref(alauda_usb_ids, 2), 1412);
  $M.51 := $store.i16($M.51, $add.ref(alauda_usb_ids, 4), 8);
  $M.52 := $store.i16($M.52, $add.ref(alauda_usb_ids, 6), 258);
  $M.53 := $store.i16($M.53, $add.ref(alauda_usb_ids, 8), 258);
  $M.54 := $store.i8($M.54, $add.ref(alauda_usb_ids, 10), 0);
  $M.55 := $store.i8($M.55, $add.ref(alauda_usb_ids, 11), 0);
  $M.56 := $store.i8($M.56, $add.ref(alauda_usb_ids, 12), 0);
  $M.57 := $store.i8($M.57, $add.ref(alauda_usb_ids, 13), 0);
  $M.58 := $store.i8($M.58, $add.ref(alauda_usb_ids, 14), 0);
  $M.59 := $store.i8($M.59, $add.ref(alauda_usb_ids, 15), 0);
  $M.60 := $store.i64($M.60, $add.ref(alauda_usb_ids, 16), 16777216);
  $M.49 := $store.i16($M.49, $add.ref(alauda_usb_ids, 24), 15);
  $M.50 := $store.i16($M.50, $add.ref($add.ref(alauda_usb_ids, 24), 2), 1972);
  $M.51 := $store.i16($M.51, $add.ref($add.ref(alauda_usb_ids, 24), 4), 266);
  $M.52 := $store.i16($M.52, $add.ref($add.ref(alauda_usb_ids, 24), 6), 258);
  $M.53 := $store.i16($M.53, $add.ref($add.ref(alauda_usb_ids, 24), 8), 258);
  $M.54 := $store.i8($M.54, $add.ref($add.ref(alauda_usb_ids, 24), 10), 0);
  $M.55 := $store.i8($M.55, $add.ref($add.ref(alauda_usb_ids, 24), 11), 0);
  $M.56 := $store.i8($M.56, $add.ref($add.ref(alauda_usb_ids, 24), 12), 0);
  $M.57 := $store.i8($M.57, $add.ref($add.ref(alauda_usb_ids, 24), 13), 0);
  $M.58 := $store.i8($M.58, $add.ref($add.ref(alauda_usb_ids, 24), 14), 0);
  $M.59 := $store.i8($M.59, $add.ref($add.ref(alauda_usb_ids, 24), 15), 0);
  $M.60 := $store.i64($M.60, $add.ref($add.ref(alauda_usb_ids, 24), 16), 16777216);
  $M.2 := 0;
  call {:cexpr "res_alauda_probe_27"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 165099));
procedure devirtbounce(funcPtr: ref, arg: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
procedure $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: ref;
const $u1: ref;
procedure $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
