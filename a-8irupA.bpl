// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out.c --verifier-options  /bopt:z3opt:SMT.MBQI=true /bopt:z3opt:SMT.MBQI.MAX_ITERATIONS=1000 /di /staticInlining /trackAllVars /useArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (28 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: [ref] i8;
var $M.3: ref;
var $M.4: ref;
var $M.5: i32;
var $M.6: i32;
var $M.7: i32;
var $M.8: i32;
var $M.9: i32;
var $M.10: i32;
var $M.11: i32;
var $M.12: i32;
var $M.13: i32;
var $M.14: i32;
var $M.15: i16;
var $M.16: i16;
var $M.17: i16;
var $M.18: i16;
var $M.19: i16;
var $M.20: i8;
var $M.21: i8;
var $M.22: i8;
var $M.23: i8;
var $M.24: i8;
var $M.25: i8;
var $M.26: i8;
var $M.27: i64;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 259406));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32784));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const kvaser_usb_driver_group1: ref;
axiom (kvaser_usb_driver_group1 == $sub.ref(0, 2060));
const kvaser_usb_netdev_ops_group1: ref;
axiom (kvaser_usb_netdev_ops_group1 == $sub.ref(0, 3092));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 4120));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 5148));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 6176));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 7204));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 8232));
const usb_counter: ref;
axiom (usb_counter == $sub.ref(0, 9260));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 10288));
const ldv_retval_3: ref;
axiom (ldv_retval_3 == $sub.ref(0, 11316));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 12344));
const ldv_spin: ref;
axiom (ldv_spin == $sub.ref(0, 13372));
const __mod_usb__kvaser_usb_table_device_table: ref;
axiom (__mod_usb__kvaser_usb_table_device_table == $sub.ref(0, 14428));
const {:count 23} kvaser_usb_table: ref;
axiom (kvaser_usb_table == $sub.ref(0, 16188));
const kvaser_usb_driver: ref;
axiom (kvaser_usb_driver == $sub.ref(0, 17516));
const kvaser_usb_netdev_ops: ref;
axiom (kvaser_usb_netdev_ops == $sub.ref(0, 19020));
const kvaser_usb_bittiming_const: ref;
axiom (kvaser_usb_bittiming_const == $sub.ref(0, 20092));
const {:count 25} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 21141));
const {:count 26} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 22191));
const {:count 18} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 23233));
const {:count 26} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 24283));
const {:count 63} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 25370));
const {:count 223} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 26617));
const {:count 21} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 27662));
const {:count 30} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 28716));
const {:count 29} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 29769));
const {:count 30} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 30823));
const {:count 9} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 31856));
const {:count 31} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 32911));
const {:count 31} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 33966));
const {:count 34} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 35024));
const {:count 29} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 36077));
const {:count 21} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 37122));
const {:count 14} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 38160));
const {:count 39} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 39223));
const {:count 24} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 40271));
const {:count 29} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 41324));
const {:count 28} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 42376));
const {:count 21} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 43421));
const {:count 11} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 44456));
const {:count 20} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 45500));
const {:count 22} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 46546));
const {:count 24} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 47594));
const {:count 25} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 48643));
const {:count 32} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 49699));
const {:count 30} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 50753));
const .str: ref;
axiom (.str == $sub.ref(0, 51804));
const {:count 37} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 52865));
const {:count 33} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 53922));
const {:count 17} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 54963));
const {:count 28} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 56015));
const {:count 21} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 57060));
const {:count 31} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 58115));
const {:count 20} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 59159));
const {:count 19} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 60202));
const jiffies: ref;
axiom (jiffies == $sub.ref(0, 32776));
const {:count 14} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 61240));
const {:count 24} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 62288));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32784));
const {:count 14} .str.2.44: ref;
axiom (.str.2.44 == $sub.ref(0, 63326));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 64358));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 65390));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const kvaser_usb_open: ref;
axiom (kvaser_usb_open == $sub.ref(0, 66422));
procedure  kvaser_usb_open($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i8: i32;
  var $i9: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i10: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7344, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7345, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7346, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7346, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7347, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := open_candev($p0);
  // WARNING: %6 = call i32 @open_candev(%struct.net_device* %0), !dbg !7269, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7348, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7349, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7379, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7353, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := kvaser_usb_setup_rx_urbs($p4);
  // WARNING: %11 = call i32 @kvaser_usb_setup_rx_urbs(%struct.kvaser_usb* %5), !dbg !7277, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7354, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7354, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7355, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i8;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7376, 3} true;
  assume {:verifier.code 0} true;
  call close_candev($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7377, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i10;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7359, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := kvaser_usb_set_opt_mode($p2);
  // WARNING: %16 = call i32 @kvaser_usb_set_opt_mode(%struct.kvaser_usb_net_priv* %3), !dbg !7283, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7360, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7360, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7361, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i11;
  goto $bb7;
$bb10:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7365, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := kvaser_usb_start_chip($p2);
  // WARNING: %21 = call i32 @kvaser_usb_start_chip(%struct.kvaser_usb_net_priv* %3), !dbg !7289, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7366, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7366, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7367, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := netdev_warn.ref.ref.i32($p0, .str.23, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7369, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i13;
  goto $bb7;
$bb13:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7373, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $p2;
  $p17 := $add.ref($p2, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7373, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7374, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const kvaser_usb_close: ref;
axiom (kvaser_usb_close == $sub.ref(0, 67454));
procedure  kvaser_usb_close($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7474, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7475, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7476, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7476, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7477, 3} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7478, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := kvaser_usb_flush_queue($p2);
  // WARNING: %6 = call i32 @kvaser_usb_flush_queue(%struct.kvaser_usb_net_priv* %3), !dbg !7270, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7479, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7479, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7480, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := netdev_warn.ref.ref.i32($p0, .str.18, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7482, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7485, 84} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7485, 84} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7485, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := kvaser_usb_send_simple_msg($p4, 24, $i9);
  // WARNING: %14 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %5, i8 zeroext 24, i32 %13), !dbg !7280, !verifier.code !7258
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7486, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7486, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7487, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := netdev_warn.ref.ref.i32($p0, .str.19, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7489, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7492, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := kvaser_usb_stop_chip($p2);
  // WARNING: %20 = call i32 @kvaser_usb_stop_chip(%struct.kvaser_usb_net_priv* %3), !dbg !7289, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7493, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7493, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7494, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := netdev_warn.ref.ref.i32($p0, .str.20, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7496, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7499, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $p2;
  $p17 := $add.ref($p2, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7499, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7500, 22} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7500, 22} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7500, 3} true;
  assume {:verifier.code 0} true;
  call close_candev($p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7501, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const kvaser_usb_start_xmit: ref;
axiom (kvaser_usb_start_xmit == $sub.ref(0, 68486));
procedure  kvaser_usb_start_xmit($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $i16: i32;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i8;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i32;
  var $i61: i8;
  var $i62: i32;
  var $i63: i32;
  var $i64: i8;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i32;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i8;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $i82: i32;
  var $i83: i8;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i8;
  var $i91: i32;
  var $i92: i32;
  var $i93: i8;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: i32;
  var $i101: i32;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $i105: i8;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i8;
  var $i113: i32;
  var $i114: i32;
  var $i115: i8;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: i8;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i8;
  var $i128: i64;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $i140: i1;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i8;
  var $i145: i32;
  var $i146: i32;
  var $i147: i8;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $p157: ref;
  var $p158: ref;
  var $i159: i64;
  var $p160: ref;
  var $i161: i32;
  var $p162: ref;
  var $i163: i64;
  var $i164: i1;
  var $i165: i32;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i8;
  var $i172: i32;
  var $p173: ref;
  var $p174: ref;
  var $i175: i32;
  var $i176: i8;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $i185: i8;
  var $i186: i32;
  var $i187: i32;
  var $p188: ref;
  var $p189: ref;
  var $i190: i32;
  var $p191: ref;
  var $i192: i8;
  var $i193: i32;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i32;
  var $p198: ref;
  var $p199: ref;
  var $i200: i32;
  var $i201: i1;
  var $i202: i32;
  var $i203: i1;
  var $i204: i32;
  var $i205: i64;
  var $i206: i64;
  var $i207: i1;
  var $p208: ref;
  var $i209: i32;
  var $p210: ref;
  var $p211: ref;
  var $i212: i64;
  var $i213: i64;
  var $p214: ref;
  var $i215: i1;
  var $i216: i32;
  var $i166: i32;
  var $p167: ref;
  var $i30: i32;
  var $p31: ref;
  var $i21: i32;
  var $p22: ref;
  var $i12: i32;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $i220: i32;
  var $i221: i1;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $i225: i32;
  var $i226: i1;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $i230: i32;
  var $i231: i1;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $i235: i32;
  var $i236: i1;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $i240: i32;
  var $i241: i1;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $i245: i32;
  var $i246: i1;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $i250: i32;
  var $i251: i1;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $i255: i32;
  var $i256: i1;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $i260: i32;
  var $i261: i1;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $i265: i32;
  var $i266: i1;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $i271: i1;
  var $p272: ref;
  var $p273: ref;
  var $p274: ref;
  var $i275: i32;
  var $i276: i1;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $i280: i32;
  var $i281: i1;
  var $p282: ref;
  var $p283: ref;
  var $p284: ref;
  var $i285: i32;
  var $i286: i1;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $i290: i32;
  var $i291: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7575, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7576, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7577, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7577, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7578, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7579, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7579, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7579, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb_tx_urb_context* null, i64 0, metadata !7369, metadata !7256), !dbg !7370, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7582, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := can_dropped_invalid_skb($p1, $p0);
  // WARNING: %11 = call i32 @can_dropped_invalid_skb(%struct.net_device* %1, %struct.sk_buff* %0), !dbg !7282, !verifier.code !7258
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7583, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7583, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7584, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7695, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7588, 9} true;
  assume {:verifier.code 0} true;
  call $p13 := ldv_usb_alloc_urb_39(0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7589, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7589, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7589, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7590, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := netdev_err.ref.ref($p1, .str.15);
  $p17 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7591, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7591, 43} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 1);
  $p20 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7591, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7592, 5} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := 0, $p0;
  goto $bb7;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7692, 3} true;
  assume {:verifier.code 0} true;
  call consume_skb($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7693, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i21;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7596, 9} true;
  assume {:verifier.code 0} true;
  call $p23 := kmalloc(32, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7597, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7597, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7597, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i25 == 1);
  $p26 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7598, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7598, 43} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 1);
  $p29 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7598, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7599, 5} true;
  assume {:verifier.code 0} true;
  $i30, $p31 := 0, $p0;
  goto $bb11;
$bb10:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7690, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7690, 3} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := $i30, $p31;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7603, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7604, 8} true;
  assume {:verifier.code 0} true;
  $p33 := $p32;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7604, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7605, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7605, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7605, 17} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7605, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 38} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p3, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 38} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i8($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 10} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 17} true;
  assume {:verifier.code 0} true;
  $p42 := $p41;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7606, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7607, 17} true;
  assume {:verifier.code 0} true;
  $p43 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7607, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7607, 24} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7607, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7608, 10} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p32, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7608, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 54} true;
  assume {:verifier.code 0} true;
  $p47 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 54} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 61} true;
  assume {:verifier.code 0} true;
  $i49 := $lshr.i32($i48, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 44} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 28} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 69} true;
  assume {:verifier.code 0} true;
  $i52 := $and.i32($i51, 31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 28} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 12} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 19} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 2);
  $p57 := $add.ref($p55, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7609, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 54} true;
  assume {:verifier.code 0} true;
  $p58 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 54} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 61} true;
  assume {:verifier.code 0} true;
  $i60 := $lshr.i32($i59, 18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 44} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 28} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 69} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i32($i62, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 28} true;
  assume {:verifier.code 0} true;
  $i64 := $trunc.i32.i8($i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 10} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 12} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 19} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 2);
  $p68 := $add.ref($add.ref($p66, 2), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7610, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 54} true;
  assume {:verifier.code 0} true;
  $p69 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 54} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 61} true;
  assume {:verifier.code 0} true;
  $i71 := $lshr.i32($i70, 14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 44} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i32.i8($i71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 28} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 69} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 28} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i32.i8($i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 10} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 12} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 19} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 2);
  $p79 := $add.ref($add.ref($p77, 2), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7611, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, $i75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 38} true;
  assume {:verifier.code 0} true;
  $p80 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 38} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 45} true;
  assume {:verifier.code 0} true;
  $i82 := $lshr.i32($i81, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 28} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i32.i8($i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 10} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 12} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 19} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p85, 2);
  $p87 := $add.ref($add.ref($p85, 2), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7612, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p87, $i83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 53} true;
  assume {:verifier.code 0} true;
  $p88 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 53} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 44} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i32.i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 28} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 61} true;
  assume {:verifier.code 0} true;
  $i92 := $and.i32($i91, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 28} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 10} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 12} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 19} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 2);
  $p97 := $add.ref($add.ref($p95, 2), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7613, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p97, $i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7614, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7615, 10} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p32, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7615, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p98, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 54} true;
  assume {:verifier.code 0} true;
  $p99 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 54} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i32($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 61} true;
  assume {:verifier.code 0} true;
  $i101 := $lshr.i32($i100, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 44} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i32.i8($i101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 28} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 68} true;
  assume {:verifier.code 0} true;
  $i104 := $and.i32($i103, 31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 28} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i32.i8($i104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 10} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 12} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 19} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 2);
  $p109 := $add.ref($p107, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7616, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p109, $i105);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 53} true;
  assume {:verifier.code 0} true;
  $p110 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 53} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 44} true;
  assume {:verifier.code 0} true;
  $i112 := $trunc.i32.i8($i111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 28} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i8.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 61} true;
  assume {:verifier.code 0} true;
  $i114 := $and.i32($i113, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 28} true;
  assume {:verifier.code 0} true;
  $i115 := $trunc.i32.i8($i114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 10} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 12} true;
  assume {:verifier.code 0} true;
  $p117 := $bitcast.ref.ref($p116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 19} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 2);
  $p119 := $add.ref($add.ref($p117, 2), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7617, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p119, $i115);
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 30} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 30} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i8($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 8} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 10} true;
  assume {:verifier.code 0} true;
  $p123 := $bitcast.ref.ref($p122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 17} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p123, 2);
  $p125 := $add.ref($add.ref($p123, 2), 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7619, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p125, $i121);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7620, 24} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7620, 24} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i8($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7620, 11} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i64($i127);
  // WARNING: %136 = zext i8 %135 to i64, !dbg !7406, !verifier.code !7258
  call {:cexpr "__len"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 44} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 46} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 53} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p130, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 28} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($p131);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 58} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p132, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 87} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p9, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 64} true;
  assume {:verifier.code 0} true;
  $p135 := $bitcast.ref.ref($p134);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7621, 11} true;
  assume {:verifier.code 0} true;
  call $i136 := __builtinx_memcpy.ref.ref.i64($p133, $p135, $i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7623, 12} true;
  assume {:verifier.code 0} true;
  $p137 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7623, 12} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7623, 19} true;
  assume {:verifier.code 0} true;
  $i139 := $and.i32($i138, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7623, 34} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i32($i139, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7623, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 53} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 55} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p141);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 62} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p142, 17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 62} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i8($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 33} true;
  assume {:verifier.code 0} true;
  $i145 := $zext.i8.i32($i144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 68} true;
  assume {:verifier.code 0} true;
  $i146 := $or.i32($i145, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 27} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i32.i8($i146);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 10} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 12} true;
  assume {:verifier.code 0} true;
  $p149 := $bitcast.ref.ref($p148);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 19} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p149, 17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7624, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p150, $i147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7625, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7639, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p3, 568);
  $p152 := $add.ref($p3, 568);
  $p153 := $add.ref($add.ref($p3, 568), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i32($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i155 := $eq.i32($i154, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 0;
  assume {:branchcond $i155} true;
  goto $bb21, $bb23;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7632, 60} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p3, 568);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7632, 15} true;
  assume {:verifier.code 0} true;
  $p158 := $bitcast.ref.ref($p157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7632, 75} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7632, 73} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p158, $mul.ref($i159, 16));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7633, 5} true;
  assume {:verifier.code 0} true;
  $i161, $p162 := $i156, $p160;
  goto $bb24;
$bb23:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7645, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $p2i.ref.i64($p162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7645, 31} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i64($i163, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7645, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i164} true;
  goto $bb28, $bb29;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p3, 568);
  $p218 := $add.ref($add.ref($p3, 568), 16);
  $p219 := $add.ref($add.ref($add.ref($p3, 568), 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i32($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i221 := $eq.i32($i220, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 1;
  assume {:branchcond $i221} true;
  goto $bb41, $bb42;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7639, 27} true;
  assume {:verifier.code 0} true;
  $i161, $p162 := 16, $0.ref;
  goto $bb24;
$bb28:
  assume ($i164 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7646, 5} true;
  assume {:verifier.code 0} true;
  call $i165 := netdev_warn.ref.ref($p1, .str.37);
  // WARNING: %181 = call i32 (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i32 0, i32 0)), !dbg !7457, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7648, 5} true;
  assume {:verifier.code 0} true;
  $i166, $p167 := 16, $p0;
  goto $bb30;
$bb29:
  assume !(($i164 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7688, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7688, 3} true;
  assume {:verifier.code 0} true;
  $i30, $p31 := $i166, $p167;
  goto $bb11;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7652, 12} true;
  assume {:verifier.code 0} true;
  $p168 := $p162;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7652, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p168, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7653, 12} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p162, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7653, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p169, $i161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7654, 28} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7654, 28} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i8($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7654, 18} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7654, 12} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p162, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7654, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p173, $i172);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 37} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p162, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 37} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i32($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 23} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i32.i8($i175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 8} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 10} true;
  assume {:verifier.code 0} true;
  $p178 := $bitcast.ref.ref($p177);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 17} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p178, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7655, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p179, $i176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 32} true;
  assume {:verifier.code 0} true;
  $p180 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 32} true;
  assume {:verifier.code 0} true;
  $p181 := $load.ref($M.0, $p180);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 59} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 59} true;
  assume {:verifier.code 0} true;
  $p183 := $load.ref($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 70} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p183, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 70} true;
  assume {:verifier.code 0} true;
  $i185 := $load.i8($M.0, $p184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 38} true;
  assume {:verifier.code 0} true;
  $i186 := $zext.i8.i32($i185);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7656, 13} true;
  assume {:verifier.code 0} true;
  call $i187 := __create_pipe($p181, $i186);
  // WARNING: %203 = call i32 @__create_pipe(%struct.usb_device* %197, i32 %202), !dbg !7478, !verifier.code !7258
  call {:cexpr "tmp___1"} boogie_si_record_i32($i187);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 31} true;
  assume {:verifier.code 0} true;
  $p188 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 31} true;
  assume {:verifier.code 0} true;
  $p189 := $load.ref($M.0, $p188);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 45} true;
  assume {:verifier.code 0} true;
  $i190 := $or.i32($i187, $sub.i32(0, 1073741824));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 76} true;
  assume {:verifier.code 0} true;
  $p191 := $p32;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 76} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i8($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 65} true;
  assume {:verifier.code 0} true;
  $i193 := $zext.i8.i32($i192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7658, 21} true;
  assume {:verifier.code 0} true;
  $p194 := $bitcast.ref.ref($p162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7657, 3} true;
  assume {:verifier.code 0} true;
  call usb_fill_bulk_urb($p13, $p189, $i190, $p23, $i193, kvaser_usb_write_bulk_callback, $p194);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7659, 31} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p3, 384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7659, 3} true;
  assume {:verifier.code 0} true;
  call usb_anchor_urb($p13, $p195);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7660, 42} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p162, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7660, 42} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i32($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7660, 3} true;
  assume {:verifier.code 0} true;
  call can_put_echo_skb($p0, $p1, $i197);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7661, 22} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p3, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7661, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p198);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7662, 54} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p3, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7662, 13} true;
  assume {:verifier.code 0} true;
  call $i200 := atomic_read($p199);
  // WARNING: %216 = call i32 @atomic_read(%union.__anonunion_ldv_1458_15* %215), !dbg !7494, !verifier.code !7258
  call {:cexpr "tmp___2"} boogie_si_record_i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7663, 15} true;
  assume {:verifier.code 0} true;
  $i201 := $sgt.i32($i200, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7663, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7664, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7665, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i201 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7668, 9} true;
  assume {:verifier.code 0} true;
  call $i202 := ldv_usb_submit_urb_40($p13, 32);
  // WARNING: %221 = call i32 @ldv_usb_submit_urb_40(%struct.urb* %16, i32 32), !dbg !7503, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7669, 37} true;
  assume {:verifier.code 0} true;
  $i203 := $ne.i32($i202, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7669, 37} true;
  assume {:verifier.code 0} true;
  $i204 := $zext.i1.i32($i203);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7669, 33} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i204);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7669, 13} true;
  assume {:verifier.code 0} true;
  call $i206 := ldv__builtin_expect($i205, 0);
  // WARNING: %225 = call i64 @ldv__builtin_expect(i64 %224, i64 0), !dbg !7508, !verifier.code !7258
  call {:cexpr "tmp___3"} boogie_si_record_i64($i206);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7670, 15} true;
  assume {:verifier.code 0} true;
  $i207 := $ne.i64($i206, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7670, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7671, 40} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p162, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7671, 40} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i32($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7671, 5} true;
  assume {:verifier.code 0} true;
  call can_free_echo_skb($p1, $i209);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7673, 24} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p3, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7673, 5} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p210);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7674, 5} true;
  assume {:verifier.code 0} true;
  call usb_unanchor_urb($p13);
  $p211 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7675, 32} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i64($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7675, 43} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i64($i212, 1);
  $p214 := $add.ref($add.ref($p1, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7675, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p214, $i213);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7676, 13} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.i32($i202, $sub.i32(0, 19));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7676, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i207 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb37:
  assume ($i215 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7677, 7} true;
  assume {:verifier.code 0} true;
  call netif_device_detach($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7678, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i215 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7679, 7} true;
  assume {:verifier.code 0} true;
  call $i216 := netdev_warn.ref.ref.i32($p1, .str.38, $i202);
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7681, 5} true;
  assume {:verifier.code 0} true;
  $i166, $p167 := 0, $0.ref;
  goto $bb30;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7685, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7686, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i221 == 1);
  goto $bb22;
$bb42:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p3, 568);
  $p223 := $add.ref($add.ref($p3, 568), 32);
  $p224 := $add.ref($add.ref($add.ref($p3, 568), 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i32($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i226 := $eq.i32($i225, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 2;
  assume {:branchcond $i226} true;
  goto $bb45, $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i226 == 1);
  goto $bb22;
$bb46:
  assume !(($i226 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p3, 568);
  $p228 := $add.ref($add.ref($p3, 568), 48);
  $p229 := $add.ref($add.ref($add.ref($p3, 568), 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i231 := $eq.i32($i230, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 3;
  assume {:branchcond $i231} true;
  goto $bb49, $bb50;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb22;
$bb50:
  assume !(($i231 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p3, 568);
  $p233 := $add.ref($add.ref($p3, 568), 64);
  $p234 := $add.ref($add.ref($add.ref($p3, 568), 64), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i235 := $load.i32($M.0, $p234);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i236 := $eq.i32($i235, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 4;
  assume {:branchcond $i236} true;
  goto $bb53, $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i236 == 1);
  goto $bb22;
$bb54:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p3, 568);
  $p238 := $add.ref($add.ref($p3, 568), 80);
  $p239 := $add.ref($add.ref($add.ref($p3, 568), 80), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i32($M.0, $p239);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i241 := $eq.i32($i240, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 5;
  assume {:branchcond $i241} true;
  goto $bb57, $bb58;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i241 == 1);
  goto $bb22;
$bb58:
  assume !(($i241 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p3, 568);
  $p243 := $add.ref($add.ref($p3, 568), 96);
  $p244 := $add.ref($add.ref($add.ref($p3, 568), 96), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i245 := $load.i32($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i246 := $eq.i32($i245, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 6;
  assume {:branchcond $i246} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i246 == 1);
  goto $bb22;
$bb62:
  assume !(($i246 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p3, 568);
  $p248 := $add.ref($add.ref($p3, 568), 112);
  $p249 := $add.ref($add.ref($add.ref($p3, 568), 112), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i32($M.0, $p249);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i251 := $eq.i32($i250, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 7;
  assume {:branchcond $i251} true;
  goto $bb65, $bb66;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i251 == 1);
  goto $bb22;
$bb66:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p3, 568);
  $p253 := $add.ref($add.ref($p3, 568), 128);
  $p254 := $add.ref($add.ref($add.ref($p3, 568), 128), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i255 := $load.i32($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i256 := $eq.i32($i255, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 8;
  assume {:branchcond $i256} true;
  goto $bb69, $bb70;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i256 == 1);
  goto $bb22;
$bb70:
  assume !(($i256 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($p3, 568);
  $p258 := $add.ref($add.ref($p3, 568), 144);
  $p259 := $add.ref($add.ref($add.ref($p3, 568), 144), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i32($M.0, $p259);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32($i260, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 9;
  assume {:branchcond $i261} true;
  goto $bb73, $bb74;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i261 == 1);
  goto $bb22;
$bb74:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p3, 568);
  $p263 := $add.ref($add.ref($p3, 568), 160);
  $p264 := $add.ref($add.ref($add.ref($p3, 568), 160), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i265 := $load.i32($M.0, $p264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i266 := $eq.i32($i265, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 10;
  assume {:branchcond $i266} true;
  goto $bb77, $bb78;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i266 == 1);
  goto $bb22;
$bb78:
  assume !(($i266 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p3, 568);
  $p268 := $add.ref($add.ref($p3, 568), 176);
  $p269 := $add.ref($add.ref($add.ref($p3, 568), 176), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i271 := $eq.i32($i270, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 11;
  assume {:branchcond $i271} true;
  goto $bb81, $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i271 == 1);
  goto $bb22;
$bb82:
  assume !(($i271 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($p3, 568);
  $p273 := $add.ref($add.ref($p3, 568), 192);
  $p274 := $add.ref($add.ref($add.ref($p3, 568), 192), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i275 := $load.i32($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i276 := $eq.i32($i275, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 12;
  assume {:branchcond $i276} true;
  goto $bb85, $bb86;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i276 == 1);
  goto $bb22;
$bb86:
  assume !(($i276 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p3, 568);
  $p278 := $add.ref($add.ref($p3, 568), 208);
  $p279 := $add.ref($add.ref($add.ref($p3, 568), 208), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i280 := $load.i32($M.0, $p279);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i281 := $eq.i32($i280, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 13;
  assume {:branchcond $i281} true;
  goto $bb89, $bb90;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i281 == 1);
  goto $bb22;
$bb90:
  assume !(($i281 == 1));
  assume {:verifier.code 0} true;
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p3, 568);
  $p283 := $add.ref($add.ref($p3, 568), 224);
  $p284 := $add.ref($add.ref($add.ref($p3, 568), 224), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i285 := $load.i32($M.0, $p284);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i286 := $eq.i32($i285, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 14;
  assume {:branchcond $i286} true;
  goto $bb93, $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i286 == 1);
  goto $bb22;
$bb94:
  assume !(($i286 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7640, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 13} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p3, 568);
  $p288 := $add.ref($add.ref($p3, 568), 240);
  $p289 := $add.ref($add.ref($add.ref($p3, 568), 240), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 28} true;
  assume {:verifier.code 0} true;
  $i290 := $load.i32($M.0, $p289);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 39} true;
  assume {:verifier.code 0} true;
  $i291 := $eq.i32($i290, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  $i156 := 15;
  assume {:branchcond $i291} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7631, 7} true;
  assume {:verifier.code 0} true;
  assume ($i291 == 1);
  goto $bb22;
$bb98:
  assume !(($i291 == 1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:verifier.code 0} true;
  goto $bb27;
}
const can_change_mtu: ref;
axiom (can_change_mtu == $sub.ref(0, 69518));
procedure  can_change_mtu($p0: ref, $i1: i32)
  returns ($r: i32);
const netdev_priv: ref;
axiom (netdev_priv == $sub.ref(0, 70550));
procedure  netdev_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6013, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6013, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 3264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6013, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const can_dropped_invalid_skb: ref;
axiom (can_dropped_invalid_skb == $sub.ref(0, 71582));
procedure  can_dropped_invalid_skb($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i16;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
  var $i43: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6297, 44} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6297, 44} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6297, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6298, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6298, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6298, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6298, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 3072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6298, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 40} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6299, 11} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !7277, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6300, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6300, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6311, 27} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6311, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6311, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6311, 36} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 3328);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6311, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb3:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6301, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 74} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 74} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 37} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 79} true;
  assume {:verifier.code 0} true;
  $i19 := $ugt.i32($i18, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 79} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 37} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6303, 17} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv__builtin_expect($i21, 0);
  // WARNING: %26 = call i64 @ldv__builtin_expect(i64 %25, i64 0), !dbg !7289, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6304, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6304, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6329, 3} true;
  assume {:verifier.code 0} true;
  call kfree_skb($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6330, 32} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 264);
  $p45 := $add.ref($add.ref($p0, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6330, 38} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6330, 49} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i46, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6330, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 264);
  $p49 := $add.ref($add.ref($p0, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6330, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p49, $i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6331, 3} true;
  assume {:verifier.code 0} true;
  $i43 := 1;
  goto $bb20;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6305, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb7:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6310, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6327, 3} true;
  assume {:verifier.code 0} true;
  $i43 := 0;
  goto $bb20;
$bb11:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 40} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 44} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 44} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i1.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6312, 15} true;
  assume {:verifier.code 0} true;
  call $i33 := ldv__builtin_expect($i32, 0);
  // WARNING: %43 = call i64 @ldv__builtin_expect(i64 %42, i64 0), !dbg !7307, !verifier.code !7260
  call {:cexpr "tmp___1"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6313, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6313, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6325, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb13:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6314, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb14:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 74} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 74} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i8($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 37} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 79} true;
  assume {:verifier.code 0} true;
  $i38 := $ugt.i32($i37, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 79} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i1.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 37} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6316, 17} true;
  assume {:verifier.code 0} true;
  call $i41 := ldv__builtin_expect($i40, 0);
  // WARNING: %53 = call i64 @ldv__builtin_expect(i64 %52, i64 0), !dbg !7319, !verifier.code !7260
  call {:cexpr "tmp___2"} boogie_si_record_i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6318, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6318, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6319, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb16:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6324, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6333, 1} true;
  assume {:verifier.code 0} true;
  $r := $i43;
  $exn := false;
  return;
}
const ldv_usb_alloc_urb_39: ref;
axiom (ldv_usb_alloc_urb_39 == $sub.ref(0, 72614));
procedure  ldv_usb_alloc_urb_39($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !7725, metadata !7256), !dbg !7726, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8506, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8507, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := usb_alloc_urb($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8508, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const netdev_err: ref;
axiom (netdev_err == $sub.ref(0, 73646));
procedure  netdev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  netdev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 74678));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !7738, metadata !7256), !dbg !7739, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8320, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8321, 3} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_kmalloc_12($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8322, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 75710));
procedure  __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const netdev_warn: ref;
axiom (netdev_warn == $sub.ref(0, 76742));
procedure  netdev_warn.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  netdev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const __create_pipe: ref;
axiom (__create_pipe == $sub.ref(0, 77774));
procedure  __create_pipe($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %0, i64 0, metadata !7749, metadata !7256), !dbg !7750, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 39} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i32($i3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 57} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 45} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i4, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6285, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const kvaser_usb_write_bulk_callback: ref;
axiom (kvaser_usb_write_bulk_callback == $sub.ref(0, 78806));
procedure  kvaser_usb_write_bulk_callback($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i1;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i1;
  var $i24: i8;
  var $i25: i1;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7516, 54} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7516, 54} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7516, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7517, 19} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7517, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7517, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  // WARNING: %7 = zext i1 %6 to i32, !dbg !7265, !verifier.code !7258
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7518, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7518, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7518, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7518, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !7270, !verifier.code !7258
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7519, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7519, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7520, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.5, 1291);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7522, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7525, 47} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7525, 47} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i1.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7525, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7525, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := ldv__builtin_expect($i14, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7281, !verifier.code !7258
  call {:cexpr "tmp___0"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7526, 15} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7526, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7527, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7552, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7531, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7531, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7532, 18} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7532, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7533, 30} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7533, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7533, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7534, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := netif_device_present($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7534, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i8($i23);
  // WARNING: %31 = zext i1 %30 to i8, !dbg !7298, !verifier.code !7258
  call {:cexpr "tmp___1"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7535, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i8.i1($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7537, 3} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb10;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i26 := 1;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7540, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7540, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7541, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb12:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7545, 12} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7545, 12} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7545, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7545, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7546, 84} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7546, 84} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7546, 5} true;
  assume {:verifier.code 0} true;
  call $i33 := netdev_info.ref.ref.i32($p20, .str.39, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7547, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7550, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const usb_fill_bulk_urb: ref;
axiom (usb_fill_bulk_urb == $sub.ref(0, 79838));
procedure  usb_fill_bulk_urb($p0: ref, $p1: ref, $i2: i32, $p3: ref, $i4: i32, $p5: ref, $p6: ref)
{
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %1, i64 0, metadata !7831, metadata !7256), !dbg !7832, !verifier.code !7258
  // WARNING: call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !7835, metadata !7256), !dbg !7836, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6252, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6252, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6253, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6253, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6254, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6254, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6255, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6255, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6256, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6256, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6257, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6257, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6258, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_anchor_urb: ref;
axiom (usb_anchor_urb == $sub.ref(0, 80870));
procedure  usb_anchor_urb($p0: ref, $p1: ref);
const can_put_echo_skb: ref;
axiom (can_put_echo_skb == $sub.ref(0, 81902));
procedure  can_put_echo_skb($p0: ref, $p1: ref, $i2: i32);
const atomic_inc: ref;
axiom (atomic_inc == $sub.ref(0, 82934));
procedure  atomic_inc($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5780, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  call devirtbounce(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5781, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 83966));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5763, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5763, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5763, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const netif_stop_queue: ref;
axiom (netif_stop_queue == $sub.ref(0, 84998));
procedure  netif_stop_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6090, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6091, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6092, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_submit_urb_40: ref;
axiom (ldv_usb_submit_urb_40 == $sub.ref(0, 86030));
procedure  ldv_usb_submit_urb_40($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !7887, metadata !7256), !dbg !7888, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8516, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8517, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := usb_submit_urb($p0, $i1);
  // WARNING: %3 = call i32 @usb_submit_urb(%struct.urb* %0, i32 %1), !dbg !7265, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8518, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 87062));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !7900, metadata !7256), !dbg !7901, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5926, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const can_free_echo_skb: ref;
axiom (can_free_echo_skb == $sub.ref(0, 88094));
procedure  can_free_echo_skb($p0: ref, $i1: i32);
const atomic_dec: ref;
axiom (atomic_dec == $sub.ref(0, 89126));
procedure  atomic_dec($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5789, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  call devirtbounce(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5790, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_unanchor_urb: ref;
axiom (usb_unanchor_urb == $sub.ref(0, 90158));
procedure  usb_unanchor_urb($p0: ref);
const netif_device_detach: ref;
axiom (netif_device_detach == $sub.ref(0, 91190));
procedure  netif_device_detach($p0: ref);
const usb_free_urb: ref;
axiom (usb_free_urb == $sub.ref(0, 92222));
procedure  usb_free_urb($p0: ref);
const kfree: ref;
axiom (kfree == $sub.ref(0, 93254));
procedure  kfree($p0: ref);
const consume_skb: ref;
axiom (consume_skb == $sub.ref(0, 94286));
procedure  consume_skb($p0: ref);
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 95318));
procedure  ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 21} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8555, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 33} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8556, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8553, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb2;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8558, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_submit_urb: ref;
axiom (usb_submit_urb == $sub.ref(0, 96350));
procedure  usb_submit_urb($p0: ref, $i1: i32)
  returns ($r: i32);
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 97382));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5907, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5909, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5911, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_get_tx_queue: ref;
axiom (netdev_get_tx_queue == $sub.ref(0, 98414));
procedure  netdev_get_tx_queue($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !7939, metadata !7256), !dbg !7940, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6005, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 920);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6005, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6005, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6005, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 496));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6005, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const netif_tx_stop_queue: ref;
axiom (netif_tx_stop_queue == $sub.ref(0, 99446));
procedure  netif_tx_stop_queue($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6067, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6067, 45} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6067, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  // WARNING: %4 = zext i1 %3 to i32, !dbg !7263, !verifier.code !7260
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6068, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6068, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6068, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6068, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 0);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 0), !dbg !7268, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6069, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6069, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6070, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.21, 2212);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6071, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6074, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6074, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6074, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6074, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !7279, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6075, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6076, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := printk.ref(.str.22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6077, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6084, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6081, 57} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6081, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6082, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 100478));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const printk: ref;
axiom (printk == $sub.ref(0, 101510));
procedure  printk.ref($p0: ref)
  returns ($r: i32);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 102542));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.1(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5711, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_device_present: ref;
axiom (netif_device_present == $sub.ref(0, 103574));
procedure  netif_device_present($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6123, 73} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6123, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(1, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 1, i64* %2), !dbg !7263, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6124, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6124, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const netdev_info: ref;
axiom (netdev_info == $sub.ref(0, 104606));
procedure  netdev_info.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const constant_test_bit: ref;
axiom (constant_test_bit == $sub.ref(0, 105638));
procedure  constant_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 63} true;
  assume {:verifier.code 0} true;
  $i2 := $ashr.i64($i0, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref($i2, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 74} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 83} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 70} true;
  assume {:verifier.code 0} true;
  $i8 := $lshr.i64($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 90} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5738, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const ldv_kmalloc_12: ref;
axiom (ldv_kmalloc_12 == $sub.ref(0, 106670));
procedure  ldv_kmalloc_12($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8023, metadata !7256), !dbg !8024, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5827, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5828, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 107702));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const usb_alloc_urb: ref;
axiom (usb_alloc_urb == $sub.ref(0, 108734));
procedure  usb_alloc_urb($i0: i32, $i1: i32)
  returns ($r: ref);
const kfree_skb: ref;
axiom (kfree_skb == $sub.ref(0, 109766));
procedure  kfree_skb($p0: ref);
const kvaser_usb_flush_queue: ref;
axiom (kvaser_usb_flush_queue == $sub.ref(0, 110798));
procedure  kvaser_usb_flush_queue($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7449, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := kmalloc(32, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7450, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7451, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7452, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7464, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7456, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7456, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7457, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7457, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 43} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 43} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 22} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7458, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7459, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7459, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7459, 22} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7459, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7460, 63} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7460, 63} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7460, 8} true;
  assume {:verifier.code 0} true;
  call $i19 := kvaser_usb_send_msg($p18, $p2);
  // WARNING: %22 = call i32 @kvaser_usb_send_msg(%struct.kvaser_usb* %21, %struct.kvaser_msg* %3), !dbg !7289, !verifier.code !7260
  call {:cexpr "rc"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7461, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7461, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7462, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i19;
  goto $bb3;
}
const kvaser_usb_send_simple_msg: ref;
axiom (kvaser_usb_send_simple_msg == $sub.ref(0, 111830));
procedure  kvaser_usb_send_simple_msg($p0: ref, $i1: i8, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i8;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb* %0, i64 0, metadata !8075, metadata !7256), !dbg !8076, !verifier.code !7258
  // WARNING: call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !8077, metadata !7256), !dbg !8078, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6505, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := kmalloc(32, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6506, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6507, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6507, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6508, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6520, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6512, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6512, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p8, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6513, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6513, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6514, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6514, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6514, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6514, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6514, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6515, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6515, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6515, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6515, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6516, 8} true;
  assume {:verifier.code 0} true;
  call $i17 := kvaser_usb_send_msg($p0, $p4);
  // WARNING: %20 = call i32 @kvaser_usb_send_msg(%struct.kvaser_usb* %0, %struct.kvaser_msg* %5), !dbg !7291, !verifier.code !7260
  call {:cexpr "rc"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6517, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6517, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6518, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i17;
  goto $bb3;
}
const kvaser_usb_stop_chip: ref;
axiom (kvaser_usb_stop_chip == $sub.ref(0, 112862));
procedure  kvaser_usb_stop_chip($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7425, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 920);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7425, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7426, 71} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7426, 71} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7426, 86} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7426, 86} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7426, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := kvaser_usb_send_simple_msg($p3, 28, $i5);
  // WARNING: %7 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %4, i8 zeroext 28, i32 %6), !dbg !7266, !verifier.code !7260
  call {:cexpr "err"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7427, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7428, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i6;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7441, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7432, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := msecs_to_jiffies(1000);
  // WARNING: %12 = call i64 @msecs_to_jiffies(i32 1000), !dbg !7274, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7433, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 920);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7433, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := wait_for_completion_timeout($p10, $i9);
  // WARNING: %14 = call i64 @wait_for_completion_timeout(%struct.completion* %13, i64 %12), !dbg !7278, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7434, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7434, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7435, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 110);
  goto $bb3;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7439, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
}
const close_candev: ref;
axiom (close_candev == $sub.ref(0, 113894));
procedure  close_candev($p0: ref);
const init_completion: ref;
axiom (init_completion == $sub.ref(0, 114926));
procedure  init_completion($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5808, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5808, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5809, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5809, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p3, .str.14, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5810, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const msecs_to_jiffies: ref;
axiom (msecs_to_jiffies == $sub.ref(0, 115958));
procedure  msecs_to_jiffies($i0: i32)
  returns ($r: i64);
const wait_for_completion_timeout: ref;
axiom (wait_for_completion_timeout == $sub.ref(0, 116990));
procedure  wait_for_completion_timeout($p0: ref, $i1: i64)
  returns ($r: i64);
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 118022));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);
const kvaser_usb_send_msg: ref;
axiom (kvaser_usb_send_msg == $sub.ref(0, 119054));
procedure  kvaser_usb_send_msg($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 28} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 55} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 55} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 66} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 34} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6420, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := __create_pipe($p4, $i9);
  // WARNING: %11 = call i32 @__create_pipe(%struct.usb_device* %5, i32 %10), !dbg !7270, !verifier.code !7257
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 31} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 31} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 41} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i10, $sub.i32(0, 1073741824));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 56} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 80} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 80} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 69} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6421, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := usb_bulk_msg($p12, $i13, $p14, $i17, $p2, 1000);
  // WARNING: %19 = call i32 @usb_bulk_msg(%struct.usb_device* %13, i32 %14, i8* %15, i32 %18, i32* %3, i32 1000), !dbg !7278, !verifier.code !7257
  call {:cexpr "tmp___0"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6423, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const usb_bulk_msg: ref;
axiom (usb_bulk_msg == $sub.ref(0, 120086));
procedure  usb_bulk_msg($p0: ref, $i1: i32, $p2: ref, $i3: i32, $p4: ref, $i5: i32)
  returns ($r: i32);
const open_candev: ref;
axiom (open_candev == $sub.ref(0, 121118));
procedure  open_candev($p0: ref)
  returns ($r: i32);
const kvaser_usb_setup_rx_urbs: ref;
axiom (kvaser_usb_setup_rx_urbs == $sub.ref(0, 122150));
procedure  kvaser_usb_setup_rx_urbs($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i1;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $i6: i32;
  var $i69: i32;
  var $i70: i32;
  var $i17: i32;
  var $i18: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $p85: ref;
  var $i5: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata i64* %2, metadata !8188, metadata !7256), !dbg !8189, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7216, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7216, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7216, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7216, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7217, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7283, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7264, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7265, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7226, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := ldv_usb_alloc_urb_36(0, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7227, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7227, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7227, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i6;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i9 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7228, 45} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7228, 45} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7228, 52} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 144);
  $p14 := $add.ref($p12, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7228, 56} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7228, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := dev_warn.ref.ref($p15, .str.15);
  // WARNING: %19 = call i32 (%struct.device*, i8*, ...) @dev_warn(%struct.device* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i32 0, i32 0)), !dbg !7287, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7230, 5} true;
  assume {:verifier.code 0} true;
  $i17, $i18 := $i10, $sub.i32(0, 12);
  goto $bb9;
$bb8:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7270, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7270, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb20, $bb21;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7234, 40} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7234, 40} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  call $p21 := ldv_usb_alloc_coherent_37($p20, 3072, 208, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7236, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7236, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7236, 7} true;
  assume {:verifier.code 0} true;
  $i24, $p25 := $i6, $p7;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7237, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7237, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7237, 52} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 144);
  $p29 := $add.ref($p27, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7237, 56} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7237, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := dev_warn.ref.ref($p30, .str.24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7238, 5} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p25);
  // WARNING: call void @usb_free_urb(%struct.urb* %.lcssa6), !dbg !7302, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7240, 5} true;
  assume {:verifier.code 0} true;
  $i17, $i18 := $i24, $sub.i32(0, 12);
  goto $bb9;
$bb12:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 32} true;
  assume {:verifier.code 0} true;
  $p32 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 32} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 59} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 59} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 69} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 69} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 38} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7244, 13} true;
  assume {:verifier.code 0} true;
  call $i39 := __create_pipe($p33, $i38);
  // WARNING: %43 = call i32 @__create_pipe(%struct.usb_device* %37, i32 %42), !dbg !7308, !verifier.code !7257
  call {:cexpr "tmp___0"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7245, 31} true;
  assume {:verifier.code 0} true;
  $p40 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7245, 31} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7245, 45} true;
  assume {:verifier.code 0} true;
  $i42 := $or.i32($i39, $sub.i32(0, 1073741696));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7246, 21} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7245, 3} true;
  assume {:verifier.code 0} true;
  call usb_fill_bulk_urb($p7, $p41, $i42, $p21, 3072, kvaser_usb_read_bulk_callback, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7247, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7247, 8} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p7, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7247, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7248, 30} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p7, 100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7248, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7248, 45} true;
  assume {:verifier.code 0} true;
  $i48 := $or.i32($i47, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7248, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p7, 100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7248, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7249, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7249, 3} true;
  assume {:verifier.code 0} true;
  call usb_anchor_urb($p7, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7250, 9} true;
  assume {:verifier.code 0} true;
  call $i51 := ldv_usb_submit_urb_38($p7, 208);
  // WARNING: %55 = call i32 @ldv_usb_submit_urb_38(%struct.urb* %10, i32 208), !dbg !7324, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7251, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7251, 7} true;
  assume {:verifier.code 0} true;
  $i53, $p54, $p55, $i56 := $i6, $p7, $p21, $i51;
  assume {:branchcond $i52} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i52 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7252, 5} true;
  assume {:verifier.code 0} true;
  call usb_unanchor_urb($p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7253, 28} true;
  assume {:verifier.code 0} true;
  $p57 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7253, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7253, 55} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i64($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7253, 5} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p58, 3072, $p55, $i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7254, 5} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7255, 5} true;
  assume {:verifier.code 0} true;
  $i17, $i18 := $i53, $i56;
  goto $bb9;
$bb15:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7259, 3} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7259, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 248);
  $p62 := $add.ref($add.ref($p0, 248), $mul.ref($i60, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7259, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7260, 23} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i64($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7260, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7260, 8} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 280);
  $p66 := $add.ref($add.ref($p0, 280), $mul.ref($i64, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7260, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p66, $i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7261, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7262, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i6, 1);
  // WARNING: %70 = add nsw i32 %.0115, 1, !dbg !7343, !verifier.code !7257
  call {:cexpr "i"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7264, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $sle.i32($i67, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7264, 7} true;
  assume {:verifier.code 0} true;
  $i6, $i69, $i70 := $i67, $i51, $i67;
  assume {:branchcond $i68} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7264, 7} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb5;
$bb18:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7264, 12} true;
  assume {:verifier.code 0} true;
  $i17, $i18 := $i70, $i69;
  goto $bb9;
$bb20:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7271, 45} true;
  assume {:verifier.code 0} true;
  $p72 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7271, 45} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7271, 52} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p73, 144);
  $p75 := $add.ref($p73, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7271, 56} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7271, 5} true;
  assume {:verifier.code 0} true;
  call $i77 := dev_warn.ref.ref.i32($p76, .str.25, $i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7273, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $i18;
  goto $bb3;
$bb21:
  assume !(($i71 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7275, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $sle.i32($i17, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7275, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7276, 45} true;
  assume {:verifier.code 0} true;
  $p79 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7276, 45} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7276, 52} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p80, 144);
  $p82 := $add.ref($p80, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7276, 56} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7276, 5} true;
  assume {:verifier.code 0} true;
  call $i84 := dev_warn.ref.ref($p83, .str.26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7277, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7280, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7280, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p85, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7281, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
}
const kvaser_usb_set_opt_mode: ref;
axiom (kvaser_usb_set_opt_mode == $sub.ref(0, 123182));
procedure  kvaser_usb_set_opt_mode($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i8;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7291, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := kmalloc(32, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7292, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7293, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7293, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7293, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7294, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7311, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7298, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7298, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7299, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7299, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7300, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7300, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7300, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7300, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 41} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 41} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 30} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7301, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7302, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $p0;
  $p18 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7302, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7302, 42} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7302, 48} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7303, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7303, 12} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7303, 22} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7303, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p24, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7304, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7305, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7305, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7305, 22} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7305, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7307, 63} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7307, 63} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7307, 8} true;
  assume {:verifier.code 0} true;
  call $i30 := kvaser_usb_send_msg($p29, $p2);
  // WARNING: %36 = call i32 @kvaser_usb_send_msg(%struct.kvaser_usb* %35, %struct.kvaser_msg* %3), !dbg !7306, !verifier.code !7260
  call {:cexpr "rc"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7308, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7308, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7309, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i30;
  goto $bb3;
}
const kvaser_usb_start_chip: ref;
axiom (kvaser_usb_start_chip == $sub.ref(0, 124214));
procedure  kvaser_usb_start_chip($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7319, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7319, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7320, 71} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7320, 71} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7320, 86} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7320, 86} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7320, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := kvaser_usb_send_simple_msg($p3, 26, $i5);
  // WARNING: %7 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %4, i8 zeroext 26, i32 %6), !dbg !7266, !verifier.code !7260
  call {:cexpr "err"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7321, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7322, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i6;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7335, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7326, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := msecs_to_jiffies(1000);
  // WARNING: %12 = call i64 @msecs_to_jiffies(i32 1000), !dbg !7274, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7327, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7327, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := wait_for_completion_timeout($p10, $i9);
  // WARNING: %14 = call i64 @wait_for_completion_timeout(%struct.completion* %13, i64 %12), !dbg !7278, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7328, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7328, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7329, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 110);
  goto $bb3;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7333, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
}
const ldv_usb_alloc_urb_36: ref;
axiom (ldv_usb_alloc_urb_36 == $sub.ref(0, 125246));
procedure  ldv_usb_alloc_urb_36($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !8387, metadata !7256), !dbg !8388, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8475, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8476, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := usb_alloc_urb($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8477, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_warn: ref;
axiom (dev_warn == $sub.ref(0, 126278));
procedure  dev_warn.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  dev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const ldv_usb_alloc_coherent_37: ref;
axiom (ldv_usb_alloc_coherent_37 == $sub.ref(0, 127310));
procedure  ldv_usb_alloc_coherent_37($p0: ref, $i1: i64, $i2: i32, $p3: ref)
  returns ($r: ref)
{
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %0, i64 0, metadata !8400, metadata !7256), !dbg !8401, !verifier.code !7258
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !8402, metadata !7256), !dbg !8403, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8486, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8487, 3} true;
  assume {:verifier.code 0} true;
  call $p4 := usb_alloc_coherent($p0, $i1, $i2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8488, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const kvaser_usb_read_bulk_callback: ref;
axiom (kvaser_usb_read_bulk_callback == $sub.ref(0, 128342));
procedure  kvaser_usb_read_bulk_callback($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i20: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $i75: i1;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i69: i32;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7133, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7133, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7133, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb* %4, i64 0, metadata !8418, metadata !7256), !dbg !8419, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7135, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7135, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, $sub.i32(0, 2));
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i5, $sub.i32(0, 108));
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb11, $bb13;
$bb3:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, $sub.i32(0, 2));
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7137, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb9:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7137, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb11:
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7140, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb13:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb8;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 25} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb18;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7203, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7142, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7142, 44} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7142, 51} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 144);
  $p14 := $add.ref($p12, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7142, 55} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7143, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7143, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7142, 3} true;
  assume {:verifier.code 0} true;
  call $i18 := _dev_info.ref.ref.i32($p15, .str.27, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7144, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 28} true;
  assume {:verifier.code 0} true;
  $p50 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 28} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 55} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 55} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 65} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 65} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 34} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7171, 9} true;
  assume {:verifier.code 0} true;
  call $i57 := __create_pipe($p51, $i56);
  // WARNING: %69 = call i32 @__create_pipe(%struct.usb_device* %63, i32 %68), !dbg !7323, !verifier.code !7258
  call {:cexpr "tmp"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 31} true;
  assume {:verifier.code 0} true;
  $p58 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 31} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 41} true;
  assume {:verifier.code 0} true;
  $i60 := $or.i32($i57, $sub.i32(0, 1073741696));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 61} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 61} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7173, 54} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7172, 3} true;
  assume {:verifier.code 0} true;
  call usb_fill_bulk_urb($p0, $p59, $i60, $p62, 3072, kvaser_usb_read_bulk_callback, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7174, 9} true;
  assume {:verifier.code 0} true;
  call $i64 := ldv_usb_submit_urb_35($p0, 32);
  // WARNING: %76 = call i32 @ldv_usb_submit_urb_35(%struct.urb* %0, i32 32), !dbg !7331, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7175, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, $sub.i32(0, 19));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb30, $bb31;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7165, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7149, 35} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7149, 35} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7149, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7149, 53} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7149, 51} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p23, $mul.ref($i24, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7150, 27} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p23, $mul.ref($i24, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7150, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7150, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7150, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7150, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7151, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 41} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 25} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p23, $mul.ref($i24, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 25} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 14} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32, $i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 43} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 43} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $ugt.i32($i33, $i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7155, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7156, 44} true;
  assume {:verifier.code 0} true;
  $p37 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7156, 44} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7156, 51} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 144);
  $p40 := $add.ref($p38, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7156, 55} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7156, 5} true;
  assume {:verifier.code 0} true;
  call $i42 := dev_err.ref.ref($p41, .str.9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7157, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb25:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7161, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_handle_message($p3, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7162, 20} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p23, $mul.ref($i24, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7162, 20} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7162, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7162, 24} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45, $i20);
  // WARNING: %53 = add nsw i32 %52, %.079, !dbg !7310, !verifier.code !7258
  call {:cexpr "pos"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 25} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 39} true;
  assume {:verifier.code 0} true;
  $i48 := $sub.i32($i47, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $ule.i32($i46, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $i46;
  assume {:branchcond $i49} true;
  goto $bb27, $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  assume ($i49 == 1);
  goto $bb18;
$bb28:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7164, 41} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb30:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 33} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p3, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 26} true;
  assume {:verifier.code 0} true;
  $i68 := $ult.i32(0, $i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7195, 11} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7195, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb45, $bb46;
$bb32:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  $i69 := 0;
  goto $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i68 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7189, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 25} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 30} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p3, 8);
  $p72 := $add.ref($add.ref($p3, 8), $mul.ref($i70, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 25} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 38} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i64($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7179, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7180, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7186, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i32($i69, 1);
  // WARNING: %99 = add nsw i32 %.08, 1, !dbg !7356, !verifier.code !7258
  call {:cexpr "i"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 33} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 26} true;
  assume {:verifier.code 0} true;
  $i84 := $ult.i32($i82, $i83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  $i69 := $i82;
  assume {:branchcond $i84} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 26} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 31} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p3, 8);
  $p78 := $add.ref($add.ref($p3, 8), $mul.ref($i76, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 26} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 41} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p79, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 41} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 5} true;
  assume {:verifier.code 0} true;
  call netif_device_detach($p81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7184, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  assume ($i84 == 1);
  goto $bb35;
$bb42:
  assume !(($i84 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7188, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7194, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7201, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb45:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7196, 44} true;
  assume {:verifier.code 0} true;
  $p86 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7196, 44} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7196, 51} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, 144);
  $p89 := $add.ref($p87, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7196, 55} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7196, 5} true;
  assume {:verifier.code 0} true;
  call $i91 := dev_err.ref.ref.i32($p90, .str.28, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7198, 3} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb44;
}
const ldv_usb_submit_urb_38: ref;
axiom (ldv_usb_submit_urb_38 == $sub.ref(0, 129374));
procedure  ldv_usb_submit_urb_38($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !8528, metadata !7256), !dbg !8529, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8496, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8497, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := usb_submit_urb($p0, $i1);
  // WARNING: %3 = call i32 @usb_submit_urb(%struct.urb* %0, i32 %1), !dbg !7265, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8498, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const usb_free_coherent: ref;
axiom (usb_free_coherent == $sub.ref(0, 130406));
procedure  usb_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const _dev_info: ref;
axiom (_dev_info == $sub.ref(0, 131438));
procedure  _dev_info.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 132470));
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  dev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const kvaser_usb_handle_message: ref;
axiom (kvaser_usb_handle_message == $sub.ref(0, 133502));
procedure  kvaser_usb_handle_message($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7095, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7095, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7095, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 29);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i4, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb19, $bb20;
$bb3:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i4, 51);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i4, 50);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb15, $bb16;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i4, 106);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i4, 51);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb12, $bb14;
$bb7:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i4, 106);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb8, $bb10;
$bb8:
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7105, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_rx_can_msg($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7106, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb12:
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7109, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_rx_error($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7110, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb11;
$bb15:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i4, 29);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7112, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_tx_acknowledge($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7113, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb17:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7100, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_stop_chip_reply($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7101, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb18:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb11;
$bb19:
  assume ($i12 == 1);
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i4, 14);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb27, $bb28;
$bb20:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i4, 27);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i4, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb25, $bb26;
$bb22:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i4, 27);
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7097, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_start_chip_reply($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7098, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb24:
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb11;
$bb25:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7106, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb26:
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb11;
$bb27:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i4, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb32, $bb33;
$bb28:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i4, 14);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb29, $bb31;
$bb29:
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7101, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb31:
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb11;
$bb32:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7101, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb33:
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb11;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7120, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7115, 43} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7115, 43} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7115, 50} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 144);
  $p22 := $add.ref($p20, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7115, 54} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7116, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7116, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7116, 12} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7115, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := dev_warn.ref.ref.i32($p23, .str.29, $i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7117, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
}
const ldv_usb_submit_urb_35: ref;
axiom (ldv_usb_submit_urb_35 == $sub.ref(0, 134534));
procedure  ldv_usb_submit_urb_35($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !8573, metadata !7256), !dbg !8574, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8465, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8466, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := usb_submit_urb($p0, $i1);
  // WARNING: %3 = call i32 @usb_submit_urb(%struct.urb* %0, i32 %1), !dbg !7265, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8467, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const kvaser_usb_start_chip_reply: ref;
axiom (kvaser_usb_start_chip_reply == $sub.ref(0, 135566));
procedure  kvaser_usb_start_chip_reply($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i1;
  var $i24: i8;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i1;
  var $i29: i8;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7046, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7046, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7046, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7046, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  // WARNING: %6 = load i8, i8* %5, align 1, !dbg !7266, !verifier.code !7260
  call {:cexpr "channel"} boogie_si_record_i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7047, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7047, 53} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7047, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7047, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i32($i6, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7047, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7048, 44} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7048, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7048, 51} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 144);
  $p13 := $add.ref($p11, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7048, 55} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7049, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7048, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := dev_err.ref.ref.i32($p14, .str.30, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7050, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7070, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7054, 20} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7054, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7054, 15} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 8);
  $p20 := $add.ref($add.ref($p0, 8), $mul.ref($i18, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7054, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7055, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7055, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := completion_done($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7055, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i8($i23);
  // WARNING: %28 = zext i1 %27 to i8, !dbg !7288, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7056, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i8.i1($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7056, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7057, 70} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p21, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7057, 70} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7057, 15} true;
  assume {:verifier.code 0} true;
  call $i28 := netif_queue_stopped($p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7057, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i8($i28);
  // WARNING: %34 = zext i1 %33 to i8, !dbg !7297, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7058, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i8.i1($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7058, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i25 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7065, 29} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p21, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7065, 29} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7065, 5} true;
  assume {:verifier.code 0} true;
  call netif_start_queue($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7066, 22} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p21, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7066, 5} true;
  assume {:verifier.code 0} true;
  call complete_($p38);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7059, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p21, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7059, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7059, 7} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7060, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7061, 31} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p21, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7061, 31} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7061, 7} true;
  assume {:verifier.code 0} true;
  call netif_start_queue($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7062, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p21, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7062, 7} true;
  assume {:verifier.code 0} true;
  call complete_($p35);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7064, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7068, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const kvaser_usb_stop_chip_reply: ref;
axiom (kvaser_usb_stop_chip_reply == $sub.ref(0, 136598));
procedure  kvaser_usb_stop_chip_reply($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7077, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7077, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7077, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7077, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  // WARNING: %6 = load i8, i8* %5, align 1, !dbg !7266, !verifier.code !7260
  call {:cexpr "channel"} boogie_si_record_i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7078, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7078, 53} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7078, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7078, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i32($i6, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7078, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7079, 44} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7079, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7079, 51} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 144);
  $p13 := $add.ref($p11, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7079, 55} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7080, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7079, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := dev_err.ref.ref.i32($p14, .str.30, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7081, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7089, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7085, 20} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7085, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7085, 15} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 8);
  $p20 := $add.ref($add.ref($p0, 8), $mul.ref($i18, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7085, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7086, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 920);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7086, 3} true;
  assume {:verifier.code 0} true;
  call complete_($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7087, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const kvaser_usb_rx_can_msg: ref;
axiom (kvaser_usb_rx_can_msg == $sub.ref(0, 137630));
procedure  kvaser_usb_rx_can_msg($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i64;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $i48: i64;
  var $i49: i64;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $i57: i32;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i69: i8;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i32;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i32;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i8;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $i101: i32;
  var $i103: i32;
  var $i102: i32;
  var $i104: i8;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i8;
  var $i111: i64;
  var $i112: i64;
  var $i113: i1;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $i117: i32;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i8;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $i131: i32;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i8;
  var $i145: i32;
  var $i146: i32;
  var $i147: i32;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i8;
  var $i152: i32;
  var $i153: i1;
  var $p154: ref;
  var $p155: ref;
  var $i156: i32;
  var $i157: i32;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $i162: i32;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $i167: i8;
  var $i168: i32;
  var $i169: i32;
  var $i170: i32;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $i175: i8;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: i8;
  var $i184: i32;
  var $i185: i32;
  var $i186: i32;
  var $i187: i32;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $i200: i8;
  var $i201: i32;
  var $i202: i32;
  var $i203: i1;
  var $i204: i32;
  var $i206: i32;
  var $i205: i32;
  var $i207: i8;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $i213: i8;
  var $i214: i64;
  var $i215: i64;
  var $i216: i1;
  var $p217: ref;
  var $p218: ref;
  var $i219: i32;
  var $i220: i32;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $i225: i8;
  var $i226: i64;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $i235: i32;
  var $i236: i32;
  var $p237: ref;
  var $i238: i64;
  var $i239: i64;
  var $p240: ref;
  var $p241: ref;
  var $i242: i64;
  var $p243: ref;
  var $p244: ref;
  var $i245: i8;
  var $i246: i64;
  var $i247: i64;
  var $p248: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6963, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6963, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6963, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6963, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %6, align 4, !dbg !7268, !verifier.code !7257
  call {:cexpr "channel"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6964, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6964, 53} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6964, 53} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6964, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $uge.i32($i7, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6964, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6965, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6965, 44} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6965, 51} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 144);
  $p14 := $add.ref($p12, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6965, 55} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6966, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6965, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := dev_err.ref.ref.i32($p15, .str.30, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6967, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7037, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6971, 20} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6971, 10} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6971, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 8);
  $p21 := $add.ref($add.ref($p0, 8), $mul.ref($i19, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6971, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6972, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6972, 20} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6972, 29} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 18} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 20} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 27} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 27} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 32} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 32} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 76} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 76} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 80} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 29} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 38} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 38} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 8} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 43} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i64($i41, 7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 50} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6977, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb10, $bb11;
$bb8:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6974, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_rx_error($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6975, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6973, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb7;
$bb10:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6978, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_rx_can_err($p22, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6979, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 29} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 31} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 38} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 38} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 8} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 43} true;
  assume {:verifier.code 0} true;
  $i49 := $and.i64($i48, $sub.i64(0, 17));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 67} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6982, 52} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p22, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6982, 52} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6983, 28} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6983, 30} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6983, 37} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6983, 37} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6983, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6982, 5} true;
  assume {:verifier.code 0} true;
  call $i58 := netdev_warn.ref.ref.i32($p52, .str.31, $i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6984, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb13:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6988, 29} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p22, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6988, 29} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6988, 9} true;
  assume {:verifier.code 0} true;
  call $p61 := alloc_can_skb($p60, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6989, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6989, 27} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6989, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i63 == 1);
  $p64 := $add.ref($add.ref($p24, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6990, 32} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i64($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6990, 43} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 1);
  $p67 := $add.ref($add.ref($p24, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6990, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p67, $i66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6991, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb18:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6995, 44} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6995, 44} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6995, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6995, 48} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, 106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6995, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 23} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 25} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 37} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p73, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 37} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 5} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 9} true;
  assume {:verifier.code 0} true;
  $p77 := $p76;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6996, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p77, $i75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6997, 15} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6997, 19} true;
  assume {:verifier.code 0} true;
  $p79 := $p78;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6997, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6997, 26} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6997, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i71 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 42} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 44} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 51} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p133, 8);
  $p135 := $add.ref($p133, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 37} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 31} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 58} true;
  assume {:verifier.code 0} true;
  $i138 := $and.i32($i137, 31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 64} true;
  assume {:verifier.code 0} true;
  $i139 := $shl.i32($i138, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 84} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 86} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 93} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p141, 8);
  $p143 := $add.ref($add.ref($p141, 8), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 79} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i8($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 73} true;
  assume {:verifier.code 0} true;
  $i145 := $zext.i8.i32($i144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 100} true;
  assume {:verifier.code 0} true;
  $i146 := $and.i32($i145, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 70} true;
  assume {:verifier.code 0} true;
  $i147 := $or.i32($i139, $i146);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 5} true;
  assume {:verifier.code 0} true;
  $p148 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 9} true;
  assume {:verifier.code 0} true;
  $p149 := $p148;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7013, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7014, 46} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7014, 46} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i8($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7014, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i8.i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7014, 50} true;
  assume {:verifier.code 0} true;
  $i153 := $eq.i32($i152, 14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7014, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb32, $bb33;
$bb22:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 20} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 24} true;
  assume {:verifier.code 0} true;
  $p83 := $p82;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 31} true;
  assume {:verifier.code 0} true;
  $i85 := $and.i32($i84, $sub.i32(0, 1610612737));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 7} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 11} true;
  assume {:verifier.code 0} true;
  $p87 := $p86;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6998, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6999, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i81 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 20} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 24} true;
  assume {:verifier.code 0} true;
  $p89 := $p88;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 24} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 31} true;
  assume {:verifier.code 0} true;
  $i91 := $and.i32($i90, 2047);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 7} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 11} true;
  assume {:verifier.code 0} true;
  $p93 := $p92;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7000, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, $i91);
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7002, 19} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7002, 21} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7002, 33} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7002, 33} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.0, $p96);
  // WARNING: %118 = load i8, i8* %117, align 4, !dbg !7381, !verifier.code !7257
  call {:cexpr "__min1"} boogie_si_record_i8($i97);
  // WARNING: call void @llvm.dbg.value(metadata i8 %118, i64 0, metadata !8801, metadata !7256), !dbg !8802, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 27} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 42} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i8.i32(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 40} true;
  assume {:verifier.code 0} true;
  $i100 := $slt.i32($i98, $i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 57} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 27} true;
  assume {:verifier.code 0} true;
  $i102 := $i101;
  goto $bb27;
$bb26:
  assume !(($i100 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 66} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 27} true;
  assume {:verifier.code 0} true;
  $i102 := $i103;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 19} true;
  assume {:verifier.code 0} true;
  $i104 := $trunc.i32.i8($i102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 5} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 9} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7004, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p106, $i104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 31} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 33} true;
  assume {:verifier.code 0} true;
  $p108 := $bitcast.ref.ref($p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 45} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p108, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 45} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i8($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 10} true;
  assume {:verifier.code 0} true;
  $i111 := $zext.i8.i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 51} true;
  assume {:verifier.code 0} true;
  $i112 := $and.i64($i111, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 59} true;
  assume {:verifier.code 0} true;
  $i113 := $ne.i64($i112, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7005, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i113 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 20} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 24} true;
  assume {:verifier.code 0} true;
  $p115 := $p114;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 24} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 31} true;
  assume {:verifier.code 0} true;
  $i117 := $or.i32($i116, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 7} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 11} true;
  assume {:verifier.code 0} true;
  $p119 := $p118;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7006, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p119, $i117);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7007, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i113 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7008, 24} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7008, 28} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p120, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7008, 28} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7008, 15} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i64($i122);
  // WARNING: %149 = zext i8 %148 to i64, !dbg !7420, !verifier.code !7257
  call {:cexpr "__len"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 43} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 47} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p124, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 32} true;
  assume {:verifier.code 0} true;
  $p126 := $bitcast.ref.ref($p125);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 78} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 80} true;
  assume {:verifier.code 0} true;
  $p128 := $bitcast.ref.ref($p127);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 92} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p128, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 54} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7009, 15} true;
  assume {:verifier.code 0} true;
  call $i131 := __builtinx_memcpy.ref.ref.i64($p126, $p130, $i123);
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7012, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7032, 3} true;
  assume {:verifier.code 0} true;
  call $i236 := netif_rx($p61);
  $p237 := $add.ref($p24, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7033, 30} true;
  assume {:verifier.code 0} true;
  $i238 := $load.i64($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7033, 41} true;
  assume {:verifier.code 0} true;
  $i239 := $add.i64($i238, 1);
  $p240 := $add.ref($p24, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7033, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p240, $i239);
  $p241 := $add.ref($add.ref($p24, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 28} true;
  assume {:verifier.code 0} true;
  $i242 := $load.i64($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 55} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 59} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p243, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 59} true;
  assume {:verifier.code 0} true;
  $i245 := $load.i8($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 39} true;
  assume {:verifier.code 0} true;
  $i246 := $zext.i8.i64($i245);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 37} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i64($i242, $i246);
  $p248 := $add.ref($add.ref($p24, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7034, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p248, $i247);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7035, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb32:
  assume ($i153 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 20} true;
  assume {:verifier.code 0} true;
  $p154 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 24} true;
  assume {:verifier.code 0} true;
  $p155 := $p154;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 24} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 31} true;
  assume {:verifier.code 0} true;
  $i157 := $shl.i32($i156, 18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 7} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 11} true;
  assume {:verifier.code 0} true;
  $p159 := $p158;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7015, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p159, $i157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 20} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 24} true;
  assume {:verifier.code 0} true;
  $p161 := $p160;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 24} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i32($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 58} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 60} true;
  assume {:verifier.code 0} true;
  $p164 := $bitcast.ref.ref($p163);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 67} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p164, 8);
  $p166 := $add.ref($add.ref($p164, 8), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 53} true;
  assume {:verifier.code 0} true;
  $i167 := $load.i8($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 47} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.i8.i32($i167);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 74} true;
  assume {:verifier.code 0} true;
  $i169 := $and.i32($i168, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 80} true;
  assume {:verifier.code 0} true;
  $i170 := $shl.i32($i169, 14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 101} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 103} true;
  assume {:verifier.code 0} true;
  $p172 := $bitcast.ref.ref($p171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 110} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p172, 8);
  $p174 := $add.ref($add.ref($p172, 8), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 96} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i8($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 90} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i8.i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 117} true;
  assume {:verifier.code 0} true;
  $i177 := $shl.i32($i176, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 87} true;
  assume {:verifier.code 0} true;
  $i178 := $or.i32($i170, $i177);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 138} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 140} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 147} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p180, 8);
  $p182 := $add.ref($add.ref($p180, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 133} true;
  assume {:verifier.code 0} true;
  $i183 := $load.i8($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 127} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i8.i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 154} true;
  assume {:verifier.code 0} true;
  $i185 := $and.i32($i184, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 124} true;
  assume {:verifier.code 0} true;
  $i186 := $or.i32($i178, $i185);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 31} true;
  assume {:verifier.code 0} true;
  $i187 := $or.i32($i162, $i186);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 7} true;
  assume {:verifier.code 0} true;
  $p188 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 11} true;
  assume {:verifier.code 0} true;
  $p189 := $p188;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7016, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p189, $i187);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 20} true;
  assume {:verifier.code 0} true;
  $p190 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 24} true;
  assume {:verifier.code 0} true;
  $p191 := $p190;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 24} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i32($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 31} true;
  assume {:verifier.code 0} true;
  $i193 := $or.i32($i192, $sub.i32(0, 2147483648));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 7} true;
  assume {:verifier.code 0} true;
  $p194 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 11} true;
  assume {:verifier.code 0} true;
  $p195 := $p194;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7017, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p195, $i193);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7018, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i153 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7021, 23} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7021, 25} true;
  assume {:verifier.code 0} true;
  $p197 := $bitcast.ref.ref($p196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7021, 32} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p197, 8);
  $p199 := $add.ref($add.ref($p197, 8), 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7021, 18} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i8($M.0, $p199);
  // WARNING: %231 = load i8, i8* %230, align 1, !dbg !7499, !verifier.code !7257
  call {:cexpr "__min1___0"} boogie_si_record_i8($i200);
  // WARNING: call void @llvm.dbg.value(metadata i8 %231, i64 0, metadata !8919, metadata !7256), !dbg !8920, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i8.i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 46} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 44} true;
  assume {:verifier.code 0} true;
  $i203 := $slt.i32($i201, $i202);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 65} true;
  assume {:verifier.code 0} true;
  $i204 := $zext.i8.i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  $i205 := $i204;
  goto $bb37;
$bb36:
  assume !(($i203 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 78} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i8.i32(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  $i205 := $i206;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 19} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i32.i8($i205);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 5} true;
  assume {:verifier.code 0} true;
  $p208 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 9} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p208, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7023, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, $i207);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 31} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 33} true;
  assume {:verifier.code 0} true;
  $p211 := $bitcast.ref.ref($p210);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 40} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p211, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 40} true;
  assume {:verifier.code 0} true;
  $i213 := $load.i8($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 10} true;
  assume {:verifier.code 0} true;
  $i214 := $zext.i8.i64($i213);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 45} true;
  assume {:verifier.code 0} true;
  $i215 := $and.i64($i214, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 53} true;
  assume {:verifier.code 0} true;
  $i216 := $ne.i64($i215, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7024, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i216} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i216 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 20} true;
  assume {:verifier.code 0} true;
  $p217 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 24} true;
  assume {:verifier.code 0} true;
  $p218 := $p217;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 24} true;
  assume {:verifier.code 0} true;
  $i219 := $load.i32($M.0, $p218);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 31} true;
  assume {:verifier.code 0} true;
  $i220 := $or.i32($i219, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 7} true;
  assume {:verifier.code 0} true;
  $p221 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 11} true;
  assume {:verifier.code 0} true;
  $p222 := $p221;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7025, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p222, $i220);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7026, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i216 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7027, 28} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7027, 32} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p223, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7027, 32} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i8($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7027, 19} true;
  assume {:verifier.code 0} true;
  $i226 := $zext.i8.i64($i225);
  // WARNING: %262 = zext i8 %261 to i64, !dbg !7538, !verifier.code !7257
  call {:cexpr "__len___0"} boogie_si_record_i64($i226);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 47} true;
  assume {:verifier.code 0} true;
  $p227 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 51} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 36} true;
  assume {:verifier.code 0} true;
  $p229 := $bitcast.ref.ref($p228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 82} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 84} true;
  assume {:verifier.code 0} true;
  $p231 := $bitcast.ref.ref($p230);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 91} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p231, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 58} true;
  assume {:verifier.code 0} true;
  $p233 := $bitcast.ref.ref($p232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 96} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p233, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7028, 19} true;
  assume {:verifier.code 0} true;
  call $i235 := __builtinx_memcpy.ref.ref.i64($p229, $p234, $i226);
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb31;
}
const kvaser_usb_rx_error: ref;
axiom (kvaser_usb_rx_error == $sub.ref(0, 138662));
procedure  kvaser_usb_rx_error($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i8;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i8;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i8;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i32;
  var $i32: i8;
  var $i33: i8;
  var $i34: i8;
  var $i35: i8;
  var $i36: i8;
  var $i86: i32;
  var $p87: ref;
  var $i88: i32;
  var $i89: i1;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i32;
  var $i107: i1;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $i112: i1;
  var $p113: ref;
  var $i114: i64;
  var $i115: i64;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i24;
  var $i127: i24;
  var $i128: i24;
  var $p129: ref;
  var $p130: ref;
  var $i131: i8;
  var $i132: i64;
  var $i133: i64;
  var $i134: i64;
  var $i135: i1;
  var $p136: ref;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $i142: i1;
  var $p143: ref;
  var $p144: ref;
  var $i145: i32;
  var $i146: i32;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: i32;
  var $i153: i32;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i32;
  var $i160: i1;
  var $i161: i32;
  var $p162: ref;
  var $p163: ref;
  var $i165: i64;
  var $i166: i64;
  var $i167: i1;
  var $p168: ref;
  var $p169: ref;
  var $i170: i32;
  var $i171: i1;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $i175: i32;
  var $p176: ref;
  var $p177: ref;
  var $i178: i32;
  var $i179: i1;
  var $i180: i32;
  var $i181: i1;
  var $i182: i32;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i8;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $i196: i32;
  var $i197: i32;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $i201: i32;
  var $i164: i32;
  var $i202: i32;
  var $i203: i1;
  var $p204: ref;
  var $p205: ref;
  var $i206: i32;
  var $i207: i1;
  var $i208: i32;
  var $i209: i1;
  var $i210: i32;
  var $i211: i1;
  var $p212: ref;
  var $p213: ref;
  var $i214: i32;
  var $i215: i32;
  var $p216: ref;
  var $p217: ref;
  var $i218: i32;
  var $i219: i32;
  var $i220: i1;
  var $i221: i32;
  var $i222: i8;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $i229: i32;
  var $i230: i32;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $p235: ref;
  var $p236: ref;
  var $i237: i32;
  var $i238: i1;
  var $p239: ref;
  var $p240: ref;
  var $i241: i32;
  var $i242: i32;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $i248: i32;
  var $i234: i32;
  var $i249: i32;
  var $i250: i32;
  var $i251: i1;
  var $p252: ref;
  var $p253: ref;
  var $i254: i32;
  var $i255: i32;
  var $p256: ref;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $i261: i32;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $i265: i1;
  var $p266: ref;
  var $p267: ref;
  var $i268: i32;
  var $i269: i1;
  var $i270: i1;
  var $p271: ref;
  var $p272: ref;
  var $i273: i32;
  var $i274: i32;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $p280: ref;
  var $p281: ref;
  var $i282: i32;
  var $i283: i32;
  var $p284: ref;
  var $p285: ref;
  var $p286: ref;
  var $i287: i32;
  var $i288: i1;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $i292: i32;
  var $i293: i32;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $i298: i64;
  var $i299: i64;
  var $p300: ref;
  var $p301: ref;
  var $p302: ref;
  var $i303: i32;
  var $i304: i32;
  var $p305: ref;
  var $p306: ref;
  var $i307: i32;
  var $i308: i32;
  var $i309: i1;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $i313: i8;
  var $i314: i32;
  var $i315: i32;
  var $i316: i8;
  var $p317: ref;
  var $p318: ref;
  var $p319: ref;
  var $i320: i64;
  var $i321: i64;
  var $i322: i1;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $i326: i8;
  var $i327: i32;
  var $i328: i32;
  var $i329: i8;
  var $p330: ref;
  var $p331: ref;
  var $p332: ref;
  var $i333: i64;
  var $i334: i64;
  var $i335: i1;
  var $p336: ref;
  var $p337: ref;
  var $p338: ref;
  var $i339: i8;
  var $i340: i32;
  var $i341: i32;
  var $i342: i8;
  var $p343: ref;
  var $p344: ref;
  var $p345: ref;
  var $i346: i64;
  var $i347: i64;
  var $i348: i1;
  var $p349: ref;
  var $p350: ref;
  var $p351: ref;
  var $i352: i8;
  var $i353: i32;
  var $i354: i32;
  var $i355: i8;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $i359: i64;
  var $i360: i64;
  var $i361: i1;
  var $p362: ref;
  var $p363: ref;
  var $p364: ref;
  var $i365: i8;
  var $i366: i32;
  var $i367: i32;
  var $i368: i8;
  var $p369: ref;
  var $p370: ref;
  var $p371: ref;
  var $i372: i64;
  var $i373: i64;
  var $i374: i1;
  var $p375: ref;
  var $p376: ref;
  var $p377: ref;
  var $i378: i8;
  var $i379: i32;
  var $i380: i32;
  var $i381: i8;
  var $p382: ref;
  var $p383: ref;
  var $p384: ref;
  var $i385: i32;
  var $i386: i1;
  var $p387: ref;
  var $p388: ref;
  var $p389: ref;
  var $i390: i8;
  var $i391: i32;
  var $i392: i32;
  var $i393: i8;
  var $p394: ref;
  var $p395: ref;
  var $p396: ref;
  var $p397: ref;
  var $p398: ref;
  var $p399: ref;
  var $p400: ref;
  var $p401: ref;
  var $p402: ref;
  var $i403: i16;
  var $p404: ref;
  var $p405: ref;
  var $i406: i16;
  var $p407: ref;
  var $p408: ref;
  var $p409: ref;
  var $p410: ref;
  var $i411: i32;
  var $p412: ref;
  var $i413: i64;
  var $i414: i64;
  var $p415: ref;
  var $p416: ref;
  var $i417: i64;
  var $p418: ref;
  var $p419: ref;
  var $i420: i8;
  var $i421: i64;
  var $i422: i64;
  var $p423: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6734, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6734, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6734, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 51);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i6, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb11, $bb12;
$bb3:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i6, 106);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i6, 51);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i6, 106);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6743, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6743, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6743, 32} true;
  assume {:verifier.code 0} true;
  $p39 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6743, 32} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  // WARNING: %33 = load i8, i8* %32, align 4, !dbg !7307, !verifier.code !7257
  call {:cexpr "channel"} boogie_si_record_i8($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6744, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6744, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6744, 31} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, 16);
  $p44 := $add.ref($p42, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6744, 12} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i8($M.0, $p44);
  // WARNING: %38 = load i8, i8* %37, align 4, !dbg !7311, !verifier.code !7257
  call {:cexpr "status"} boogie_si_record_i8($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6745, 16} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6745, 18} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6745, 30} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 16);
  $p49 := $add.ref($add.ref($p47, 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6745, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  // WARNING: %43 = load i8, i8* %42, align 2, !dbg !7315, !verifier.code !7257
  call {:cexpr "txerr"} boogie_si_record_i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6746, 16} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6746, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6746, 30} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, 16);
  $p54 := $add.ref($add.ref($p52, 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6746, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  // WARNING: %48 = load i8, i8* %47, align 1, !dbg !7319, !verifier.code !7257
  call {:cexpr "rxerr"} boogie_si_record_i8($i55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6747, 23} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6747, 25} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6747, 37} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 16);
  $p59 := $add.ref($add.ref($p57, 16), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6747, 18} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i8($M.0, $p59);
  // WARNING: %53 = load i8, i8* %52, align 1, !dbg !7323, !verifier.code !7257
  call {:cexpr "error_factor"} boogie_si_record_i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6748, 3} true;
  assume {:verifier.code 0} true;
  $i32, $i33, $i34, $i35, $i36 := $i40, $i45, $i50, $i55, $i60;
  goto $bb13;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6736, 18} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6736, 20} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6736, 32} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6736, 32} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  // WARNING: %12 = load i8, i8* %11, align 4, !dbg !7281, !verifier.code !7257
  call {:cexpr "channel"} boogie_si_record_i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6737, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6737, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6737, 31} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6737, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  // WARNING: %16 = load i8, i8* %15, align 4, !dbg !7286, !verifier.code !7257
  call {:cexpr "status"} boogie_si_record_i8($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6738, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6738, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6738, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6738, 30} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  // WARNING: %20 = load i8, i8* %19, align 2, !dbg !7291, !verifier.code !7257
  call {:cexpr "txerr"} boogie_si_record_i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6739, 16} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6739, 18} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6739, 30} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6739, 30} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  // WARNING: %24 = load i8, i8* %23, align 1, !dbg !7296, !verifier.code !7257
  call {:cexpr "rxerr"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6740, 23} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6740, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6740, 37} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6740, 37} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  // WARNING: %28 = load i8, i8* %27, align 1, !dbg !7301, !verifier.code !7257
  call {:cexpr "error_factor"} boogie_si_record_i8($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6741, 3} true;
  assume {:verifier.code 0} true;
  $i32, $i33, $i34, $i35, $i36 := $i15, $i19, $i23, $i27, $i31;
  goto $bb13;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb8;
$bb11:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6750, 18} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6750, 20} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6750, 37} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6750, 37} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i8($M.0, $p63);
  // WARNING: %58 = load i8, i8* %57, align 1, !dbg !7327, !verifier.code !7257
  call {:cexpr "channel"} boogie_si_record_i8($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6751, 17} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6751, 19} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6751, 36} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6751, 36} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i8($M.0, $p67);
  // WARNING: %62 = load i8, i8* %61, align 2, !dbg !7330, !verifier.code !7257
  call {:cexpr "status"} boogie_si_record_i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6752, 16} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6752, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6752, 35} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p70, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6752, 35} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  // WARNING: %66 = load i8, i8* %65, align 4, !dbg !7333, !verifier.code !7257
  call {:cexpr "txerr"} boogie_si_record_i8($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6753, 16} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6753, 18} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6753, 35} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p74, 9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6753, 35} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  // WARNING: %70 = load i8, i8* %69, align 1, !dbg !7336, !verifier.code !7257
  call {:cexpr "rxerr"} boogie_si_record_i8($i76);
  // WARNING: call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !9020, metadata !7256), !dbg !9021, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6755, 3} true;
  assume {:verifier.code 0} true;
  $i32, $i33, $i34, $i35, $i36 := $i64, $i68, $i72, $i76, 0;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb8;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6762, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6762, 53} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6762, 53} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i32($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6762, 30} true;
  assume {:verifier.code 0} true;
  $i89 := $uge.i32($i86, $i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $p77 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6757, 49} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 144);
  $p80 := $add.ref($p78, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6757, 53} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6758, 22} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6758, 22} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6758, 11} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6757, 3} true;
  assume {:verifier.code 0} true;
  call $i85 := dev_err.ref.ref.i32($p81, .str.33, $i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6759, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6908, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb16:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6763, 44} true;
  assume {:verifier.code 0} true;
  $p90 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6763, 44} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6763, 51} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 144);
  $p93 := $add.ref($p91, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6763, 55} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6764, 13} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6763, 5} true;
  assume {:verifier.code 0} true;
  call $i96 := dev_err.ref.ref.i32($p94, .str.30, $i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6765, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb17:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6769, 20} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6769, 10} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i32.i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6769, 15} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 8);
  $p100 := $add.ref($add.ref($p0, 8), $mul.ref($i98, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6769, 10} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6770, 20} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p101, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6770, 20} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6770, 29} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6771, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.i8.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6771, 20} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i32($i105, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6771, 20} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6771, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6772, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_unlink_tx_urbs($p101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6773, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb20:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6777, 33} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p101, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6777, 33} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6777, 9} true;
  assume {:verifier.code 0} true;
  call $p110 := alloc_can_err_skb($p109, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6778, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $p2i.ref.i64($p110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6778, 27} true;
  assume {:verifier.code 0} true;
  $i112 := $eq.i64($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6778, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i112 == 1);
  $p113 := $add.ref($add.ref($p103, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6779, 32} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i64($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6779, 43} true;
  assume {:verifier.code 0} true;
  $i115 := $add.i64($i114, 1);
  $p116 := $add.ref($add.ref($p103, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6779, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p116, $i115);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6780, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb23:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6784, 36} true;
  assume {:verifier.code 0} true;
  $p117 := $p101;
  $p118 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6784, 40} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  // WARNING: %124 = load i32, i32* %123, align 4, !dbg !7387, !verifier.code !7257
  call {:cexpr "new_state"} boogie_si_record_i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6785, 14} true;
  assume {:verifier.code 0} true;
  $p120 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6785, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p120, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6786, 14} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6786, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p121, .str.34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6787, 14} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6787, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p122, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6788, 14} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6788, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p123, .str.35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 14} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 14} true;
  assume {:verifier.code 0} true;
  $p125 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 21} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i24($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 21} true;
  assume {:verifier.code 0} true;
  $i127 := $and.i24($i126, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 21} true;
  assume {:verifier.code 0} true;
  $i128 := $or.i24($i127, 708);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6789, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p125, $i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6790, 14} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6790, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p129, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6791, 47} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6791, 47} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i8($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6791, 29} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i64($i131);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6791, 53} true;
  assume {:verifier.code 0} true;
  $i133 := $and.i64($i132, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6791, 9} true;
  assume {:verifier.code 0} true;
  call $i134 := ldv__builtin_expect($i133, 0);
  // WARNING: %139 = call i64 @ldv__builtin_expect(i64 %138, i64 0), !dbg !7405, !verifier.code !7257
  call {:cexpr "tmp"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6792, 11} true;
  assume {:verifier.code 0} true;
  $i135 := $ne.i64($i134, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6792, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6793, 75} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p101, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6793, 75} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6794, 52} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6793, 5} true;
  assume {:verifier.code 0} true;
  call $i139 := __dynamic_netdev_dbg.ref.ref.ref.i32($p3, $p137, .str.35, $i138);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6795, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6798, 8} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i8.i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6798, 31} true;
  assume {:verifier.code 0} true;
  $i141 := $and.i64($i140, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6798, 39} true;
  assume {:verifier.code 0} true;
  $i142 := $ne.i64($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6798, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i142 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 18} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 22} true;
  assume {:verifier.code 0} true;
  $p144 := $p143;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 22} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i32($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 29} true;
  assume {:verifier.code 0} true;
  $i146 := $or.i32($i145, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 5} true;
  assume {:verifier.code 0} true;
  $p147 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 9} true;
  assume {:verifier.code 0} true;
  $p148 := $p147;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6799, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p148, $i146);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6800, 41} true;
  assume {:verifier.code 0} true;
  $p149 := $p101;
  $p150 := $p101;
  $p151 := $add.ref($p101, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6800, 55} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i32($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6800, 63} true;
  assume {:verifier.code 0} true;
  $i153 := $add.i32($i152, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6800, 11} true;
  assume {:verifier.code 0} true;
  $p154 := $p101;
  $p155 := $p101;
  $p156 := $add.ref($p101, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6800, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p156, $i153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6801, 15} true;
  assume {:verifier.code 0} true;
  $p157 := $p101;
  $p158 := $add.ref($p101, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6801, 19} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i32($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6801, 30} true;
  assume {:verifier.code 0} true;
  $i160 := $eq.i32($i159, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6801, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i160} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i142 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6809, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i8.i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6809, 31} true;
  assume {:verifier.code 0} true;
  $i166 := $and.i64($i165, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6809, 39} true;
  assume {:verifier.code 0} true;
  $i167 := $ne.i64($i166, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6809, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb34, $bb35;
$bb30:
  assume ($i160 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6802, 7} true;
  assume {:verifier.code 0} true;
  call $i161 := kvaser_usb_simple_msg_async($p101, 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6803, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i160 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6806, 29} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p101, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6806, 29} true;
  assume {:verifier.code 0} true;
  $p163 := $load.ref($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6806, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p163);
  // WARNING: call void @netif_carrier_off(%struct.net_device* %175), !dbg !7442, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6808, 3} true;
  assume {:verifier.code 0} true;
  $i164 := 3;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6825, 7} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6825, 29} true;
  assume {:verifier.code 0} true;
  $i203 := $eq.i32($i202, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6825, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb46, $bb47;
$bb34:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6810, 30} true;
  assume {:verifier.code 0} true;
  $p168 := $p101;
  $p169 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6810, 34} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6810, 40} true;
  assume {:verifier.code 0} true;
  $i171 := $ne.i32($i170, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6810, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i167 == 1));
  assume {:verifier.code 0} true;
  $i201 := $i119;
  goto $bb45;
$bb36:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 20} true;
  assume {:verifier.code 0} true;
  $p172 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 24} true;
  assume {:verifier.code 0} true;
  $p173 := $p172;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 24} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 31} true;
  assume {:verifier.code 0} true;
  $i175 := $or.i32($i174, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 7} true;
  assume {:verifier.code 0} true;
  $p176 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 11} true;
  assume {:verifier.code 0} true;
  $p177 := $p176;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6811, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p177, $i175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 32} true;
  assume {:verifier.code 0} true;
  $i179 := $ne.i32($i178, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb38, $bb40;
$bb37:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 38} true;
  assume {:verifier.code 0} true;
  assume ($i179 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 23} true;
  assume {:verifier.code 0} true;
  $i182 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 37} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 35} true;
  assume {:verifier.code 0} true;
  $i184 := $sgt.i32($i182, $i183);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 23} true;
  assume {:verifier.code 0} true;
  havoc $i185;
  assume ((($i184 == 1) ==> ($i185 == 32)) && (($i184 != 1) ==> ($i185 == 16)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 23} true;
  assume {:verifier.code 0} true;
  $i186 := $trunc.i32.i8($i185);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 9} true;
  assume {:verifier.code 0} true;
  $p187 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 13} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p187, 5);
  $p189 := $add.ref($add.ref($p187, 5), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6813, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p189, $i186);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6814, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume !(($i179 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 41} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 62} true;
  assume {:verifier.code 0} true;
  $i181 := $ne.i32($i180, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb41, $bb42;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  assume ($i181 == 1);
  goto $bb39;
$bb42:
  assume !(($i181 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6815, 9} true;
  assume {:verifier.code 0} true;
  $p190 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6815, 13} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p190, 5);
  $p192 := $add.ref($add.ref($p190, 5), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6815, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p192, 48);
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6817, 49} true;
  assume {:verifier.code 0} true;
  $p193 := $p101;
  $p194 := $p101;
  $p195 := $add.ref($p101, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6817, 63} true;
  assume {:verifier.code 0} true;
  $i196 := $load.i32($M.0, $p195);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6817, 77} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i196, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6817, 13} true;
  assume {:verifier.code 0} true;
  $p198 := $p101;
  $p199 := $p101;
  $p200 := $add.ref($p101, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6817, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p200, $i197);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6818, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6822, 3} true;
  assume {:verifier.code 0} true;
  $i201 := 2;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i164 := $i201;
  goto $bb33;
$bb46:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 30} true;
  assume {:verifier.code 0} true;
  $p204 := $p101;
  $p205 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 34} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i32($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 40} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb48, $bb49;
$bb47:
  assume !(($i203 == 1));
  assume {:verifier.code 0} true;
  $i249 := $i164;
  goto $bb60;
$bb48:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 50} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 71} true;
  assume {:verifier.code 0} true;
  $i209 := $ugt.i32($i208, 95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 77} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb51, $bb53;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i207 == 1));
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6832, 30} true;
  assume {:verifier.code 0} true;
  $p235 := $p101;
  $p236 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6832, 34} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i32($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6832, 40} true;
  assume {:verifier.code 0} true;
  $i238 := $ne.i32($i237, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6832, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i238} true;
  goto $bb57, $bb58;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 77} true;
  assume {:verifier.code 0} true;
  assume ($i209 == 1);
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 20} true;
  assume {:verifier.code 0} true;
  $p212 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 24} true;
  assume {:verifier.code 0} true;
  $p213 := $p212;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 24} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i32($M.0, $p213);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 31} true;
  assume {:verifier.code 0} true;
  $i215 := $or.i32($i214, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 7} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 11} true;
  assume {:verifier.code 0} true;
  $p217 := $p216;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6827, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p217, $i215);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 21} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 35} true;
  assume {:verifier.code 0} true;
  $i219 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 33} true;
  assume {:verifier.code 0} true;
  $i220 := $sgt.i32($i218, $i219);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 21} true;
  assume {:verifier.code 0} true;
  havoc $i221;
  assume ((($i220 == 1) ==> ($i221 == 8)) && (($i220 != 1) ==> ($i221 == 4)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 21} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i32.i8($i221);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 7} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 11} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p223, 5);
  $p225 := $add.ref($add.ref($p223, 5), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6828, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p225, $i222);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6829, 49} true;
  assume {:verifier.code 0} true;
  $p226 := $p101;
  $p227 := $p101;
  $p228 := $add.ref($p101, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6829, 63} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i32($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6829, 77} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i32($i229, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6829, 13} true;
  assume {:verifier.code 0} true;
  $p231 := $p101;
  $p232 := $p101;
  $p233 := $add.ref($p101, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6829, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p233, $i230);
  // WARNING: store i32 %256, i32* %259, align 4, !dbg !7524, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6831, 5} true;
  assume {:verifier.code 0} true;
  $i234 := 1;
  goto $bb56;
$bb53:
  assume !(($i209 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 80} true;
  assume {:verifier.code 0} true;
  $i210 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 101} true;
  assume {:verifier.code 0} true;
  $i211 := $ugt.i32($i210, 95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb54, $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 9} true;
  assume {:verifier.code 0} true;
  assume ($i211 == 1);
  goto $bb52;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6826, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i211 == 1));
  goto $bb50;
$bb56:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6839, 3} true;
  assume {:verifier.code 0} true;
  $i249 := $i234;
  goto $bb60;
$bb57:
  assume ($i238 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 20} true;
  assume {:verifier.code 0} true;
  $p239 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 24} true;
  assume {:verifier.code 0} true;
  $p240 := $p239;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 24} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i32($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 31} true;
  assume {:verifier.code 0} true;
  $i242 := $or.i32($i241, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 7} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 11} true;
  assume {:verifier.code 0} true;
  $p244 := $p243;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6833, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p244, $i242);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6834, 7} true;
  assume {:verifier.code 0} true;
  $p245 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6834, 11} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p245, 5);
  $p247 := $add.ref($add.ref($p245, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6834, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p247, 64);
  // WARNING: store i8 64, i8* %274, align 1, !dbg !7540, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6836, 5} true;
  assume {:verifier.code 0} true;
  $i248 := 0;
  goto $bb59;
$bb58:
  assume !(($i238 == 1));
  assume {:verifier.code 0} true;
  $i248 := $i164;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i234 := $i248;
  goto $bb56;
$bb60:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6842, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $zext.i8.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6842, 29} true;
  assume {:verifier.code 0} true;
  $i251 := $eq.i32($i250, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6842, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i251 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 18} true;
  assume {:verifier.code 0} true;
  $p252 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 22} true;
  assume {:verifier.code 0} true;
  $p253 := $p252;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 22} true;
  assume {:verifier.code 0} true;
  $i254 := $load.i32($M.0, $p253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 29} true;
  assume {:verifier.code 0} true;
  $i255 := $or.i32($i254, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 5} true;
  assume {:verifier.code 0} true;
  $p256 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 9} true;
  assume {:verifier.code 0} true;
  $p257 := $p256;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6843, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p257, $i255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6844, 5} true;
  assume {:verifier.code 0} true;
  $p258 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6844, 9} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p258, 5);
  $p260 := $add.ref($add.ref($p258, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6844, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p260, 64);
  // WARNING: store i8 64, i8* %291, align 1, !dbg !7556, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6846, 3} true;
  assume {:verifier.code 0} true;
  $i261 := 0;
  goto $bb63;
$bb62:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  $i261 := $i249;
  goto $bb63;
$bb63:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 14} true;
  assume {:verifier.code 0} true;
  $p262 := $p101;
  $p263 := $add.ref($p101, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 18} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i32($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 29} true;
  assume {:verifier.code 0} true;
  $i265 := $ne.i32($i264, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i265} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i265 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 58} true;
  assume {:verifier.code 0} true;
  $p266 := $p101;
  $p267 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 62} true;
  assume {:verifier.code 0} true;
  $i268 := $load.i32($M.0, $p267);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 68} true;
  assume {:verifier.code 0} true;
  $i269 := $ugt.i32($i268, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb67, $bb68;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i265 == 1));
  goto $bb66;
$bb66:
  assume {:verifier.code 0} true;
  goto $bb71;
$bb67:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 87} true;
  assume {:verifier.code 0} true;
  $i270 := $ule.i32($i261, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i270} true;
  goto $bb69, $bb70;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i269 == 1));
  goto $bb66;
$bb69:
  assume ($i270 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 18} true;
  assume {:verifier.code 0} true;
  $p271 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 22} true;
  assume {:verifier.code 0} true;
  $p272 := $p271;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 22} true;
  assume {:verifier.code 0} true;
  $i273 := $load.i32($M.0, $p272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 29} true;
  assume {:verifier.code 0} true;
  $i274 := $or.i32($i273, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 5} true;
  assume {:verifier.code 0} true;
  $p275 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 9} true;
  assume {:verifier.code 0} true;
  $p276 := $p275;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6850, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p276, $i274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6851, 28} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p101, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6851, 28} true;
  assume {:verifier.code 0} true;
  $p278 := $load.ref($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6851, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_on($p278);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6852, 42} true;
  assume {:verifier.code 0} true;
  $p279 := $p101;
  $p280 := $p101;
  $p281 := $add.ref($p101, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6852, 56} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6852, 65} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6852, 11} true;
  assume {:verifier.code 0} true;
  $p284 := $p101;
  $p285 := $p101;
  $p286 := $add.ref($p101, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6852, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p286, $i283);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6853, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6849, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i270 == 1));
  goto $bb66;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6856, 7} true;
  assume {:verifier.code 0} true;
  $i287 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6856, 35} true;
  assume {:verifier.code 0} true;
  $i288 := $ne.i32($i287, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6856, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i288 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6857, 43} true;
  assume {:verifier.code 0} true;
  $p289 := $p101;
  $p290 := $p101;
  $p291 := $p101;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6857, 57} true;
  assume {:verifier.code 0} true;
  $i292 := $load.i32($M.0, $p291);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6857, 67} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i292, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6857, 11} true;
  assume {:verifier.code 0} true;
  $p294 := $p101;
  $p295 := $p101;
  $p296 := $p101;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p296, $i293);
  $p297 := $add.ref($add.ref($p103, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6858, 31} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i64($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6858, 41} true;
  assume {:verifier.code 0} true;
  $i299 := $add.i64($i298, 1);
  $p300 := $add.ref($add.ref($p103, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6858, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p300, $i299);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 18} true;
  assume {:verifier.code 0} true;
  $p301 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 22} true;
  assume {:verifier.code 0} true;
  $p302 := $p301;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 22} true;
  assume {:verifier.code 0} true;
  $i303 := $load.i32($M.0, $p302);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 29} true;
  assume {:verifier.code 0} true;
  $i304 := $or.i32($i303, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 5} true;
  assume {:verifier.code 0} true;
  $p305 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 9} true;
  assume {:verifier.code 0} true;
  $p306 := $p305;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6859, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p306, $i304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6860, 9} true;
  assume {:verifier.code 0} true;
  $i307 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6860, 28} true;
  assume {:verifier.code 0} true;
  $i308 := $and.i32($i307, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6860, 28} true;
  assume {:verifier.code 0} true;
  $i309 := $ne.i32($i308, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6860, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i309} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i288 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb74:
  assume ($i309 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 44} true;
  assume {:verifier.code 0} true;
  $p310 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 48} true;
  assume {:verifier.code 0} true;
  $p311 := $add.ref($p310, 5);
  $p312 := $add.ref($add.ref($p310, 5), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 44} true;
  assume {:verifier.code 0} true;
  $i313 := $load.i8($M.0, $p312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 29} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i8.i32($i313);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 56} true;
  assume {:verifier.code 0} true;
  $i315 := $or.i32($i314, 25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 21} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i8($i315);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 7} true;
  assume {:verifier.code 0} true;
  $p317 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 11} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p317, 5);
  $p319 := $add.ref($add.ref($p317, 5), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6861, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p319, $i316);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6862, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i309 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6865, 10} true;
  assume {:verifier.code 0} true;
  $i320 := $zext.i8.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6865, 39} true;
  assume {:verifier.code 0} true;
  $i321 := $and.i64($i320, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6865, 46} true;
  assume {:verifier.code 0} true;
  $i322 := $ne.i64($i321, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6865, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i322} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i322 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 44} true;
  assume {:verifier.code 0} true;
  $p323 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 48} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p323, 5);
  $p325 := $add.ref($add.ref($p323, 5), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 44} true;
  assume {:verifier.code 0} true;
  $i326 := $load.i8($M.0, $p325);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 29} true;
  assume {:verifier.code 0} true;
  $i327 := $zext.i8.i32($i326);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 56} true;
  assume {:verifier.code 0} true;
  $i328 := $or.i32($i327, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 21} true;
  assume {:verifier.code 0} true;
  $i329 := $trunc.i32.i8($i328);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 7} true;
  assume {:verifier.code 0} true;
  $p330 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 11} true;
  assume {:verifier.code 0} true;
  $p331 := $add.ref($p330, 5);
  $p332 := $add.ref($add.ref($p330, 5), 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6866, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p332, $i329);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6867, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i322 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6870, 10} true;
  assume {:verifier.code 0} true;
  $i333 := $zext.i8.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6870, 39} true;
  assume {:verifier.code 0} true;
  $i334 := $and.i64($i333, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6870, 46} true;
  assume {:verifier.code 0} true;
  $i335 := $ne.i64($i334, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6870, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i335 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 44} true;
  assume {:verifier.code 0} true;
  $p336 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 48} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($p336, 5);
  $p338 := $add.ref($add.ref($p336, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 44} true;
  assume {:verifier.code 0} true;
  $i339 := $load.i8($M.0, $p338);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 29} true;
  assume {:verifier.code 0} true;
  $i340 := $zext.i8.i32($i339);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 56} true;
  assume {:verifier.code 0} true;
  $i341 := $or.i32($i340, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 21} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i8($i341);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 7} true;
  assume {:verifier.code 0} true;
  $p343 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 11} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($p343, 5);
  $p345 := $add.ref($add.ref($p343, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6871, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p345, $i342);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6872, 5} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i335 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6875, 10} true;
  assume {:verifier.code 0} true;
  $i346 := $zext.i8.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6875, 39} true;
  assume {:verifier.code 0} true;
  $i347 := $and.i64($i346, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6875, 46} true;
  assume {:verifier.code 0} true;
  $i348 := $ne.i64($i347, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6875, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i348 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 44} true;
  assume {:verifier.code 0} true;
  $p349 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 48} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p349, 5);
  $p351 := $add.ref($add.ref($p349, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 44} true;
  assume {:verifier.code 0} true;
  $i352 := $load.i8($M.0, $p351);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 29} true;
  assume {:verifier.code 0} true;
  $i353 := $zext.i8.i32($i352);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 56} true;
  assume {:verifier.code 0} true;
  $i354 := $or.i32($i353, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 21} true;
  assume {:verifier.code 0} true;
  $i355 := $trunc.i32.i8($i354);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 7} true;
  assume {:verifier.code 0} true;
  $p356 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 11} true;
  assume {:verifier.code 0} true;
  $p357 := $add.ref($p356, 5);
  $p358 := $add.ref($add.ref($p356, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6876, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p358, $i355);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6877, 5} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i348 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6880, 10} true;
  assume {:verifier.code 0} true;
  $i359 := $zext.i8.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6880, 39} true;
  assume {:verifier.code 0} true;
  $i360 := $and.i64($i359, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6880, 47} true;
  assume {:verifier.code 0} true;
  $i361 := $ne.i64($i360, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6880, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i361} true;
  goto $bb86, $bb87;
$bb86:
  assume ($i361 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 44} true;
  assume {:verifier.code 0} true;
  $p362 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 48} true;
  assume {:verifier.code 0} true;
  $p363 := $add.ref($p362, 5);
  $p364 := $add.ref($add.ref($p362, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 44} true;
  assume {:verifier.code 0} true;
  $i365 := $load.i8($M.0, $p364);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 29} true;
  assume {:verifier.code 0} true;
  $i366 := $zext.i8.i32($i365);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 56} true;
  assume {:verifier.code 0} true;
  $i367 := $or.i32($i366, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 21} true;
  assume {:verifier.code 0} true;
  $i368 := $trunc.i32.i8($i367);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 7} true;
  assume {:verifier.code 0} true;
  $p369 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 11} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p369, 5);
  $p371 := $add.ref($add.ref($p369, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6881, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p371, $i368);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6882, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i361 == 1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6885, 10} true;
  assume {:verifier.code 0} true;
  $i372 := $zext.i8.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6885, 39} true;
  assume {:verifier.code 0} true;
  $i373 := $and.i64($i372, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6885, 47} true;
  assume {:verifier.code 0} true;
  $i374 := $ne.i64($i373, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6885, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i374} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i374 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 44} true;
  assume {:verifier.code 0} true;
  $p375 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 48} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p375, 5);
  $p377 := $add.ref($add.ref($p375, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 44} true;
  assume {:verifier.code 0} true;
  $i378 := $load.i8($M.0, $p377);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $i379 := $zext.i8.i32($i378);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 56} true;
  assume {:verifier.code 0} true;
  $i380 := $or.i32($i379, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 21} true;
  assume {:verifier.code 0} true;
  $i381 := $trunc.i32.i8($i380);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 7} true;
  assume {:verifier.code 0} true;
  $p382 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 11} true;
  assume {:verifier.code 0} true;
  $p383 := $add.ref($p382, 5);
  $p384 := $add.ref($add.ref($p382, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6886, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p384, $i381);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6887, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i374 == 1));
  assume {:verifier.code 0} true;
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6890, 9} true;
  assume {:verifier.code 0} true;
  $i385 := $sext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6890, 44} true;
  assume {:verifier.code 0} true;
  $i386 := $slt.i32($i385, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6890, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i386} true;
  goto $bb92, $bb93;
$bb92:
  assume ($i386 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 44} true;
  assume {:verifier.code 0} true;
  $p387 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 48} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p387, 5);
  $p389 := $add.ref($add.ref($p387, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 44} true;
  assume {:verifier.code 0} true;
  $i390 := $load.i8($M.0, $p389);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 29} true;
  assume {:verifier.code 0} true;
  $i391 := $zext.i8.i32($i390);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 56} true;
  assume {:verifier.code 0} true;
  $i392 := $or.i32($i391, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 21} true;
  assume {:verifier.code 0} true;
  $i393 := $trunc.i32.i8($i392);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 7} true;
  assume {:verifier.code 0} true;
  $p394 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 11} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($p394, 5);
  $p396 := $add.ref($add.ref($p394, 5), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6891, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p396, $i393);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6892, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i386 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6895, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6898, 3} true;
  assume {:verifier.code 0} true;
  $p397 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6898, 7} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p397, 5);
  $p399 := $add.ref($add.ref($p397, 5), 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6898, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p399, $i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6899, 3} true;
  assume {:verifier.code 0} true;
  $p400 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6899, 7} true;
  assume {:verifier.code 0} true;
  $p401 := $add.ref($p400, 5);
  $p402 := $add.ref($add.ref($p400, 5), 7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6899, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p402, $i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6900, 21} true;
  assume {:verifier.code 0} true;
  $i403 := $zext.i8.i16($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6900, 9} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($p101, 1036);
  $p405 := $add.ref($p101, 1036);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6900, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p405, $i403);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6901, 21} true;
  assume {:verifier.code 0} true;
  $i406 := $zext.i8.i16($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6901, 9} true;
  assume {:verifier.code 0} true;
  $p407 := $add.ref($p101, 1036);
  $p408 := $add.ref($add.ref($p101, 1036), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6901, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p408, $i406);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6902, 9} true;
  assume {:verifier.code 0} true;
  $p409 := $p101;
  $p410 := $add.ref($p101, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6902, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p410, $i261);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6903, 3} true;
  assume {:verifier.code 0} true;
  call $i411 := netif_rx($p110);
  $p412 := $add.ref($p103, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6904, 30} true;
  assume {:verifier.code 0} true;
  $i413 := $load.i64($M.0, $p412);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6904, 41} true;
  assume {:verifier.code 0} true;
  $i414 := $add.i64($i413, 1);
  $p415 := $add.ref($p103, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6904, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p415, $i414);
  $p416 := $add.ref($add.ref($p103, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 28} true;
  assume {:verifier.code 0} true;
  $i417 := $load.i64($M.0, $p416);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 55} true;
  assume {:verifier.code 0} true;
  $p418 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 59} true;
  assume {:verifier.code 0} true;
  $p419 := $add.ref($p418, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 59} true;
  assume {:verifier.code 0} true;
  $i420 := $load.i8($M.0, $p419);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 39} true;
  assume {:verifier.code 0} true;
  $i421 := $zext.i8.i64($i420);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 37} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i64($i417, $i421);
  $p423 := $add.ref($add.ref($p103, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6905, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p423, $i422);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6906, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
}
const kvaser_usb_tx_acknowledge: ref;
axiom (kvaser_usb_tx_acknowledge == $sub.ref(0, 139694));
procedure  kvaser_usb_tx_acknowledge($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i1;
  var $i30: i8;
  var $i31: i1;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $p68: ref;
  var $p69: ref;
  var $i70: i8;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p95: ref;
  var $i96: i32;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6583, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6583, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6583, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6583, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %6, align 4, !dbg !7268, !verifier.code !7257
  call {:cexpr "channel"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6584, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6584, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6584, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6584, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  // WARNING: %11 = load i8, i8* %10, align 1, !dbg !7273, !verifier.code !7257
  call {:cexpr "tid"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6585, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6585, 53} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6585, 53} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6585, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $uge.i32($i11, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6585, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6586, 44} true;
  assume {:verifier.code 0} true;
  $p15 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6586, 44} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6586, 51} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 144);
  $p18 := $add.ref($p16, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6586, 55} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6587, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6586, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := dev_err.ref.ref.i32($p19, .str.30, $i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6588, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6630, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6592, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6592, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6592, 15} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  $p25 := $add.ref($add.ref($p0, 8), $mul.ref($i23, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6592, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6593, 36} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6593, 36} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6593, 9} true;
  assume {:verifier.code 0} true;
  call $i29 := netif_device_present($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6593, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i1.i8($i29);
  // WARNING: %34 = zext i1 %33 to i8, !dbg !7295, !verifier.code !7257
  call {:cexpr "tmp"} boogie_si_record_i8($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6594, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i8.i1($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6594, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6596, 3} true;
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb7;
$bb6:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i32 := 1;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6599, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6600, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6604, 20} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6604, 20} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6604, 29} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6605, 58} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p26, 568);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6605, 13} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6605, 74} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6605, 94} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i64($i39, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6605, 71} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p38, $mul.ref($i40, 16));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $p26;
  $p43 := $add.ref($p26, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 28} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 57} true;
  assume {:verifier.code 0} true;
  $p46 := $p26;
  $p47 := $add.ref($p26, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 61} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 67} true;
  assume {:verifier.code 0} true;
  $i49 := $ugt.i32($i48, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb14:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6607, 35} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6607, 35} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6607, 11} true;
  assume {:verifier.code 0} true;
  call $p52 := alloc_can_err_skb($p51, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6608, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6608, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6608, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6606, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i49 == 1));
  goto $bb13;
$bb16:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 24} true;
  assume {:verifier.code 0} true;
  $p56 := $p55;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 24} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 31} true;
  assume {:verifier.code 0} true;
  $i58 := $or.i32($i57, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 7} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $p59;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6609, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6610, 7} true;
  assume {:verifier.code 0} true;
  call $i61 := netif_rx($p52);
  $p62 := $add.ref($p35, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6611, 34} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i64($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6611, 45} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 1);
  $p65 := $add.ref($p35, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6611, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p65, $i64);
  $p66 := $add.ref($add.ref($p35, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 32} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i64($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 59} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 63} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 63} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i8($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 43} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i8.i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 41} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i67, $i71);
  $p73 := $add.ref($add.ref($p35, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6612, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6613, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i54 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6614, 53} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6614, 53} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6614, 7} true;
  assume {:verifier.code 0} true;
  call $i76 := netdev_err.ref.ref($p75, .str.36);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6616, 42} true;
  assume {:verifier.code 0} true;
  $p77 := $p26;
  $p78 := $p26;
  $p79 := $add.ref($p26, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6616, 56} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6616, 65} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6616, 11} true;
  assume {:verifier.code 0} true;
  $p82 := $p26;
  $p83 := $p26;
  $p84 := $add.ref($p26, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6616, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $i81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6617, 28} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6617, 28} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6617, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_on($p86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6618, 11} true;
  assume {:verifier.code 0} true;
  $p87 := $p26;
  $p88 := $add.ref($p26, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6618, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p88, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6619, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  $p89 := $add.ref($add.ref($p35, 264), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6622, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6622, 41} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i64($i90, 1);
  $p92 := $add.ref($add.ref($p35, 264), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6622, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p92, $i91);
  $p93 := $add.ref($add.ref($p35, 264), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 28} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i64($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 64} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p38, $mul.ref($i40, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 64} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 39} true;
  assume {:verifier.code 0} true;
  $i97 := $sext.i32.i64($i96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 37} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i94, $i97);
  $p99 := $add.ref($add.ref($p35, 264), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6623, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6624, 26} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6624, 26} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6624, 43} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p38, $mul.ref($i40, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6624, 43} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6624, 3} true;
  assume {:verifier.code 0} true;
  call $i104 := can_get_echo_skb($p101, $i103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6625, 12} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p38, $mul.ref($i40, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6625, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6626, 22} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p26, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6626, 3} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6627, 26} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p26, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6627, 26} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6627, 3} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6628, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const alloc_can_err_skb: ref;
axiom (alloc_can_err_skb == $sub.ref(0, 140726));
procedure  alloc_can_err_skb($p0: ref, $p1: ref)
  returns ($r: ref);
const netif_rx: ref;
axiom (netif_rx == $sub.ref(0, 141758));
procedure  netif_rx($p0: ref)
  returns ($r: i32);
const netif_carrier_on: ref;
axiom (netif_carrier_on == $sub.ref(0, 142790));
procedure  netif_carrier_on($p0: ref);
const can_get_echo_skb: ref;
axiom (can_get_echo_skb == $sub.ref(0, 143822));
procedure  can_get_echo_skb($p0: ref, $i1: i32)
  returns ($r: i32);
const netif_wake_queue: ref;
axiom (netif_wake_queue == $sub.ref(0, 144854));
procedure  netif_wake_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6055, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6056, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6057, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_wake_queue: ref;
axiom (netif_tx_wake_queue == $sub.ref(0, 145886));
procedure  netif_tx_wake_queue($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6041, 74} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6041, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := test_and_clear_bit(0, $p1);
  // WARNING: %3 = call i32 @test_and_clear_bit(i64 0, i64* %2), !dbg !7263, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6042, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6043, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6043, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6043, 5} true;
  assume {:verifier.code 0} true;
  call __netif_schedule($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6044, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6047, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const test_and_clear_bit: ref;
axiom (test_and_clear_bit == $sub.ref(0, 146918));
procedure  test_and_clear_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i8, align 1, !verifier.code !7257
  // WARNING: ignoring llvm.debug call.
  assume true;
  call devirtbounce.2(0, $p1, $p2, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5730, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.2, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5730, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5730, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5730, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5730, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __netif_schedule: ref;
axiom (__netif_schedule == $sub.ref(0, 147950));
procedure  __netif_schedule($p0: ref);
const kvaser_usb_unlink_tx_urbs: ref;
axiom (kvaser_usb_unlink_tx_urbs == $sub.ref(0, 148982));
procedure  kvaser_usb_unlink_tx_urbs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6701, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6701, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_anchored_urbs($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6702, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6702, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p2, 0);
  // WARNING: call void @atomic_set(%union.__anonunion_ldv_1458_15* %3, i32 0), !dbg !7265, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6709, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 568);
  $p4 := $add.ref($p0, 568);
  $p5 := $add.ref($add.ref($p0, 568), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, 16);
  // WARNING: store i32 16, i32* %7, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 568);
  $p7 := $add.ref($add.ref($p0, 568), 16);
  $p8 := $add.ref($add.ref($add.ref($p0, 568), 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, 16);
  // WARNING: store i32 16, i32* %13, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6715, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 568);
  $p10 := $add.ref($add.ref($p0, 568), 32);
  $p11 := $add.ref($add.ref($add.ref($p0, 568), 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 16);
  // WARNING: store i32 16, i32* %17, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 568);
  $p13 := $add.ref($add.ref($p0, 568), 48);
  $p14 := $add.ref($add.ref($add.ref($p0, 568), 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, 16);
  // WARNING: store i32 16, i32* %21, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 568);
  $p16 := $add.ref($add.ref($p0, 568), 64);
  $p17 := $add.ref($add.ref($add.ref($p0, 568), 64), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 16);
  // WARNING: store i32 16, i32* %25, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 568);
  $p19 := $add.ref($add.ref($p0, 568), 80);
  $p20 := $add.ref($add.ref($add.ref($p0, 568), 80), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, 16);
  // WARNING: store i32 16, i32* %29, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 568);
  $p22 := $add.ref($add.ref($p0, 568), 96);
  $p23 := $add.ref($add.ref($add.ref($p0, 568), 96), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 16);
  // WARNING: store i32 16, i32* %33, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 568);
  $p25 := $add.ref($add.ref($p0, 568), 112);
  $p26 := $add.ref($add.ref($add.ref($p0, 568), 112), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, 16);
  // WARNING: store i32 16, i32* %37, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 568);
  $p28 := $add.ref($add.ref($p0, 568), 128);
  $p29 := $add.ref($add.ref($add.ref($p0, 568), 128), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, 16);
  // WARNING: store i32 16, i32* %41, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 568);
  $p31 := $add.ref($add.ref($p0, 568), 144);
  $p32 := $add.ref($add.ref($add.ref($p0, 568), 144), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, 16);
  // WARNING: store i32 16, i32* %45, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 568);
  $p34 := $add.ref($add.ref($p0, 568), 160);
  $p35 := $add.ref($add.ref($add.ref($p0, 568), 160), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, 16);
  // WARNING: store i32 16, i32* %49, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 568);
  $p37 := $add.ref($add.ref($p0, 568), 176);
  $p38 := $add.ref($add.ref($add.ref($p0, 568), 176), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, 16);
  // WARNING: store i32 16, i32* %53, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 568);
  $p40 := $add.ref($add.ref($p0, 568), 192);
  $p41 := $add.ref($add.ref($add.ref($p0, 568), 192), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, 16);
  // WARNING: store i32 16, i32* %57, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 568);
  $p43 := $add.ref($add.ref($p0, 568), 208);
  $p44 := $add.ref($add.ref($add.ref($p0, 568), 208), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, 16);
  // WARNING: store i32 16, i32* %61, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 568);
  $p46 := $add.ref($add.ref($p0, 568), 224);
  $p47 := $add.ref($add.ref($add.ref($p0, 568), 224), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, 16);
  // WARNING: store i32 16, i32* %65, align 8, !dbg !7270, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 568);
  $p49 := $add.ref($add.ref($p0, 568), 240);
  $p50 := $add.ref($add.ref($add.ref($p0, 568), 240), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6706, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, 16);
  // WARNING: store i32 16, i32* %69, align 8, !dbg !7270, !verifier.code !7260
  assume {:verifier.code 0} true;
  goto $bb4;
}
const __dynamic_netdev_dbg: ref;
axiom (__dynamic_netdev_dbg == $sub.ref(0, 150014));
procedure  __dynamic_netdev_dbg.ref.ref.ref($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
procedure  __dynamic_netdev_dbg.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, p.3: i32)
  returns ($r: i32);
const kvaser_usb_simple_msg_async: ref;
axiom (kvaser_usb_simple_msg_async == $sub.ref(0, 151046));
procedure  kvaser_usb_simple_msg_async($p0: ref, $i1: i8)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $i9: i32;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i8;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb_net_priv* %0, i64 0, metadata !9651, metadata !7256), !dbg !9652, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6658, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6658, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6659, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6659, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6660, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := ldv_usb_alloc_urb_33(0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6661, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6661, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6661, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6662, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := netdev_err.ref.ref($p5, .str.15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6663, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6695, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6667, 9} true;
  assume {:verifier.code 0} true;
  call $p11 := kmalloc(32, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6668, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6668, 27} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6668, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6669, 5} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6670, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 12);
  goto $bb3;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6674, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6675, 8} true;
  assume {:verifier.code 0} true;
  $p15 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6675, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6676, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p14, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6676, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 38} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 38} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 27} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p14, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6677, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 28} true;
  assume {:verifier.code 0} true;
  $p23 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 55} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p3, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 55} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 66} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 66} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 34} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6678, 9} true;
  assume {:verifier.code 0} true;
  call $i30 := __create_pipe($p24, $i29);
  // WARNING: %36 = call i32 @__create_pipe(%struct.usb_device* %30, i32 %35), !dbg !7307, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 41} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i30, $sub.i32(0, 1073741824));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 72} true;
  assume {:verifier.code 0} true;
  $p34 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 72} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 61} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6680, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6679, 3} true;
  assume {:verifier.code 0} true;
  call usb_fill_bulk_urb($p6, $p32, $i33, $p11, $i36, kvaser_usb_simple_msg_callback, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6681, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6681, 3} true;
  assume {:verifier.code 0} true;
  call usb_anchor_urb($p6, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6682, 9} true;
  assume {:verifier.code 0} true;
  call $i39 := ldv_usb_submit_urb_34($p6, 32);
  // WARNING: %45 = call i32 @ldv_usb_submit_urb_34(%struct.urb* %7, i32 32), !dbg !7318, !verifier.code !7260
  call {:cexpr "err"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6683, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6684, 5} true;
  assume {:verifier.code 0} true;
  call $i41 := netdev_err.ref.ref($p5, .str.16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6685, 5} true;
  assume {:verifier.code 0} true;
  call usb_unanchor_urb($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6686, 5} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6687, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6688, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i39;
  goto $bb3;
$bb9:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6692, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6693, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
}
const netif_carrier_off: ref;
axiom (netif_carrier_off == $sub.ref(0, 152078));
procedure  netif_carrier_off($p0: ref);
const ldv_usb_alloc_urb_33: ref;
axiom (ldv_usb_alloc_urb_33 == $sub.ref(0, 153110));
procedure  ldv_usb_alloc_urb_33($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !9726, metadata !7256), !dbg !9727, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8445, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8446, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := usb_alloc_urb($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8447, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const kvaser_usb_simple_msg_callback: ref;
axiom (kvaser_usb_simple_msg_callback == $sub.ref(0, 154142));
procedure  kvaser_usb_simple_msg_callback($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6636, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6636, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6636, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6637, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6637, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6637, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6638, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6638, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6638, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6638, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6640, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6640, 22} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6639, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := netdev_warn.ref.ref.i32($p3, .str.17, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6641, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6644, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_submit_urb_34: ref;
axiom (ldv_usb_submit_urb_34 == $sub.ref(0, 155174));
procedure  ldv_usb_submit_urb_34($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !9756, metadata !7256), !dbg !9757, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8455, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := usb_submit_urb($p0, $i1);
  // WARNING: %3 = call i32 @usb_submit_urb(%struct.urb* %0, i32 %1), !dbg !7265, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8457, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const usb_kill_anchored_urbs: ref;
axiom (usb_kill_anchored_urbs == $sub.ref(0, 156206));
procedure  usb_kill_anchored_urbs($p0: ref);
const atomic_set: ref;
axiom (atomic_set == $sub.ref(0, 157238));
procedure  atomic_set($p0: ref, $i1: i32)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %union.__anonunion_ldv_1458_15* %0, i64 0, metadata !9769, metadata !7256), !dbg !9770, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5771, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5771, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5772, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kvaser_usb_rx_can_err: ref;
axiom (kvaser_usb_rx_can_err == $sub.ref(0, 158270));
procedure  kvaser_usb_rx_can_err($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i8;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6916, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6916, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6916, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 38} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 38} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 8} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i64($i10, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 50} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6917, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6918, 51} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6918, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6919, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6919, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6919, 36} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6919, 36} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6919, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6918, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := netdev_err.ref.ref.i32($p14, .str.32, $i19);
  $p21 := $add.ref($add.ref($p4, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6920, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6920, 41} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 1);
  $p24 := $add.ref($add.ref($p4, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6920, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6921, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6945, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 29} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 31} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 38} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 38} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 8} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 43} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i64($i29, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 50} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6925, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6926, 35} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6926, 35} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6926, 11} true;
  assume {:verifier.code 0} true;
  call $p34 := alloc_can_err_skb($p33, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6927, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6927, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6927, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i36 == 1);
  $p37 := $add.ref($add.ref($p4, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6928, 34} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6928, 45} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 1);
  $p40 := $add.ref($add.ref($p4, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6928, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6929, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 18} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 22} true;
  assume {:verifier.code 0} true;
  $p42 := $p41;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 22} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $or.i32($i43, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $p45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6933, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, $i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6934, 5} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6934, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 5);
  $p49 := $add.ref($add.ref($p47, 5), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6934, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, 1);
  $p50 := $add.ref($add.ref($p4, 264), 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6935, 36} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i64($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6935, 51} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 1);
  $p53 := $add.ref($add.ref($p4, 264), 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6935, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p53, $i52);
  $p54 := $add.ref($add.ref($p4, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6936, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i64($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6936, 41} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 1);
  $p57 := $add.ref($add.ref($p4, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6936, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6937, 5} true;
  assume {:verifier.code 0} true;
  call $i58 := netif_rx($p34);
  $p59 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6938, 32} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i64($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6938, 43} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 1);
  $p62 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6938, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p62, $i61);
  $p63 := $add.ref($add.ref($p4, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 30} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i64($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 57} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 61} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p65, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 61} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 41} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 39} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i64($i64, $i68);
  $p70 := $add.ref($add.ref($p4, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6939, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6940, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6943, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const alloc_can_skb: ref;
axiom (alloc_can_skb == $sub.ref(0, 159302));
procedure  alloc_can_skb($p0: ref, $p1: ref)
  returns ($r: ref);
const complete_: ref;
axiom (complete_ == $sub.ref(0, 160334));
procedure  complete_($p0: ref);
const completion_done: ref;
axiom (completion_done == $sub.ref(0, 161366));
procedure  completion_done($p0: ref)
  returns ($r: i1);
const netif_queue_stopped: ref;
axiom (netif_queue_stopped == $sub.ref(0, 162398));
procedure  netif_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6110, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6111, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := netif_tx_queue_stopped($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6111, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %3 to i8, !dbg !7266, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6112, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6112, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const netif_start_queue: ref;
axiom (netif_start_queue == $sub.ref(0, 163430));
procedure  netif_start_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6031, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6032, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_start_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6033, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_start_queue: ref;
axiom (netif_tx_start_queue == $sub.ref(0, 164462));
procedure  netif_tx_start_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6022, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6022, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6023, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const clear_bit: ref;
axiom (clear_bit == $sub.ref(0, 165494));
procedure  clear_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.1(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5720, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_queue_stopped: ref;
axiom (netif_tx_queue_stopped == $sub.ref(0, 166526));
procedure  netif_tx_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6100, 79} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6100, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !7263, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6101, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6101, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const usb_alloc_coherent: ref;
axiom (usb_alloc_coherent == $sub.ref(0, 167558));
procedure  usb_alloc_coherent($p0: ref, $i1: i64, $i2: i32, $p3: ref)
  returns ($r: ref);
const kvaser_usb_probe: ref;
axiom (kvaser_usb_probe == $sub.ref(0, 168590));
procedure  kvaser_usb_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i24;
  var $i35: i24;
  var $i36: i24;
  var $p37: ref;
  var $p38: ref;
  var $i39: i8;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
  var $i55: i32;
  var $p56: ref;
  var $i57: i32;
  var $i58: i1;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $i59: i32;
  var $i8: i32;
  var $i66: i32;
  var $i67: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct._ddebug* %3, metadata !9915, metadata !7256), !dbg !9916, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7975, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7975, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := devm_kzalloc($p3, 312, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7976, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7977, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7977, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7977, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7978, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8053, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7982, 79} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7983, 41} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7982, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := kvaser_usb_get_endpoints($p0, $p9, $p10);
  // WARNING: %14 = call i32 @kvaser_usb_get_endpoints(%struct.usb_interface* %0, %struct.usb_endpoint_descriptor** %12, %struct.usb_endpoint_descriptor** %13), !dbg !7289, !verifier.code !7255
  call {:cexpr "err"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7984, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7984, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7985, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := dev_err.ref.ref($p13, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7986, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i11;
  goto $bb3;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7990, 15} true;
  assume {:verifier.code 0} true;
  call $p15 := interface_to_usbdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7990, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7990, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7991, 26} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7991, 3} true;
  assume {:verifier.code 0} true;
  call init_usb_anchor($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7992, 26} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7992, 3} true;
  assume {:verifier.code 0} true;
  call usb_set_intfdata($p0, $p18);
  // WARNING: call void @usb_set_intfdata(%struct.usb_interface* %0, i8* %24), !dbg !7303, !verifier.code !7255
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7999, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8000, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7996, 3} true;
  assume {:verifier.code 0} true;
  call $i19 := kvaser_usb_send_simple_msg($p5, 24, 0);
  // WARNING: %26 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %6, i8 zeroext 24, i32 0), !dbg !7307, !verifier.code !7255
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8000, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7996, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := kvaser_usb_send_simple_msg($p5, 24, 1);
  // WARNING: %91 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %6, i8 zeroext 24, i32 1), !dbg !7307, !verifier.code !7255
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8000, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8004, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := kvaser_usb_get_software_info($p5);
  // WARNING: %29 = call i32 @kvaser_usb_get_software_info(%struct.kvaser_usb* %6), !dbg !7311, !verifier.code !7255
  call {:cexpr "err"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8005, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8005, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8006, 47} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8006, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := dev_err.ref.ref.i32($p22, .str.1, $i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8008, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i20;
  goto $bb3;
$bb13:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8012, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := kvaser_usb_get_card_info($p5);
  // WARNING: %36 = call i32 @kvaser_usb_get_card_info(%struct.kvaser_usb* %6), !dbg !7319, !verifier.code !7255
  call {:cexpr "err"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8013, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8013, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8014, 47} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8014, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := dev_err.ref.ref.i32($p26, .str.2, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8016, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i24;
  goto $bb3;
$bb16:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8020, 14} true;
  assume {:verifier.code 0} true;
  $p28 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8020, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8021, 14} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8021, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, .str.4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8022, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8022, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8023, 14} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8023, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p31, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 14} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 14} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i24($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i24($i34, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $or.i24($i35, 1659);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8024, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p33, $i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8025, 14} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8025, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8026, 51} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8026, 51} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8026, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8026, 57} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i64($i40, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8026, 13} true;
  assume {:verifier.code 0} true;
  call $i42 := ldv__builtin_expect($i41, 0);
  // WARNING: %57 = call i64 @ldv__builtin_expect(i64 %56, i64 0), !dbg !7342, !verifier.code !7255
  call {:cexpr "tmp___0"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8027, 15} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8027, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8028, 71} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p5, 232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 28} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 39} true;
  assume {:verifier.code 0} true;
  $i47 := $lshr.i32($i46, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 52} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p5, 232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 52} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 63} true;
  assume {:verifier.code 0} true;
  $i50 := $lshr.i32($i49, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 70} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 83} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p5, 232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 83} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8029, 94} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i32($i53, 65535);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8028, 5} true;
  assume {:verifier.code 0} true;
  call $i55 := __dynamic_dev_dbg.ref.ref.ref.i32.i32.i32($p2, $p44, .str.6, $i47, $i51, $i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8030, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 31} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 24} true;
  assume {:verifier.code 0} true;
  $i58 := $ult.i32(0, $i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  $i59 := 0;
  goto $bb24;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i58 == 1));
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8036, 9} true;
  assume {:verifier.code 0} true;
  call $i60 := kvaser_usb_init_one($p0, $p1, $i59);
  // WARNING: %78 = call i32 @kvaser_usb_init_one(%struct.usb_interface* %0, %struct.usb_device_id* %1, i32 %.12), !dbg !7363, !verifier.code !7255
  call {:cexpr "err"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8037, 11} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8037, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $i60;
  assume {:branchcond $i61} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i61 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8038, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_remove_interfaces($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8039, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i62;
  goto $bb3;
$bb27:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8043, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i32($i59, 1);
  // WARNING: %83 = add nsw i32 %.12, 1, !dbg !7370, !verifier.code !7255
  call {:cexpr "i"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 24} true;
  assume {:verifier.code 0} true;
  $i65 := $ult.i32($i63, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $i63;
  assume {:branchcond $i65} true;
  goto $bb29, $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb24;
$bb30:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8045, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8051, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7996, 3} true;
  assume {:verifier.code 0} true;
  call $i67 := kvaser_usb_send_simple_msg($p5, 24, 2);
  // WARNING: %93 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %6, i8 zeroext 24, i32 2), !dbg !7307, !verifier.code !7255
  assume {:verifier.code 0} true;
  goto $bb11;
}
const kvaser_usb_disconnect: ref;
axiom (kvaser_usb_disconnect == $sub.ref(0, 169622));
procedure  kvaser_usb_disconnect($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8060, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := usb_get_intfdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8061, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8062, 3} true;
  assume {:verifier.code 0} true;
  call usb_set_intfdata($p0, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8063, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8063, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8063, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8064, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8071, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8068, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_remove_interfaces($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8069, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const usb_get_intfdata: ref;
axiom (usb_get_intfdata == $sub.ref(0, 170654));
procedure  usb_get_intfdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6203, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6203, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6204, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const usb_set_intfdata: ref;
axiom (usb_set_intfdata == $sub.ref(0, 171686));
procedure  usb_set_intfdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6212, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6212, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6213, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kvaser_usb_remove_interfaces: ref;
axiom (kvaser_usb_remove_interfaces == $sub.ref(0, 172718));
procedure  kvaser_usb_remove_interfaces($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i4: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i23: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb* %0, i64 0, metadata !10066, metadata !7256), !dbg !10067, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7799, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8);
  $p7 := $add.ref($add.ref($p0, 8), $mul.ref($i5, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7790, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7796, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i4, 1);
  // WARNING: %22 = add nsw i32 %.02, 1, !dbg !7280, !verifier.code !7260
  call {:cexpr "i"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 24} true;
  assume {:verifier.code 0} true;
  $i19 := $ult.i32($i17, $i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i17;
  assume {:branchcond $i19} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 22} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 27} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 8);
  $p13 := $add.ref($add.ref($p0, 8), $mul.ref($i11, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 22} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 37} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 3} true;
  assume {:verifier.code 0} true;
  call unregister_netdev($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7794, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb4;
$bb11:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7798, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7803, 3} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_unlink_all_urbs($p0);
  // WARNING: call void @kvaser_usb_unlink_all_urbs(%struct.kvaser_usb* %0), !dbg !7283, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 31} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $ult.i32(0, $i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  $i23 := 0;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i22 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7817, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 28} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 8);
  $p26 := $add.ref($add.ref($p0, 8), $mul.ref($i24, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 23} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 36} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i64($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7807, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7808, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7814, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i23, 1);
  // WARNING: %48 = add nsw i32 %.11, 1, !dbg !7300, !verifier.code !7260
  call {:cexpr "i"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 31} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 24} true;
  assume {:verifier.code 0} true;
  $i38 := $ult.i32($i36, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $i36;
  assume {:branchcond $i38} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 16} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 21} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 8);
  $p32 := $add.ref($add.ref($p0, 8), $mul.ref($i30, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 16} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 31} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 31} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 3} true;
  assume {:verifier.code 0} true;
  call free_candev($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7812, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1);
  goto $bb16;
$bb23:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7816, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7822, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const unregister_netdev: ref;
axiom (unregister_netdev == $sub.ref(0, 173750));
procedure  unregister_netdev($p0: ref);
const kvaser_usb_unlink_all_urbs: ref;
axiom (kvaser_usb_unlink_all_urbs == $sub.ref(0, 174782));
procedure  kvaser_usb_unlink_all_urbs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7386, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7386, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_anchored_urbs($p1);
  // WARNING: call void @usb_kill_anchored_urbs(%struct.usb_anchor* %2), !dbg !7263, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7393, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7394, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 45} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 248);
  $p5 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 60} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 280);
  $p8 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 55} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p3, 3072, $p6, $i9);
  // WARNING: call void @usb_free_coherent(%struct.usb_device* %5, i64 3072, i8* %8, i64 %11), !dbg !7272, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7394, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 248);
  $p28 := $add.ref($add.ref($p0, 248), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 40} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 60} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 280);
  $p31 := $add.ref($add.ref($p0, 280), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 55} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p26, 3072, $p29, $i32);
  // WARNING: call void @usb_free_coherent(%struct.usb_device* %45, i64 3072, i8* %48, i64 %51), !dbg !7272, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7394, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7409, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7410, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 15} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 28} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7403, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_unlink_tx_urbs($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7404, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7410, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 15} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 8);
  $p16 := $add.ref($add.ref($p0, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb12, $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7415, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb12:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7403, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_unlink_tx_urbs($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7404, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7410, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 8);
  $p21 := $add.ref($add.ref($p0, 8), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7401, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 28} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7403, 5} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_unlink_tx_urbs($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7404, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p33 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 45} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 248);
  $p36 := $add.ref($add.ref($p0, 248), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 40} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 60} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 280);
  $p39 := $add.ref($add.ref($p0, 280), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 55} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i64($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p34, 3072, $p37, $i40);
  // WARNING: call void @usb_free_coherent(%struct.usb_device* %54, i64 3072, i8* %57, i64 %60), !dbg !7272, !verifier.code !7260
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7394, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p41 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 45} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 248);
  $p44 := $add.ref($add.ref($p0, 248), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 40} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 60} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 280);
  $p47 := $add.ref($add.ref($p0, 280), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 55} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i64($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7390, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p42, 3072, $p45, $i48);
  // WARNING: call void @usb_free_coherent(%struct.usb_device* %63, i64 3072, i8* %66, i64 %69), !dbg !7272, !verifier.code !7260
  assume {:verifier.code 0} true;
  goto $bb4;
}
const free_candev: ref;
axiom (free_candev == $sub.ref(0, 175814));
procedure  free_candev($p0: ref);
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 176846));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5971, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5971, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5972, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 177878));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5963, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5963, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5963, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const devm_kzalloc: ref;
axiom (devm_kzalloc == $sub.ref(0, 178910));
procedure  devm_kzalloc($p0: ref, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !10167, metadata !7256), !dbg !10168, !verifier.code !7258
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !10169, metadata !7256), !dbg !10170, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5954, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $or.i32($i2, 32768);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5954, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := devm_kmalloc($p0, $i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5955, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const kvaser_usb_get_endpoints: ref;
axiom (kvaser_usb_get_endpoints == $sub.ref(0, 179942));
procedure  kvaser_usb_get_endpoints($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $i10: i32;
  var $i32: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7923, 59} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7923, 59} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_host_interface* %5, i64 0, metadata !10191, metadata !7256), !dbg !10192, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  $p6 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 44} true;
  assume {:verifier.code 0} true;
  $i9 := $sgt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7956, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7927, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7927, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7927, 40} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7927, 38} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p12, $mul.ref($i13, 72));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7927, 60} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p12, $mul.ref($i13, 72));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7928, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7928, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7928, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7928, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7929, 11} true;
  assume {:verifier.code 0} true;
  call $i19 := usb_endpoint_is_bulk_in($p15);
  // WARNING: %21 = call i32 @usb_endpoint_is_bulk_in(%struct.usb_endpoint_descriptor* %16), !dbg !7289, !verifier.code !7261
  call {:cexpr "tmp"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7930, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7930, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7931, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7932, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7938, 23} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7938, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7938, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7939, 15} true;
  assume {:verifier.code 0} true;
  call $i24 := usb_endpoint_is_bulk_out($p15);
  // WARNING: %32 = call i32 @usb_endpoint_is_bulk_out(%struct.usb_endpoint_descriptor* %16), !dbg !7305, !verifier.code !7261
  call {:cexpr "tmp___0"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7940, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7940, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7941, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7942, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7945, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 84} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 103} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 87} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 108} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 84} true;
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb21:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7949, 5} true;
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7948, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i31 == 1));
  goto $bb20;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7963, 1} true;
  assume {:verifier.code 0} true;
  $r := $i32;
  $exn := false;
  return;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7953, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i10, 1);
  // WARNING: %49 = add nsw i32 %.012, 1, !dbg !7328, !verifier.code !7261
  call {:cexpr "i"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 44} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i35, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i33;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb4;
$bb26:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7961, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32(0, 19);
  goto $bb23;
}
const interface_to_usbdev: ref;
axiom (interface_to_usbdev == $sub.ref(0, 180974));
procedure  interface_to_usbdev($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6221, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 48);
  $p2 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6221, 47} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6222, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6222, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref($sub.ref(0, 144), 2040));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6222, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const init_usb_anchor: ref;
axiom (init_usb_anchor == $sub.ref(0, 182006));
procedure  init_usb_anchor($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6236, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6236, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p3, 0, 184, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6237, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6237, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6238, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6238, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p5, .str.7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6239, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6239, 3} true;
  assume {:verifier.code 0} true;
  call $p7 := spinlock_check($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6240, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 104);
  $p9 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6240, 48} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6240, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p10, .str.8, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6241, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kvaser_usb_get_software_info: ref;
axiom (kvaser_usb_get_software_info == $sub.ref(0, 183038));
procedure  kvaser_usb_get_software_info($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i4: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(36, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6527, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := kvaser_usb_send_simple_msg($p0, 38, 0);
  // WARNING: %3 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %0, i8 zeroext 38, i32 0), !dbg !7263, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6528, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6528, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6529, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6542, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6533, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := kvaser_usb_wait_msg($p0, 39, $p1);
  // WARNING: %8 = call i32 @kvaser_usb_wait_msg(%struct.kvaser_usb* %0, i8 zeroext 39, %struct.kvaser_msg* %2), !dbg !7272, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6534, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6534, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6535, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i5;
  goto $bb3;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6539, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6540, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
}
const kvaser_usb_get_card_info: ref;
axiom (kvaser_usb_get_card_info == $sub.ref(0, 184070));
procedure  kvaser_usb_get_card_info($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i4: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(36, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6549, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := kvaser_usb_send_simple_msg($p0, 34, 0);
  // WARNING: %3 = call i32 @kvaser_usb_send_simple_msg(%struct.kvaser_usb* %0, i8 zeroext 34, i32 0), !dbg !7263, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6550, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6551, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6569, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6555, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := kvaser_usb_wait_msg($p0, 35, $p1);
  // WARNING: %8 = call i32 @kvaser_usb_wait_msg(%struct.kvaser_usb* %0, i8 zeroext 35, %struct.kvaser_msg* %2), !dbg !7272, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6556, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6556, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6557, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i5;
  goto $bb3;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 39} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6561, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6562, 12} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 236);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6562, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6562, 22} true;
  assume {:verifier.code 0} true;
  $i15 := $ugt.i32($i14, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6562, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6563, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6567, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
}
const __dynamic_dev_dbg: ref;
axiom (__dynamic_dev_dbg == $sub.ref(0, 185102));
procedure  __dynamic_dev_dbg.ref.ref.ref.i32.i32.i32($p0: ref, $p1: ref, $p2: ref, p.3: i32, p.4: i32, p.5: i32)
  returns ($r: i32);
const kvaser_usb_init_one: ref;
axiom (kvaser_usb_init_one == $sub.ref(0, 186134));
procedure  kvaser_usb_init_one($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i32;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i16;
  var $p63: ref;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $p69: ref;
  var $i70: i32;
  var $i71: i64;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i24;
  var $i81: i24;
  var $i82: i24;
  var $p83: ref;
  var $p84: ref;
  var $i85: i8;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $i89: i1;
  var $i90: i32;
  var $i11: i32;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device_id* %1, i64 0, metadata !10356, metadata !7256), !dbg !10357, !verifier.code !7258
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7839, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := usb_get_intfdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7840, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7841, 12} true;
  assume {:verifier.code 0} true;
  call $p6 := alloc_candev(1040, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7842, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7842, 30} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7842, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7843, 47} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7843, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := dev_err.ref.ref($p9, .str.10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7844, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7912, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7848, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := netdev_priv($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7849, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7850, 27} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7850, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7851, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p13, 920);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7851, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7852, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7852, 3} true;
  assume {:verifier.code 0} true;
  call init_usb_anchor($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7853, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p13, 376);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7853, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p17, 0);
  // WARNING: call void @atomic_set(%union.__anonunion_ldv_1458_15* %20, i32 0), !dbg !7306, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7860, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p13, 568);
  $p19 := $add.ref($p13, 568);
  $p20 := $add.ref($add.ref($p13, 568), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, 16);
  // WARNING: store i32 16, i32* %24, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p13, 568);
  $p92 := $add.ref($add.ref($p13, 568), 16);
  $p93 := $add.ref($add.ref($add.ref($p13, 568), 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, 16);
  // WARNING: store i32 16, i32* %113, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7865, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7865, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7866, 9} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p13, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7866, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7867, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p13, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7867, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7868, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $p13;
  $p25 := $add.ref($p13, 108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7868, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7869, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $p13;
  $p27 := $add.ref($p13, 104);
  $p28 := $add.ref($p13, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7869, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, 8000000);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7870, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $p13;
  $p30 := $add.ref($p13, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7870, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, kvaser_usb_bittiming_const);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7871, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $p13;
  $p32 := $add.ref($p13, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7871, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, kvaser_usb_set_bittiming);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7872, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $p13;
  $p34 := $add.ref($p13, 272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7872, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, kvaser_usb_set_mode);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7873, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7873, 28} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7873, 40} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i64($i36, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7873, 47} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7874, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $p13;
  $p40 := $add.ref($p13, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7874, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, kvaser_usb_get_berr_counter);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7875, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7878, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $p13;
  $p42 := $add.ref($p13, 116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7878, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 17} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 29} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7879, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7880, 42} true;
  assume {:verifier.code 0} true;
  $p48 := $p13;
  $p49 := $add.ref($p13, 116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7880, 46} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7880, 65} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i32($i50, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7880, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $p13;
  $p53 := $add.ref($p13, 116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7880, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, $i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7881, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7884, 27} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p6, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7884, 27} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7884, 33} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i32($i55, 262144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7884, 11} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p6, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7884, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7885, 11} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p6, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7885, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p58, kvaser_usb_netdev_ops);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7886, 32} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7886, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p6, 1296);
  $p61 := $add.ref($p6, 1296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7886, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p61, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7887, 20} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i16($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7887, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p6, 584);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7887, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7888, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7888, 8} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p5, 8);
  $p66 := $add.ref($add.ref($p5, 8), $mul.ref($i64, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7888, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p66, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7889, 9} true;
  assume {:verifier.code 0} true;
  call $i67 := register_candev($p6);
  // WARNING: %79 = call i32 @register_candev(%struct.net_device* %7), !dbg !7369, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7890, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i32($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7890, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7891, 47} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7891, 5} true;
  assume {:verifier.code 0} true;
  call $i70 := dev_err.ref.ref($p69, .str.11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7892, 5} true;
  assume {:verifier.code 0} true;
  call free_candev($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7893, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7893, 10} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p5, 8);
  $p73 := $add.ref($add.ref($p5, 8), $mul.ref($i71, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7893, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p73, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7894, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $i67;
  goto $bb3;
$bb16:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7898, 14} true;
  assume {:verifier.code 0} true;
  $p74 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7898, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p74, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7899, 14} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7899, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, .str.12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7900, 14} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7900, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p76, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7901, 14} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7901, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, .str.13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 14} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 14} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 21} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i24($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 21} true;
  assume {:verifier.code 0} true;
  $i81 := $and.i24($i80, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 21} true;
  assume {:verifier.code 0} true;
  $i82 := $or.i24($i81, 1584);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7902, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p79, $i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7903, 14} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7903, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7904, 51} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7904, 51} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i8($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7904, 33} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7904, 57} true;
  assume {:verifier.code 0} true;
  $i87 := $and.i64($i86, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7904, 13} true;
  assume {:verifier.code 0} true;
  call $i88 := ldv__builtin_expect($i87, 0);
  // WARNING: %103 = call i64 @ldv__builtin_expect(i64 %102, i64 0), !dbg !7398, !verifier.code !7257
  call {:cexpr "tmp___1"} boogie_si_record_i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7905, 15} true;
  assume {:verifier.code 0} true;
  $i89 := $ne.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7905, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7906, 5} true;
  assume {:verifier.code 0} true;
  call $i90 := __dynamic_netdev_dbg.ref.ref.ref($p3, $p6, .str.13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7907, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7910, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p13, 568);
  $p95 := $add.ref($add.ref($p13, 568), 32);
  $p96 := $add.ref($add.ref($add.ref($p13, 568), 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p96, 16);
  // WARNING: store i32 16, i32* %117, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p13, 568);
  $p98 := $add.ref($add.ref($p13, 568), 48);
  $p99 := $add.ref($add.ref($add.ref($p13, 568), 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, 16);
  // WARNING: store i32 16, i32* %121, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p13, 568);
  $p101 := $add.ref($add.ref($p13, 568), 64);
  $p102 := $add.ref($add.ref($add.ref($p13, 568), 64), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, 16);
  // WARNING: store i32 16, i32* %125, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p13, 568);
  $p104 := $add.ref($add.ref($p13, 568), 80);
  $p105 := $add.ref($add.ref($add.ref($p13, 568), 80), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, 16);
  // WARNING: store i32 16, i32* %129, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p13, 568);
  $p107 := $add.ref($add.ref($p13, 568), 96);
  $p108 := $add.ref($add.ref($add.ref($p13, 568), 96), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p108, 16);
  // WARNING: store i32 16, i32* %133, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p13, 568);
  $p110 := $add.ref($add.ref($p13, 568), 112);
  $p111 := $add.ref($add.ref($add.ref($p13, 568), 112), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p111, 16);
  // WARNING: store i32 16, i32* %137, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p13, 568);
  $p113 := $add.ref($add.ref($p13, 568), 128);
  $p114 := $add.ref($add.ref($add.ref($p13, 568), 128), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, 16);
  // WARNING: store i32 16, i32* %141, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p13, 568);
  $p116 := $add.ref($add.ref($p13, 568), 144);
  $p117 := $add.ref($add.ref($add.ref($p13, 568), 144), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, 16);
  // WARNING: store i32 16, i32* %145, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p13, 568);
  $p119 := $add.ref($add.ref($p13, 568), 160);
  $p120 := $add.ref($add.ref($add.ref($p13, 568), 160), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p120, 16);
  // WARNING: store i32 16, i32* %149, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p13, 568);
  $p122 := $add.ref($add.ref($p13, 568), 176);
  $p123 := $add.ref($add.ref($add.ref($p13, 568), 176), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p123, 16);
  // WARNING: store i32 16, i32* %153, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p13, 568);
  $p125 := $add.ref($add.ref($p13, 568), 192);
  $p126 := $add.ref($add.ref($add.ref($p13, 568), 192), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p126, 16);
  // WARNING: store i32 16, i32* %157, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p13, 568);
  $p128 := $add.ref($add.ref($p13, 568), 208);
  $p129 := $add.ref($add.ref($add.ref($p13, 568), 208), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, 16);
  // WARNING: store i32 16, i32* %161, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p13, 568);
  $p131 := $add.ref($add.ref($p13, 568), 224);
  $p132 := $add.ref($add.ref($add.ref($p13, 568), 224), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p132, 16);
  // WARNING: store i32 16, i32* %165, align 8, !dbg !7311, !verifier.code !7257
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 9} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p13, 568);
  $p134 := $add.ref($add.ref($p13, 568), 240);
  $p135 := $add.ref($add.ref($add.ref($p13, 568), 240), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7857, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p135, 16);
  // WARNING: store i32 16, i32* %169, align 8, !dbg !7311, !verifier.code !7257
  assume {:verifier.code 0} true;
  goto $bb8;
}
const alloc_candev: ref;
axiom (alloc_candev == $sub.ref(0, 187166));
procedure  alloc_candev($i0: i32, $i1: i32)
  returns ($r: ref);
const kvaser_usb_set_bittiming: ref;
axiom (kvaser_usb_set_bittiming == $sub.ref(0, 188198));
procedure  kvaser_usb_set_bittiming($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i8;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i8;
  var $i37: i32;
  var $p38: ref;
  var $i39: i32;
  var $i40: i8;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i8;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7715, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7716, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7717, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  $p4 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7718, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7718, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7719, 13} true;
  assume {:verifier.code 0} true;
  call $p7 := kmalloc(32, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7720, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7721, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7721, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7721, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7722, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7743, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7726, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p8, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7726, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7727, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7727, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 1032);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 41} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 30} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7728, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7729, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7729, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7729, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $p21;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7729, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, $sub.i8(0, 1));
  $p23 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7730, 34} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7730, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7730, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7730, 20} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7730, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i24);
  $p28 := $add.ref($add.ref($p2, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 35} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 20} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7731, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, $i30);
  $p34 := $add.ref($add.ref($p2, 24), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 44} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 35} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 28} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  $p38 := $add.ref($add.ref($p2, 24), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 72} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 63} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i32.i8($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 56} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 54} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i37, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 20} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7732, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, $i43);
  $p47 := $add.ref($add.ref($p2, 24), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 37} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 28} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i8($i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 8} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 10} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 20} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7733, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, $i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7734, 14} true;
  assume {:verifier.code 0} true;
  $p53 := $p2;
  $p54 := $add.ref($p2, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7734, 18} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7734, 27} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i32($i55, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7734, 33} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7734, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7735, 10} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7735, 12} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7735, 22} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7735, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7736, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7737, 10} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7737, 12} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7737, 22} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7737, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p63, 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7739, 8} true;
  assume {:verifier.code 0} true;
  call $i64 := kvaser_usb_send_msg($p6, $p8);
  // WARNING: %70 = call i32 @kvaser_usb_send_msg(%struct.kvaser_usb* %7, %struct.kvaser_msg* %9), !dbg !7344, !verifier.code !7258
  call {:cexpr "rc"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7740, 9} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7740, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7741, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i64;
  goto $bb3;
}
const kvaser_usb_set_mode: ref;
axiom (kvaser_usb_set_mode == $sub.ref(0, 189230));
procedure  kvaser_usb_set_mode($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !10592, metadata !7256), !dbg !10593, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7751, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7752, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i1, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7755, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := kvaser_usb_simple_msg_async($p3, 26);
  // WARNING: %6 = call i32 @kvaser_usb_simple_msg_async(%struct.kvaser_usb_net_priv* %4, i8 zeroext 26), !dbg !7268, !verifier.code !7258
  call {:cexpr "err"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7756, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7756, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7757, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7768, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7761, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7766, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb6;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7763, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 95);
  goto $bb6;
}
const kvaser_usb_get_berr_counter: ref;
axiom (kvaser_usb_get_berr_counter == $sub.ref(0, 190262));
procedure  kvaser_usb_get_berr_counter($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7775, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7776, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7777, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1036);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7777, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7777, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7777, 16} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p5, $p6, 4, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 7778, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const register_candev: ref;
axiom (register_candev == $sub.ref(0, 191294));
procedure  register_candev($p0: ref)
  returns ($r: i32);
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 192326));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const kvaser_usb_wait_msg: ref;
axiom (kvaser_usb_wait_msg == $sub.ref(0, 193358));
procedure  kvaser_usb_wait_msg($p0: ref, $i1: i8, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i38: i8;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $i57: i8;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $i63: i8;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i32;
  var $i68: i1;
  var $i29: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i1;
  var $i25: i32;
  var $i10: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.kvaser_usb* %0, i64 0, metadata !10633, metadata !7256), !dbg !10634, !verifier.code !7258
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6440, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := msecs_to_jiffies(1000);
  // WARNING: %5 = call i64 @msecs_to_jiffies(i32 1000), !dbg !7267, !verifier.code !7257
  call {:cexpr "tmp___0"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6441, 34} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6441, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i4, $i5);
  // WARNING: %7 = add i64 %5, %6, !dbg !7272, !verifier.code !7257
  call {:cexpr "to"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6442, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := kzalloc(3072, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6443, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6443, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6443, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6444, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6496, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6443, 56} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 32} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 59} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 59} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 69} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 69} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 38} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6449, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := __create_pipe($p12, $i17);
  // WARNING: %22 = call i32 @__create_pipe(%struct.usb_device* %16, i32 %21), !dbg !7290, !verifier.code !7257
  call {:cexpr "tmp___1"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6450, 27} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6450, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6450, 41} true;
  assume {:verifier.code 0} true;
  $i21 := $or.i32($i18, $sub.i32(0, 1073741696));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6450, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := usb_bulk_msg($p20, $i21, $p7, 3072, $p3, 1000);
  // WARNING: %26 = call i32 @usb_bulk_msg(%struct.usb_device* %24, i32 %25, i8* %8, i32 3072, i32* %4, i32 1000), !dbg !7295, !verifier.code !7257
  call {:cexpr "err"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6451, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6451, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $i22;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i23 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6452, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i24;
  goto $bb8;
$bb7:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6493, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6494, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i25;
  goto $bb3;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $sge.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6481, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6459, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6459, 36} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6459, 34} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p30, $mul.ref($i31, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6460, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p30, $mul.ref($i31, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6460, 27} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6460, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6460, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6460, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6461, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6486, 31} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6486, 39} true;
  assume {:verifier.code 0} true;
  $i70 := $sub.i64($i69, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6486, 45} true;
  assume {:verifier.code 0} true;
  $i71 := $slt.i64($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6486, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb28, $bb29;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p30, $mul.ref($i31, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i8($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 22} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i39, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 30} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 28} true;
  assume {:verifier.code 0} true;
  $i42 := $sgt.i32($i40, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6465, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6466, 44} true;
  assume {:verifier.code 0} true;
  $p43 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6466, 44} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6466, 51} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 144);
  $p46 := $add.ref($p44, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6466, 55} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6466, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := dev_err.ref.ref($p47, .str.9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6467, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb20:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 18} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p30, $mul.ref($i31, 36)), 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 21} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i32($i51, $i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6471, 7} true;
  assume {:verifier.code 0} true;
  $i54, $p55 := $i22, $p32;
  assume {:branchcond $i53} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i53 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6472, 27} true;
  assume {:verifier.code 0} true;
  $p56 := $p55;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6472, 27} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6472, 13} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i64($i57);
  // WARNING: %68 = zext i8 %67 to i64, !dbg !7343, !verifier.code !7257
  call {:cexpr "__len"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6473, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6473, 43} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6473, 13} true;
  assume {:verifier.code 0} true;
  call $i61 := __builtinx_memcpy.ref.ref.i64($p59, $p60, $i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6474, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i54;
  goto $bb8;
$bb23:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6478, 20} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p30, $mul.ref($i31, 36));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6478, 20} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6478, 9} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6478, 24} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i32($i64, $i29);
  // WARNING: %77 = add nsw i32 %76, %.017, !dbg !7352, !verifier.code !7257
  call {:cexpr "pos"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i66, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 23} true;
  assume {:verifier.code 0} true;
  $i68 := $sge.i32($i67, $i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $i65;
  assume {:branchcond $i68} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb13;
$bb26:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6480, 26} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6486, 7} true;
  assume {:verifier.code 0} true;
  assume ($i71 == 1);
  goto $bb5;
$bb29:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6491, 3} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb8;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 194390));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !10741, metadata !7256), !dbg !10742, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8340, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8341, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 195422));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 196454));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5751, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5751, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5752, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5752, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5753, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 197486));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5799, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5799, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5799, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 198518));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const usb_endpoint_is_bulk_in: ref;
axiom (usb_endpoint_is_bulk_in == $sub.ref(0, 199550));
procedure  usb_endpoint_is_bulk_in($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6163, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := usb_endpoint_xfer_bulk($p0);
  // WARNING: %2 = call i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %0), !dbg !7261, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6164, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6165, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_endpoint_dir_in($p0);
  // WARNING: %5 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %0), !dbg !7268, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6166, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6166, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6168, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6171, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6174, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_is_bulk_out: ref;
axiom (usb_endpoint_is_bulk_out == $sub.ref(0, 200582));
procedure  usb_endpoint_is_bulk_out($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6184, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := usb_endpoint_xfer_bulk($p0);
  // WARNING: %2 = call i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %0), !dbg !7261, !verifier.code !7260
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6185, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6185, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6186, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_endpoint_dir_out($p0);
  // WARNING: %5 = call i32 @usb_endpoint_dir_out(%struct.usb_endpoint_descriptor* %0), !dbg !7268, !verifier.code !7260
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6187, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6187, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6189, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6192, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6195, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_xfer_bulk: ref;
axiom (usb_endpoint_xfer_bulk == $sub.ref(0, 201614));
procedure  usb_endpoint_xfer_bulk($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 23} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 41} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6153, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_dir_out: ref;
axiom (usb_endpoint_dir_out == $sub.ref(0, 202646));
procedure  usb_endpoint_dir_out($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 37} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 37} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 55} true;
  assume {:verifier.code 0} true;
  $i4 := $sge.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 55} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6145, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const usb_endpoint_dir_in: ref;
axiom (usb_endpoint_dir_in == $sub.ref(0, 203678));
procedure  usb_endpoint_dir_in($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 37} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 37} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 55} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 55} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 6137, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const devm_kmalloc: ref;
axiom (devm_kmalloc == $sub.ref(0, 204710));
procedure  devm_kmalloc($p0: ref, $i1: i64, $i2: i32)
  returns ($r: ref);
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 205742));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5865, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  // WARNING: %2 = call i32 @__VERIFIER_nondet_int(), !dbg !7261, !verifier.code !7263
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5866, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5866, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5867, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5869, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5871, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5871, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5871, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5871, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5872, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5875, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv_usb_driver_1: ref;
axiom (ldv_usb_driver_1 == $sub.ref(0, 206774));
procedure  ldv_usb_driver_1()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8109, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1560);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8110, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8110, 28} true;
  assume {:verifier.code 0} true;
  $M.3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8111, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_net_device_ops_2: ref;
axiom (ldv_net_device_ops_2 == $sub.ref(0, 207806));
procedure  ldv_net_device_ops_2()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8119, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(3264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8120, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8120, 32} true;
  assume {:verifier.code 0} true;
  $M.4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8121, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 208838));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i1;
  var $i52: i1;
  var $i53: i1;
  var $i54: i1;
  var $i55: i1;
  var $i56: i1;
  var $i57: i1;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i1;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8138, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8138, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8139, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8140, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc(232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8141, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8142, 13} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  // WARNING: %5 = call i32 @__VERIFIER_nondet_int(), !dbg !7270, !verifier.code !7271
  call {:cexpr "tmp___1"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !10898, metadata !7256), !dbg !10899, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8144, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8145, 24} true;
  assume {:verifier.code 0} true;
  $M.5 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8146, 11} true;
  assume {:verifier.code 0} true;
  $M.6 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8147, 24} true;
  assume {:verifier.code 0} true;
  $M.7 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8148, 24} true;
  assume {:verifier.code 0} true;
  $M.8 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8148, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8150, 13} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  // WARNING: %7 = call i32 @__VERIFIER_nondet_int(), !dbg !7282, !verifier.code !7271
  call {:cexpr "tmp___2"} boogie_si_record_i32($i5);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb10, $bb11;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8187, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8187, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8187, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb39, $bb40;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8228, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8228, 28} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8228, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb69, $bb70;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb118;
$bb10:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8153, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8153, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8153, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb12, $bb13;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb9;
$bb12:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8154, 15} true;
  assume {:verifier.code 1} true;
  call $i12 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i12);
  // WARNING: %12 = call i32 @__VERIFIER_nondet_int(), !dbg !7290, !verifier.code !7271
  call {:cexpr "tmp___3"} boogie_si_record_i32($i12);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb14:
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i12, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i12, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb20, $bb21;
$bb16:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i12, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb29, $bb30;
$bb18:
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb20:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8157, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8157, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8157, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb22, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb19;
$bb22:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8158, 39} true;
  assume {:verifier.code 0} true;
  $p18 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8158, 22} true;
  assume {:verifier.code 0} true;
  call $i19 := kvaser_usb_probe($p18, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8158, 20} true;
  assume {:verifier.code 0} true;
  $M.9 := $i19;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8159, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8159, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8159, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8160, 30} true;
  assume {:verifier.code 0} true;
  $M.5 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8161, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8161, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8161, 17} true;
  assume {:verifier.code 0} true;
  $M.6 := $i23;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8162, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8165, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8168, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8182, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb29:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 38} true;
  assume {:verifier.code 0} true;
  $i26 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb32:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8171, 29} true;
  assume {:verifier.code 0} true;
  $p28 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8171, 7} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_disconnect($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8172, 28} true;
  assume {:verifier.code 0} true;
  $M.5 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8173, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8173, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $sub.i32($i29, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8173, 15} true;
  assume {:verifier.code 0} true;
  $M.6 := $i30;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8174, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8170, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb31;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8177, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8179, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8180, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8180, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8185, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8309, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb39:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8188, 15} true;
  assume {:verifier.code 1} true;
  call $i33 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i33);
  // WARNING: %49 = call i32 @__VERIFIER_nondet_int(), !dbg !7342, !verifier.code !7271
  call {:cexpr "tmp___4"} boogie_si_record_i32($i33);
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb41:
  assume {:verifier.code 0} true;
  $i34 := $slt.i32($i33, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i34 == 1);
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i33, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb47, $bb48;
$bb43:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i33, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8200, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8200, 30} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8200, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb57, $bb58;
$bb45:
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb66;
$bb47:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb49, $bb50;
$bb48:
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb46;
$bb49:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 46} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb52, $bb53;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb52:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8192, 7} true;
  assume {:verifier.code 0} true;
  call kvaser_usb_driver_exit();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8193, 28} true;
  assume {:verifier.code 0} true;
  $M.7 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8194, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8191, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb51;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8311, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8312, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8198, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8223, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb57:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8201, 22} true;
  assume {:verifier.code 0} true;
  call $i43 := kvaser_usb_driver_init();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8201, 20} true;
  assume {:verifier.code 0} true;
  $M.11 := $i43;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8202, 11} true;
  assume {:verifier.code 0} true;
  $i44 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8202, 24} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8202, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb59, $bb60;
$bb58:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb59:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8203, 30} true;
  assume {:verifier.code 0} true;
  $M.7 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8204, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8205, 9} true;
  assume {:verifier.code 0} true;
  call ldv_net_device_ops_2();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8206, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8209, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8209, 24} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8209, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8210, 30} true;
  assume {:verifier.code 0} true;
  $M.7 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8211, 9} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb63:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8215, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8218, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8220, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8221, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8221, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8226, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb69:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8229, 15} true;
  assume {:verifier.code 1} true;
  call $i50 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i50);
  // WARNING: %85 = call i32 @__VERIFIER_nondet_int(), !dbg !7395, !verifier.code !7271
  call {:cexpr "tmp___5"} boogie_si_record_i32($i50);
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb117;
$bb71:
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i50, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i51 == 1);
  assume {:verifier.code 0} true;
  $i55 := $slt.i32($i50, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb81, $bb82;
$bb73:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  $i52 := $slt.i32($i50, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8266, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8266, 30} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.i32($i76, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8266, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb103, $bb104;
$bb75:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  $i53 := $slt.i32($i50, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb76, $bb77;
$bb76:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8274, 9} true;
  assume {:verifier.code 0} true;
  $i80 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8274, 30} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8274, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb106, $bb107;
$bb77:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i50, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8288, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8288, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $eq.i32($i89, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8288, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb112, $bb113;
$bb79:
  assume {:verifier.code 0} true;
  assume !(($i54 == 1));
  goto $bb80;
$bb80:
  assume {:verifier.code 0} true;
  goto $bb115;
$bb81:
  assume ($i55 == 1);
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i50, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb85, $bb86;
$bb82:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  $i56 := $slt.i32($i50, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8240, 9} true;
  assume {:verifier.code 0} true;
  $i62 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8240, 30} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8240, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb91, $bb92;
$bb84:
  assume !(($i56 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8254, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8254, 30} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8254, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb97, $bb98;
$bb85:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8232, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8232, 30} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i58, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8232, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb87, $bb88;
$bb86:
  assume {:verifier.code 0} true;
  assume !(($i57 == 1));
  goto $bb80;
$bb87:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8233, 24} true;
  assume {:verifier.code 0} true;
  $p60 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8233, 7} true;
  assume {:verifier.code 0} true;
  call $i61 := kvaser_usb_close($p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8234, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8235, 5} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb88:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8238, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8301, 3} true;
  assume {:verifier.code 0} true;
  goto $bb117;
$bb91:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8241, 22} true;
  assume {:verifier.code 0} true;
  $p64 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8241, 7} true;
  assume {:verifier.code 0} true;
  call $i65 := can_change_mtu($p64, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8242, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 3;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8243, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8246, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8246, 30} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8246, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb94, $bb95;
$bb94:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8247, 22} true;
  assume {:verifier.code 0} true;
  $p68 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8247, 7} true;
  assume {:verifier.code 0} true;
  call $i69 := can_change_mtu($p68, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8248, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8249, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8252, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb97:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8255, 38} true;
  assume {:verifier.code 0} true;
  $p72 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8255, 22} true;
  assume {:verifier.code 0} true;
  call $i73 := kvaser_usb_open($p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8255, 20} true;
  assume {:verifier.code 0} true;
  $M.12 := $i73;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8256, 11} true;
  assume {:verifier.code 0} true;
  $i74 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8256, 24} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8256, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb99, $bb100;
$bb98:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb102;
$bb99:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8257, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 3;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8258, 7} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb100:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8261, 5} true;
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8264, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb103:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8267, 38} true;
  assume {:verifier.code 0} true;
  $p78 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8267, 7} true;
  assume {:verifier.code 0} true;
  call $i79 := kvaser_usb_start_xmit($p3, $p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8268, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 3;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8269, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb104:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8272, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb106:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8275, 22} true;
  assume {:verifier.code 0} true;
  call $i82 := ldv_ndo_init_2();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8275, 20} true;
  assume {:verifier.code 0} true;
  $M.13 := $i82;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8276, 11} true;
  assume {:verifier.code 0} true;
  $i83 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8276, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8276, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb108, $bb109;
$bb107:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb111;
$bb108:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8277, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8278, 23} true;
  assume {:verifier.code 0} true;
  $i85 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8278, 35} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i85, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8278, 21} true;
  assume {:verifier.code 0} true;
  $M.10 := $i86;
  call {:cexpr "usb_counter"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8279, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8279, 27} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i87, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8279, 17} true;
  assume {:verifier.code 0} true;
  $M.6 := $i88;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8280, 7} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb109:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8283, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8286, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb112:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8289, 7} true;
  assume {:verifier.code 0} true;
  call $i91 := ldv_ndo_uninit_2();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8290, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8291, 21} true;
  assume {:verifier.code 0} true;
  $i92 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8291, 33} true;
  assume {:verifier.code 0} true;
  $i93 := $sub.i32($i92, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8291, 19} true;
  assume {:verifier.code 0} true;
  $M.10 := $i93;
  call {:cexpr "usb_counter"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8292, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8292, 25} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32($i94, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8292, 15} true;
  assume {:verifier.code 0} true;
  $M.6 := $i95;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb114;
$bb113:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb114;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8296, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8298, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8304, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8306, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8307, 3} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8307, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 209870));
procedure  ldv_initialize();
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 210902));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5916, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5918, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 5920, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kvaser_usb_driver_exit: ref;
axiom (kvaser_usb_driver_exit == $sub.ref(0, 211934));
procedure  kvaser_usb_driver_exit()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8092, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_deregister_42(kvaser_usb_driver);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8093, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kvaser_usb_driver_init: ref;
axiom (kvaser_usb_driver_init == $sub.ref(0, 212966));
procedure  kvaser_usb_driver_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8083, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv_usb_register_driver_41(kvaser_usb_driver, __this_module, .str.3);
  // WARNING: %1 = call i32 @ldv_usb_register_driver_41(%struct.usb_driver* @kvaser_usb_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)), !dbg !7255, !verifier.code !7257
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8084, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_ndo_init_2: ref;
axiom (ldv_ndo_init_2 == $sub.ref(0, 213998));
procedure  ldv_ndo_init_2()
  returns ($r: i32);
const ldv_ndo_uninit_2: ref;
axiom (ldv_ndo_uninit_2 == $sub.ref(0, 215030));
procedure  ldv_ndo_uninit_2()
  returns ($r: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 216062));
procedure  ldv_check_final_state();
const ldv_usb_register_driver_41: ref;
axiom (ldv_usb_register_driver_41 == $sub.ref(0, 217094));
procedure  ldv_usb_register_driver_41($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8528, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_register_driver($p0, $p1, $p2);
  // WARNING: %4 = call i32 @usb_register_driver(%struct.usb_driver* %0, %struct.module* %1, i8* %2), !dbg !7266, !verifier.code !7261
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !11159, metadata !7256), !dbg !11160, !verifier.code !7258
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8530, 24} true;
  assume {:verifier.code 0} true;
  $M.5 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8531, 15} true;
  assume {:verifier.code 0} true;
  $M.10 := 0;
  call {:cexpr "usb_counter"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8532, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_driver_1();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8533, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const usb_register_driver: ref;
axiom (usb_register_driver == $sub.ref(0, 218126));
procedure  usb_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const ldv_usb_deregister_42: ref;
axiom (ldv_usb_deregister_42 == $sub.ref(0, 219158));
procedure  ldv_usb_deregister_42($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8541, 3} true;
  assume {:verifier.code 0} true;
  call usb_deregister($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8542, 24} true;
  assume {:verifier.code 0} true;
  $M.5 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--can--usb--kvaser_usb.ko-entry_point_true-unreach-call.cil.out-VcZBhn.c", 8543, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_deregister: ref;
axiom (usb_deregister == $sub.ref(0, 220190));
procedure  usb_deregister($p0: ref);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 221222));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !11178, metadata !7256), !dbg !11179, !verifier.code !7258
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 222254));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 223286));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 224318));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 225350));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 226382));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 227414));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 228446));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 229478));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 230510));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 231542));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 232574));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 233606));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !7255, !verifier.code !7256
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 234638));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 235670));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 236702));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 237734));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 238766));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 239798));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 240830));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 241862));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 242894));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 243926));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 244958));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 245990));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 247022));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 248054));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 249086));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 250118));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const calloc: ref;
axiom (calloc == $sub.ref(0, 251150));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11211, metadata !7256), !dbg !11212, !verifier.code !7258
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 252182));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 253214));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 254246));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 255278));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 256310));
procedure  __SMACK_static_init()
{
$bb0:
  $M.14 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.3 := $0.ref;
  $M.4 := $0.ref;
  $M.5 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.6 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.7 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.8 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.9 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.10 := 0;
  call {:cexpr "usb_counter"} boogie_si_record_i32(0);
  $M.11 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.12 := 0;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32(0);
  $M.13 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.1 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  $M.15 := 0;
  $M.16 := 0;
  $M.17 := 0;
  $M.18 := 0;
  $M.19 := 0;
  $M.20 := 0;
  $M.21 := 0;
  $M.22 := 0;
  $M.23 := 0;
  $M.24 := 0;
  $M.25 := 0;
  $M.26 := 0;
  $M.27 := 0;
  $M.0 := $store.i16($M.0, kvaser_usb_table, 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 4), 10);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 6), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 15), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_table, 16), 0);
  $M.0 := $store.i64($M.0, $add.ref(kvaser_usb_table, 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 32), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 4), 11);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 32), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 64), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 4), 12);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 64), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 96), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 4), 14);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 96), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 128), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 4), 15);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 128), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 160), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 4), 16);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 160), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 192), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 4), 17);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 192), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 224), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 4), 18);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 224), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 256), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 4), 19);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 256), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 288), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 4), 22);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 288), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 320), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 4), 23);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 320), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 352), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 4), 24);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 352), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 384), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 4), 25);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 384), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 416), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 4), 26);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 416), 24), 3);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 448), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 4), 27);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 448), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 480), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 4), 28);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 480), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 512), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 4), 29);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 512), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 544), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 4), 34);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 544), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 576), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 4), 35);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 576), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 608), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 4), 39);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 608), 24), 2);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 640), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 4), 288);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 640), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 672), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 2), 3069);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 4), 289);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 672), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(kvaser_usb_table, 704), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 4), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(kvaser_usb_table, 704), 24), 0);
  $M.0 := $store.ref($M.0, kvaser_usb_driver, .str.3);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 8), kvaser_usb_probe);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 16), kvaser_usb_disconnect);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 72), kvaser_usb_table);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_driver, 80), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(kvaser_usb_driver, 80), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(kvaser_usb_driver, 80), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 80), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 80), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 80), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(kvaser_usb_driver, 80), 72), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_driver, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 112), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(kvaser_usb_driver, 168), 120), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_driver, 296), 0);
  $M.0 := $store.ref($M.0, kvaser_usb_netdev_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 16), kvaser_usb_open);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 24), kvaser_usb_close);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 32), kvaser_usb_start_xmit);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 96), can_change_mtu);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 224), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 248), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 256), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 264), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 272), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 280), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 288), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 296), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 320), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 328), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 336), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 344), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 352), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 360), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 368), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 376), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 384), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 392), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 400), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 408), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 416), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 424), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 432), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 448), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 456), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 464), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(kvaser_usb_netdev_ops, 472), $0.ref);
  $M.0 := $store.i8($M.0, kvaser_usb_bittiming_const, 107);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 1), 118);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 2), 97);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 3), 115);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 4), 101);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 5), 114);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 6), 95);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 7), 117);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 9), 98);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(kvaser_usb_bittiming_const, 15), 0);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 16), 1);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 20), 16);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 24), 1);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 28), 8);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 32), 4);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 36), 1);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 40), 64);
  $M.0 := $store.i32($M.0, $add.ref(kvaser_usb_bittiming_const, 44), 1);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 257342));
procedure  devirtbounce(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 258374));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 259406));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
