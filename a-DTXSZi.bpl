// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out.c --verifier-options  /bopt:boolControlVC /bopt:z3opt:SMT.MBQI=true /bopt:z3opt:SMT.MBQI.MAX_ITERATIONS=5582 /di /noCallTreeReuse /nonUniformUnfolding /trackAllVars --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (41 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: ref;
var $M.4: ref;
var $M.5: [ref] i32;
var $M.6: [ref] i32;
var $M.7: [ref] i32;
var $M.8: i32;
var $M.9: ref;
var $M.10: i32;
var $M.11: ref;
var $M.12: i32;
var $M.13: ref;
var $M.14: [ref] i8;
var $M.15: i32;
var $M.16: i32;
var $M.17: i32;
var $M.18: i32;
var $M.19: i32;
var $M.20: i32;
var $M.21: i32;
var $M.22: ref;
var $M.23: i32;
var $M.24: i32;
var $M.25: i32;
var $M.26: i32;
var $M.27: i16;
var $M.28: i16;
var $M.29: i16;
var $M.30: i16;
var $M.31: i16;
var $M.32: i8;
var $M.33: i8;
var $M.34: i8;
var $M.35: i8;
var $M.36: i8;
var $M.37: i8;
var $M.38: i8;
var $M.39: i64;
var $M.40: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 342937));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32800));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ttusb_dec_driver_group1: ref;
axiom (ttusb_dec_driver_group1 == $sub.ref(0, 2060));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 3088));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 4116));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 5144));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 6172));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 7200));
const usb_counter: ref;
axiom (usb_counter == $sub.ref(0, 8228));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 9256));
const INTERF_STATE: ref;
axiom (INTERF_STATE == $sub.ref(0, 10284));
const SERIAL_STATE: ref;
axiom (SERIAL_STATE == $sub.ref(0, 11312));
const usb_intfdata: ref;
axiom (usb_intfdata == $sub.ref(0, 12344));
const usb_urb: ref;
axiom (usb_urb == $sub.ref(0, 13376));
const usb_dev: ref;
axiom (usb_dev == $sub.ref(0, 14408));
const dev_counter: ref;
axiom (dev_counter == $sub.ref(0, 15436));
const completeFnIntCounter: ref;
axiom (completeFnIntCounter == $sub.ref(0, 16464));
const completeFnBulkCounter: ref;
axiom (completeFnBulkCounter == $sub.ref(0, 17492));
const completeFnInt: ref;
axiom (completeFnInt == $sub.ref(0, 18524));
const completeFnBulk: ref;
axiom (completeFnBulk == $sub.ref(0, 19556));
const __mod_usb_device_table: ref;
axiom (__mod_usb_device_table == $sub.ref(0, 20612));
const {:count 4} ttusb_dec_table: ref;
axiom (ttusb_dec_table == $sub.ref(0, 21764));
const ttusb_dec_driver: ref;
axiom (ttusb_dec_driver == $sub.ref(0, 23092));
const enable_rc: ref;
axiom (enable_rc == $sub.ref(0, 24120));
const output_pva: ref;
axiom (output_pva == $sub.ref(0, 25148));
const fe_config: ref;
axiom (fe_config == $sub.ref(0, 26180));
const {:count 8} adapter_nr: ref;
axiom (adapter_nr == $sub.ref(0, 27220));
const {:count 26} rc_keys: ref;
axiom (rc_keys == $sub.ref(0, 28296));
const debug: ref;
axiom (debug == $sub.ref(0, 29324));
const .str: ref;
axiom (.str == $sub.ref(0, 30352));
const {:count 23} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 31399));
const {:count 31} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 32454));
const {:count 14} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 33492));
const {:count 8} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 34524));
const {:count 2} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 35550));
const {:count 43} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 36617));
const {:count 42} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 37683));
const {:count 13} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 38720));
const {:count 10} .str.92: ref;
axiom (.str.92 == $sub.ref(0, 39754));
const {:count 21} .str.89: ref;
axiom (.str.89 == $sub.ref(0, 40799));
const {:count 19} .str.91: ref;
axiom (.str.91 == $sub.ref(0, 41842));
const {:count 19} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 42885));
const {:count 24} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 43933));
const {:count 119} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 45076));
const pv_irq_ops: ref;
axiom (pv_irq_ops == $sub.ref(0, 32776));
const {:count 116} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 46216));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32784));
const {:count 18} .str.90: ref;
axiom (.str.90 == $sub.ref(0, 47258));
const {:count 16} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 48298));
const {:count 31} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 49353));
const {:count 71} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 50448));
const {:count 42} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 51514));
const {:count 8} .str.84: ref;
axiom (.str.84 == $sub.ref(0, 52546));
const {:count 25} .str.85: ref;
axiom (.str.85 == $sub.ref(0, 53595));
const {:count 27} .str.86: ref;
axiom (.str.86 == $sub.ref(0, 54646));
const {:count 14} .str.87: ref;
axiom (.str.87 == $sub.ref(0, 55684));
const {:count 10} .str.88: ref;
axiom (.str.88 == $sub.ref(0, 56718));
const {:count 36} .str.72: ref;
axiom (.str.72 == $sub.ref(0, 57778));
const {:count 35} .str.73: ref;
axiom (.str.73 == $sub.ref(0, 58837));
const {:count 28} .str.74: ref;
axiom (.str.74 == $sub.ref(0, 59889));
const {:count 39} .str.75: ref;
axiom (.str.75 == $sub.ref(0, 60952));
const {:count 35} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 62011));
const {:count 25} .str.77: ref;
axiom (.str.77 == $sub.ref(0, 63060));
const {:count 34} .str.78: ref;
axiom (.str.78 == $sub.ref(0, 64118));
const {:count 45} .str.79: ref;
axiom (.str.79 == $sub.ref(0, 65187));
const {:count 35} .str.80: ref;
axiom (.str.80 == $sub.ref(0, 66246));
const {:count 22} .str.81: ref;
axiom (.str.81 == $sub.ref(0, 67292));
const {:count 34} .str.82: ref;
axiom (.str.82 == $sub.ref(0, 68350));
const {:count 29} .str.83: ref;
axiom (.str.83 == $sub.ref(0, 69403));
const {:count 38} .str.71: ref;
axiom (.str.71 == $sub.ref(0, 70465));
const {:count 21} .str.70: ref;
axiom (.str.70 == $sub.ref(0, 71510));
const {:count 19} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 72553));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32792));
const {:count 43} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 73620));
const {:count 35} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 74679));
const {:count 38} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 75741));
const {:count 20} .str.68: ref;
axiom (.str.68 == $sub.ref(0, 76785));
const {:count 24} .str.69: ref;
axiom (.str.69 == $sub.ref(0, 77833));
const {:count 21} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 78878));
const {:count 15} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 79917));
const {:count 22} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 80963));
const {:count 25} .str.67: ref;
axiom (.str.67 == $sub.ref(0, 82012));
const {:count 25} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 83061));
const {:count 40} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 84125));
const {:count 21} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 85170));
const {:count 19} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 86213));
const {:count 22} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 87259));
const {:count 24} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 88307));
const {:count 11} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 89342));
const {:count 12} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 90378));
const {:count 11} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 91413));
const {:count 17} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 92454));
const {:count 27} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 93505));
const {:count 27} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 94556));
const {:count 45} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 95625));
const {:count 25} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 96674));
const {:count 42} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 97740));
const {:count 26} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 98790));
const {:count 19} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 99833));
const {:count 19} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 100876));
const {:count 41} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 101941));
const {:count 34} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 102999));
const {:count 64} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 104087));
const {:count 19} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 105130));
const {:count 33} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 106187));
const {:count 54} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 107265));
const {:count 89} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 108378));
const {:count 34} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 109436));
const {:count 24} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 110484));
const {:count 19} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 111527));
const {:count 16} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 112567));
const {:count 16} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 113607));
const {:count 25} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 114656));
const {:count 46} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 115726));
const x86_dma_fallback_dev: ref;
axiom (x86_dma_fallback_dev == $sub.ref(0, 32800));
const {:count 38} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 116788));
const {:count 21} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 117833));
const {:count 32} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 118889));
const {:count 17} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 119930));
const {:count 44} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 120998));
const {:count 10} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 122032));
const {:count 23} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 123079));
const {:count 10} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 124113));
const {:count 23} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 125160));
const {:count 10} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 126194));
const {:count 23} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 127241));
const {:count 10} .str.93: ref;
axiom (.str.93 == $sub.ref(0, 128275));
const {:count 14} .str.2.98: ref;
axiom (.str.2.98 == $sub.ref(0, 129313));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 130345));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 131377));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const fe_send_command: ref;
axiom (fe_send_command == $sub.ref(0, 132409));
procedure  fe_send_command($p0: ref, $i1: i8, $i2: i32, $p3: ref, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i8;
  var $i13: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.dvb_frontend* %0, i64 0, metadata !8603, metadata !8604), !dbg !8605, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !8607, metadata !8604), !dbg !8608, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9146, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9146, 34} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9146, 40} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9146, 40} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9146, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9147, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9147, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i8($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9147, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := ttusb_dec_send_command($p10, $i12, $i2, $p3, $p4, $p5);
  // WARNING: %14 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %11, i8 zeroext %13, i32 %2, i8* %3, i32* %4, i8* %5), !dbg !8624, !verifier.code !8606
  call {:cexpr "tmp"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9149, 3} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
}
const ttusb_dec_send_command: ref;
axiom (ttusb_dec_send_command == $sub.ref(0, 133441));
procedure  ttusb_dec_send_command($p0: ref, $i1: i8, $i2: i32, $p3: ref, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $p23: ref;
  var $p24: ref;
  var $i25: i8;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i41: i64;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i1;
  var $i40: i32;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $p64: ref;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i32;
  var $i69: i1;
  var $i71: i64;
  var $p72: ref;
  var $i73: i8;
  var $i74: i32;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i70: i32;
  var $i79: i32;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i64;
  var $i86: i1;
  var $p87: ref;
  var $i88: i8;
  var $i89: i32;
  var $i90: i1;
  var $p91: ref;
  var $i92: i8;
  var $i93: i64;
  var $p94: ref;
  var $i95: i32;
  var $p96: ref;
  var $i13: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.ttusb_dec* %0, i64 0, metadata !8631, metadata !8604), !dbg !8632, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !8633, metadata !8604), !dbg !8634, !verifier.code !8606
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7195, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7195, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7195, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7196, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := printk.ref.ref(.str, .str.32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7197, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7200, 9} true;
  assume {:verifier.code 0} true;
  call $p10 := kmalloc(64, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7202, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7202, 25} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7203, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 12);
  goto $bb6;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7296, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7207, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 2168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7207, 12} true;
  assume {:verifier.code 0} true;
  call $i15 := mutex_lock_interruptible_nested($p14, 0);
  // WARNING: %21 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %20, i32 0), !dbg !8641, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7208, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7209, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7210, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := printk.ref.ref(.str.33, .str.32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7211, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i15;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7215, 6} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $sub.i8(0, 86));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 39} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 2136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 39} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 28} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 51} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i20, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 2136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7216, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7217, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 2136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7217, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7217, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7217, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7218, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p10, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7218, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7219, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7219, 7} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7219, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7220, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7220, 30} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7220, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7221, 13} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i2);
  // WARNING: %42 = sext i32 %2 to i64, !dbg !8670, !verifier.code !8605
  call {:cexpr "__len"} boogie_si_record_i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7222, 40} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p10, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7222, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := __builtinx_memcpy.ref.ref.i64($p33, $p3, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7223, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7226, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7226, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7226, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7227, 5} true;
  assume {:verifier.code 0} true;
  call $i37 := printk.ref.ref(.str.34, .str.32);
  // WARNING: %50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i32 0, i32 0)), !dbg !8681, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 22} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 26} true;
  assume {:verifier.code 0} true;
  $i39 := $sgt.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb16:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  $i40 := 0;
  goto $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i39 == 1));
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7235, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7231, 35} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7231, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p10, $mul.ref($i41, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7231, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7231, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7231, 5} true;
  assume {:verifier.code 0} true;
  call $i45 := printk.ref.i32(.str.35, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7232, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i40, 1);
  // WARNING: %59 = add nsw i32 %.013, 1, !dbg !8694, !verifier.code !8605
  call {:cexpr "i"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 26} true;
  assume {:verifier.code 0} true;
  $i47 := $sgt.i32($i38, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $i46;
  assume {:branchcond $i47} true;
  goto $bb21, $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  assume ($i47 == 1);
  goto $bb19;
$bb22:
  assume !(($i47 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7239, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := printk.ref(.str.36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7240, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7243, 30} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7243, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7243, 41} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 2140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7243, 41} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7243, 12} true;
  assume {:verifier.code 0} true;
  call $i53 := usb_bulk_msg($p50, $i52, $p10, 64, $p6, 1000);
  // WARNING: %71 = call i32 @usb_bulk_msg(%struct.usb_device* %68, i32 %70, i8* %14, i32 64, i32* %7, i32 1000), !dbg !8701, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7245, 14} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7245, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7246, 5} true;
  assume {:verifier.code 0} true;
  call $i55 := printk.ref.ref.i32(.str.37, .str.32, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7248, 25} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 2168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7248, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7249, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7250, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i53;
  goto $bb6;
$bb26:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7254, 30} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7254, 30} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7254, 41} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 2144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7254, 41} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7254, 12} true;
  assume {:verifier.code 0} true;
  call $i61 := usb_bulk_msg($p58, $i60, $p10, 64, $p6, 1000);
  // WARNING: %82 = call i32 @usb_bulk_msg(%struct.usb_device* %79, i32 %81, i8* %14, i32 64, i32* %7, i32 1000), !dbg !8713, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7256, 14} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7256, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7257, 5} true;
  assume {:verifier.code 0} true;
  call $i63 := printk.ref.ref.i32(.str.38, .str.32, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7259, 25} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 2168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7259, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7260, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7261, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i61;
  goto $bb6;
$bb29:
  assume !(($i62 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7263, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7263, 15} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7263, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7264, 7} true;
  assume {:verifier.code 0} true;
  call $i67 := printk.ref.ref(.str.39, .str.32);
  // WARNING: %91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i32 0, i32 0)), !dbg !8728, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 15} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 13} true;
  assume {:verifier.code 0} true;
  $i69 := $slt.i32(0, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb32:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  $i70 := 0;
  goto $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7272, 9} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7268, 37} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7268, 35} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p10, $mul.ref($i71, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7268, 31} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i8($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7268, 25} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7268, 7} true;
  assume {:verifier.code 0} true;
  call $i75 := printk.ref.i32(.str.35, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7269, 13} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i70, 1);
  // WARNING: %100 = add nsw i32 %.12, 1, !dbg !8739, !verifier.code !8605
  call {:cexpr "i"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 15} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 13} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i76, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $i76;
  assume {:branchcond $i78} true;
  goto $bb37, $bb38;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  assume ($i78 == 1);
  goto $bb35;
$bb38:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7271, 11} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7276, 7} true;
  assume {:verifier.code 0} true;
  call $i79 := printk.ref(.str.36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7277, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7280, 9} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7280, 39} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7280, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7281, 34} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7281, 30} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7281, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7281, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7282, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 36} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i64($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 66} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 88} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 84} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i8($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 69} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 95} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i89, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb47, $bb48;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 66} true;
  assume {:verifier.code 0} true;
  assume !(($i86 == 1));
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb47:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7286, 32} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7286, 28} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7286, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i64($i92);
  // WARNING: %127 = zext i8 %126 to i64, !dbg !8767, !verifier.code !8605
  call {:cexpr "__len___0"} boogie_si_record_i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7287, 74} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p10, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7287, 19} true;
  assume {:verifier.code 0} true;
  call $i95 := __builtinx_memcpy.ref.ref.i64($p5, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7288, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7285, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i90 == 1));
  goto $bb46;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7291, 25} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0, 2168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7291, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7292, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7293, 5} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb6;
}
const printk: ref;
axiom (printk == $sub.ref(0, 134473));
procedure  printk.ref.ref.i32($p0: ref, p.1: ref, p.2: i32)
  returns ($r: i32);
procedure  printk.ref.ref($p0: ref, p.1: ref)
  returns ($r: i32);
procedure  printk.ref.ref.i32.i32($p0: ref, p.1: ref, p.2: i32, p.3: i32)
  returns ($r: i32);
procedure  printk.ref.ref.i64($p0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
procedure  printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref)
  returns ($r: i32);
procedure  printk.ref.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure  printk.ref($p0: ref)
  returns ($r: i32);
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32);
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 135505));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8805, metadata !8604), !dbg !8806, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6758, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6759, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const mutex_lock_interruptible_nested: ref;
axiom (mutex_lock_interruptible_nested == $sub.ref(0, 136537));
procedure  mutex_lock_interruptible_nested($p0: ref, $i1: i32)
  returns ($r: i32);
const kfree: ref;
axiom (kfree == $sub.ref(0, 137569));
procedure  kfree($p0: ref);
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 138601));
procedure  __builtinx_memcpy()
  returns ($r: i32);
procedure  __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const usb_bulk_msg: ref;
axiom (usb_bulk_msg == $sub.ref(0, 139633));
procedure  usb_bulk_msg($p0: ref, $i1: i32, $p2: ref, $i3: i32, $p4: ref, $i5: i32)
  returns ($r: i32);
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 140665));
procedure  mutex_unlock($p0: ref);
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 141697));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const ttusb_dec_probe: ref;
axiom (ttusb_dec_probe == $sub.ref(0, 142729));
procedure  ttusb_dec_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i16;
  var $i15: i32;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i16;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i16;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i16;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i64;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9163, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9163, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9163, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9164, 5} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.ref(.str, .str.1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9165, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9168, 10} true;
  assume {:verifier.code 0} true;
  call $p5 := interface_to_usbdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9169, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := kzalloc(15656, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9170, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9171, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9171, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9171, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9172, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := printk.ref.ref(.str.2, .str.1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9173, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 12);
  goto $bb6;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9245, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9177, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9177, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_set_intfdata_12($p0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9178, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9178, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i16($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9178, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i14);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 4104);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i15, 4102);
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb16, $bb17;
$bb10:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $slt.i32($i15, 4105);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9183, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9184, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb12:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i15, 4105);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9186, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9187, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9180, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9181, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb15;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9190, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p7, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9190, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9191, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := ttusb_dec_init_usb($p7);
  // WARNING: %28 = call i32 @ttusb_dec_init_usb(%struct.ttusb_dec* %11), !dbg !8647, !verifier.code !8606
  call {:cexpr "tmp___0"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9192, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9188, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb20:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9193, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb6;
$bb21:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9197, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := ttusb_dec_init_stb($p7);
  // WARNING: %33 = call i32 @ttusb_dec_init_stb(%struct.ttusb_dec* %11), !dbg !8655, !verifier.code !8606
  call {:cexpr "tmp___1"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9198, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9198, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9199, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_usb($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9200, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb6;
$bb24:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9204, 3} true;
  assume {:verifier.code 0} true;
  call $i25 := ttusb_dec_init_dvb($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9205, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9205, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p7, 32);
  $p28 := $add.ref($add.ref($p7, 32), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9205, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9206, 21} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9206, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i16($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9206, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, 4104);
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i32 == 1);
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i31, 4102);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb35, $bb36;
$bb28:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i31, 4105);
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9209, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb30:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i31, 4105);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb31, $bb33;
$bb31:
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9212, 13} true;
  assume {:verifier.code 0} true;
  call $p38 := ttusbdecfe_dvbt_attach(fe_config);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9212, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9212, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9213, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb33:
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb38;
$bb35:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9208, 13} true;
  assume {:verifier.code 0} true;
  call $p36 := ttusbdecfe_dvbs_attach(fe_config);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9208, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9208, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p37, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9209, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb34;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9216, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9216, 28} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9216, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9216, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9216, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb39, $bb40;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9214, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb39:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 24} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p7, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 24} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 31} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 1520);
  $p47 := $add.ref($add.ref($p45, 1520), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 42} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i16($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 12} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 64} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p7, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 64} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 71} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 1520);
  $p53 := $add.ref($add.ref($p51, 1520), 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 82} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9218, 52} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i16.i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9217, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := printk.ref.i32.i32(.str.3, $i49, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9219, 3} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9220, 44} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p7, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9220, 58} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9220, 58} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9220, 15} true;
  assume {:verifier.code 0} true;
  call $i60 := dvb_register_frontend($p57, $p59);
  // WARNING: %76 = call i32 @dvb_register_frontend(%struct.dvb_adapter* %73, %struct.dvb_frontend* %75), !dbg !8701, !verifier.code !8606
  call {:cexpr "tmp___2"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9221, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9221, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb42, $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9233, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_init_v_pes($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9234, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_init_filters($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9235, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_init_tasklet($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9236, 8} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p7, 15648);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9236, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9237, 3} true;
  assume {:verifier.code 0} true;
  call $i79 := ttusb_dec_set_interface($p7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9238, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9238, 17} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9238, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb48, $bb49;
$bb42:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9222, 7} true;
  assume {:verifier.code 0} true;
  call $i62 := printk.ref(.str.4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 33} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 33} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 38} true;
  assume {:verifier.code 0} true;
  $p65 := $p64;
  $p66 := $add.ref($p64, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 42} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $p2i.ref.i64($p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 50} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i64($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9223, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb44, $bb45;
$bb43:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb44:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 18} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 23} true;
  assume {:verifier.code 0} true;
  $p72 := $p71;
  $p73 := $add.ref($p71, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 27} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 42} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9224, 42} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  call devirtbounce($p74, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9225, 7} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9228, 12} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p7, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9228, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9229, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb41;
$bb48:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9239, 5} true;
  assume {:verifier.code 0} true;
  call $i82 := ttusb_init_rc($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9240, 3} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9243, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb6;
}
const ttusb_dec_disconnect: ref;
axiom (ttusb_dec_disconnect == $sub.ref(0, 143761));
procedure  ttusb_dec_disconnect($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9252, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_usb_get_intfdata_13($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9253, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9254, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_set_intfdata_12($p0, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9255, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9255, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9255, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9256, 5} true;
  assume {:verifier.code 0} true;
  call $i5 := printk.ref.ref(.str, .str.89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9257, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9260, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 15648);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9260, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9260, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9260, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9261, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_tasklet($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9262, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_filters($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9263, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9263, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9263, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9264, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_rc($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9265, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9268, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_usb($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9269, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_exit_dvb($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9270, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9273, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9273, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9274, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_get_intfdata_13: ref;
axiom (ldv_usb_get_intfdata_13 == $sub.ref(0, 144793));
procedure  ldv_usb_get_intfdata_13($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9612, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_usb_get_intfdata();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9613, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_usb_set_intfdata_12: ref;
axiom (ldv_usb_set_intfdata_12 == $sub.ref(0, 145825));
procedure  ldv_usb_set_intfdata_12($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9603, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_set_intfdata($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9604, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_exit_tasklet: ref;
axiom (ttusb_dec_exit_tasklet == $sub.ref(0, 146857));
procedure  ttusb_dec_exit_tasklet($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p9: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9085, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 15360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9085, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_kill($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9093, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 15344);
  $p3 := $add.ref($p0, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9093, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 55} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 31} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 28} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i5, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9095, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9089, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9089, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, $mul.ref($sub.ref(0, 904), 920));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9090, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p10, $mul.ref($sub.ref(0, 904), 920)), 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9090, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9091, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9091, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9093, 30} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i64($i15, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p14;
  assume {:branchcond $i16} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb4;
$bb7:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9094, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9100, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_exit_filters: ref;
axiom (ttusb_dec_exit_filters == $sub.ref(0, 147889));
procedure  ttusb_dec_exit_filters($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9129, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 15488);
  $p2 := $add.ref($p0, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9129, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 55} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 31} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i4, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $p3;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9131, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9125, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9125, 40} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, $mul.ref($sub.ref(0, 16), 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9126, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 16), 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9126, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9127, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9127, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9129, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $p13;
  assume {:branchcond $i15} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb4;
$bb7:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9130, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9136, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_exit_rc: ref;
axiom (ttusb_dec_exit_rc == $sub.ref(0, 148921));
procedure  ttusb_dec_exit_rc($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9031, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9031, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9031, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9032, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9033, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9036, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9036, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9036, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9036, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9037, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9037, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9037, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9038, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9041, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9041, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9041, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_free_urb_11($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 26} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 26} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 2336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 59} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 2352);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 59} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9042, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p12, 8, $p14, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9043, 28} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9043, 28} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9043, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9043, 41} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9043, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9044, 34} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9044, 34} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9044, 5} true;
  assume {:verifier.code 0} true;
  call input_unregister_device($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9045, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9045, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9046, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9049, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_exit_usb: ref;
axiom (ttusb_dec_exit_usb == $sub.ref(0, 149953));
procedure  ttusb_dec_exit_usb($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9057, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9057, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9057, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9058, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9059, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9062, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9062, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  // WARNING: store i32 0, i32* %8, align 8, !dbg !8618, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9069, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 2376);
  $p6 := $add.ref($p0, 2376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p7);
  // WARNING: call void @usb_kill_urb(%struct.urb* %12), !dbg !8624, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 2376);
  $p9 := $add.ref($add.ref($p0, 2376), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 16} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p10);
  // WARNING: call void @usb_kill_urb(%struct.urb* %18), !dbg !8624, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9074, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_free_iso_urbs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9075, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 2376);
  $p12 := $add.ref($add.ref($p0, 2376), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 16} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p13);
  // WARNING: call void @usb_kill_urb(%struct.urb* %22), !dbg !8624, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 2376);
  $p15 := $add.ref($add.ref($p0, 2376), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9066, 3} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p16);
  // WARNING: call void @usb_kill_urb(%struct.urb* %26), !dbg !8624, !verifier.code !8608
  assume {:verifier.code 0} true;
  goto $bb7;
}
const ttusb_dec_exit_dvb: ref;
axiom (ttusb_dec_exit_dvb == $sub.ref(0, 150985));
procedure  ttusb_dec_exit_dvb($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9002, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9002, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9002, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9003, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9004, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9007, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 1768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9007, 3} true;
  assume {:verifier.code 0} true;
  call dvb_net_release($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9008, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 792);
  $p6 := $add.ref($p0, 792);
  $p7 := $add.ref($add.ref($p0, 792), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9008, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9008, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 792);
  $p10 := $add.ref($p0, 792);
  call $i11 := devirtbounce.1($p8, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9009, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 792);
  $p13 := $add.ref($p0, 792);
  $p14 := $add.ref($add.ref($p0, 792), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9009, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9009, 46} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 792);
  $p17 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9009, 64} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 1744);
  call $i19 := devirtbounce.2($p15, $p17, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9010, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9010, 3} true;
  assume {:verifier.code 0} true;
  call dvb_dmxdev_release($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9011, 26} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9011, 3} true;
  assume {:verifier.code 0} true;
  call dvb_dmx_release($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9012, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9012, 28} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9012, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9013, 34} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9013, 34} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9013, 5} true;
  assume {:verifier.code 0} true;
  call $i28 := dvb_unregister_frontend($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 31} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 36} true;
  assume {:verifier.code 0} true;
  $p31 := $p30;
  $p32 := $add.ref($p30, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 40} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 48} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9014, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 16} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 16} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 21} true;
  assume {:verifier.code 0} true;
  $p38 := $p37;
  $p39 := $add.ref($p37, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 25} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 40} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 2080);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9015, 40} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  call devirtbounce($p40, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9016, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9019, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9022, 33} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9022, 3} true;
  assume {:verifier.code 0} true;
  call $i44 := dvb_unregister_adapter($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9023, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dvb_net_release: ref;
axiom (dvb_net_release == $sub.ref(0, 152017));
procedure  dvb_net_release($p0: ref);
const dvb_dmxdev_release: ref;
axiom (dvb_dmxdev_release == $sub.ref(0, 153049));
procedure  dvb_dmxdev_release($p0: ref);
const dvb_dmx_release: ref;
axiom (dvb_dmx_release == $sub.ref(0, 154081));
procedure  dvb_dmx_release($p0: ref);
const dvb_unregister_frontend: ref;
axiom (dvb_unregister_frontend == $sub.ref(0, 155113));
procedure  dvb_unregister_frontend($p0: ref)
  returns ($r: i32);
const dvb_unregister_adapter: ref;
axiom (dvb_unregister_adapter == $sub.ref(0, 156145));
procedure  dvb_unregister_adapter($p0: ref)
  returns ($r: i32);
const usb_kill_urb: ref;
axiom (usb_kill_urb == $sub.ref(0, 157177));
procedure  usb_kill_urb($p0: ref);
const ttusb_dec_free_iso_urbs: ref;
axiom (ttusb_dec_free_iso_urbs == $sub.ref(0, 158209));
procedure  ttusb_dec_free_iso_urbs($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i4: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8475, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8475, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8475, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8476, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8477, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8486, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8487, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8483, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8483, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 2376);
  $p7 := $add.ref($add.ref($p0, 2376), $mul.ref($i5, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8483, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8483, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_free_urb_5($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8484, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i4, 1);
  // WARNING: %13 = add nsw i32 %.01, 1, !dbg !8623, !verifier.code !8608
  call {:cexpr "i"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8486, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $sle.i32($i9, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8486, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i9;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8486, 7} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb4;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8491, 58} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8491, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8491, 75} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 2368);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8491, 75} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8491, 3} true;
  assume {:verifier.code 0} true;
  call pci_free_consistent($0.ref, 14336, $p12, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8492, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_free_urb_5: ref;
axiom (ldv_usb_free_urb_5 == $sub.ref(0, 159241));
procedure  ldv_usb_free_urb_5($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9537, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_urb($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9538, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_free_consistent: ref;
axiom (pci_free_consistent == $sub.ref(0, 160273));
procedure  pci_free_consistent($p0: ref, $i1: i64, $p2: ref, $i3: i64)
{
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !9211, metadata !8604), !dbg !9212, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !9215, metadata !8604), !dbg !9216, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 92} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7033, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p7, $i1, $p2, $i3, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7035, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_free_attrs: ref;
axiom (dma_free_attrs == $sub.ref(0, 161305));
procedure  dma_free_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i64, $p4: ref)
{
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !9232, metadata !8604), !dbg !9233, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !9236, metadata !8604), !dbg !9237, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6993, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6995, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := arch_local_save_flags();
  // WARNING: %7 = call i64 @arch_local_save_flags(), !dbg !8621, !verifier.code !8606
  call {:cexpr "_flags"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6996, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := arch_irqs_disabled_flags($i6);
  // WARNING: %8 = call i32 @arch_irqs_disabled_flags(i64 %7), !dbg !8624, !verifier.code !8606
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6997, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6997, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %10 = zext i1 %9 to i32, !dbg !8627, !verifier.code !8606
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6998, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6998, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6998, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6998, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8632, !verifier.code !8606
  call {:cexpr "tmp___1"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6999, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6999, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7000, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.22, 166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7002, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7005, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7005, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7005, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7005, 3} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7006, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_free_coherent($p0, $i1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7007, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7007, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7007, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7007, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7007, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7010, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7010, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  call devirtbounce.3($p24, $p0, $i1, $p2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7011, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7014, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 162337));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6900, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6900, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6900, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6900, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6900, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8612, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6903, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6903, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 1184);
  $p8 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6902, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6905, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1184);
  $p15 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6905, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6905, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6908, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const arch_local_save_flags: ref;
axiom (arch_local_save_flags == $sub.ref(0, 163369));
procedure  arch_local_save_flags()
  returns ($r: i64)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9312, metadata !8604), !dbg !9313, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9314, metadata !8604), !dbg !9315, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9316, metadata !8604), !dbg !9317, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9318, metadata !8604), !dbg !9319, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 64} true;
  assume {:verifier.code 0} true;
  $p0 := $load.ref($M.0, pv_irq_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 69} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 69} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6613, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8621, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6615, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6615, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  call devirtbounce.4(0, .str.23, 804, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6616, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6619, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  call $i7 := devirtbounce.5(0, 44, pv_irq_ops, 1);
  // WARNING: %12 = call i64 @devirtbounce.5(i64 (i64, i8**, i32)* asm sideeffect "771:\0A\09call *${2:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${1:c}\0A  .byte 772b-771b\0A  .short ${3:c}\0A.popsection\0A", "={ax},i,i,i,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i64 44, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), i32 1)
  call {:cexpr "__eax"} boogie_si_record_i64($i7);
  // WARNING: call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !9320, metadata !8604), !dbg !9321, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6627, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const arch_irqs_disabled_flags: ref;
axiom (arch_irqs_disabled_flags == $sub.ref(0, 164401));
procedure  arch_irqs_disabled_flags($i0: i64)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6635, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $and.i64($i0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6635, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6635, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6635, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 165433));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !9350, metadata !8604), !dbg !9351, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6863, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 166465));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const debug_dma_free_coherent: ref;
axiom (debug_dma_free_coherent == $sub.ref(0, 167497));
procedure  debug_dma_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const ldv_free_urb: ref;
axiom (ldv_free_urb == $sub.ref(0, 168529));
procedure  ldv_free_urb($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 73} true;
  assume {:verifier.code 0} true;
  $p5 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 57} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 81} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9716, 13} true;
  assume {:verifier.code 0} true;
  $M.3 := $0.ref;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9717, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9715, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9720, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_free_urb_11: ref;
axiom (ldv_usb_free_urb_11 == $sub.ref(0, 169561));
procedure  ldv_usb_free_urb_11($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9594, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_urb($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9595, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_free_coherent: ref;
axiom (usb_free_coherent == $sub.ref(0, 170593));
procedure  usb_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const input_unregister_device: ref;
axiom (input_unregister_device == $sub.ref(0, 171625));
procedure  input_unregister_device($p0: ref);
const list_del: ref;
axiom (list_del == $sub.ref(0, 172657));
procedure  list_del($p0: ref);
const tasklet_kill: ref;
axiom (tasklet_kill == $sub.ref(0, 173689));
procedure  tasklet_kill($p0: ref);
const ldv_usb_set_intfdata: ref;
axiom (ldv_usb_set_intfdata == $sub.ref(0, 174721));
procedure  ldv_usb_set_intfdata($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9675, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9676, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_get_intfdata: ref;
axiom (ldv_usb_get_intfdata == $sub.ref(0, 175753));
procedure  ldv_usb_get_intfdata()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9667, 11} true;
  assume {:verifier.code 0} true;
  $p0 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9667, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const interface_to_usbdev: ref;
axiom (interface_to_usbdev == $sub.ref(0, 176785));
procedure  interface_to_usbdev($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9501, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_interface_to_usbdev();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9502, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 177817));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !9402, metadata !8604), !dbg !9403, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6767, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $or.i32($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6767, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := kmalloc($i0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6768, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ttusb_dec_set_model: ref;
axiom (ttusb_dec_set_model == $sub.ref(0, 178849));
procedure  ttusb_dec_set_model($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ttusb_dec* %0, i64 0, metadata !9415, metadata !8604), !dbg !9416, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9282, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9282, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, $i1);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i1, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i1, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i1, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9289, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9289, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9290, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9290, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9291, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb5:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i1, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9293, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9293, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, .str.9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9294, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9294, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, .str.10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9295, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9285, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9285, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9286, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9286, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9287, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb8;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9298, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9296, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
}
const ttusb_dec_init_usb: ref;
axiom (ttusb_dec_init_usb == $sub.ref(0, 179881));
procedure  ttusb_dec_init_usb($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i40: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8635, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8635, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8635, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8636, 5} true;
  assume {:verifier.code 0} true;
  call $i5 := printk.ref.ref(.str, .str.11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8637, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8640, 23} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 2168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8640, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p6, .str.12, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8641, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8641, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p7, .str.13, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8642, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8642, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8642, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := __create_pipe($p9, 3);
  // WARNING: %14 = call i32 @__create_pipe(%struct.usb_device* %13, i32 3), !dbg !8626, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8643, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $or.i32($i10, $sub.i32(0, 1073741824));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8643, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 2140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8643, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8644, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8644, 32} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8644, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := __create_pipe($p14, 4);
  // WARNING: %19 = call i32 @__create_pipe(%struct.usb_device* %18, i32 4), !dbg !8633, !verifier.code !8605
  call {:cexpr "tmp___0"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8645, 30} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i15, $sub.i32(0, 1073741696));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8645, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 2144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8645, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8646, 32} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8646, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8646, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := __create_pipe($p19, 8);
  // WARNING: %24 = call i32 @__create_pipe(%struct.usb_device* %23, i32 8), !dbg !8640, !verifier.code !8605
  call {:cexpr "tmp___1"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8647, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $or.i32($i20, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8647, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 2148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8647, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8648, 38} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8648, 38} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8648, 19} true;
  assume {:verifier.code 0} true;
  call $i25 := __create_pipe($p24, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8648, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 2152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8648, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8649, 32} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8649, 32} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8649, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := __create_pipe($p28, 10);
  // WARNING: %33 = call i32 @__create_pipe(%struct.usb_device* %32, i32 10), !dbg !8651, !verifier.code !8605
  call {:cexpr "tmp___2"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8650, 27} true;
  assume {:verifier.code 0} true;
  $i30 := $or.i32($i29, 1073741952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8650, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 2156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8650, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8651, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8651, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8651, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8652, 20} true;
  assume {:verifier.code 0} true;
  call $p34 := ldv_usb_alloc_urb_8(0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8652, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8653, 30} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8653, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8653, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8653, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8653, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb6:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8654, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sub.i32(0, 12);
  goto $bb8;
$bb7:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8675, 1} true;
  assume {:verifier.code 0} true;
  $r := $i40;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 47} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 47} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 70} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 2352);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 23} true;
  assume {:verifier.code 0} true;
  call $p44 := usb_alloc_coherent($p42, 8, 32, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 2336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8658, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8659, 30} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 2336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8659, 30} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8659, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8659, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i64($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8659, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8660, 31} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8660, 31} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8660, 7} true;
  assume {:verifier.code 0} true;
  call ldv_usb_free_urb_9($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8661, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sub.i32(0, 12);
  goto $bb8;
$bb11:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 34} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 34} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 48} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 48} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 59} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 2156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 59} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 74} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 2336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 74} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8666, 56} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8665, 5} true;
  assume {:verifier.code 0} true;
  call ldv_usb_fill_int_urb_10($p53, $p55, $i57, $p59, 8, ttusb_dec_handle_irq, $p60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 41} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 2352);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 11} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 21} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8667, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p65, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 44} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 44} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 54} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 54} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 69} true;
  assume {:verifier.code 0} true;
  $i70 := $or.i32($i69, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 11} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 11} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 21} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8668, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8669, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8672, 13} true;
  assume {:verifier.code 0} true;
  call $i74 := ttusb_dec_alloc_iso_urbs($p0);
  // WARNING: %86 = call i32 @ttusb_dec_alloc_iso_urbs(%struct.ttusb_dec* %0), !dbg !8703, !verifier.code !8605
  call {:cexpr "tmp___3"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8673, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $i74;
  goto $bb8;
}
const ttusb_dec_init_stb: ref;
axiom (ttusb_dec_init_stb == $sub.ref(0, 180913));
procedure  ttusb_dec_init_stb($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i28: i32;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i27: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8870, 8} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8871, 9} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i32($M.6, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8872, 11} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8873, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8873, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8874, 5} true;
  assume {:verifier.code 0} true;
  call $i6 := printk.ref.ref(.str, .str.27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8875, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8878, 12} true;
  assume {:verifier.code 0} true;
  call $i7 := ttusb_dec_get_stb_state($p0, $p1, $p2, $p3);
  // WARNING: %11 = call i32 @ttusb_dec_get_stb_state(%struct.ttusb_dec* %0, i32* %2, i32* %3, i32* %4), !dbg !8626, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8879, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8879, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8880, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.5, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8880, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8880, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8921, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $i7;
  goto $bb13;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8881, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8881, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, $sub.i32(0, 1412567125));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8881, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8894, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.6, $p2);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb8:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8882, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref(.str.28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8883, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 57} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 65} true;
  assume {:verifier.code 0} true;
  $i15 := $lshr.i32($i14, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 73} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 81} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.i32($i16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 88} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8885, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8885, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $lshr.i32($i19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8885, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i20, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8885, 39} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8885, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8884, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := printk.ref.i32.i32.i32.i32(.str.29, $i15, $i18, $i21, $i23);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8887, 16} true;
  assume {:verifier.code 0} true;
  call $i25 := ttusb_dec_boot_dsp($p0);
  // WARNING: %34 = call i32 @ttusb_dec_boot_dsp(%struct.ttusb_dec* %0), !dbg !8657, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8888, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8888, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8889, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $i25;
  goto $bb13;
$bb12:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8891, 9} true;
  assume {:verifier.code 0} true;
  $i27 := 1;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8924, 1} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
$bb14:
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i28, 458764);
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i29 == 1);
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i28, 458760);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb30, $bb31;
$bb16:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i30 := $slt.i32($i28, 458769);
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i28, 458764);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb27, $bb29;
$bb18:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $i31 := $slt.i32($i28, 458771);
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i31 == 1);
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i28, 458769);
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb25, $bb26;
$bb20:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i28, 458771);
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb21, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8902, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8903, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb23:
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb25:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8905, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8906, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb26:
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb24;
$bb27:
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8898, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_model($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8899, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb29:
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb24;
$bb30:
  assume ($i35 == 1);
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i28, 458753);
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb37, $bb38;
$bb31:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i28, 458761);
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb32, $bb34;
$bb32:
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8894, 22} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb34:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i28, 458761);
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8899, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb36:
  assume {:verifier.code 0} true;
  assume !(($i37 == 1));
  goto $bb24;
$bb37:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8894, 22} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb38:
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb24;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8913, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.7, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8913, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $ugt.i32($i41, 24575999);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8913, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8909, 36} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.6, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8908, 7} true;
  assume {:verifier.code 0} true;
  call $i40 := printk.ref.ref.i32(.str.30, .str.27, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8910, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i32(0, 1);
  goto $bb13;
$bb41:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8914, 14} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8914, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8915, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8918, 7} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb13;
}
const ttusb_dec_init_dvb: ref;
axiom (ttusb_dec_init_dvb == $sub.ref(0, 181945));
procedure  ttusb_dec_init_dvb($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $p34: ref;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i1;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i32;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8930, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8930, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8931, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8932, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8935, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8935, 70} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8935, 70} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8936, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8936, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8936, 48} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8935, 12} true;
  assume {:verifier.code 0} true;
  call $i10 := dvb_register_adapter($p4, $p6, __this_module, $p9, adapter_nr);
  // WARNING: %14 = call i32 @dvb_register_adapter(%struct.dvb_adapter* %8, i8* %10, %struct.module* @__this_module, %struct.device* %13, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @adapter_nr, i32 0, i32 0)), !dbg !8621, !verifier.code !8608
  call {:cexpr "result"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8937, 14} true;
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8937, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8938, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.ref.i32(.str.47, .str.46, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8939, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i10;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8996, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8943, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 792);
  $p15 := $add.ref($p0, 792);
  $p16 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8943, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8944, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8944, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 792);
  $p19 := $add.ref($add.ref($p0, 792), 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8944, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8945, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 792);
  $p21 := $add.ref($add.ref($p0, 792), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8945, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8946, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 792);
  $p23 := $add.ref($add.ref($p0, 792), 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8946, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8947, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 792);
  $p25 := $add.ref($add.ref($p0, 792), 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8947, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, ttusb_dec_start_feed);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8948, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 792);
  $p27 := $add.ref($add.ref($p0, 792), 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8948, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p27, ttusb_dec_stop_feed);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8949, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 792);
  $p29 := $add.ref($add.ref($p0, 792), 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8949, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8951, 32} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8951, 12} true;
  assume {:verifier.code 0} true;
  call $i31 := dvb_dmx_init($p30);
  // WARNING: %37 = call i32 @dvb_dmx_init(%struct.dvb_demux* %36), !dbg !8646, !verifier.code !8608
  call {:cexpr "result"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8952, 14} true;
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8952, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8953, 5} true;
  assume {:verifier.code 0} true;
  call $i33 := printk.ref.ref.i32(.str.48, .str.46, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8954, 35} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8954, 5} true;
  assume {:verifier.code 0} true;
  call $i35 := dvb_unregister_adapter($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8955, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i31;
  goto $bb6;
$bb9:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8959, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 296);
  $p37 := $add.ref($add.ref($p0, 296), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8959, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8960, 30} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 792);
  $p39 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8960, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 296);
  $p41 := $add.ref($add.ref($p0, 296), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8960, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8961, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 296);
  $p43 := $add.ref($add.ref($p0, 296), 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8961, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8962, 35} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8962, 50} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8962, 12} true;
  assume {:verifier.code 0} true;
  call $i46 := dvb_dmxdev_init($p44, $p45);
  // WARNING: %55 = call i32 @dvb_dmxdev_init(%struct.dmxdev* %53, %struct.dvb_adapter* %54), !dbg !8664, !verifier.code !8608
  call {:cexpr "result"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8963, 14} true;
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8963, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8964, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := printk.ref.ref.i32(.str.49, .str.46, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8965, 28} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8965, 5} true;
  assume {:verifier.code 0} true;
  call dvb_dmx_release($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8966, 35} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8966, 5} true;
  assume {:verifier.code 0} true;
  call $i51 := dvb_unregister_adapter($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8967, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i46;
  goto $bb6;
$bb12:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8971, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 1744);
  $p53 := $add.ref($add.ref($p0, 1744), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8971, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8972, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 792);
  $p55 := $add.ref($p0, 792);
  $p56 := $add.ref($add.ref($p0, 792), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8972, 30} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8972, 52} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 792);
  $p59 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8972, 70} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 1744);
  call $i61 := devirtbounce.2($p57, $p59, $p60);
  // WARNING: %73 = call i32 @devirtbounce.2(i32 (%struct.dmx_demux*, %struct.netdev_hw_addr_list*)* %69, %struct.dmx_demux* %71, %struct.netdev_hw_addr_list* %72)
  call {:cexpr "result"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8973, 14} true;
  assume {:verifier.code 0} true;
  $i62 := $slt.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8973, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8974, 5} true;
  assume {:verifier.code 0} true;
  call $i63 := printk.ref.ref.i32(.str.48, .str.46, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8975, 31} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8975, 5} true;
  assume {:verifier.code 0} true;
  call dvb_dmxdev_release($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8976, 28} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8976, 5} true;
  assume {:verifier.code 0} true;
  call dvb_dmx_release($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8977, 35} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8977, 5} true;
  assume {:verifier.code 0} true;
  call $i67 := dvb_unregister_adapter($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8978, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i61;
  goto $bb6;
$bb15:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8982, 20} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 792);
  $p69 := $add.ref($p0, 792);
  $p70 := $add.ref($add.ref($p0, 792), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8982, 30} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8982, 56} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 792);
  $p73 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8982, 74} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 1744);
  call $i75 := devirtbounce.2($p71, $p73, $p74);
  // WARNING: %90 = call i32 @devirtbounce.2(i32 (%struct.dmx_demux*, %struct.netdev_hw_addr_list*)* %86, %struct.dmx_demux* %88, %struct.netdev_hw_addr_list* %89)
  call {:cexpr "result"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8983, 14} true;
  assume {:verifier.code 0} true;
  $i76 := $slt.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8984, 5} true;
  assume {:verifier.code 0} true;
  call $i77 := printk.ref.ref.i32(.str.48, .str.46, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8985, 13} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 792);
  $p79 := $add.ref($p0, 792);
  $p80 := $add.ref($add.ref($p0, 792), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8985, 23} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8985, 48} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 792);
  $p83 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8985, 66} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 1744);
  call $i85 := devirtbounce.2($p81, $p83, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8986, 31} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8986, 5} true;
  assume {:verifier.code 0} true;
  call dvb_dmxdev_release($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8987, 28} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8987, 5} true;
  assume {:verifier.code 0} true;
  call dvb_dmx_release($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8988, 35} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8988, 5} true;
  assume {:verifier.code 0} true;
  call $i89 := dvb_unregister_adapter($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8989, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i75;
  goto $bb6;
$bb18:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8993, 23} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8993, 39} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 1768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8993, 55} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 792);
  $p93 := $add.ref($p0, 792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8993, 3} true;
  assume {:verifier.code 0} true;
  call $i94 := dvb_net_init($p90, $p91, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8994, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb6;
}
const ttusbdecfe_dvbs_attach: ref;
axiom (ttusbdecfe_dvbs_attach == $sub.ref(0, 182977));
procedure  ttusbdecfe_dvbs_attach($p0: ref)
  returns ($r: ref);
const ttusbdecfe_dvbt_attach: ref;
axiom (ttusbdecfe_dvbt_attach == $sub.ref(0, 184009));
procedure  ttusbdecfe_dvbt_attach($p0: ref)
  returns ($r: ref);
const dvb_register_frontend: ref;
axiom (dvb_register_frontend == $sub.ref(0, 185041));
procedure  dvb_register_frontend($p0: ref, $p1: ref)
  returns ($r: i32);
const ttusb_dec_init_v_pes: ref;
axiom (ttusb_dec_init_v_pes == $sub.ref(0, 186073));
procedure  ttusb_dec_init_v_pes($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8612, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8612, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8612, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8613, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8614, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8617, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 9176);
  $p5 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8617, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8618, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 9176);
  $p7 := $add.ref($add.ref($p0, 9176), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8618, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8619, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 9176);
  $p9 := $add.ref($add.ref($p0, 9176), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8619, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8620, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 9176);
  $p11 := $add.ref($add.ref($p0, 9176), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8620, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $sub.i8(0, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8621, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_init_filters: ref;
axiom (ttusb_dec_init_filters == $sub.ref(0, 187105));
procedure  ttusb_dec_init_filters($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9108, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9108, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9109, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9109, 3} true;
  assume {:verifier.code 0} true;
  call $p4 := spinlock_check($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9110, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 15504);
  $p6 := $add.ref($p0, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9110, 62} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9110, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p7, .str.71, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9112, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_init_tasklet: ref;
axiom (ttusb_dec_init_tasklet == $sub.ref(0, 188137));
procedure  ttusb_dec_init_tasklet($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8545, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8545, 3} true;
  assume {:verifier.code 0} true;
  call $p3 := spinlock_check($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8546, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 15400);
  $p5 := $add.ref($p0, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8546, 60} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8546, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p6, .str.72, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8548, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8548, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8549, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 15360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8549, 72} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8549, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_init($p8, ttusb_dec_process_urb_frame_list, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8550, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_set_interface: ref;
axiom (ttusb_dec_set_interface == $sub.ref(0, 189169));
procedure  ttusb_dec_set_interface($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i14: i32;
  var $i25: i1;
  var $p26: ref;
  var $i18: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.ttusb_dec* %0, i64 0, metadata !9800, metadata !8604), !dbg !9801, !verifier.code !8606
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !9804, metadata !8604), !dbg !9806, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8045, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8045, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p3, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8046, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8046, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8046, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8046, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb3:
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i1, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i1, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb11, $bb12;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i1, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8052, 50} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8052, 14} true;
  assume {:verifier.code 0} true;
  call $i16 := ttusb_dec_send_command($p0, $sub.i8(0, 128), 1, $p15, $0.ref, $0.ref);
  // WARNING: %15 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %0, i8 zeroext -128, i32 1, i8* %14, i32* null, i8* null), !dbg !8629, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8053, 16} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8053, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb14, $bb15;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i1, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8061, 37} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8061, 37} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8061, 14} true;
  assume {:verifier.code 0} true;
  call $i24 := usb_set_interface($p23, 0, 1);
  // WARNING: %26 = call i32 @usb_set_interface(%struct.usb_device* %25, i32 0, i32 1), !dbg !8639, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8062, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i24;
  goto $bb13;
$bb9:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb11:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8049, 37} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8049, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8049, 14} true;
  assume {:verifier.code 0} true;
  call $i13 := usb_set_interface($p12, 0, 0);
  // WARNING: %12 = call i32 @usb_set_interface(%struct.usb_device* %11, i32 0, i32 0), !dbg !8626, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8050, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb10;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8065, 16} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8065, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb19, $bb20;
$bb14:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8054, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i16;
  goto $bb16;
$bb15:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8076, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8058, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8058, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8058, 14} true;
  assume {:verifier.code 0} true;
  call $i21 := usb_set_interface($p20, 0, 8);
  // WARNING: %22 = call i32 @usb_set_interface(%struct.usb_device* %21, i32 0, i32 8), !dbg !8636, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8059, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i21;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8063, 5} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb13;
$bb19:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8066, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i14;
  goto $bb16;
$bb20:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8070, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 2160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8070, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8071, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8074, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb16;
}
const ttusb_init_rc: ref;
axiom (ttusb_init_rc == $sub.ref(0, 190201));
procedure  ttusb_init_rc($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i26: i64;
  var $p27: ref;
  var $i28: i16;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i25: i32;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $p42: ref;
  var $i43: i32;
  var $i15: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8562, 3} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8562, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8563, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8563, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8564, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8564, 22} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8564, 44} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 15584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8564, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8564, 3} true;
  assume {:verifier.code 0} true;
  call $i8 := usb_make_path($p5, $p7, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8565, 27} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 15584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8565, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8565, 3} true;
  assume {:verifier.code 0} true;
  call $i11 := strlcat($p10, .str.84, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8566, 15} true;
  assume {:verifier.code 0} true;
  call $p12 := input_allocate_device();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8567, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8567, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8567, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8568, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8606, 1} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8572, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $p12;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8572, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, .str.85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8573, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 15584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8573, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8573, 14} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8573, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8574, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p12, 40);
  $p21 := $add.ref($p12, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8574, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p21, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8575, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p12, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8575, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8576, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p12, 212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8576, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8577, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p12, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8577, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, rc_keys);
  // WARNING: store i8* bitcast ([26 x i16]* @rc_keys to i8*), i8** %27, align 8, !dbg !8646, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8584, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8585, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 18} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref(rc_keys, $mul.ref($i26, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 18} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 72} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p12, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8581, 3} true;
  assume {:verifier.code 0} true;
  call set_bit($i29, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8582, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i25, 1);
  // WARNING: %35 = add nsw i32 %.012, 1, !dbg !8655, !verifier.code !8605
  call {:cexpr "i"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8584, 24} true;
  assume {:verifier.code 0} true;
  $i33 := $ule.i32($i32, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8584, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i32;
  assume {:branchcond $i33} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8584, 7} true;
  assume {:verifier.code 0} true;
  assume ($i33 == 1);
  goto $bb5;
$bb8:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8589, 9} true;
  assume {:verifier.code 0} true;
  call $i34 := input_register_device($p12);
  // WARNING: %40 = call i32 @input_register_device(%struct.input_dev* %13), !dbg !8660, !verifier.code !8605
  call {:cexpr "err"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8590, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8590, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8591, 5} true;
  assume {:verifier.code 0} true;
  call input_free_device($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8592, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $i34;
  goto $bb3;
$bb11:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8596, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8596, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8597, 35} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 2344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8597, 35} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8597, 9} true;
  assume {:verifier.code 0} true;
  call $i39 := ldv_usb_submit_urb_7($p38, 208);
  // WARNING: %48 = call i32 @ldv_usb_submit_urb_7(%struct.urb* %47, i32 208), !dbg !8672, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8598, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8598, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8599, 5} true;
  assume {:verifier.code 0} true;
  call $i41 := printk.ref.ref(.str.86, .str.87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8600, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8603, 39} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8603, 3} true;
  assume {:verifier.code 0} true;
  call $i43 := ttusb_dec_send_command($p0, $sub.i8(0, 80), 2, $p42, $0.ref, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8604, 3} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb3;
}
const usb_make_path: ref;
axiom (usb_make_path == $sub.ref(0, 191233));
procedure  usb_make_path($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !9929, metadata !8604), !dbg !9930, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 51} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 57} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 57} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 83} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 67} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6708, 12} true;
  assume {:verifier.code 0} true;
  call $i9 := snprintf.ref.i64.ref.ref.ref($p1, $i2, .str.88, $p6, $p8);
  // WARNING: %10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i32 0, i32 0), i8* %7, i8* %9), !dbg !8618, !verifier.code !8608
  call {:cexpr "actual"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 22} true;
  assume {:verifier.code 0} true;
  $i11 := $sgt.i32($i10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $i9;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 1);
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6709, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const strlcat: ref;
axiom (strlcat == $sub.ref(0, 192265));
procedure  strlcat($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64);
const input_allocate_device: ref;
axiom (input_allocate_device == $sub.ref(0, 193297));
procedure  input_allocate_device()
  returns ($r: ref);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 194329));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.6(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6581, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const input_register_device: ref;
axiom (input_register_device == $sub.ref(0, 195361));
procedure  input_register_device($p0: ref)
  returns ($r: i32);
const input_free_device: ref;
axiom (input_free_device == $sub.ref(0, 196393));
procedure  input_free_device($p0: ref);
const ldv_usb_submit_urb_7: ref;
axiom (ldv_usb_submit_urb_7 == $sub.ref(0, 197425));
procedure  ldv_usb_submit_urb_7($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !9962, metadata !8604), !dbg !9963, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9555, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_submit_urb($p0);
  // WARNING: %3 = call i32 @ldv_submit_urb(%struct.urb* %0), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9556, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_submit_urb: ref;
axiom (ldv_submit_urb == $sub.ref(0, 198457));
procedure  ldv_submit_urb($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9757, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_undef_int();
  // WARNING: %2 = call i32 @ldv_undef_int(), !dbg !8609, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9978, metadata !8604), !dbg !9979, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9759, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $sle.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9759, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9761, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9762, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop___0();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9764, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9764, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9765, 25} true;
  assume {:verifier.code 0} true;
  $p4 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9765, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9765, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9765, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i5, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9765, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb6:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9766, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9766, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9766, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb8:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9767, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9767, 26} true;
  assume {:verifier.code 0} true;
  $p11 := $M.3;
  call devirtbounce.7($p10, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9768, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 0;
  call {:cexpr "completeFnIntCounter"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9769, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9772, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9772, 33} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9772, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9773, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9773, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $M.3;
  call devirtbounce.7($p14, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9774, 31} true;
  assume {:verifier.code 0} true;
  $M.10 := 0;
  call {:cexpr "completeFnBulkCounter"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9775, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9781, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9784, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_undef_int: ref;
axiom (ldv_undef_int == $sub.ref(0, 199489));
procedure  ldv_undef_int()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6818, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !8603, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6819, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_stop___0: ref;
axiom (ldv_stop___0 == $sub.ref(0, 200521));
procedure  ldv_stop___0()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9647, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9649, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9651, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const snprintf: ref;
axiom (snprintf == $sub.ref(0, 201553));
procedure  snprintf.ref.i64.ref.ref.ref($p0: ref, $i1: i64, $p2: ref, p.3: ref, p.4: ref)
  returns ($r: i32);
const usb_set_interface: ref;
axiom (usb_set_interface == $sub.ref(0, 202585));
procedure  usb_set_interface($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32);
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 203617));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6667, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6667, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6667, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 204649));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 205681));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6643, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6643, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6644, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6644, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6645, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_process_urb_frame_list: ref;
axiom (ttusb_dec_process_urb_frame_list == $sub.ref(0, 206713));
procedure  ttusb_dec_process_urb_frame_list($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i12: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7864, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $i2p.i64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7866, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7866, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := spinlock_check($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7867, 11} true;
  assume {:verifier.code 0} true;
  call $i4 := _raw_spin_lock_irqsave($p3);
  // WARNING: %5 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %4), !dbg !8616, !verifier.code !8606
  call {:cexpr "flags"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7868, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 15344);
  $p6 := $add.ref($p1, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7868, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i8, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i4;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $p13, $i14 := $p7, $i4;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7874, 35} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7874, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p19, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7875, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7871, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7871, 40} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, $mul.ref($sub.ref(0, 904), 920));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7872, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p15, $mul.ref($sub.ref(0, 904), 920)), 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7872, 5} true;
  assume {:verifier.code 0} true;
  call list_del($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7873, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7877, 33} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7877, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p20, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7878, 52} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p15, $mul.ref($sub.ref(0, 904), 920));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7878, 36} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7878, 66} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p15, $mul.ref($sub.ref(0, 904), 920)), 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7878, 66} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7878, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_process_urb_frame($p1, $p22, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7879, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7879, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7866, 9} true;
  assume {:verifier.code 0} true;
  call $p26 := spinlock_check($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7867, 11} true;
  assume {:verifier.code 0} true;
  call $i27 := _raw_spin_lock_irqsave($p26);
  // WARNING: %29 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %28), !dbg !8616, !verifier.code !8606
  call {:cexpr "flags"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7868, 30} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $p13, $i14, $i18 := $p28, $i27, $i27;
  assume {:branchcond $i30} true;
  goto $bb7, $bb6;
$bb6:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i18;
  goto $bb3;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7869, 7} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb4;
}
const tasklet_init: ref;
axiom (tasklet_init == $sub.ref(0, 207745));
procedure  tasklet_init($p0: ref, $p1: ref, $i2: i64);
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 208777));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: i64);
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 209809));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !10104, metadata !8604), !dbg !10105, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6675, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6675, 48} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6675, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6676, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_process_urb_frame: ref;
axiom (ttusb_dec_process_urb_frame == $sub.ref(0, 210841));
procedure  ttusb_dec_process_urb_frame($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i29: i8;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $p63: ref;
  var $i64: i8;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $i75: i32;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i8;
  var $i85: i32;
  var $i86: i1;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i8;
  var $i93: i32;
  var $p94: ref;
  var $p95: ref;
  var $i96: i8;
  var $i97: i32;
  var $i98: i32;
  var $p99: ref;
  var $i100: i32;
  var $p101: ref;
  var $i102: i32;
  var $p103: ref;
  var $i104: i32;
  var $i105: i32;
  var $p106: ref;
  var $p107: ref;
  var $i108: i8;
  var $i109: i64;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $i114: i1;
  var $p115: ref;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i8;
  var $i125: i32;
  var $i126: i32;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $i130: i8;
  var $i131: i32;
  var $i132: i32;
  var $p133: ref;
  var $p134: ref;
  var $i135: i32;
  var $i136: i1;
  var $p137: ref;
  var $i138: i32;
  var $i139: i1;
  var $p140: ref;
  var $i141: i32;
  var $i142: i32;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i32;
  var $p151: ref;
  var $p152: ref;
  var $i153: i8;
  var $i154: i32;
  var $i155: i32;
  var $p156: ref;
  var $i157: i32;
  var $p158: ref;
  var $i159: i32;
  var $p160: ref;
  var $i161: i32;
  var $i162: i32;
  var $i163: i1;
  var $i164: i64;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i32;
  var $i169: i64;
  var $p170: ref;
  var $i171: i32;
  var $p172: ref;
  var $i173: i32;
  var $i174: i32;
  var $p175: ref;
  var $i176: i64;
  var $p177: ref;
  var $i178: i32;
  var $p179: ref;
  var $i180: i32;
  var $i181: i32;
  var $p182: ref;
  var $i185: i64;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i32;
  var $i190: i64;
  var $p191: ref;
  var $i192: i32;
  var $p193: ref;
  var $i194: i32;
  var $i195: i32;
  var $p196: ref;
  var $i183: i32;
  var $p184: ref;
  var $p197: ref;
  var $i198: i32;
  var $p199: ref;
  var $i200: i32;
  var $i201: i32;
  var $p202: ref;
  var $p203: ref;
  var $i204: i8;
  var $i205: i64;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i32;
  var $i210: i1;
  var $p211: ref;
  var $i212: i32;
  var $i213: i32;
  var $i214: i1;
  var $i215: i32;
  var $i216: i32;
  var $p217: ref;
  var $i218: i32;
  var $p219: ref;
  var $i220: i32;
  var $i221: i32;
  var $i222: i1;
  var $p223: ref;
  var $i224: i32;
  var $i225: i32;
  var $p226: ref;
  var $i27: i32;
  var $p28: ref;
  var $i227: i1;
  var $p4: ref;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10118, metadata !8604), !dbg !10119, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7725, 3} true;
  assume {:verifier.code 0} true;
  call swap_bytes($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  $p4, $i5 := $p1, $i2;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb81;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7846, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7728, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7728, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i7, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i7, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb18, $bb19;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i7, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i9 == 1);
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i7, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb16, $bb17;
$bb10:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i7, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7802, 20} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7802, 20} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i32($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7802, 49} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7802, 49} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i32($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7802, 42} true;
  assume {:verifier.code 0} true;
  $i162 := $sub.i32($i159, $i161);
  // WARNING: %188 = sub nsw i32 %185, %187, !dbg !8817, !verifier.code !8608
  call {:cexpr "remainder"} boogie_si_record_i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7803, 14} true;
  assume {:verifier.code 0} true;
  $i163 := $sge.i32($i5, $i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7803, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb65, $bb66;
$bb12:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i7, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7821, 18} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7821, 18} true;
  assume {:verifier.code 0} true;
  $i198 := $load.i32($M.0, $p197);
  // WARNING: %226 = load i32, i32* %225, align 4, !dbg !8862, !verifier.code !8608
  call {:cexpr "tmp___4"} boogie_si_record_i32($i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7822, 29} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7822, 29} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i32($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7822, 43} true;
  assume {:verifier.code 0} true;
  $i201 := $add.i32($i200, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7822, 8} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7822, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p202, $i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7824, 9} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7825, 26} true;
  assume {:verifier.code 0} true;
  $i204 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7825, 3} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7825, 8} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p0, 2584);
  $p207 := $add.ref($add.ref($p0, 2584), $mul.ref($i205, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7825, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p207, $i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 27} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 27} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i32($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $eq.i32($i209, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb68, $bb69;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb77;
$bb16:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7755, 18} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7755, 18} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  // WARNING: %47 = load i32, i32* %46, align 4, !dbg !8668, !verifier.code !8608
  call {:cexpr "tmp___0"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7756, 29} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7756, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7756, 43} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7756, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7756, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7758, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7759, 26} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7759, 3} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7759, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 2584);
  $p53 := $add.ref($add.ref($p0, 2584), $mul.ref($i51, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7759, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7760, 12} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7760, 12} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7760, 26} true;
  assume {:verifier.code 0} true;
  $i56 := $eq.i32($i55, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7760, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb38, $bb39;
$bb17:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7784, 18} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7784, 18} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  // WARNING: %119 = load i32, i32* %118, align 4, !dbg !8748, !verifier.code !8608
  call {:cexpr "tmp___2"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7785, 29} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7785, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7785, 43} true;
  assume {:verifier.code 0} true;
  $i105 := $add.i32($i104, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7785, 8} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7785, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p106, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7787, 9} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7788, 26} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7788, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7788, 8} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 2584);
  $p111 := $add.ref($add.ref($p0, 2584), $mul.ref($i109, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7788, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p111, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 27} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 27} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i32($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 39} true;
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb53, $bb54;
$bb18:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i7, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb23, $bb24;
$bb19:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i7, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb20, $bb22;
$bb20:
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7733, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7734, 22} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7734, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7734, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7734, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb28, $bb29;
$bb22:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7742, 22} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7742, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7742, 25} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7742, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb32, $bb33;
$bb23:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i7, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb26, $bb27;
$bb24:
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7728, 30} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7728, 30} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb27:
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb15;
$bb28:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7735, 30} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7735, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7735, 43} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7735, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7735, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7736, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7737, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7737, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7739, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32($i5, 1);
  // WARNING: %23 = sub nsw i32 %.21819, 1, !dbg !8641, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7740, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i26, $p17;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 14} true;
  assume {:verifier.code 0} true;
  $i227 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  $p4, $i5 := $p28, $i27;
  assume {:branchcond $i227} true;
  goto $bb79, $bb80;
$bb32:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7743, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7743, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7743, 43} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7743, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7743, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7744, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7744, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7745, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7746, 22} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7746, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7746, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7751, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7752, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $sub.i32($i5, 1);
  // WARNING: %44 = sub nsw i32 %.21819, 1, !dbg !8666, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7753, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i42, $p41;
  goto $bb31;
$bb35:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7747, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7747, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7748, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb38:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 29} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 2584);
  $p58 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 24} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 39} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i60, 65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb40:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 69} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 2584);
  $p63 := $add.ref($add.ref($p0, 2584), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 64} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i8($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 49} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 79} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb43, $bb44;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i61 == 1));
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7765, 29} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 2584);
  $p73 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7765, 24} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7765, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7765, 39} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i75, 83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7765, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb46, $bb47;
$bb43:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7762, 12} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7762, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7763, 32} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7763, 32} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7763, 45} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i69, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7763, 12} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7763, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7761, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb42;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7778, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb46:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7766, 12} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7766, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p77, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7767, 32} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7767, 32} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7767, 45} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7767, 12} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7767, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7768, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i76 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7769, 29} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 2584);
  $p83 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7769, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7769, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7769, 39} true;
  assume {:verifier.code 0} true;
  $i86 := $eq.i32($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7769, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb49, $bb50;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb45;
$bb49:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7770, 12} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7770, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7771, 12} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7771, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p88, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7772, 12} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7772, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7773, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i86 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 25} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 2584);
  $p91 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 20} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 14} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 47} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 2584);
  $p95 := $add.ref($add.ref($p0, 2584), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 42} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i8($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7775, 36} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i8.i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7774, 7} true;
  assume {:verifier.code 0} true;
  call $i98 := printk.ref.ref.i32.i32(.str.73, .str.74, $i93, $i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7776, 12} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7776, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, 0);
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7781, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i32($i5, 1);
  // WARNING: %116 = sub nsw i32 %.21819, 1, !dbg !8746, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7782, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i100, $p49;
  goto $bb31;
$bb53:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 53} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 53} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 67} true;
  assume {:verifier.code 0} true;
  $i117 := $eq.i32($i116, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb56, $bb57;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 45} true;
  assume {:verifier.code 0} true;
  assume !(($i114 == 1));
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 27} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 27} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i32($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 39} true;
  assume {:verifier.code 0} true;
  $i136 := $eq.i32($i135, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb59, $bb60;
$bb56:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7790, 30} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7790, 30} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7790, 43} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7790, 10} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7790, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p121, $i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 47} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0, 2584);
  $p123 := $add.ref($add.ref($p0, 2584), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 42} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i8($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 36} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i8.i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 57} true;
  assume {:verifier.code 0} true;
  $i126 := $shl.i32($i125, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 63} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i32($i126, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 81} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 2584);
  $p129 := $add.ref($add.ref($p0, 2584), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 76} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i8($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 70} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i8.i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 68} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i127, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 10} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7791, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p133, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7792, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7789, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i117 == 1));
  goto $bb55;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7799, 19} true;
  assume {:verifier.code 0} true;
  $i157 := $sub.i32($i5, 1);
  // WARNING: %182 = sub nsw i32 %.21819, 1, !dbg !8813, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7800, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i157, $p107;
  goto $bb31;
$bb59:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 53} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 53} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 67} true;
  assume {:verifier.code 0} true;
  $i139 := $eq.i32($i138, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb62, $bb63;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 45} true;
  assume {:verifier.code 0} true;
  assume !(($i136 == 1));
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  goto $bb64;
$bb62:
  assume ($i139 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7794, 30} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7794, 30} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7794, 43} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i32($i141, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7794, 10} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p143, $i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 48} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 2584);
  $p145 := $add.ref($add.ref($p0, 2584), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 43} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 37} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 58} true;
  assume {:verifier.code 0} true;
  $i148 := $and.i32($i147, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 64} true;
  assume {:verifier.code 0} true;
  $i149 := $shl.i32($i148, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 70} true;
  assume {:verifier.code 0} true;
  $i150 := $add.i32($i149, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 88} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p0, 2584);
  $p152 := $add.ref($add.ref($p0, 2584), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 83} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i8($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 77} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i8.i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 75} true;
  assume {:verifier.code 0} true;
  $i155 := $add.i32($i150, $i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 10} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7795, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p156, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7793, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i139 == 1));
  goto $bb61;
$bb64:
  assume {:verifier.code 0} true;
  goto $bb58;
$bb65:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7804, 13} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.i32.i64($i162);
  // WARNING: %191 = sext i32 %188 to i64, !dbg !8823, !verifier.code !8608
  call {:cexpr "__len"} boogie_si_record_i64($i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 46} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 30} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 77} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 77} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i32($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 56} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i32.i64($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 54} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p166, $mul.ref($i169, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7805, 13} true;
  assume {:verifier.code 0} true;
  call $i171 := __builtinx_memcpy.ref.ref.i64($p170, $p4, $i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7807, 31} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7807, 31} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7807, 45} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173, $i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7807, 10} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7807, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p175, $i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7808, 13} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i32.i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7808, 11} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p4, $mul.ref($i176, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7809, 21} true;
  assume {:verifier.code 0} true;
  $i178 := $sub.i32($i5, $i162);
  // WARNING: %205 = sub nsw i32 %.21819, %188, !dbg !8839, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7810, 30} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7810, 30} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i32($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7810, 43} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i180, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7810, 10} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7810, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p182, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7811, 3} true;
  assume {:verifier.code 0} true;
  $i183, $p184 := $i178, $p177;
  goto $bb67;
$bb66:
  assume !(($i163 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7812, 17} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i32.i64($i5);
  // WARNING: %211 = sext i32 %.21819 to i64, !dbg !8845, !verifier.code !8608
  call {:cexpr "__len___0"} boogie_si_record_i64($i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 50} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 34} true;
  assume {:verifier.code 0} true;
  $p187 := $bitcast.ref.ref($p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 81} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 81} true;
  assume {:verifier.code 0} true;
  $i189 := $load.i32($M.0, $p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 60} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 58} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p187, $mul.ref($i190, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7813, 17} true;
  assume {:verifier.code 0} true;
  call $i192 := __builtinx_memcpy.ref.ref.i64($p191, $p4, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7815, 31} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7815, 31} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i32($M.0, $p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7815, 45} true;
  assume {:verifier.code 0} true;
  $i195 := $add.i32($i194, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7815, 10} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7815, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p196, $i195);
  // WARNING: store i32 %221, i32* %222, align 4, !dbg !8858, !verifier.code !8608
  assume {:verifier.code 0} true;
  $i183, $p184 := 0, $p4;
  goto $bb67;
$bb67:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7818, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i183, $p184;
  goto $bb31;
$bb68:
  assume ($i210 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 53} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 53} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i32($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 75} true;
  assume {:verifier.code 0} true;
  $i213 := $and.i32($i212, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 75} true;
  assume {:verifier.code 0} true;
  $i214 := $ne.i32($i213, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb71, $bb72;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 45} true;
  assume {:verifier.code 0} true;
  assume !(($i210 == 1));
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  $i216 := 4;
  goto $bb73;
$bb71:
  assume ($i214 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7827, 17} true;
  assume {:verifier.code 0} true;
  $i215 := $add.i32(4, 1);
  // WARNING: %245 = add nsw i32 4, 1, !dbg !8884, !verifier.code !8608
  call {:cexpr "tail"} boogie_si_record_i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7828, 3} true;
  assume {:verifier.code 0} true;
  $i216 := $i215;
  goto $bb73;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7826, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i214 == 1));
  goto $bb70;
$bb73:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 12} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 12} true;
  assume {:verifier.code 0} true;
  $i218 := $load.i32($M.0, $p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 34} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 34} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i32($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 56} true;
  assume {:verifier.code 0} true;
  $i221 := $add.i32($i220, $i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 26} true;
  assume {:verifier.code 0} true;
  $i222 := $eq.i32($i218, $i221);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7831, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i222} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i222 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7832, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_process_packet($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7833, 10} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7833, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p223, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7834, 3} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i222 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7837, 19} true;
  assume {:verifier.code 0} true;
  $i224 := $sub.i32($i5, 1);
  // WARNING: %258 = sub nsw i32 %.21819, 1, !dbg !8898, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7838, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i224, $p203;
  goto $bb31;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7840, 3} true;
  assume {:verifier.code 0} true;
  call $i225 := printk.ref.ref(.str.75, .str.74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7841, 8} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7841, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p226, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7842, 3} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7842, 3} true;
  assume {:verifier.code 0} true;
  $i27, $p28 := $i5, $p4;
  goto $bb31;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  assume ($i227 == 1);
  goto $bb4;
$bb80:
  assume !(($i227 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7845, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7851, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const swap_bytes: ref;
axiom (swap_bytes == $sub.ref(0, 211873));
procedure  swap_bytes($p0: ref, $i1: i32)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i7: i8;
  var $p8: ref;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p5: ref;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !10421, metadata !8604), !dbg !10422, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7690, 28} true;
  assume {:verifier.code 0} true;
  $i2 := $srem.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7690, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32($i1, $i2);
  // WARNING: %4 = sub nsw i32 %1, %3, !dbg !8613, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p0, $i3;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7700, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7693, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %.03, align 1, !dbg !8617, !verifier.code !8608
  call {:cexpr "c"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7694, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7694, 8} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7694, 6} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7695, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7695, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7696, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7697, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i6, $sub.i32(0, 2));
  // WARNING: %12 = add nsw i32 %.012, -2, !dbg !8626, !verifier.code !8608
  call {:cexpr "length"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p11, $i12;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb4;
$bb7:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7699, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7705, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_process_packet: ref;
axiom (ttusb_dec_process_packet == $sub.ref(0, 212905));
procedure  ttusb_dec_process_packet($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i16;
  var $i25: i32;
  var $i26: i32;
  var $i27: i16;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $i31: i16;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i10: i32;
  var $i11: i16;
  var $i35: i16;
  var $i9: i16;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i8;
  var $i46: i16;
  var $i47: i32;
  var $i48: i32;
  var $i49: i16;
  var $p50: ref;
  var $i51: i32;
  var $i52: i32;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $i57: i16;
  var $i58: i32;
  var $i59: i32;
  var $i60: i32;
  var $i61: i16;
  var $p62: ref;
  var $i63: i16;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $i68: i16;
  var $i69: i32;
  var $i70: i1;
  var $p71: ref;
  var $i72: i16;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i16;
  var $p83: ref;
  var $p84: ref;
  var $i85: i32;
  var $i86: i1;
  var $i87: i1;
  var $i88: i1;
  var $i89: i1;
  var $p90: ref;
  var $i91: i32;
  var $i92: i1;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i32;
  var $p97: ref;
  var $i98: i32;
  var $i99: i1;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ttusb_dec* %0, i64 0, metadata !10445, metadata !8604), !dbg !10446, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7626, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7626, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7626, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7626, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7626, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7627, 5} true;
  assume {:verifier.code 0} true;
  call $i5 := printk.ref.ref(.str.76, .str.77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7628, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7684, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $sgt.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  $i10, $i11 := 0, 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7639, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 58} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 63} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 2584);
  $p14 := $add.ref($add.ref($p0, 2584), $mul.ref($i12, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 58} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 41} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 34} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 74} true;
  assume {:verifier.code 0} true;
  $i18 := $shl.i32($i17, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 121} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 107} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 112} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 2584);
  $p22 := $add.ref($add.ref($p0, 2584), $mul.ref($i20, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 107} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 90} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i16($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 83} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i16.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 81} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i18, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 24} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i32.i16($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i16.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 131} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 129} true;
  assume {:verifier.code 0} true;
  $i30 := $xor.i32($i28, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7635, 10} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i16($i30);
  // WARNING: %33 = trunc i32 %32 to i16, !dbg !8640, !verifier.code !8608
  call {:cexpr "csum"} boogie_si_record_i16($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7636, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i10, 2);
  // WARNING: %34 = add nsw i32 %.07, 2, !dbg !8641, !verifier.code !8608
  call {:cexpr "i"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 26} true;
  assume {:verifier.code 0} true;
  $i34 := $sgt.i32($i33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  $i10, $i11, $i35 := $i32, $i31, $i31;
  assume {:branchcond $i34} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb8;
$bb11:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7638, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $i35;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7644, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i16.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7644, 27} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7644, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7645, 5} true;
  assume {:verifier.code 0} true;
  call $i38 := printk.ref.ref(.str.78, .str.77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7646, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb14:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 45} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 45} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 59} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 28} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 33} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 2584);
  $p44 := $add.ref($add.ref($p0, 2584), $mul.ref($i42, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 28} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i8($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 22} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i16($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i16.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 66} true;
  assume {:verifier.code 0} true;
  $i48 := $shl.i32($i47, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7650, 15} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i16($i48);
  // WARNING: %56 = trunc i32 %55 to i16, !dbg !8656, !verifier.code !8608
  call {:cexpr "packet_id"} boogie_si_record_i16($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 45} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 8740);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 45} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 59} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i51, $sub.i32(0, 3));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 28} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i32.i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 33} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 2584);
  $p55 := $add.ref($add.ref($p0, 2584), $mul.ref($i53, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 28} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 22} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i16($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i16.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 68} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i16.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 66} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i58, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7651, 15} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i16($i60);
  // WARNING: %68 = trunc i32 %67 to i16, !dbg !8665, !verifier.code !8608
  call {:cexpr "packet_id"} boogie_si_record_i16($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 18} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 18} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i16($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i16.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 36} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i16.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i64, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 52} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 75} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 75} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i16($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 55} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i16.i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 90} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i32($i69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 52} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb19:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7654, 23} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7654, 23} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i16($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7654, 12} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i16.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7654, 38} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i32($i73, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7654, 44} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i16.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7653, 5} true;
  assume {:verifier.code 0} true;
  call $i76 := printk.ref.ref.i32.i32(.str.79, .str.77, $i74, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7655, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7652, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb18;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7658, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i16.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7658, 32} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i77, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7658, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7659, 10} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7659, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p79, $sub.i16(0, 32768));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7660, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7661, 27} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i16.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7661, 52} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7661, 27} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i16($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7661, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7661, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p83, $i82);
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7663, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 8732);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7663, 31} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  $i86 := $slt.i32($i85, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i86 == 1);
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i85, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb33, $bb34;
$bb27:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  $i87 := $slt.i32($i85, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7672, 12} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 8756);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7672, 12} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7672, 32} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb39, $bb40;
$bb29:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  $i88 := $eq.i32($i85, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7679, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb31:
  assume {:verifier.code 0} true;
  assume !(($i88 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb33:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7665, 12} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 8752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7665, 12} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7665, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $ne.i32($i91, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7665, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb35, $bb36;
$bb34:
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb32;
$bb35:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7666, 46} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7666, 32} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7666, 60} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7666, 60} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7666, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_process_pva($p0, $p94, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7667, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7670, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7682, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb39:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7673, 49} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 2584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7673, 35} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7673, 63} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 8744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7673, 63} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7673, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_process_filter($p0, $p101, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7674, 3} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7677, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7680, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
}
const ttusb_dec_process_pva: ref;
axiom (ttusb_dec_process_pva == $sub.ref(0, 213937));
procedure  ttusb_dec_process_pva($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $p62: ref;
  var $i63: i8;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
  var $i77: i32;
  var $i78: i32;
  var $i79: i8;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i32;
  var $i86: i8;
  var $i87: i32;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $i93: i32;
  var $i94: i32;
  var $i95: i8;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i8;
  var $i100: i32;
  var $i101: i32;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $i106: i8;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i8;
  var $i121: i32;
  var $p122: ref;
  var $i123: i8;
  var $i124: i32;
  var $i125: i32;
  var $i126: i8;
  var $i127: i32;
  var $i128: i32;
  var $i129: i8;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $i135: i32;
  var $i136: i8;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $p140: ref;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i64;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i32;
  var $i149: i64;
  var $p150: ref;
  var $i151: i32;
  var $i152: i32;
  var $i153: i32;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i32;
  var $i160: i64;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $i165: i32;
  var $i166: i32;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i64;
  var $p175: ref;
  var $p176: ref;
  var $i177: i8;
  var $i178: i32;
  var $i179: i1;
  var $p180: ref;
  var $p181: ref;
  var $i182: i8;
  var $i183: i32;
  var $i184: i32;
  var $i185: i64;
  var $p186: ref;
  var $p187: ref;
  var $i188: i8;
  var $i189: i32;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $i193: i8;
  var $i194: i32;
  var $i195: i32;
  var $i196: i64;
  var $p197: ref;
  var $p198: ref;
  var $i199: i8;
  var $i200: i32;
  var $i201: i1;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $i207: i32;
  var $i208: i16;
  var $i209: i32;
  var $i210: i16;
  var $i211: i32;
  var $i212: i32;
  var $i213: i32;
  var $i214: i16;
  var $i215: i16;
  var $i216: i1;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $i226: i32;
  var $i227: i1;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $i232: i32;
  var $i233: i32;
  var $i234: i32;
  var $i235: i1;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $i243: i64;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $i250: i32;
  var $p251: ref;
  var $p252: ref;
  var $i253: i32;
  var $p254: ref;
  var $i255: i8;
  var $i256: i32;
  var $i257: i32;
  var $i258: i32;
  var $p259: ref;
  var $i260: i8;
  var $i261: i32;
  var $i262: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10568, metadata !8604), !dbg !10569, !verifier.code !8606
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7479, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $sle.i32($i2, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7479, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7480, 5} true;
  assume {:verifier.code 0} true;
  call $i5 := printk.ref.ref(.str.80, .str.81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7481, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7573, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7485, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i2, 6152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7485, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7486, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := printk.ref.ref(.str.82, .str.81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7487, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7491, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7491, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7491, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i10, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i10, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb14, $bb15;
$bb10:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i10, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7556, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7556, 18} true;
  assume {:verifier.code 0} true;
  $i235 := $ne.i32($i234, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7556, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i235} true;
  goto $bb43, $bb44;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb14:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7493, 26} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7493, 20} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7493, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7493, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 3);
  // WARNING: %22 = and i32 %21, 3, !dbg !8635, !verifier.code !8605
  call {:cexpr "prebytes"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7494, 28} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7494, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7494, 16} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7494, 35} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i20, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7494, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $ashr.i32($i21, 2);
  // WARNING: %27 = ashr i32 %26, 2, !dbg !8642, !verifier.code !8605
  call {:cexpr "postbytes"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7495, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7495, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7495, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb13;
$bb16:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 15} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 15480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 15} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 30} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 30} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 37} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 4376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 40} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 40} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7496, 64} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 59} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 15480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 59} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 74} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 74} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 81} true;
  assume {:verifier.code 0} true;
  $p37 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7497, 86} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  call $i39 := devirtbounce.8($p31, $p1, $i32, $0.ref, 0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7499, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb17:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 12} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 15340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 12} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 28} true;
  assume {:verifier.code 0} true;
  $i42 := $sgt.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 40} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 15340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 40} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 56} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 32} true;
  assume {:verifier.code 0} true;
  assume !(($i42 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb22:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7504, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i17);
  // WARNING: %56 = sext i32 %22 to i64, !dbg !8668, !verifier.code !8605
  call {:cexpr "__len"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 46} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 30} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 76} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 76} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 55} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 53} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p48, $mul.ref($i51, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7506, 50} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7505, 13} true;
  assume {:verifier.code 0} true;
  call $i54 := __builtinx_memcpy.ref.ref.i64($p52, $p53, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 30} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 8968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 65} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 40} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 78} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 78} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 91} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i59, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7507, 5} true;
  assume {:verifier.code 0} true;
  call $i61 := dvb_filter_pes2ts($p55, $p57, $i60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7503, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb21;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 20} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 14} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 8} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 27} true;
  assume {:verifier.code 0} true;
  $i65 := $and.i32($i64, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7513, 10} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 9176);
  $p68 := $add.ref($add.ref($p0, 9176), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7513, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $sub.i8(0, 128));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7514, 10} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 9176);
  $p70 := $add.ref($add.ref($p0, 9176), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7514, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 62} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 56} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 50} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 69} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 76} true;
  assume {:verifier.code 0} true;
  $i75 := $ashr.i32($i74, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 34} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 27} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 83} true;
  assume {:verifier.code 0} true;
  $i78 := $or.i32($i77, 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 21} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i32.i8($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 10} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 9176);
  $p81 := $add.ref($add.ref($p0, 9176), 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7515, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p81, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 62} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 56} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 50} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 69} true;
  assume {:verifier.code 0} true;
  $i85 := $shl.i32($i84, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 35} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i32.i8($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 28} true;
  assume {:verifier.code 0} true;
  $i87 := $sext.i8.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 112} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p1, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 106} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 100} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 119} true;
  assume {:verifier.code 0} true;
  $i91 := $ashr.i32($i90, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 85} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 78} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 76} true;
  assume {:verifier.code 0} true;
  $i94 := $or.i32($i87, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 22} true;
  assume {:verifier.code 0} true;
  $i95 := $trunc.i32.i8($i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 10} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0, 9176);
  $p97 := $add.ref($add.ref($p0, 9176), 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7516, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p97, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 63} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p1, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 57} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i8($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 51} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i8.i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 70} true;
  assume {:verifier.code 0} true;
  $i101 := $shl.i32($i100, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 36} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i32.i8($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 29} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i8.i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 77} true;
  assume {:verifier.code 0} true;
  $i104 := $or.i32($i103, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 119} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 113} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i8($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 107} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i8.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 127} true;
  assume {:verifier.code 0} true;
  $i108 := $and.i32($i107, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 134} true;
  assume {:verifier.code 0} true;
  $i109 := $ashr.i32($i108, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 91} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 84} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i8.i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 82} true;
  assume {:verifier.code 0} true;
  $i112 := $or.i32($i104, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 22} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 10} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 9176);
  $p115 := $add.ref($add.ref($p0, 9176), 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7517, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p115, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 62} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 56} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i8($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 50} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i8.i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 70} true;
  assume {:verifier.code 0} true;
  $i119 := $shl.i32($i118, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 35} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i32.i8($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 28} true;
  assume {:verifier.code 0} true;
  $i121 := $sext.i8.i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 113} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 107} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i8($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 101} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i8.i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 121} true;
  assume {:verifier.code 0} true;
  $i125 := $ashr.i32($i124, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 86} true;
  assume {:verifier.code 0} true;
  $i126 := $trunc.i32.i8($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 79} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i8.i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 77} true;
  assume {:verifier.code 0} true;
  $i128 := $or.i32($i121, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 22} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i32.i8($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 10} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 9176);
  $p131 := $add.ref($add.ref($p0, 9176), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7518, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p131, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 62} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 56} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i8($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 50} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i8.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 70} true;
  assume {:verifier.code 0} true;
  $i135 := $shl.i32($i134, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 35} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i32.i8($i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 28} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 77} true;
  assume {:verifier.code 0} true;
  $i138 := $or.i32($i137, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 22} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 10} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 9176);
  $p141 := $add.ref($add.ref($p0, 9176), 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7519, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p141, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7520, 35} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i32($i2, $sub.i32(0, 12));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7520, 42} true;
  assume {:verifier.code 0} true;
  $i143 := $sub.i32($i142, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7520, 17} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i143);
  // WARNING: %157 = sext i32 %156 to i64, !dbg !8771, !verifier.code !8605
  call {:cexpr "__len___0"} boogie_si_record_i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 50} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 34} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 57} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p146, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 112} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i17, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 86} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 84} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p1, $mul.ref($i149, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7521, 17} true;
  assume {:verifier.code 0} true;
  call $i151 := __builtinx_memcpy.ref.ref.i64($p147, $p150, $i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7523, 33} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7523, 38} true;
  assume {:verifier.code 0} true;
  $i153 := $sub.i32($i152, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7523, 10} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7523, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p154, $i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7524, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i66 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7525, 10} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p0, 9176);
  $p156 := $add.ref($add.ref($p0, 9176), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7525, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p156, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7526, 10} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p0, 9176);
  $p158 := $add.ref($add.ref($p0, 9176), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7526, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p158, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7527, 34} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i32($i2, $sub.i32(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7527, 17} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  // WARNING: %174 = sext i32 %173 to i64, !dbg !8792, !verifier.code !8605
  call {:cexpr "__len___1"} boogie_si_record_i64($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7528, 50} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7528, 34} true;
  assume {:verifier.code 0} true;
  $p162 := $bitcast.ref.ref($p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7528, 57} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p162, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7528, 83} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7528, 17} true;
  assume {:verifier.code 0} true;
  call $i165 := __builtinx_memcpy.ref.ref.i64($p163, $p164, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7530, 32} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7530, 10} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7530, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p167, $i166);
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7532, 8} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p0, 15340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7532, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p168, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 45} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0, 9176);
  $p170 := $add.ref($add.ref($p0, 9176), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 40} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i8($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 34} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 54} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i172, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 23} true;
  assume {:verifier.code 0} true;
  $i174 := $sext.i32.i64($i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 28} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p0, 9176);
  $p176 := $add.ref($add.ref($p0, 9176), $mul.ref($i174, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 23} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i8($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 8} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 59} true;
  assume {:verifier.code 0} true;
  $i179 := $eq.i32($i178, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 65} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 105} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p0, 9176);
  $p181 := $add.ref($add.ref($p0, 9176), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 100} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i8($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 94} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 114} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i183, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 83} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i32.i64($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 88} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p0, 9176);
  $p187 := $add.ref($add.ref($p0, 9176), $mul.ref($i185, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 83} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i8($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 68} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i8.i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 120} true;
  assume {:verifier.code 0} true;
  $i190 := $eq.i32($i189, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 127} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 65} true;
  assume {:verifier.code 0} true;
  assume !(($i179 == 1));
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7536, 10} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p0, 9176);
  $p205 := $add.ref($add.ref($p0, 9176), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7536, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p205, $sub.i8(0, 128));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb31:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 167} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p0, 9176);
  $p192 := $add.ref($add.ref($p0, 9176), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 162} true;
  assume {:verifier.code 0} true;
  $i193 := $load.i8($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 156} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i8.i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 176} true;
  assume {:verifier.code 0} true;
  $i195 := $add.i32($i194, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 145} true;
  assume {:verifier.code 0} true;
  $i196 := $sext.i32.i64($i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 150} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p0, 9176);
  $p198 := $add.ref($add.ref($p0, 9176), $mul.ref($i196, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 145} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i8($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 130} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 182} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i32($i200, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb33, $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 127} true;
  assume {:verifier.code 0} true;
  assume !(($i190 == 1));
  goto $bb30;
$bb33:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7534, 10} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0, 9176);
  $p203 := $add.ref($add.ref($p0, 9176), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7534, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p203, $sub.i8(0, 124));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7535, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7533, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i201 == 1));
  goto $bb30;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 62} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 62} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i32($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 49} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i16($i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 42} true;
  assume {:verifier.code 0} true;
  $i209 := $zext.i16.i32($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 85} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i32.i16($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 78} true;
  assume {:verifier.code 0} true;
  $i211 := $zext.i16.i32($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 76} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i209, $i211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 105} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i32($i212, 65530);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 19} true;
  assume {:verifier.code 0} true;
  $i214 := $trunc.i32.i16($i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7538, 9} true;
  assume {:verifier.code 0} true;
  call $i215 := __fswab16($i214);
  // WARNING: %235 = call zeroext i16 @__fswab16(i16 zeroext %234), !dbg !8850, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i16($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7539, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i215);
  // WARNING: store i16 %235, i16* %4, align 2, !dbg !8853, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7541, 17} true;
  assume {:verifier.code 0} true;
  $i216 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7541, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i216} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i216 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7542, 42} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7542, 26} true;
  assume {:verifier.code 0} true;
  $p218 := $bitcast.ref.ref($p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7542, 49} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p218, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7542, 55} true;
  assume {:verifier.code 0} true;
  $p220 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7542, 17} true;
  assume {:verifier.code 0} true;
  call $p221 := __memcpy($p219, $p220, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7544, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i216 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7545, 50} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7545, 34} true;
  assume {:verifier.code 0} true;
  $p223 := $bitcast.ref.ref($p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7545, 57} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p223, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7545, 63} true;
  assume {:verifier.code 0} true;
  $p225 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7545, 17} true;
  assume {:verifier.code 0} true;
  call $i226 := __builtinx_memcpy.ref.ref.i64($p224, $p225, 2);
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7548, 17} true;
  assume {:verifier.code 0} true;
  $i227 := $eq.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7548, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i227 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 30} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p0, 8968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 65} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p0, 9176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 40} true;
  assume {:verifier.code 0} true;
  $p230 := $bitcast.ref.ref($p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 78} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 78} true;
  assume {:verifier.code 0} true;
  $i232 := $load.i32($M.0, $p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7549, 5} true;
  assume {:verifier.code 0} true;
  call $i233 := dvb_filter_pes2ts($p228, $p230, $i232, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7551, 3} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i227 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7554, 3} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7571, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb43:
  assume ($i235 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 15} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p0, 15472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 15} true;
  assume {:verifier.code 0} true;
  $p237 := $load.ref($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 30} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p237, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 30} true;
  assume {:verifier.code 0} true;
  $p239 := $load.ref($M.0, $p238);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 37} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p239, 4376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 40} true;
  assume {:verifier.code 0} true;
  $p241 := $bitcast.ref.ref($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 40} true;
  assume {:verifier.code 0} true;
  $p242 := $load.ref($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7557, 64} true;
  assume {:verifier.code 0} true;
  $i243 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 59} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p0, 15472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 59} true;
  assume {:verifier.code 0} true;
  $p245 := $load.ref($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 74} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p245, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 74} true;
  assume {:verifier.code 0} true;
  $p247 := $load.ref($M.0, $p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 81} true;
  assume {:verifier.code 0} true;
  $p248 := $p247;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7558, 86} true;
  assume {:verifier.code 0} true;
  $p249 := $bitcast.ref.ref($p248);
  call $i250 := devirtbounce.8($p242, $p1, $i243, $0.ref, 0, $p249, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7560, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb44:
  assume !(($i235 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 28} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p0, 8760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 42} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 55} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i2, $sub.i32(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 73} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 67} true;
  assume {:verifier.code 0} true;
  $i255 := $load.i8($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 61} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i8.i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 80} true;
  assume {:verifier.code 0} true;
  $i257 := $and.i32($i256, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7564, 3} true;
  assume {:verifier.code 0} true;
  call $i258 := dvb_filter_pes2ts($p251, $p252, $i253, $i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7565, 3} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7567, 80} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7567, 74} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i8($M.0, $p259);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7567, 68} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i8.i32($i260);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7567, 3} true;
  assume {:verifier.code 0} true;
  call $i262 := printk.ref.ref.i32(.str.83, .str.81, $i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7568, 3} true;
  assume {:verifier.code 0} true;
  goto $bb42;
}
const ttusb_dec_process_filter: ref;
axiom (ttusb_dec_process_filter == $sub.ref(0, 214969));
procedure  ttusb_dec_process_filter($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p15: ref;
  var $p26: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i64;
  var $p42: ref;
  var $i43: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10878, metadata !8604), !dbg !10879, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7586, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7586, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  // WARNING: %5 = load i8, i8* %4, align 1, !dbg !8617, !verifier.code !8608
  call {:cexpr "sid"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7587, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7587, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := spinlock_check($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7588, 11} true;
  assume {:verifier.code 0} true;
  call $i7 := _raw_spin_lock_irqsave($p6);
  // WARNING: %8 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %7), !dbg !8625, !verifier.code !8608
  call {:cexpr "flags"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7589, 15} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 15488);
  $p9 := $add.ref($p0, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7589, 32} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 31} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 52} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i12, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $p10;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7603, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7593, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7593, 40} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, $mul.ref($sub.ref(0, 16), 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 20} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p16, $mul.ref($sub.ref(0, 16), 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 20} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i20, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7594, 7} true;
  assume {:verifier.code 0} true;
  $p23 := $p17;
  assume {:branchcond $i22} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i22 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7595, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7595, 21} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7596, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $p25;
  goto $bb8;
$bb7:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7608, 33} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7608, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p31, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7609, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7609, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7600, 16} true;
  assume {:verifier.code 0} true;
  $p27 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7600, 16} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 52} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 49} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i12, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $p28;
  assume {:branchcond $i30} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb4;
$bb11:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7602, 68} true;
  assume {:verifier.code 0} true;
  $p26 := $0.ref;
  goto $bb8;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p26, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 24} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 4376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 27} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 54} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 77} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i2, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7610, 60} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7611, 66} true;
  assume {:verifier.code 0} true;
  $p42 := $p26;
  call $i43 := devirtbounce.9($p38, $p39, $i41, $0.ref, 0, $p42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7612, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7615, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dvb_filter_pes2ts: ref;
axiom (dvb_filter_pes2ts == $sub.ref(0, 216001));
procedure  dvb_filter_pes2ts($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i32);
const __fswab16: ref;
axiom (__fswab16 == $sub.ref(0, 217033));
procedure  __fswab16($i0: i16)
  returns ($r: i16)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 36} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 46} true;
  assume {:verifier.code 0} true;
  $i2 := $shl.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i16($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 71} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 81} true;
  assume {:verifier.code 0} true;
  $i6 := $ashr.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 55} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 53} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i4, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6561, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const __memcpy: ref;
axiom (__memcpy == $sub.ref(0, 218065));
procedure  __memcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 219097));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const dvb_register_adapter: ref;
axiom (dvb_register_adapter == $sub.ref(0, 220129));
procedure  dvb_register_adapter($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i32);
const ttusb_dec_start_feed: ref;
axiom (ttusb_dec_start_feed == $sub.ref(0, 221161));
procedure  ttusb_dec_start_feed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i16;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8376, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 4384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8376, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8377, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8377, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8377, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8378, 5} true;
  assume {:verifier.code 0} true;
  call $i5 := printk.ref.ref(.str, .str.50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8379, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8382, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8382, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8382, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8382, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8382, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8383, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8408, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8387, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8387, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8387, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8388, 49} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8388, 49} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i16($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8388, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8388, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := printk.ref.i32(.str.51, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8389, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8392, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 4400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8392, 23} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i19, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i19, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb17, $bb18;
$bb13:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i19, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8397, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := ttusb_dec_start_sec_feed($p0);
  // WARNING: %32 = call i32 @ttusb_dec_start_sec_feed(%struct.dvb_demux_feed* %0), !dbg !8641, !verifier.code !8606
  call {:cexpr "tmp___0"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8398, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i24;
  goto $bb6;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8394, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := ttusb_dec_start_ts_feed($p0);
  // WARNING: %30 = call i32 @ttusb_dec_start_ts_feed(%struct.dvb_demux_feed* %0), !dbg !8636, !verifier.code !8606
  call {:cexpr "tmp"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8395, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i23;
  goto $bb6;
$bb18:
  assume {:verifier.code 0} true;
  assume !(($i22 == 1));
  goto $bb16;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8400, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8400, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8400, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8401, 50} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 4400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8401, 50} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8401, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := printk.ref.i32(.str.52, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8402, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8405, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 22);
  goto $bb6;
}
const ttusb_dec_stop_feed: ref;
axiom (ttusb_dec_stop_feed == $sub.ref(0, 222193));
procedure  ttusb_dec_stop_feed($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i11: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8454, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8454, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8454, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8455, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8456, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8459, 23} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 4400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8459, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb10, $bb11;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8464, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ttusb_dec_stop_sec_feed($p0);
  // WARNING: %13 = call i32 @ttusb_dec_stop_sec_feed(%struct.dvb_demux_feed* %0), !dbg !8621, !verifier.code !8606
  call {:cexpr "tmp___0"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8465, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i11;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8461, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ttusb_dec_stop_ts_feed($p0);
  // WARNING: %11 = call i32 @ttusb_dec_stop_ts_feed(%struct.dvb_demux_feed* %0), !dbg !8616, !verifier.code !8606
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8462, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb9;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8469, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8467, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb12;
}
const dvb_dmx_init: ref;
axiom (dvb_dmx_init == $sub.ref(0, 223225));
procedure  dvb_dmx_init($p0: ref)
  returns ($r: i32);
const dvb_dmxdev_init: ref;
axiom (dvb_dmxdev_init == $sub.ref(0, 224257));
procedure  dvb_dmxdev_init($p0: ref, $p1: ref)
  returns ($r: i32);
const dvb_net_init: ref;
axiom (dvb_net_init == $sub.ref(0, 225289));
procedure  dvb_net_init($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const ttusb_dec_stop_ts_feed: ref;
axiom (ttusb_dec_stop_ts_feed == $sub.ref(0, 226321));
procedure  ttusb_dec_stop_ts_feed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $p13: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8415, 42} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 4384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8415, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8415, 50} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8415, 50} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8415, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8416, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8416, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8417, 39} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8417, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := ttusb_dec_send_command($p6, $sub.i8(0, 127), 1, $p8, $0.ref, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8418, 32} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p6, 8752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8418, 32} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8418, 49} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8418, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p6, 8752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8418, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8419, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_stop_iso_xfer($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8420, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ttusb_dec_stop_sec_feed: ref;
axiom (ttusb_dec_stop_sec_feed == $sub.ref(0, 227353));
procedure  ttusb_dec_stop_sec_feed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $p26: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8432, 42} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 4384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8432, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8432, 50} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8432, 50} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8432, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8433, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8433, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8434, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8434, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8435, 45} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 4392);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8435, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8435, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8436, 18} true;
  assume {:verifier.code 0} true;
  $p12 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8436, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8436, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8436, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8437, 31} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p6, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8437, 9} true;
  assume {:verifier.code 0} true;
  call $p16 := spinlock_check($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8438, 11} true;
  assume {:verifier.code 0} true;
  call $i17 := _raw_spin_lock_irqsave($p16);
  // WARNING: %18 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %17), !dbg !8632, !verifier.code !8603
  call {:cexpr "flags"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8439, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p11, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8439, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8440, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p6, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8440, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p19, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8441, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8441, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8442, 38} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8442, 3} true;
  assume {:verifier.code 0} true;
  call $i22 := ttusb_dec_send_command($p6, 98, 2, $p21, $0.ref, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8443, 35} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 8756);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8443, 35} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8443, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8443, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 8756);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8443, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8444, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_stop_iso_xfer($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8445, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ttusb_dec_stop_iso_xfer: ref;
axiom (ttusb_dec_stop_iso_xfer == $sub.ref(0, 228385));
procedure  ttusb_dec_stop_iso_xfer($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8006, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8006, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8006, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8007, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8008, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8011, 48} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8011, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := mutex_lock_interruptible_nested($p4, 0);
  // WARNING: %9 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %8, i32 0), !dbg !8618, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8012, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8012, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8013, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8037, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8017, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8017, 32} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8017, 49} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8017, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8017, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8018, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8018, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8018, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8018, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8025, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 23} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 2376);
  $p15 := $add.ref($p0, 2376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p16);
  // WARNING: call void @usb_kill_urb(%struct.urb* %25), !dbg !8640, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 2376);
  $p19 := $add.ref($add.ref($p0, 2376), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p20);
  // WARNING: call void @usb_kill_urb(%struct.urb* %35), !dbg !8640, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8031, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8034, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8034, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8035, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 23} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 2376);
  $p22 := $add.ref($add.ref($p0, 2376), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 18} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p23);
  // WARNING: call void @usb_kill_urb(%struct.urb* %39), !dbg !8640, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 2376);
  $p25 := $add.ref($add.ref($p0, 2376), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 18} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8022, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p26);
  // WARNING: call void @usb_kill_urb(%struct.urb* %43), !dbg !8640, !verifier.code !8608
  assume {:verifier.code 0} true;
  goto $bb13;
}
const ttusb_dec_start_ts_feed: ref;
axiom (ttusb_dec_start_ts_feed == $sub.ref(0, 229417));
procedure  ttusb_dec_start_ts_feed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $p51: ref;
  var $i52: i16;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i16;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $p65: ref;
  var $i66: i16;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i16;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i78: i32;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $p83: ref;
  var $i84: i16;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i90: i32;
  var $i91: i1;
  var $p92: ref;
  var $i93: i32;
  var $i94: i32;
  var $p95: ref;
  var $i96: i32;
  var $i97: i1;
  var $p98: ref;
  var $i99: i32;
  var $i100: i32;
  var $p101: ref;
  var $i102: i32;
  var $i79: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8147, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 4384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8147, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8148, 37} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8148, 37} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8148, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8149, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8149, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 5);
  // WARNING: store i8 5, i8* %8, align 1, !dbg !8619, !verifier.code !8603
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8151, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8151, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8151, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8152, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := printk.ref.ref(.str, .str.53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8153, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8156, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8156, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8156, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8157, 5} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref(.str.54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8158, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8161, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 4456);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8161, 20} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8161, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8161, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8161, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8162, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8162, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8162, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8163, 7} true;
  assume {:verifier.code 0} true;
  call $i20 := printk.ref(.str.55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8164, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8167, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8170, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 4456);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8170, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8170, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8170, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8171, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8171, 15} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8171, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb15:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8172, 7} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref(.str.56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8173, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8176, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8179, 20} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 4456);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8179, 20} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8179, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8179, 33} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8179, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8180, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8180, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8180, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb21:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8181, 7} true;
  assume {:verifier.code 0} true;
  call $i34 := printk.ref(.str.57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8185, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8188, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8188, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8188, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8189, 5} true;
  assume {:verifier.code 0} true;
  call $i37 := printk.ref(.str.36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8190, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8193, 38} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 4460);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8193, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i39, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i40 == 1);
  assume {:verifier.code 0} true;
  $i46 := $slt.i32($i39, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb42, $bb43;
$bb30:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  $i41 := $slt.i32($i39, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i41 == 1);
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i39, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb40, $bb41;
$bb32:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i42 := $slt.i32($i39, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i42 == 1);
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i39, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb38, $bb39;
$bb34:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i39, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8233, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8233, 13} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8233, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb60, $bb61;
$bb36:
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb63;
$bb38:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8224, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8224, 13} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8224, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb57, $bb58;
$bb39:
  assume {:verifier.code 0} true;
  assume !(($i44 == 1));
  goto $bb37;
$bb40:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8216, 29} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8216, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i16($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8216, 8} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p6, 2088);
  $p75 := $add.ref($add.ref($p6, 2088), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8216, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p75, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8217, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8217, 13} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8217, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb53, $bb54;
$bb41:
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb37;
$bb42:
  assume ($i46 == 1);
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i39, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb44, $bb45;
$bb43:
  assume !(($i46 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8195, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8195, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8195, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb46, $bb47;
$bb44:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8206, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8206, 13} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i32($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8206, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb50, $bb51;
$bb45:
  assume {:verifier.code 0} true;
  assume !(($i47 == 1));
  goto $bb37;
$bb46:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8196, 5} true;
  assume {:verifier.code 0} true;
  call $i50 := printk.ref(.str.58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8197, 3} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8200, 29} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8200, 29} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i16($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8200, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p6, 2088);
  $p54 := $add.ref($add.ref($p6, 2088), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8200, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p54, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8201, 29} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8201, 29} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i16($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8201, 8} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p6, 2088);
  $p58 := $add.ref($add.ref($p6, 2088), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8201, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p58, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8202, 35} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 4448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8202, 35} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8202, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p6, 15480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8202, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p61, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8203, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_pids($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8204, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8248, 48} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8248, 12} true;
  assume {:verifier.code 0} true;
  call $i96 := ttusb_dec_send_command($p6, $sub.i8(0, 128), 1, $p95, $0.ref, $0.ref);
  // WARNING: %140 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %7, i8 zeroext -128, i32 1, i8* %139, i32* null, i8* null), !dbg !8760, !verifier.code !8603
  call {:cexpr "result"} boogie_si_record_i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8249, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $ne.i32($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8249, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb67, $bb68;
$bb50:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8207, 5} true;
  assume {:verifier.code 0} true;
  call $i64 := printk.ref(.str.59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8208, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8211, 29} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8211, 29} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i16($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8211, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p6, 2088);
  $p68 := $add.ref($p6, 2088);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8211, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p68, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8212, 35} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 4448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8212, 35} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8212, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p6, 15472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8212, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p71, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8213, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_pids($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8214, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb53:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8218, 5} true;
  assume {:verifier.code 0} true;
  call $i78 := printk.ref(.str.60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8219, 3} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8222, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $sub.i32(0, 38);
  goto $bb56;
$bb56:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8258, 1} true;
  assume {:verifier.code 0} true;
  $r := $i79;
  $exn := false;
  return;
$bb57:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8225, 5} true;
  assume {:verifier.code 0} true;
  call $i82 := printk.ref(.str.61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8226, 3} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8229, 29} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8229, 29} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i16($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8229, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p6, 2088);
  $p86 := $add.ref($add.ref($p6, 2088), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8229, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p86, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8230, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_set_pids($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8231, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb60:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8234, 5} true;
  assume {:verifier.code 0} true;
  call $i89 := printk.ref(.str.62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8235, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8238, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $sub.i32(0, 38);
  goto $bb56;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8240, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8240, 13} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8240, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8241, 69} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 4460);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8241, 69} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8241, 5} true;
  assume {:verifier.code 0} true;
  call $i94 := printk.ref.i32(.str.63, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8242, 3} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8245, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $sub.i32(0, 22);
  goto $bb56;
$bb67:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8250, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $i96;
  goto $bb56;
$bb68:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8254, 32} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p6, 8752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8254, 32} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8254, 49} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i32($i99, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8254, 8} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p6, 8752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8254, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8255, 9} true;
  assume {:verifier.code 0} true;
  call $i102 := ttusb_dec_start_iso_xfer($p6);
  // WARNING: %149 = call i32 @ttusb_dec_start_iso_xfer(%struct.ttusb_dec* %7), !dbg !8770, !verifier.code !8603
  call {:cexpr "tmp"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8256, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i102;
  goto $bb56;
}
const ttusb_dec_start_sec_feed: ref;
axiom (ttusb_dec_start_sec_feed == $sub.ref(0, 230449));
procedure  ttusb_dec_start_sec_feed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $p43: ref;
  var $i44: i16;
  var $i45: i32;
  var $i46: i16;
  var $i47: i16;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $i82: i1;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $i87: i64;
  var $i88: i1;
  var $p90: ref;
  var $i91: i8;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i32;
  var $p107: ref;
  var $i108: i32;
  var $i89: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(29, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(60, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8282, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 4384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8282, 42} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8282, 50} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8282, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8282, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8283, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8283, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8284, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8284, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8285, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8285, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8286, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8286, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8287, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8287, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8288, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8288, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8289, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8289, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8290, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8290, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8291, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8291, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8292, 3} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8292, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8293, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8293, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8294, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8294, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8295, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8295, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8296, 3} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8296, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8297, 3} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8297, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8298, 3} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8298, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8299, 3} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8299, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8300, 3} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8300, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p28, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8301, 3} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8301, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8302, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8302, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8303, 3} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8303, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8304, 3} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8304, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8305, 3} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8305, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8306, 3} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8306, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8307, 3} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8307, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8308, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8308, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8309, 3} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8309, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8310, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8310, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8311, 3} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8311, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8312, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8313, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8313, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8314, 5} true;
  assume {:verifier.code 0} true;
  call $i42 := printk.ref.ref(.str, .str.67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8315, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8318, 37} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 4408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8318, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i16($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8318, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i16.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8318, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i16($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8318, 9} true;
  assume {:verifier.code 0} true;
  call $i47 := __fswab16($i46);
  // WARNING: %51 = call zeroext i16 @__fswab16(i16 zeroext %50), !dbg !8695, !verifier.code !8603
  call {:cexpr "tmp"} boogie_si_record_i16($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8319, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i47);
  // WARNING: store i16 %51, i16* %3, align 2, !dbg !8698, !verifier.code !8603
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8321, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8322, 22} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8322, 38} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8322, 13} true;
  assume {:verifier.code 0} true;
  call $p51 := __memcpy($p49, $p50, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8323, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i48 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8324, 30} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8324, 46} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8324, 13} true;
  assume {:verifier.code 0} true;
  call $i54 := __builtinx_memcpy.ref.ref.i64($p52, $p53, 2);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8327, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $ugt.i64(1, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8327, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8328, 26} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8328, 41} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8328, 17} true;
  assume {:verifier.code 0} true;
  call $p58 := __memcpy($p57, $p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8329, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i55 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8330, 34} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8330, 49} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8330, 17} true;
  assume {:verifier.code 0} true;
  call $i61 := __builtinx_memcpy.ref.ref.i64($p60, $p5, 1);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8333, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $ugt.i64(1, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8333, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 26} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 41} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 79} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 4448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 79} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 88} true;
  assume {:verifier.code 0} true;
  $p67 := $p66;
  $p68 := $p66;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 47} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8334, 17} true;
  assume {:verifier.code 0} true;
  call $p70 := __memcpy($p64, $p69, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8336, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i62 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 34} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 49} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 87} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 4448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 87} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 96} true;
  assume {:verifier.code 0} true;
  $p75 := $p74;
  $p76 := $p74;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 55} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8337, 17} true;
  assume {:verifier.code 0} true;
  call $i78 := __builtinx_memcpy.ref.ref.i64($p72, $p77, 1);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8340, 48} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8340, 82} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8340, 12} true;
  assume {:verifier.code 0} true;
  call $i81 := ttusb_dec_send_command($p10, 96, 29, $p79, $p4, $p80);
  // WARNING: %94 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %11, i8 zeroext 96, i32 29, i8* %92, i32* %5, i8* %93), !dbg !8755, !verifier.code !8603
  call {:cexpr "result"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8341, 14} true;
  assume {:verifier.code 0} true;
  $i82 := $eq.i32($i81, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8341, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8342, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8342, 18} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i32($i83, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8342, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i82 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8365, 5} true;
  assume {:verifier.code 0} true;
  $i89 := $i81;
  goto $bb19;
$bb15:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8343, 17} true;
  assume {:verifier.code 0} true;
  call $p85 := kmalloc(32, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8344, 15} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8345, 11} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8345, 33} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i64($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8345, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb17:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8346, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $sub.i32(0, 12);
  goto $bb19;
$bb18:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8368, 1} true;
  assume {:verifier.code 0} true;
  $r := $i89;
  $exn := false;
  return;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8350, 26} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8350, 26} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i8($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8350, 14} true;
  assume {:verifier.code 0} true;
  $p92 := $p86;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8350, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p92, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8351, 35} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0, 4448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8351, 35} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8351, 14} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p86, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8351, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p95, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8352, 39} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p10, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8352, 17} true;
  assume {:verifier.code 0} true;
  call $p97 := spinlock_check($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8353, 15} true;
  assume {:verifier.code 0} true;
  call $i98 := _raw_spin_lock_irqsave($p97);
  // WARNING: %115 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %114), !dbg !8790, !verifier.code !8603
  call {:cexpr "flags"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8354, 30} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p86, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8354, 55} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p10, 15488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8354, 7} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p99, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8355, 37} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p10, 15504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8355, 7} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p101, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8356, 26} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8356, 19} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 4392);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8356, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p103, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8357, 39} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p10, 8756);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8357, 39} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8357, 59} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8357, 12} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p10, 8756);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8357, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p107, $i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8358, 17} true;
  assume {:verifier.code 0} true;
  call $i108 := ttusb_dec_start_iso_xfer($p10);
  // WARNING: %125 = call i32 @ttusb_dec_start_iso_xfer(%struct.ttusb_dec* %11), !dbg !8805, !verifier.code !8603
  call {:cexpr "tmp___2"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8359, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $i108;
  goto $bb19;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8363, 5} true;
  assume {:verifier.code 0} true;
  $i89 := $sub.i32(0, 11);
  goto $bb19;
}
const list_add_tail: ref;
axiom (list_add_tail == $sub.ref(0, 231481));
procedure  list_add_tail($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6654, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6654, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6654, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p3, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_start_iso_xfer: ref;
axiom (ttusb_dec_start_iso_xfer == $sub.ref(0, 232513));
procedure  ttusb_dec_start_iso_xfer($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i26: i32;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i25: i32;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $i14: i32;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8084, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8084, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8084, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8085, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8086, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8089, 48} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8089, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := mutex_lock_interruptible_nested($p4, 0);
  // WARNING: %9 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %8, i32 0), !dbg !8618, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8090, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8090, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8091, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 11);
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8137, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8095, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8095, 12} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8095, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8095, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8096, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_setup_urbs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8097, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8736);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8097, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8098, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 15340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8098, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8099, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 8748);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8099, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, 0);
  // WARNING: store i16 0, i16* %20, align 4, !dbg !8637, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8124, 9} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb10;
$bb9:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8125, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8103, 35} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8103, 40} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 2376);
  $p17 := $add.ref($add.ref($p0, 2376), $mul.ref($i15, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8103, 35} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8103, 14} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv_usb_submit_urb_4($p18, 32);
  // WARNING: %26 = call i32 @ldv_usb_submit_urb_4(%struct.urb* %25, i32 32), !dbg !8643, !verifier.code !8608
  call {:cexpr "result"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8104, 16} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8104, 9} true;
  assume {:verifier.code 0} true;
  $i21, $i22 := $i14, $i19;
  assume {:branchcond $i20} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8105, 7} true;
  assume {:verifier.code 0} true;
  call $i23 := printk.ref.ref.i32.i32(.str.66, .str.65, $i21, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb14:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $i21;
  goto $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8113, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8109, 35} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8109, 20} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8109, 25} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 2376);
  $p29 := $add.ref($add.ref($p0, 2376), $mul.ref($i27, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8109, 20} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8109, 7} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8110, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i25, 1);
  // WARNING: %37 = sub nsw i32 %.013, 1, !dbg !8658, !verifier.code !8608
  call {:cexpr "i"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 13} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $i31;
  assume {:branchcond $i32} true;
  goto $bb19, $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb17;
$bb20:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8112, 11} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8117, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8117, 7} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8118, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i22;
  goto $bb6;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8122, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i14, 1);
  // WARNING: %45 = add nsw i32 %.14, 1, !dbg !8664, !verifier.code !8608
  call {:cexpr "i"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8124, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $sle.i32($i34, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8124, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $i34;
  assume {:branchcond $i35} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8124, 9} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb10;
$bb24:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8130, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8133, 32} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8133, 32} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8133, 49} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i37, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8133, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8133, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8134, 23} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 2416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8134, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8135, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb6;
}
const ttusb_dec_setup_urbs: ref;
axiom (ttusb_dec_setup_urbs == $sub.ref(0, 233545));
procedure  ttusb_dec_setup_urbs($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $i145: i32;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ttusb_dec* %0, i64 0, metadata !11602, metadata !8604), !dbg !11603, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7956, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7956, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7956, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7957, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7958, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7991, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7992, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2376);
  $p5 := $add.ref($p0, 2376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p6, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 18} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p6, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p6, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, ttusb_dec_process_urb);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 2148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 8} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p6, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p6, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p6, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p6, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p6, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 3584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p6, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, $p21);
  // WARNING: store i8* %26, i8** %27, align 8, !dbg !8649, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 3584, i64 0, metadata !11604, metadata !8604), !dbg !11605, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7984, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 192);
  $p24 := $add.ref($p6, 192);
  $p25 := $add.ref($p6, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 192);
  $p27 := $add.ref($p6, 192);
  $p28 := $add.ref($add.ref($p6, 192), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, 896);
  // WARNING: store i32 896, i32* %34, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p6, 192);
  $p30 := $add.ref($add.ref($p6, 192), 16);
  $p31 := $add.ref($add.ref($p6, 192), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p6, 192);
  $p33 := $add.ref($add.ref($p6, 192), 16);
  $p34 := $add.ref($add.ref($add.ref($p6, 192), 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, 896);
  // WARNING: store i32 896, i32* %45, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7992, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 14} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 2376);
  $p48 := $add.ref($add.ref($p0, 2376), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p49, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p52, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 18} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 8} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p49, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p49, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p55, ttusb_dec_process_urb);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 2148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p49, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p49, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 8} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p49, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p49, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 8} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p49, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p62, 3584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 42} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 3584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 8} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p49, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p66, $p65);
  // WARNING: store i8* %79, i8** %80, align 8, !dbg !8649, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 3584, i64 0, metadata !11604, metadata !8604), !dbg !11605, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7984, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7997, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p6, 192);
  $p36 := $add.ref($add.ref($p6, 192), 32);
  $p37 := $add.ref($add.ref($p6, 192), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 1792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p6, 192);
  $p39 := $add.ref($add.ref($p6, 192), 32);
  $p40 := $add.ref($add.ref($add.ref($p6, 192), 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, 896);
  // WARNING: store i32 896, i32* %52, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p6, 192);
  $p42 := $add.ref($add.ref($p6, 192), 48);
  $p43 := $add.ref($add.ref($p6, 192), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 2688);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p6, 192);
  $p45 := $add.ref($add.ref($p6, 192), 48);
  $p46 := $add.ref($add.ref($add.ref($p6, 192), 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, 896);
  // WARNING: store i32 896, i32* %59, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:verifier.code 0} true;
  goto $bb9;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p49, 192);
  $p68 := $add.ref($p49, 192);
  $p69 := $add.ref($p49, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p49, 192);
  $p71 := $add.ref($p49, 192);
  $p72 := $add.ref($add.ref($p49, 192), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, 896);
  // WARNING: store i32 896, i32* %88, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p49, 192);
  $p74 := $add.ref($add.ref($p49, 192), 16);
  $p75 := $add.ref($add.ref($p49, 192), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p49, 192);
  $p77 := $add.ref($add.ref($p49, 192), 16);
  $p78 := $add.ref($add.ref($add.ref($p49, 192), 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, 896);
  // WARNING: store i32 896, i32* %95, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p49, 192);
  $p80 := $add.ref($add.ref($p49, 192), 32);
  $p81 := $add.ref($add.ref($p49, 192), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, 1792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p49, 192);
  $p83 := $add.ref($add.ref($p49, 192), 32);
  $p84 := $add.ref($add.ref($add.ref($p49, 192), 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, 896);
  // WARNING: store i32 896, i32* %102, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p49, 192);
  $p86 := $add.ref($add.ref($p49, 192), 48);
  $p87 := $add.ref($add.ref($p49, 192), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 2688);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p49, 192);
  $p89 := $add.ref($add.ref($p49, 192), 48);
  $p90 := $add.ref($add.ref($add.ref($p49, 192), 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p90, 896);
  // WARNING: store i32 896, i32* %109, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7992, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 14} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 2376);
  $p92 := $add.ref($add.ref($p0, 2376), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 8} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p93, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p96, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 18} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 8} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p93, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p98, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 8} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p93, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p99, ttusb_dec_process_urb);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 2148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 8} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p93, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 8} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p93, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p103, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 8} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p93, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p104, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 8} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p93, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 8} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p93, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p106, 3584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 42} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p108, 7168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 8} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p93, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p110, $p109);
  // WARNING: store i8* %130, i8** %131, align 8, !dbg !8649, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 3584, i64 0, metadata !11604, metadata !8604), !dbg !11605, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7984, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p93, 192);
  $p112 := $add.ref($p93, 192);
  $p113 := $add.ref($p93, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p93, 192);
  $p115 := $add.ref($p93, 192);
  $p116 := $add.ref($add.ref($p93, 192), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p116, 896);
  // WARNING: store i32 896, i32* %139, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p93, 192);
  $p118 := $add.ref($add.ref($p93, 192), 16);
  $p119 := $add.ref($add.ref($p93, 192), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p119, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p93, 192);
  $p121 := $add.ref($add.ref($p93, 192), 16);
  $p122 := $add.ref($add.ref($add.ref($p93, 192), 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p122, 896);
  // WARNING: store i32 896, i32* %146, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p93, 192);
  $p124 := $add.ref($add.ref($p93, 192), 32);
  $p125 := $add.ref($add.ref($p93, 192), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p125, 1792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p93, 192);
  $p127 := $add.ref($add.ref($p93, 192), 32);
  $p128 := $add.ref($add.ref($add.ref($p93, 192), 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p128, 896);
  // WARNING: store i32 896, i32* %153, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p93, 192);
  $p130 := $add.ref($add.ref($p93, 192), 48);
  $p131 := $add.ref($add.ref($p93, 192), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p131, 2688);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p93, 192);
  $p133 := $add.ref($add.ref($p93, 192), 48);
  $p134 := $add.ref($add.ref($add.ref($p93, 192), 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p134, 896);
  // WARNING: store i32 896, i32* %160, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7992, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 14} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 2376);
  $p136 := $add.ref($add.ref($p0, 2376), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7965, 9} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 19} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 8} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p137, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7966, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p140, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 18} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 8} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p137, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7967, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p142, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 8} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p137, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7968, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p143, ttusb_dec_process_urb);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 2148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 20} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i32($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 8} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p137, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7969, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p146, $i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 8} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p137, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7970, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p147, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 8} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p137, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7971, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p148, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 8} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p137, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7972, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 8} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p137, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7973, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p150, 3584);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 31} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 42} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p152, 10752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 8} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p137, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7974, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p154, $p153);
  // WARNING: store i8* %181, i8** %182, align 8, !dbg !8649, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 3584, i64 0, metadata !11604, metadata !8604), !dbg !11605, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7984, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p137, 192);
  $p156 := $add.ref($p137, 192);
  $p157 := $add.ref($p137, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p157, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p137, 192);
  $p159 := $add.ref($p137, 192);
  $p160 := $add.ref($add.ref($p137, 192), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p160, 896);
  // WARNING: store i32 896, i32* %190, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p137, 192);
  $p162 := $add.ref($add.ref($p137, 192), 16);
  $p163 := $add.ref($add.ref($p137, 192), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p163, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p137, 192);
  $p165 := $add.ref($add.ref($p137, 192), 16);
  $p166 := $add.ref($add.ref($add.ref($p137, 192), 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p166, 896);
  // WARNING: store i32 896, i32* %197, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p137, 192);
  $p168 := $add.ref($add.ref($p137, 192), 32);
  $p169 := $add.ref($add.ref($p137, 192), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p169, 1792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p137, 192);
  $p171 := $add.ref($add.ref($p137, 192), 32);
  $p172 := $add.ref($add.ref($add.ref($p137, 192), 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p172, 896);
  // WARNING: store i32 896, i32* %204, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7985, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 8} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p137, 192);
  $p174 := $add.ref($add.ref($p137, 192), 48);
  $p175 := $add.ref($add.ref($p137, 192), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7979, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p175, 2688);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 8} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p137, 192);
  $p177 := $add.ref($add.ref($p137, 192), 48);
  $p178 := $add.ref($add.ref($add.ref($p137, 192), 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7980, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p178, 896);
  // WARNING: store i32 896, i32* %211, align 4, !dbg !8656, !verifier.code !8608
  // WARNING: call void @llvm.dbg.value(metadata i32 896, i64 0, metadata !11617, metadata !8604), !dbg !11618, !verifier.code !8606
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb11;
}
const ldv_usb_submit_urb_4: ref;
axiom (ldv_usb_submit_urb_4 == $sub.ref(0, 234577));
procedure  ldv_usb_submit_urb_4($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !11661, metadata !8604), !dbg !11662, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9528, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_submit_urb($p0);
  // WARNING: %3 = call i32 @ldv_submit_urb(%struct.urb* %0), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9529, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ttusb_dec_process_urb: ref;
axiom (ttusb_dec_process_urb == $sub.ref(0, 235609));
procedure  ttusb_dec_process_urb($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $i7: i32;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7898, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7898, 34} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7898, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7899, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7899, 12} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7899, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7899, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7922, 9} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7929, 12} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7929, 12} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7929, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7929, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb12, $bb13;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7903, 53} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7903, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7903, 71} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7903, 69} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 20} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 57} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 57} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7904, 36} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p13, $mul.ref($i16, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7905, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p9, $mul.ref($i10, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7905, 23} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  // WARNING: %21 = load i32, i32* %20, align 4, !dbg !8632, !verifier.code !8606
  call {:cexpr "length"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7906, 15} true;
  assume {:verifier.code 0} true;
  call $p20 := kmalloc(920, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7907, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7908, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7908, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7908, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7909, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i19);
  // WARNING: %27 = sext i32 %21 to i64, !dbg !8645, !verifier.code !8606
  call {:cexpr "__len"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7910, 50} true;
  assume {:verifier.code 0} true;
  $p25 := $p21;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7910, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7910, 15} true;
  assume {:verifier.code 0} true;
  call $i27 := __builtinx_memcpy.ref.ref.i64($p26, $p17, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7911, 14} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p21, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7911, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7912, 35} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7912, 13} true;
  assume {:verifier.code 0} true;
  call $p30 := spinlock_check($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7913, 15} true;
  assume {:verifier.code 0} true;
  call $i31 := _raw_spin_lock_irqsave($p30);
  // WARNING: %34 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %33), !dbg !8659, !verifier.code !8606
  call {:cexpr "flags"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7914, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p21, 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7914, 53} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p3, 15344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7914, 7} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p32, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7915, 37} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p3, 15400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7915, 7} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p34, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7916, 31} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p3, 15360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7916, 7} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7917, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7920, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i7, 1);
  // WARNING: %41 = add nsw i32 %.01, 1, !dbg !8670, !verifier.code !8606
  call {:cexpr "i"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7922, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $sle.i32($i36, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7922, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i36;
  assume {:branchcond $i37} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7922, 9} true;
  assume {:verifier.code 0} true;
  assume ($i37 == 1);
  goto $bb3;
$bb9:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7928, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7938, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p3, 2408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7938, 12} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7938, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb18, $bb19;
$bb12:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7930, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7930, 15} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7930, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7931, 67} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7931, 67} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7931, 7} true;
  assume {:verifier.code 0} true;
  call $i45 := printk.ref.ref.i32(.str.25, .str.26, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7932, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb18:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7939, 5} true;
  assume {:verifier.code 0} true;
  call $i49 := ldv_usb_submit_urb_3($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7940, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7943, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tasklet_schedule: ref;
axiom (tasklet_schedule == $sub.ref(0, 236641));
procedure  tasklet_schedule($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6688, 64} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6688, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := test_and_set_bit(0, $p1);
  // WARNING: %3 = call i32 @test_and_set_bit(i64 0, i64* %2), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6689, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6690, 5} true;
  assume {:verifier.code 0} true;
  call __tasklet_schedule($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6691, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6694, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_submit_urb_3: ref;
axiom (ldv_usb_submit_urb_3 == $sub.ref(0, 237673));
procedure  ldv_usb_submit_urb_3($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !11781, metadata !8604), !dbg !11782, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9519, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_submit_urb($p0);
  // WARNING: %3 = call i32 @ldv_submit_urb(%struct.urb* %0), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9520, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const test_and_set_bit: ref;
axiom (test_and_set_bit == $sub.ref(0, 238705));
procedure  test_and_set_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.10(0, $p1, $i0, $p1);
  // WARNING: %3 = call i32 @devirtbounce.10(i32 (i64*, i64, i64*)* asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2,$1\0A\09sbb $0,$0", "=r,=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i64* %1, i64 %0, i64* %1)
  call {:cexpr "oldbit"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6591, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __tasklet_schedule: ref;
axiom (__tasklet_schedule == $sub.ref(0, 239737));
procedure  __tasklet_schedule($p0: ref);
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 240769));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref);
const ttusb_dec_set_pids: ref;
axiom (ttusb_dec_set_pids == $sub.ref(0, 241801));
procedure  ttusb_dec_set_pids($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i16;
  var $i20: i32;
  var $i21: i16;
  var $i22: i16;
  var $p23: ref;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i16;
  var $i28: i16;
  var $p29: ref;
  var $p30: ref;
  var $i31: i16;
  var $i32: i32;
  var $i33: i16;
  var $i34: i16;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i16;
  var $i69: i32;
  var $i70: i16;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i16;
  var $i76: i32;
  var $i77: i16;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7412, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7412, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7413, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7413, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7414, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7414, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7415, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7415, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7416, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7416, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7417, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7417, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7418, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7418, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7419, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7419, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7420, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7420, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7421, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7421, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7422, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7422, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7423, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7423, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7424, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 2088);
  $p18 := $add.ref($add.ref($p0, 2088), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7424, 25} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i16($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7424, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7424, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i16($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7424, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := __fswab16($i21);
  // WARNING: %23 = call zeroext i16 @__fswab16(i16 zeroext %22), !dbg !8646, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i16($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7425, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7426, 34} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 2088);
  $p24 := $add.ref($p0, 2088);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7426, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7426, 23} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7426, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i32.i16($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7426, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := __fswab16($i27);
  // WARNING: %29 = call zeroext i16 @__fswab16(i16 zeroext %28), !dbg !8653, !verifier.code !8605
  call {:cexpr "tmp___0"} boogie_si_record_i16($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7427, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7428, 34} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 2088);
  $p30 := $add.ref($add.ref($p0, 2088), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7428, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i16($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7428, 23} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i16.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7428, 23} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i16($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7428, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := __fswab16($i33);
  // WARNING: %35 = call zeroext i16 @__fswab16(i16 zeroext %34), !dbg !8660, !verifier.code !8605
  call {:cexpr "tmp___1"} boogie_si_record_i16($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7429, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p4, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7430, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7430, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7430, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7431, 5} true;
  assume {:verifier.code 0} true;
  call $i37 := printk.ref.ref(.str, .str.64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7432, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7436, 13} true;
  assume {:verifier.code 0} true;
  $i38 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7436, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7437, 22} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7437, 37} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7437, 13} true;
  assume {:verifier.code 0} true;
  call $p41 := __memcpy($p39, $p40, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7438, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7439, 30} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7439, 45} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7439, 13} true;
  assume {:verifier.code 0} true;
  call $i44 := __builtinx_memcpy.ref.ref.i64($p42, $p43, 2);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7442, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7442, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7443, 26} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7443, 40} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7443, 46} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7443, 17} true;
  assume {:verifier.code 0} true;
  call $p49 := __memcpy($p47, $p48, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7444, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7445, 34} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7445, 48} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7445, 54} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7445, 17} true;
  assume {:verifier.code 0} true;
  call $i53 := __builtinx_memcpy.ref.ref.i64($p51, $p52, 2);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7448, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7448, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7449, 26} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7449, 40} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7449, 46} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7449, 17} true;
  assume {:verifier.code 0} true;
  call $p58 := __memcpy($p56, $p57, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7450, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i54 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7451, 34} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7451, 48} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7451, 54} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7451, 17} true;
  assume {:verifier.code 0} true;
  call $i62 := __builtinx_memcpy.ref.ref.i64($p60, $p61, 2);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7453, 39} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7453, 3} true;
  assume {:verifier.code 0} true;
  call $i64 := ttusb_dec_send_command($p0, 80, 12, $p63, $0.ref, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 33} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 8760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 54} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 2088);
  $p67 := $add.ref($p0, 2088);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 49} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i16($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 43} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i16.i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 43} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i32.i16($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7455, 26} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7454, 3} true;
  assume {:verifier.code 0} true;
  call dvb_filter_pes2ts_init($p65, $i70, ttusb_dec_audio_pes2ts_cb, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 33} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 8968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 54} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 2088);
  $p74 := $add.ref($add.ref($p0, 2088), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 49} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i16($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 43} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i16.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 43} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7457, 26} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7456, 3} true;
  assume {:verifier.code 0} true;
  call dvb_filter_pes2ts_init($p72, $i77, ttusb_dec_video_pes2ts_cb, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7458, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 15336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7458, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7459, 8} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 15340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7459, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7460, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_audio_pes2ts_cb: ref;
axiom (ttusb_dec_audio_pes2ts_cb == $sub.ref(0, 242833));
procedure  ttusb_dec_audio_pes2ts_cb($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7376, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 15472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 4376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 38} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7377, 38} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 57} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 15472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 57} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 72} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 79} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7378, 84} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  call $i16 := devirtbounce.8($p9, $p1, 188, $0.ref, 0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7380, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const dvb_filter_pes2ts_init: ref;
axiom (dvb_filter_pes2ts_init == $sub.ref(0, 243865));
procedure  dvb_filter_pes2ts_init($p0: ref, $i1: i16, $p2: ref, $p3: ref);
const ttusb_dec_video_pes2ts_cb: ref;
axiom (ttusb_dec_video_pes2ts_cb == $sub.ref(0, 244897));
procedure  ttusb_dec_video_pes2ts_cb($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7388, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 15480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 4376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 38} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7389, 38} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 57} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 15480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 57} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 72} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 79} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7390, 84} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  call $i16 := devirtbounce.8($p9, $p1, 188, $0.ref, 0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7392, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ttusb_dec_get_stb_state: ref;
axiom (ttusb_dec_get_stb_state == $sub.ref(0, 245929));
procedure  ttusb_dec_get_stb_state($p0: ref, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $i17: i1;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $i28: i1;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i64;
  var $i41: i1;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i13: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(60, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7315, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7315, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7315, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7316, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := printk.ref.ref(.str, .str.31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7317, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7320, 76} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7320, 12} true;
  assume {:verifier.code 0} true;
  call $i11 := ttusb_dec_send_command($p0, 8, 0, $0.ref, $p5, $p10);
  // WARNING: %15 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %0, i8 zeroext 8, i32 0, i8* null, i32* %6, i8* %14), !dbg !8633, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7321, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7322, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i11;
  goto $bb6;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7370, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7326, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7326, 16} true;
  assume {:verifier.code 0} true;
  $i15 := $sgt.i32($i14, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7326, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7327, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7327, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7327, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7367, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 1);
  goto $bb6;
$bb10:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7329, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $ugt.i64(4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7329, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7330, 26} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7330, 43} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7330, 17} true;
  assume {:verifier.code 0} true;
  call $p21 := __memcpy($p19, $p20, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7331, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7332, 34} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7332, 51} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7332, 17} true;
  assume {:verifier.code 0} true;
  call $i24 := __builtinx_memcpy.ref.ref.i64($p22, $p23, 4);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7334, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7334, 17} true;
  assume {:verifier.code 0} true;
  call $i26 := __fswab32($i25);
  // WARNING: %37 = call i32 @__fswab32(i32 %36), !dbg !8668, !verifier.code !8605
  call {:cexpr "tmp___0"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7335, 13} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p1, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7336, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7339, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7339, 31} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7339, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7341, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $ugt.i64(4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7341, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb18:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7342, 30} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7342, 47} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7342, 69} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7342, 21} true;
  assume {:verifier.code 0} true;
  call $p33 := __memcpy($p30, $p32, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7343, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7344, 38} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7344, 55} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7344, 77} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7344, 21} true;
  assume {:verifier.code 0} true;
  call $i37 := __builtinx_memcpy.ref.ref.i64($p34, $p36, 4);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7347, 27} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7347, 17} true;
  assume {:verifier.code 0} true;
  call $i39 := __fswab32($i38);
  // WARNING: %56 = call i32 @__fswab32(i32 %55), !dbg !8697, !verifier.code !8605
  call {:cexpr "tmp___1"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7348, 14} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i32($M.6, $p2, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7349, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7352, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7352, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7352, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7354, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $ugt.i64(4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7354, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7355, 30} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7355, 47} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7355, 69} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7355, 21} true;
  assume {:verifier.code 0} true;
  call $p46 := __memcpy($p43, $p45, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7356, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i42 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7357, 38} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7357, 55} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7357, 77} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7357, 21} true;
  assume {:verifier.code 0} true;
  call $i50 := __builtinx_memcpy.ref.ref.i64($p47, $p49, 4);
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7360, 27} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7360, 17} true;
  assume {:verifier.code 0} true;
  call $i52 := __fswab32($i51);
  // WARNING: %75 = call i32 @__fswab32(i32 %74), !dbg !8726, !verifier.code !8605
  call {:cexpr "tmp___2"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7361, 16} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p3, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7362, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7365, 5} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb6;
}
const ttusb_dec_boot_dsp: ref;
axiom (ttusb_dec_boot_dsp == $sub.ref(0, 246961));
procedure  ttusb_dec_boot_dsp($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $i41: i32;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $i55: i32;
  var $p56: ref;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i16;
  var $i77: i32;
  var $i78: i32;
  var $i79: i16;
  var $i80: i32;
  var $i81: i16;
  var $i82: i16;
  var $i83: i1;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $p92: ref;
  var $i93: i32;
  var $i94: i1;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $i98: i1;
  var $p99: ref;
  var $i100: i1;
  var $i104: i32;
  var $i105: i32;
  var $i106: i1;
  var $i107: i32;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i8;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i8;
  var $i119: i64;
  var $i120: i64;
  var $p121: ref;
  var $i122: i64;
  var $i123: i64;
  var $i124: i64;
  var $p125: ref;
  var $i126: i64;
  var $p127: ref;
  var $i128: i32;
  var $i129: i32;
  var $i130: i1;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i32;
  var $i137: i1;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: i32;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i136: i32;
  var $i145: i32;
  var $i146: i64;
  var $i147: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i32;
  var $p148: ref;
  var $i149: i32;
  var $p150: ref;
  var $i33: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(10, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(21, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8717, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8717, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8718, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8718, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8719, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8719, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8720, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8720, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8721, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8721, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8722, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8722, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8723, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8723, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8724, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8724, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8725, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8725, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8726, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8726, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8727, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8727, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, 97);
  // WARNING: call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !12147, metadata !8604), !dbg !12148, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !12149, metadata !8604), !dbg !12150, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8731, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8732, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8732, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8732, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8733, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref.ref(.str, .str.40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8734, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 63} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 63} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 86} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 86} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 93} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8737, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := request_firmware($p8, $p24, $p27);
  // WARNING: %32 = call i32 @request_firmware(%struct.firmware** %9, i8* %28, %struct.device* %31), !dbg !8670, !verifier.code !8605
  call {:cexpr "tmp___0"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8738, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8738, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8739, 77} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8739, 77} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8739, 5} true;
  assume {:verifier.code 0} true;
  call $i32 := printk.ref.ref.ref(.str.41, .str.40, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8740, 5} true;
  assume {:verifier.code 0} true;
  $i33 := 1;
  goto $bb6;
$bb5:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8861, 1} true;
  assume {:verifier.code 0} true;
  $r := $i33;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8744, 14} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8744, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8744, 24} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8745, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8745, 29} true;
  assume {:verifier.code 0} true;
  $p38 := $p37;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8745, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.0, $p38);
  // WARNING: %45 = load i64, i64* %44, align 8, !dbg !8683, !verifier.code !8605
  call {:cexpr "firmware_size"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8746, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $ule.i64($i39, 59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8747, 5} true;
  assume {:verifier.code 0} true;
  call $i41 := printk.ref.ref.i64(.str.42, .str.40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8749, 22} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8749, 5} true;
  assume {:verifier.code 0} true;
  call release_firmware($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8750, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32(0, 1);
  goto $bb6;
$bb9:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8754, 13} true;
  assume {:verifier.code 0} true;
  call $i43 := crc32_le($sub.i32(0, 1), $p36, 56);
  // WARNING: %52 = call i32 @crc32_le(i32 -1, i8* %42, i64 56), !dbg !8692, !verifier.code !8605
  call {:cexpr "tmp___1"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8755, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $xor.i32($i43, $sub.i32(0, 1));
  // WARNING: %53 = xor i32 %52, -1, !dbg !8695, !verifier.code !8605
  call {:cexpr "crc32_csum"} boogie_si_record_i32($i44);
  // WARNING: call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !12190, metadata !8604), !dbg !12191, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8757, 13} true;
  assume {:verifier.code 0} true;
  $i45 := $ugt.i64(4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8757, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8758, 22} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8758, 64} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p36, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8758, 13} true;
  assume {:verifier.code 0} true;
  call $p48 := __memcpy($p46, $p47, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8759, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8760, 30} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8760, 72} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p36, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8760, 13} true;
  assume {:verifier.code 0} true;
  call $i51 := __builtinx_memcpy.ref.ref.i64($p49, $p50, 4);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8762, 23} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8762, 13} true;
  assume {:verifier.code 0} true;
  call $i53 := __fswab32($i52);
  // WARNING: %65 = call i32 @__fswab32(i32 %64), !dbg !8715, !verifier.code !8605
  call {:cexpr "tmp___2"} boogie_si_record_i32($i53);
  // WARNING: call void @llvm.dbg.value(metadata i32 %65, i64 0, metadata !12210, metadata !8604), !dbg !12211, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8764, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i44, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8764, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8765, 5} true;
  assume {:verifier.code 0} true;
  call $i55 := printk.ref.ref.i32.i32(.str.43, .str.40, $i44, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8767, 22} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8767, 5} true;
  assume {:verifier.code 0} true;
  call release_firmware($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8768, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32(0, 1);
  goto $bb6;
$bb15:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8773, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $ugt.i64(20, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8773, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8774, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8774, 73} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p36, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8774, 17} true;
  assume {:verifier.code 0} true;
  call $p60 := __memcpy($p58, $p59, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8775, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8776, 34} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8776, 81} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p36, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8776, 17} true;
  assume {:verifier.code 0} true;
  call $i63 := __builtinx_memcpy.ref.ref.i64($p61, $p62, 20);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8779, 3} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8779, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8780, 53} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8780, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := printk.ref.ref(.str.44, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8781, 23} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i64.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8781, 13} true;
  assume {:verifier.code 0} true;
  call $i68 := __fswab32($i67);
  // WARNING: %86 = call i32 @__fswab32(i32 %85), !dbg !8749, !verifier.code !8605
  call {:cexpr "tmp___3"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8782, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i68);
  // WARNING: store i32 %86, i32* %7, align 4, !dbg !8752, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8784, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $ugt.i64(4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8784, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8785, 26} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8785, 42} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8785, 17} true;
  assume {:verifier.code 0} true;
  call $p72 := __memcpy($p70, $p71, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8786, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i69 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8787, 34} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8787, 50} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8787, 17} true;
  assume {:verifier.code 0} true;
  call $i75 := __builtinx_memcpy.ref.ref.i64($p73, $p74, 4);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8790, 13} true;
  assume {:verifier.code 0} true;
  call $i76 := crc16($sub.i16(0, 1), $p36, $i39);
  // WARNING: %97 = call zeroext i16 @crc16(i16 zeroext -1, i8* %42, i64 %45), !dbg !8769, !verifier.code !8605
  call {:cexpr "tmp___4"} boogie_si_record_i16($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8791, 22} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i16.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8791, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $xor.i32($i77, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8791, 19} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i32.i16($i78);
  // WARNING: %100 = trunc i32 %99 to i16, !dbg !8773, !verifier.code !8605
  call {:cexpr "firmware_csum"} boogie_si_record_i16($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8792, 23} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i16.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8792, 23} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8792, 13} true;
  assume {:verifier.code 0} true;
  call $i82 := __fswab16($i81);
  // WARNING: %103 = call zeroext i16 @__fswab16(i16 zeroext %102), !dbg !8775, !verifier.code !8605
  call {:cexpr "tmp___5"} boogie_si_record_i16($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8793, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i82);
  // WARNING: store i16 %103, i16* %6, align 2, !dbg !8778, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8795, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $ugt.i64(2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8795, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8796, 26} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8796, 41} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p84, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8796, 47} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8796, 17} true;
  assume {:verifier.code 0} true;
  call $p87 := __memcpy($p85, $p86, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8798, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i83 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8799, 34} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8799, 49} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8799, 55} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8799, 17} true;
  assume {:verifier.code 0} true;
  call $i91 := __builtinx_memcpy.ref.ref.i64($p89, $p90, 2);
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8802, 48} true;
  assume {:verifier.code 0} true;
  $p92 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8802, 12} true;
  assume {:verifier.code 0} true;
  call $i93 := ttusb_dec_send_command($p0, 65, 10, $p92, $0.ref, $0.ref);
  // WARNING: %117 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %0, i8 zeroext 65, i32 10, i8* %116, i32* null, i8* null), !dbg !8798, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8803, 14} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.i32($i93, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8803, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8804, 22} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8804, 5} true;
  assume {:verifier.code 0} true;
  call release_firmware($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8805, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $i93;
  goto $bb6;
$bb27:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !12302, metadata !8604), !dbg !12303, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8811, 13} true;
  assume {:verifier.code 0} true;
  call $p96 := kmalloc(4096, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8813, 7} true;
  assume {:verifier.code 0} true;
  $i97 := $p2i.ref.i64($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8813, 25} true;
  assume {:verifier.code 0} true;
  $i98 := $eq.i64($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8813, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8814, 22} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8814, 5} true;
  assume {:verifier.code 0} true;
  call release_firmware($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8815, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32(0, 12);
  goto $bb6;
$bb30:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 18} true;
  assume {:verifier.code 0} true;
  $i100 := $ult.i64(0, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  $i101, $i102, $i103 := 0, 0, 0;
  goto $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i100 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb35:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8852, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8822, 17} true;
  assume {:verifier.code 0} true;
  $i104 := $trunc.i64.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8822, 46} true;
  assume {:verifier.code 0} true;
  $i105 := $sub.i32($i104, $i101);
  // WARNING: %133 = sub i32 %132, %.017, !dbg !8831, !verifier.code !8605
  call {:cexpr "size"} boogie_si_record_i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8823, 12} true;
  assume {:verifier.code 0} true;
  $i106 := $sgt.i32($i105, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8823, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8825, 3} true;
  assume {:verifier.code 0} true;
  $i107 := 60;
  goto $bb39;
$bb38:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  $i107 := $i105;
  goto $bb39;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8828, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8828, 7} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p96, $mul.ref($i108, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8828, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p109, $sub.i8(0, 86));
  // WARNING: store i8 -86, i8* %139, align 1, !dbg !8841, !verifier.code !8605
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8830, 29} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i32($i103, 1);
  // WARNING: %140 = add nsw i32 %.045, 1, !dbg !8844, !verifier.code !8605
  call {:cexpr "trans_count"} boogie_si_record_i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8831, 38} true;
  assume {:verifier.code 0} true;
  $i111 := $trunc.i32.i8($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8831, 10} true;
  assume {:verifier.code 0} true;
  $i112 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8831, 28} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i64($i112, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8831, 7} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p96, $mul.ref($i113, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8831, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p114, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8832, 10} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8832, 28} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64($i115, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8832, 7} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p96, $mul.ref($i116, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8832, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p117, $sub.i8(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8833, 38} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i8($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8833, 10} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8833, 28} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64($i119, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8833, 7} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p96, $mul.ref($i120, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8833, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p121, $i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8834, 15} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i32.i64($i107);
  // WARNING: %152 = sext i32 %.03 to i64, !dbg !8859, !verifier.code !8605
  call {:cexpr "__len___3"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 46} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 64} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i64($i123, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 43} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p96, $mul.ref($i124, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 100} true;
  assume {:verifier.code 0} true;
  $i126 := $sext.i32.i64($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 98} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p36, $mul.ref($i126, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8835, 15} true;
  assume {:verifier.code 0} true;
  call $i128 := __builtinx_memcpy.ref.ref.i64($p125, $p127, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8837, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i102, 64);
  // WARNING: %159 = add nsw i32 %.16, 64, !dbg !8868, !verifier.code !8605
  call {:cexpr "j"} boogie_si_record_i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8838, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sgt.i32($i129, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8838, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i130 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8839, 32} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8839, 32} true;
  assume {:verifier.code 0} true;
  $p132 := $load.ref($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8839, 43} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p0, 2140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8839, 43} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8839, 14} true;
  assume {:verifier.code 0} true;
  call $i135 := usb_bulk_msg($p132, $i134, $p96, 4096, $p1, 100);
  // WARNING: %166 = call i32 @usb_bulk_msg(%struct.usb_device* %163, i32 %165, i8* %123, i32 4096, i32* %2, i32 100), !dbg !8875, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i135);
  // WARNING: call void @llvm.dbg.value(metadata i32 %166, i64 0, metadata !12293, metadata !8604), !dbg !12294, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8842, 3} true;
  assume {:verifier.code 0} true;
  $i136 := 0;
  goto $bb42;
$bb41:
  assume !(($i130 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8843, 12} true;
  assume {:verifier.code 0} true;
  $i137 := $sle.i32($i107, 59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8843, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb43, $bb44;
$bb42:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8849, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i101, 60);
  // WARNING: %180 = add nsw i32 %.017, 60, !dbg !8887, !verifier.code !8605
  call {:cexpr "i"} boogie_si_record_i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  $i146 := $sext.i32.i64($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 18} true;
  assume {:verifier.code 0} true;
  $i147 := $ult.i64($i146, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  $i101, $i102, $i103 := $i145, $i136, $i110;
  assume {:branchcond $i147} true;
  goto $bb46, $bb47;
$bb43:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 32} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 32} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 43} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 2140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 43} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 71} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i32($i129, $sub.i32(0, 60));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 78} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i142, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8844, 14} true;
  assume {:verifier.code 0} true;
  call $i144 := usb_bulk_msg($p139, $i141, $p96, $i143, $p1, 100);
  // WARNING: %176 = call i32 @usb_bulk_msg(%struct.usb_device* %171, i32 %173, i8* %123, i32 %175, i32* %2, i32 100), !dbg !8885, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8846, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  $i136 := $i129;
  goto $bb42;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  assume ($i147 == 1);
  goto $bb35;
$bb47:
  assume !(($i147 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8856, 47} true;
  assume {:verifier.code 0} true;
  $p148 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8856, 12} true;
  assume {:verifier.code 0} true;
  call $i149 := ttusb_dec_send_command($p0, 67, 1, $p148, $0.ref, $0.ref);
  // WARNING: %187 = call i32 @ttusb_dec_send_command(%struct.ttusb_dec* %0, i8 zeroext 67, i32 1, i8* %186, i32* null, i8* null), !dbg !8892, !verifier.code !8605
  call {:cexpr "result"} boogie_si_record_i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8857, 20} true;
  assume {:verifier.code 0} true;
  $p150 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8857, 3} true;
  assume {:verifier.code 0} true;
  call release_firmware($p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8858, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8859, 3} true;
  assume {:verifier.code 0} true;
  $i33 := $i149;
  goto $bb6;
}
const request_firmware: ref;
axiom (request_firmware == $sub.ref(0, 247993));
procedure  request_firmware($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const release_firmware: ref;
axiom (release_firmware == $sub.ref(0, 249025));
procedure  release_firmware($p0: ref);
const crc32_le: ref;
axiom (crc32_le == $sub.ref(0, 250057));
procedure  crc32_le($i0: i32, $p1: ref, $i2: i64)
  returns ($r: i32);
const __fswab32: ref;
axiom (__fswab32 == $sub.ref(0, 251089));
procedure  __fswab32($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6569, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := __arch_swab32($i0);
  // WARNING: %2 = call i32 @__arch_swab32(i32 %0), !dbg !8609, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6570, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const crc16: ref;
axiom (crc16 == $sub.ref(0, 252121));
procedure  crc16($i0: i16, $p1: ref, $i2: i64)
  returns ($r: i16)
{
  var $i3: i64;
  var $i4: i1;
  var $p9: ref;
  var $i10: i8;
  var $i11: i16;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i16;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i8;
  var $i25: i16;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $i31: i16;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i16;
  var $i36: i64;
  var $i37: i1;
  var $i6: i64;
  var $i7: i16;
  var $p8: ref;
  var $i38: i16;
  var $i5: i16;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !12407, metadata !8604), !dbg !12408, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !12409, metadata !8604), !dbg !12410, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7171, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i64($i2, 1);
  // WARNING: %4 = sub i64 %2, 1, !dbg !8615, !verifier.code !8608
  call {:cexpr "len"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i0;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  $i6, $i7, $p8 := $i3, $i0, $p1;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7173, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7164, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 22} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 16} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i16($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 34} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 32} true;
  assume {:verifier.code 0} true;
  $i14 := $xor.i32($i12, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7165, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i16($i14);
  // WARNING: %13 = trunc i32 %12 to i16, !dbg !8625, !verifier.code !8608
  call {:cexpr "crc"} boogie_si_record_i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 30} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i16.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 51} true;
  assume {:verifier.code 0} true;
  $i18 := $ashr.i32($i17, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 60} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i16.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 58} true;
  assume {:verifier.code 0} true;
  $i22 := $xor.i32($i20, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7166, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  // WARNING: %21 = trunc i32 %20 to i16, !dbg !8632, !verifier.code !8608
  call {:cexpr "crc"} boogie_si_record_i16($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7167, 16} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i16.i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7167, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i16($i24);
  // WARNING: %23 = zext i8 %22 to i16, !dbg !8636, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i16($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 46} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 56} true;
  assume {:verifier.code 0} true;
  $i28 := $shl.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 43} true;
  assume {:verifier.code 0} true;
  $i29 := $xor.i32($i26, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 63} true;
  assume {:verifier.code 0} true;
  $i30 := $shl.i32($i29, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 23} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i16($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 16} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i16.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 72} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 70} true;
  assume {:verifier.code 0} true;
  $i34 := $xor.i32($i32, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7168, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i16($i34);
  // WARNING: %33 = trunc i32 %32 to i16, !dbg !8648, !verifier.code !8608
  call {:cexpr "crc"} boogie_si_record_i16($i35);
  // WARNING: call void @llvm.dbg.value(metadata i16 %33, i64 0, metadata !12405, metadata !8604), !dbg !12406, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7171, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $sub.i64($i6, 1);
  // WARNING: %34 = sub i64 %37, 1, !dbg !8615, !verifier.code !8608
  call {:cexpr "len"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  $i6, $i7, $p8, $i38 := $i36, $i35, $p9, $i35;
  assume {:branchcond $i37} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  assume ($i37 == 1);
  goto $bb4;
$bb7:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i38;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7178, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __arch_swab32: ref;
axiom (__arch_swab32 == $sub.ref(0, 253153));
procedure  __arch_swab32($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  call $i1 := devirtbounce.11(0, $i0);
  // WARNING: %2 = call i32 @devirtbounce.11(i32 (i32)* asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}", i32 %0)
  call {:cexpr "val"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6553, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 254185));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref);
const __create_pipe: ref;
axiom (__create_pipe == $sub.ref(0, 255217));
procedure  __create_pipe($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %0, i64 0, metadata !12458, metadata !8604), !dbg !12459, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 39} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i32($i3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 57} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 45} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i4, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6741, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ldv_usb_alloc_urb_8: ref;
axiom (ldv_usb_alloc_urb_8 == $sub.ref(0, 256249));
procedure  ldv_usb_alloc_urb_8($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12471, metadata !8604), !dbg !12472, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9564, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_alloc_urb();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9565, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const usb_alloc_coherent: ref;
axiom (usb_alloc_coherent == $sub.ref(0, 257281));
procedure  usb_alloc_coherent($p0: ref, $i1: i64, $i2: i32, $p3: ref)
  returns ($r: ref);
const ldv_usb_free_urb_9: ref;
axiom (ldv_usb_free_urb_9 == $sub.ref(0, 258313));
procedure  ldv_usb_free_urb_9($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9573, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_urb($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9574, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_handle_irq: ref;
axiom (ttusb_dec_handle_irq == $sub.ref(0, 259345));
procedure  ttusb_dec_handle_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i64;
  var $p47: ref;
  var $i48: i16;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $p59: ref;
  var $i60: i16;
  var $i61: i32;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $i66: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7104, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7104, 34} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7104, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7105, 25} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 2336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7105, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7106, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7106, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i7, $sub.i32(0, 62));
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i7, $sub.i32(0, 104));
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb17, $bb18;
$bb3:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i7, $sub.i32(0, 2));
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i7, $sub.i32(0, 62));
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb14, $bb16;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i7, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i7, $sub.i32(0, 2));
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb11, $bb13;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i7, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7108, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb9:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb11:
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7108, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb13:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb10;
$bb14:
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7113, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7113, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7113, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb25, $bb26;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb10;
$bb17:
  assume ($i14 == 1);
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i7, $sub.i32(0, 108));
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb21, $bb23;
$bb18:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i7, $sub.i32(0, 104));
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7108, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb20:
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb10;
$bb21:
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7108, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb23:
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb10;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 37} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb34, $bb35;
$bb25:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7114, 83} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7114, 83} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7114, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := printk.ref.ref.i32(.str.14, .str.15, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7115, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7118, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7153, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7120, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7120, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7120, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7121, 77} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7121, 77} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7121, 5} true;
  assume {:verifier.code 0} true;
  call $i26 := printk.ref.ref.i32(.str.16, .str.15, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7122, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7125, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7144, 12} true;
  assume {:verifier.code 0} true;
  call $i64 := ldv_usb_submit_urb_2($p0, 32);
  // WARNING: %77 = call i32 @ldv_usb_submit_urb_2(%struct.urb* %0, i32 32), !dbg !8687, !verifier.code !8606
  call {:cexpr "retval"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7145, 14} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7145, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb43, $bb44;
$bb34:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 75} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 66} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 45} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 83} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb37, $bb38;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 42} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb37:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7129, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7129, 15} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7129, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb39, $bb40;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb36;
$bb39:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7130, 74} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7130, 65} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7130, 59} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7130, 7} true;
  assume {:verifier.code 0} true;
  call $i39 := printk.ref.ref.i32(.str.17, .str.15, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7131, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 27} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 79} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 70} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 64} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 86} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i44, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 56} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 56} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref(rc_keys, $mul.ref($i46, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 56} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i16($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7134, 5} true;
  assume {:verifier.code 0} true;
  call input_report_key($p41, $i49, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7136, 21} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p3, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7136, 21} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7136, 5} true;
  assume {:verifier.code 0} true;
  call input_sync($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 27} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p3, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 27} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 79} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 70} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 64} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 86} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i56, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 56} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 56} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref(rc_keys, $mul.ref($i58, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 56} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i16($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 41} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7137, 5} true;
  assume {:verifier.code 0} true;
  call input_report_key($p53, $i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7139, 21} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p3, 15576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7139, 21} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7139, 5} true;
  assume {:verifier.code 0} true;
  call input_sync($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7140, 3} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7128, 86} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb43:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7146, 5} true;
  assume {:verifier.code 0} true;
  call $i66 := printk.ref.ref.i32(.str.18, .str.15, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7148, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7151, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
}
const ldv_usb_fill_int_urb_10: ref;
axiom (ldv_usb_fill_int_urb_10 == $sub.ref(0, 260377));
procedure  ldv_usb_fill_int_urb_10($p0: ref, $p1: ref, $i2: i32, $p3: ref, $i4: i32, $p5: ref, $p6: ref, $i7: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.usb_device* %1, i64 0, metadata !12585, metadata !8604), !dbg !12586, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !12589, metadata !8604), !dbg !12590, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !12595, metadata !8604), !dbg !12596, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9585, 3} true;
  assume {:verifier.code 0} true;
  call ldv_fill_int_urb($p0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9586, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_alloc_iso_urbs: ref;
axiom (ttusb_dec_alloc_iso_urbs == $sub.ref(0, 261409));
procedure  ttusb_dec_alloc_iso_urbs($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $p15: ref;
  var $p16: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $i17: i32;
  var $i14: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8501, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8501, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8501, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8502, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref(.str, .str.19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8503, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8506, 79} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 2368);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8506, 21} true;
  assume {:verifier.code 0} true;
  call $p5 := pci_alloc_consistent($0.ref, 14336, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8506, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8506, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8507, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8507, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8507, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8507, 39} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8508, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8508, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8508, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8509, 7} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref.ref(.str.20, .str.19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8510, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8513, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8539, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8517, 15} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 2360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8517, 15} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8517, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p16, 0, 14336, $zext.i32.i64(1), (0 == 1));
  // WARNING: call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 14336, i32 1, i1 false), !dbg !8636, !verifier.code !8608
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8531, 7} true;
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8532, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8521, 9} true;
  assume {:verifier.code 0} true;
  call $p18 := ldv_usb_alloc_urb_6(4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8522, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8522, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8522, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8523, 5} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_free_iso_urbs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8524, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb9;
$bb14:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8528, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8528, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 2376);
  $p23 := $add.ref($add.ref($p0, 2376), $mul.ref($i21, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8528, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8529, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i17, 1);
  // WARNING: %36 = add nsw i32 %.012, 1, !dbg !8653, !verifier.code !8608
  call {:cexpr "i"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8531, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sle.i32($i24, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8531, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i24;
  assume {:branchcond $i25} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8531, 7} true;
  assume {:verifier.code 0} true;
  assume ($i25 == 1);
  goto $bb11;
$bb17:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8536, 3} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_setup_urbs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 8537, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb9;
}
const pci_alloc_consistent: ref;
axiom (pci_alloc_consistent == $sub.ref(0, 262441));
procedure  pci_alloc_consistent($p0: ref, $i1: i64, $p2: ref)
  returns ($r: ref)
{
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !12660, metadata !8604), !dbg !12661, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 47} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 99} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7022, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := dma_alloc_attrs($p6, $i1, $p2, 32, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7024, 3} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 263473));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const ldv_usb_alloc_urb_6: ref;
axiom (ldv_usb_alloc_urb_6 == $sub.ref(0, 264505));
procedure  ldv_usb_alloc_urb_6($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12681, metadata !8604), !dbg !12682, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9546, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_alloc_urb();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9547, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv_alloc_urb: ref;
axiom (ldv_alloc_urb == $sub.ref(0, 265537));
procedure  ldv_alloc_urb()
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9695, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_undef_ptr();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9696, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9697, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_undef_int();
  // WARNING: %3 = call i32 @ldv_undef_int(), !dbg !8614, !verifier.code !8607
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9698, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9698, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9699, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9699, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9699, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9700, 15} true;
  assume {:verifier.code 0} true;
  $M.3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9701, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9704, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9707, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9707, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const ldv_undef_ptr: ref;
axiom (ldv_undef_ptr == $sub.ref(0, 266569));
procedure  ldv_undef_ptr()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6827, 9} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6828, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const dma_alloc_attrs: ref;
axiom (dma_alloc_attrs == $sub.ref(0, 267601));
procedure  dma_alloc_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !12724, metadata !8604), !dbg !12725, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !12728, metadata !8604), !dbg !12729, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6955, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6957, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i3, $sub.i32(0, 8));
  // WARNING: %7 = and i32 %3, -8, !dbg !8621, !verifier.code !8606
  call {:cexpr "gfp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6958, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6958, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6958, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6960, 3} true;
  assume {:verifier.code 0} true;
  $p9 := x86_dma_fallback_dev;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $p9 := $p0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6963, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := is_device_dma_capable($p9);
  // WARNING: %13 = call i32 @is_device_dma_capable(%struct.device* %.01), !dbg !8628, !verifier.code !8606
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6964, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6964, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6965, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6981, 1} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6969, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6969, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6969, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6969, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6969, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6972, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6976, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := dma_alloc_coherent_gfp_flags($p9, $i6);
  // WARNING: %25 = call i32 @dma_alloc_coherent_gfp_flags(%struct.device* %.01, i32 %7), !dbg !8643, !verifier.code !8606
  call {:cexpr "tmp___1"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6977, 20} true;
  assume {:verifier.code 0} true;
  $p18 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6977, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call $p20 := devirtbounce.12($p19, $p9, $i1, $p2, $i17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6978, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6978, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_alloc_coherent($p9, $i1, $i21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6979, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $p20;
  goto $bb6;
}
const is_device_dma_capable: ref;
axiom (is_device_dma_capable == $sub.ref(0, 268633));
procedure  is_device_dma_capable($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i5: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 74} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 84} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 77} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 94} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:verifier.code 0} true;
  $i5 := $i9;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 74} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6888, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const dma_alloc_coherent_gfp_flags: ref;
axiom (dma_alloc_coherent_gfp_flags == $sub.ref(0, 269665));
procedure  dma_alloc_coherent_gfp_flags($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !12790, metadata !8604), !dbg !12791, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6930, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := dma_alloc_coherent_mask($p0, $i1);
  // WARNING: %3 = call i64 @dma_alloc_coherent_mask(%struct.device* %0, i32 %1), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i64($i2);
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !12796, metadata !8604), !dbg !12797, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6932, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $ule.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6932, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6933, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i1, 1);
  // WARNING: %6 = or i32 %1, 1, !dbg !8620, !verifier.code !8608
  call {:cexpr "gfp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6934, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i5 := $i1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i2, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 68} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i10 := $i5;
  goto $bb9;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6938, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, 4);
  // WARNING: %14 = or i32 %.0, 4, !dbg !8630, !verifier.code !8608
  call {:cexpr "gfp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6939, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6937, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6942, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const debug_dma_alloc_coherent: ref;
axiom (debug_dma_alloc_coherent == $sub.ref(0, 270697));
procedure  debug_dma_alloc_coherent($p0: ref, $i1: i64, $i2: i64, $p3: ref);
const dma_alloc_coherent_mask: ref;
axiom (dma_alloc_coherent_mask == $sub.ref(0, 271729));
procedure  dma_alloc_coherent_mask($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !12820, metadata !8604), !dbg !12821, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !12822, metadata !8604), !dbg !12823, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6915, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6915, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  // WARNING: %4 = load i64, i64* %3, align 8, !dbg !8613, !verifier.code !8608
  call {:cexpr "dma_mask"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6916, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6916, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6917, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6917, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6917, 16} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 16777215)) && (($i6 != 1) ==> ($i7 == 4294967295)));
  // WARNING: %9 = select i1 %8, i64 16777215, i64 4294967295, !dbg !8620, !verifier.code !8608
  call {:cexpr "dma_mask"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6918, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i8 := $i3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6921, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const ldv_fill_int_urb: ref;
axiom (ldv_fill_int_urb == $sub.ref(0, 272761));
procedure  ldv_fill_int_urb($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9728, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9728, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9728, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9728, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9729, 19} true;
  assume {:verifier.code 0} true;
  $M.9 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9730, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9730, 49} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9730, 26} true;
  assume {:verifier.code 0} true;
  $M.8 := $i7;
  call {:cexpr "completeFnIntCounter"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9731, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9734, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const input_report_key: ref;
axiom (input_report_key == $sub.ref(0, 273793));
procedure  input_report_key($p0: ref, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.input_dev* %0, i64 0, metadata !12860, metadata !8604), !dbg !12861, !verifier.code !8606
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !12862, metadata !8604), !dbg !12863, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7052, 36} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7052, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7052, 3} true;
  assume {:verifier.code 0} true;
  call input_event($p0, 1, $i1, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7053, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const input_sync: ref;
axiom (input_sync == $sub.ref(0, 274825));
procedure  input_sync($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7061, 3} true;
  assume {:verifier.code 0} true;
  call input_event($p0, 0, 0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 7062, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_submit_urb_2: ref;
axiom (ldv_usb_submit_urb_2 == $sub.ref(0, 275857));
procedure  ldv_usb_submit_urb_2($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.urb* %0, i64 0, metadata !12877, metadata !8604), !dbg !12878, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9510, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_submit_urb($p0);
  // WARNING: %3 = call i32 @ldv_submit_urb(%struct.urb* %0), !dbg !8611, !verifier.code !8608
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9511, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const input_event: ref;
axiom (input_event == $sub.ref(0, 276889));
procedure  input_event($p0: ref, $i1: i32, $i2: i32, $i3: i32);
const ldv_interface_to_usbdev: ref;
axiom (ldv_interface_to_usbdev == $sub.ref(0, 277921));
procedure  ldv_interface_to_usbdev()
  returns ($r: ref)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9793, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_undef_ptr();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9795, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9795, 30} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9795, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9797, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9798, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop___0();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9800, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9800, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 278953));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6802, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  // WARNING: %2 = call i32 @__VERIFIER_nondet_int(), !dbg !8609, !verifier.code !8611
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6803, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6803, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6804, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6806, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6808, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6808, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6808, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6808, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6809, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6812, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 279985));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6844, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6846, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6848, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_driver_1: ref;
axiom (ldv_usb_driver_1 == $sub.ref(0, 281017));
procedure  ldv_usb_driver_1()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9344, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9345, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9345, 27} true;
  assume {:verifier.code 0} true;
  $M.13 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9346, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 282049));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i1;
  var $i55: i32;
  var $i56: i1;
  var $i57: i32;
  var $i58: i1;
  var $i59: i8;
  var $i60: i32;
  var $i61: i8;
  var $i62: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9370, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9370, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_zalloc(32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9371, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9372, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := ldv_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9374, 13} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  // WARNING: %5 = call i32 @__VERIFIER_nondet_int(), !dbg !8619, !verifier.code !8620
  call {:cexpr "tmp___1"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !12959, metadata !8604), !dbg !12960, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9376, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := ldv_zalloc(1288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9377, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9378, 13} true;
  assume {:verifier.code 0} true;
  call $p7 := ldv_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9380, 13} true;
  assume {:verifier.code 0} true;
  call $p8 := ldv_zalloc(4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9381, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9382, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9383, 3} true;
  assume {:verifier.code 0} true;
  call $M.14 := $memset.i8($M.14, $p0, 0, 1, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9384, 24} true;
  assume {:verifier.code 0} true;
  $M.15 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9385, 11} true;
  assume {:verifier.code 0} true;
  $M.16 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9386, 24} true;
  assume {:verifier.code 0} true;
  $M.17 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9387, 24} true;
  assume {:verifier.code 0} true;
  $M.18 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9389, 13} true;
  assume {:verifier.code 1} true;
  call $i10 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i10);
  // WARNING: %12 = call i32 @__VERIFIER_nondet_int(), !dbg !8649, !verifier.code !8620
  call {:cexpr "tmp___5"} boogie_si_record_i32($i10);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i10, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i10, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb10, $bb11;
$bb4:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i10, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9426, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9426, 28} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9426, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb39, $bb40;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i10, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9466, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9466, 28} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9466, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb69, $bb70;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb81;
$bb10:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9392, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9392, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9392, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb12, $bb13;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb9;
$bb12:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9393, 15} true;
  assume {:verifier.code 1} true;
  call $i17 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i17);
  // WARNING: %17 = call i32 @__VERIFIER_nondet_int(), !dbg !8657, !verifier.code !8620
  call {:cexpr "tmp___6"} boogie_si_record_i32($i17);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb14:
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i17, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i17, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb20, $bb21;
$bb16:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i17, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 30} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb29, $bb30;
$bb18:
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb20:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9396, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9396, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb22, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb19;
$bb22:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9397, 38} true;
  assume {:verifier.code 0} true;
  $p23 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9397, 22} true;
  assume {:verifier.code 0} true;
  call $i24 := ttusb_dec_probe($p23, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9397, 20} true;
  assume {:verifier.code 0} true;
  $M.19 := $i24;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9398, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9398, 24} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9398, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9399, 30} true;
  assume {:verifier.code 0} true;
  $M.15 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9400, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9400, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9400, 17} true;
  assume {:verifier.code 0} true;
  $M.16 := $i28;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9401, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9404, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9407, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9421, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb29:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 38} true;
  assume {:verifier.code 0} true;
  $i31 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 50} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb32:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9410, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9410, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_disconnect($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9411, 28} true;
  assume {:verifier.code 0} true;
  $M.15 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9412, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9412, 25} true;
  assume {:verifier.code 0} true;
  $i35 := $sub.i32($i34, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9412, 15} true;
  assume {:verifier.code 0} true;
  $M.16 := $i35;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9413, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9409, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb31;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9416, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9418, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9419, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9419, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9424, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9490, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb39:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9427, 15} true;
  assume {:verifier.code 1} true;
  call $i38 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i38);
  // WARNING: %54 = call i32 @__VERIFIER_nondet_int(), !dbg !8709, !verifier.code !8620
  call {:cexpr "tmp___7"} boogie_si_record_i32($i38);
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb41:
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i39 == 1);
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i38, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb47, $bb48;
$bb43:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i38, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9439, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9439, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9439, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb57, $bb58;
$bb45:
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb66;
$bb47:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 30} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb49, $bb50;
$bb48:
  assume {:verifier.code 0} true;
  assume !(($i41 == 1));
  goto $bb46;
$bb49:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 46} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb52, $bb53;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb52:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9431, 7} true;
  assume {:verifier.code 0} true;
  call ttusb_dec_driver_exit();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9432, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9433, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9430, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb51;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9492, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9493, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9437, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9461, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb57:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9440, 22} true;
  assume {:verifier.code 0} true;
  call $i48 := ttusb_dec_driver_init();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9440, 20} true;
  assume {:verifier.code 0} true;
  $M.21 := $i48;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9441, 11} true;
  assume {:verifier.code 0} true;
  $i49 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9441, 24} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9441, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb59, $bb60;
$bb58:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb59:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9442, 30} true;
  assume {:verifier.code 0} true;
  $M.17 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9443, 30} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9444, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9447, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9447, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9447, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9448, 30} true;
  assume {:verifier.code 0} true;
  $M.17 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9449, 9} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb63:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9453, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9456, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9458, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9459, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9459, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9464, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb69:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9467, 15} true;
  assume {:verifier.code 1} true;
  call $i55 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i55);
  // WARNING: %90 = call i32 @__VERIFIER_nondet_int(), !dbg !8761, !verifier.code !8620
  call {:cexpr "tmp___8"} boogie_si_record_i32($i55);
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb71:
  assume {:verifier.code 0} true;
  $i56 := $eq.i32($i55, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9470, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9470, 30} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i32($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9470, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb78;
$bb74:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9471, 38} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.14, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9471, 32} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9471, 32} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9471, 7} true;
  assume {:verifier.code 0} true;
  call $i62 := fe_send_command($p6, $i61, $i4, $p7, $p9, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9473, 28} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9474, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9477, 5} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9482, 3} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9479, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9480, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9480, 5} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9485, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9487, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9488, 3} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9488, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 283081));
procedure  ldv_initialize();
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 284113));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6853, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6855, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 6857, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_driver_exit: ref;
axiom (ttusb_dec_driver_exit == $sub.ref(0, 285145));
procedure  ttusb_dec_driver_exit()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9330, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_deregister_16(ttusb_dec_driver);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9331, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ttusb_dec_driver_init: ref;
axiom (ttusb_dec_driver_init == $sub.ref(0, 286177));
procedure  ttusb_dec_driver_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9321, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv_usb_register_driver_15(ttusb_dec_driver, __this_module, .str.93);
  // WARNING: %1 = call i32 @ldv_usb_register_driver_15(%struct.usb_driver* @ttusb_dec_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i32 0, i32 0)), !dbg !8603, !verifier.code !8605
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9322, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 287209));
procedure  ldv_check_final_state()
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9918, 23} true;
  assume {:verifier.code 0} true;
  $p0 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9918, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9918, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9918, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9920, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9921, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9923, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9923, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9923, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9923, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9925, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9926, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9928, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9928, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9928, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9930, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9931, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9933, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9933, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9933, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9936, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9938, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9938, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9940, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9941, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9943, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_usb_register_driver_15: ref;
axiom (ldv_usb_register_driver_15 == $sub.ref(0, 288241));
procedure  ldv_usb_register_driver_15($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9623, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_register_driver($p0, $p1, $p2);
  // WARNING: %4 = call i32 @usb_register_driver(%struct.usb_driver* %0, %struct.module* %1, i8* %2), !dbg !8614, !verifier.code !8609
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !13200, metadata !8604), !dbg !13201, !verifier.code !8606
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9625, 24} true;
  assume {:verifier.code 0} true;
  $M.15 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9626, 15} true;
  assume {:verifier.code 0} true;
  $M.20 := 0;
  call {:cexpr "usb_counter"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9627, 3} true;
  assume {:verifier.code 0} true;
  call ldv_usb_driver_1();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9628, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const usb_register_driver: ref;
axiom (usb_register_driver == $sub.ref(0, 289273));
procedure  usb_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const ldv_usb_deregister_16: ref;
axiom (ldv_usb_deregister_16 == $sub.ref(0, 290305));
procedure  ldv_usb_deregister_16($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9636, 3} true;
  assume {:verifier.code 0} true;
  call usb_deregister($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9637, 24} true;
  assume {:verifier.code 0} true;
  $M.15 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out-nwKuO2.c", 9638, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_deregister: ref;
axiom (usb_deregister == $sub.ref(0, 291337));
procedure  usb_deregister($p0: ref);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 292369));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !13219, metadata !8604), !dbg !13220, !verifier.code !8606
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 293401));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 294433));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 295465));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 296497));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 297529));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 298561));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 299593));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 300625));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 301657));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 302689));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 303721));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 304753));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !8603, !verifier.code !8604
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 305785));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 306817));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 307849));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 308881));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 309913));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 310945));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 311977));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 313009));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 314041));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 315073));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 316105));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 317137));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 318169));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 319201));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 320233));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 321265));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 322297));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 323329));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const calloc: ref;
axiom (calloc == $sub.ref(0, 324361));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !13255, metadata !8604), !dbg !13256, !verifier.code !8606
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 325393));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 326425));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 327457));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 328489));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 329521));
procedure  __SMACK_static_init()
{
$bb0:
  $M.26 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.13 := $0.ref;
  $M.15 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.16 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.17 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.18 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.19 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.20 := 0;
  call {:cexpr "usb_counter"} boogie_si_record_i32(0);
  $M.21 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.24 := 0;
  call {:cexpr "INTERF_STATE"} boogie_si_record_i32(0);
  $M.25 := 0;
  call {:cexpr "SERIAL_STATE"} boogie_si_record_i32(0);
  $M.4 := $0.ref;
  $M.3 := $0.ref;
  $M.22 := $0.ref;
  $M.23 := 0;
  call {:cexpr "dev_counter"} boogie_si_record_i32(0);
  $M.8 := 0;
  call {:cexpr "completeFnIntCounter"} boogie_si_record_i32(0);
  $M.10 := 0;
  call {:cexpr "completeFnBulkCounter"} boogie_si_record_i32(0);
  $M.9 := $0.ref;
  $M.11 := $0.ref;
  $M.27 := 0;
  $M.28 := 0;
  $M.29 := 0;
  $M.30 := 0;
  $M.31 := 0;
  $M.32 := 0;
  $M.33 := 0;
  $M.34 := 0;
  $M.35 := 0;
  $M.36 := 0;
  $M.37 := 0;
  $M.38 := 0;
  $M.39 := 0;
  $M.0 := $store.i16($M.0, ttusb_dec_table, 3);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 2), 2888);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 4), 4102);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 6), 0);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 15), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_table, 16), 0);
  $M.0 := $store.i64($M.0, $add.ref(ttusb_dec_table, 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 32), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 2), 2888);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 4), 4104);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(ttusb_dec_table, 32), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 64), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 2), 2888);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 4), 4105);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(ttusb_dec_table, 64), 24), 0);
  $M.0 := $store.i16($M.0, $add.ref(ttusb_dec_table, 96), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 4), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 6), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 16), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(ttusb_dec_table, 96), 24), 0);
  $M.0 := $store.ref($M.0, ttusb_dec_driver, .str.92);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 8), ttusb_dec_probe);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 16), ttusb_dec_disconnect);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 72), ttusb_dec_table);
  $M.0 := $store.i32($M.0, $add.ref(ttusb_dec_driver, 80), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ttusb_dec_driver, 80), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ttusb_dec_driver, 80), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 80), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 80), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 80), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ttusb_dec_driver, 80), 72), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ttusb_dec_driver, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 112), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ttusb_dec_driver, 168), 120), 0);
  $M.0 := $store.i8($M.0, $add.ref(ttusb_dec_driver, 296), 0);
  $M.2 := 0;
  call {:cexpr "enable_rc"} boogie_si_record_i32(0);
  $M.12 := 0;
  call {:cexpr "output_pva"} boogie_si_record_i32(0);
  $M.0 := $store.ref($M.0, fe_config, fe_send_command);
  $M.0 := $store.i16($M.0, adapter_nr, $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 2), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 4), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 6), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 8), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 10), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 12), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, $add.ref(adapter_nr, 14), $sub.i16(0, 1));
  $M.0 := $store.i16($M.0, rc_keys, 116);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 2), 113);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 4), 2);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 6), 3);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 8), 4);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 10), 5);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 12), 6);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 14), 7);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 16), 8);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 18), 9);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 20), 10);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 22), 11);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 24), 402);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 26), 114);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 28), 352);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 30), 115);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 32), 403);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 34), 412);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 36), 1);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 38), 398);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 40), 399);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 42), 400);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 44), 401);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 46), 357);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 48), 50);
  $M.0 := $store.i16($M.0, $add.ref(rc_keys, 50), 385);
  $M.1 := 0;
  call {:cexpr "debug"} boogie_si_record_i32(0);
  $M.0 := $store.i8($M.0, .str.85, 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 1), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 2), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 3), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 4), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 5), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 6), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 8), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 9), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 10), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 11), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 12), 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 13), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 14), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 15), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 16), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 17), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 19), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 20), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 21), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 22), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 23), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 24), 0);
  $M.40 := $store.i8($M.40, .str.88, 117);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 1), 115);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 2), 98);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 3), 45);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 4), 37);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 5), 115);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 6), 45);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 7), 37);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 8), 115);
  $M.40 := $store.i8($M.40, $add.ref(.str.88, 9), 0);
  $M.0 := $store.i8($M.0, .str.40, 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 1), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 2), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 3), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 4), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 5), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 6), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 8), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 10), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 11), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 12), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 13), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 14), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 15), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 16), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 17), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 18), 0);
  $M.0 := $store.i8($M.0, .str.5, 68);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 1), 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 3), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 7), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 8), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 9), 0);
  $M.0 := $store.i8($M.0, .str.6, 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 1), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 2), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 3), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 5), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 6), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 7), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 8), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 9), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 10), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 11), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 12), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 13), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 14), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 15), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 16), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 17), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 18), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 19), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 20), 102);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 21), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 22), 0);
  $M.0 := $store.i8($M.0, .str.7, 68);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 1), 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 3), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 4), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 5), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 7), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 8), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 9), 0);
  $M.0 := $store.i8($M.0, .str.8, 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 1), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 2), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 3), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 5), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 6), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 7), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 8), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 9), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 10), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 11), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 12), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 13), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 14), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 15), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 16), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 17), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 18), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 19), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 20), 102);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 21), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 22), 0);
  $M.0 := $store.i8($M.0, .str.9, 68);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 1), 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 3), 51);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 7), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 9), 0);
  $M.0 := $store.i8($M.0, .str.10, 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 1), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 2), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 3), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 5), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 6), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 7), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 8), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 9), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 10), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 11), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 12), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 13), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 14), 51);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 15), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 16), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 17), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 18), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 19), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 20), 102);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 21), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 22), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 330553));
procedure  devirtbounce(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i6 := $eq.ref(ttusb_dec_handle_irq, $p0);
  assume {:branchcond $i6} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i4 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call ttusb_dec_disconnect($p1);
  $exn := false;
  return;
$bb3:
  assume ($i5 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call ttusb_dec_process_urb($p2);
  $exn := false;
  return;
$bb4:
  assume ($i6 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call ttusb_dec_handle_irq($p3);
  $exn := false;
  return;
$bb5:
  assume !(($i4 == 1));
  assume false;
$bb6:
  assume !(($i5 == 1));
  $i4 := $eq.ref(ttusb_dec_disconnect, $p0);
  assume {:branchcond $i4} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i6 == 1));
  $i5 := $eq.ref(ttusb_dec_process_urb, $p0);
  assume {:branchcond $i5} true;
  goto $bb3, $bb6;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 331585));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i8 := $eq.ref(ttusb_dec_stop_feed, $p0);
  assume {:branchcond $i8} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i6 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i7 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call $i3 := ttusb_dec_start_feed($p2);
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume ($i8 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call $i5 := ttusb_dec_stop_feed($p4);
  $r := $i5;
  $exn := false;
  return;
$bb5:
  assume !(($i6 == 1));
  assume false;
$bb6:
  assume !(($i7 == 1));
  $i6 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i6} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i8 == 1));
  $i7 := $eq.ref(ttusb_dec_start_feed, $p0);
  assume {:branchcond $i7} true;
  goto $bb3, $bb6;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 332617));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i14 := $eq.ref(ttusb_dec_video_pes2ts_cb, $p0);
  assume {:branchcond $i14} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i11 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i12 == 1);
  $p2 := $bitcast.ref.ref(arg);
  $p3 := $bitcast.ref.ref(arg1);
  call $i4 := ttusb_dec_probe($p2, $p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i13 == 1);
  $p5 := $bitcast.ref.ref(arg);
  $p6 := $bitcast.ref.ref(arg1);
  call $i7 := ttusb_dec_audio_pes2ts_cb($p5, $p6);
  $r := $i7;
  $exn := false;
  return;
$bb5:
  assume ($i14 == 1);
  $p8 := $bitcast.ref.ref(arg);
  $p9 := $bitcast.ref.ref(arg1);
  call $i10 := ttusb_dec_video_pes2ts_cb($p8, $p9);
  $r := $i10;
  $exn := false;
  return;
$bb6:
  assume !(($i11 == 1));
  assume false;
$bb7:
  assume !(($i12 == 1));
  $i11 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i11} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i13 == 1));
  $i12 := $eq.ref(ttusb_dec_probe, $p0);
  assume {:branchcond $i12} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i14 == 1));
  $i13 := $eq.ref(ttusb_dec_audio_pes2ts_cb, $p0);
  assume {:branchcond $i13} true;
  goto $bb4, $bb8;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 333649));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 334681));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 335713));
procedure  devirtbounce.5(funcPtr: ref, arg: i64, arg1: ref, arg2: i32)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 336745));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 337777));
procedure  devirtbounce.7(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(ttusb_dec_handle_irq, $p0);
  assume {:branchcond $i4} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i2 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call ttusb_dec_disconnect($p1);
  $exn := false;
  return;
$bb3:
  assume ($i3 == 1);
  call ttusb_dec_process_urb(arg);
  $exn := false;
  return;
$bb4:
  assume ($i4 == 1);
  call ttusb_dec_handle_irq(arg);
  $exn := false;
  return;
$bb5:
  assume !(($i2 == 1));
  assume false;
$bb6:
  assume !(($i3 == 1));
  $i2 := $eq.ref(ttusb_dec_disconnect, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i4 == 1));
  $i3 := $eq.ref(ttusb_dec_process_urb, $p0);
  assume {:branchcond $i3} true;
  goto $bb3, $bb6;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 338809));
procedure  devirtbounce.8(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref, arg5: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 339841));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref, arg5: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 340873));
procedure  devirtbounce.10(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 341905));
procedure  devirtbounce.11(funcPtr: ref, arg: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.12: ref;
axiom (devirtbounce.12 == $sub.ref(0, 342937));
procedure  devirtbounce.12(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i32, arg4: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
