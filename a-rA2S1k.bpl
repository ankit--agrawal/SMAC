// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out.c --verifier-options  /bopt:z3opt:SMT.MBQI=true /bopt:z3opt:SMT.MBQI.MAX_ITERATIONS=17922 /di /noInitPruning /noArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (114 regions)
var $M.0: [ref] i8;
var $M.1: [ref] i8;
var $M.2: i32;
var $M.3: [ref] i32;
var $M.4: ref;
var $M.5: i32;
var $M.6: [ref] i16;
var $M.7: [ref] i16;
var $M.8: [ref] i32;
var $M.9: ref;
var $M.10: i32;
var $M.11: [ref] ref;
var $M.12: i32;
var $M.13: [ref] i64;
var $M.14: i32;
var $M.15: i32;
var $M.16: i32;
var $M.17: i32;
var $M.18: i32;
var $M.19: i32;
var $M.20: i32;
var $M.21: i32;
var $M.22: ref;
var $M.23: i32;
var $M.24: ref;
var $M.25: ref;
var $M.26: ref;
var $M.27: ref;
var $M.28: i32;
var $M.29: [ref] i32;
var $M.30: [ref] i32;
var $M.31: [ref] i8;
var $M.32: [ref] ref;
var $M.33: [ref] i64;
var $M.34: [ref] i32;
var $M.35: [ref] i32;
var $M.36: [ref] i64;
var $M.37: [ref] i32;
var $M.38: [ref] i32;
var $M.39: [ref] i8;
var $M.40: [ref] ref;
var $M.41: [ref] i8;
var $M.42: [ref] i16;
var $M.43: i32;
var $M.44: ref;
var $M.45: ref;
var $M.46: [ref] i8;
var $M.47: i32;
var $M.48: i32;
var $M.49: i32;
var $M.50: i32;
var $M.51: i32;
var $M.52: i32;
var $M.53: i32;
var $M.54: i32;
var $M.55: i32;
var $M.56: i32;
var $M.57: i32;
var $M.58: ref;
var $M.59: [ref] i8;
var $M.60: i32;
var $M.61: i32;
var $M.62: i32;
var $M.63: i64;
var $M.64: ref;
var $M.65: [ref] i8;
var $M.66: [ref] i8;
var $M.67: [ref] i8;
var $M.68: [ref] i8;
var $M.69: [ref] i8;
var $M.70: [ref] i8;
var $M.71: [ref] i8;
var $M.72: [ref] i8;
var $M.73: [ref] i8;
var $M.74: [ref] i32;
var $M.75: [ref] i8;
var $M.76: [ref] i8;
var $M.77: [ref] i8;
var $M.78: [ref] i8;
var $M.79: [ref] i8;
var $M.80: [ref] i8;
var $M.81: [ref] i8;
var $M.82: [ref] i8;
var $M.83: i64;
var $M.84: ref;
var $M.85: i64;
var $M.86: ref;
var $M.87: i64;
var $M.88: ref;
var $M.89: i64;
var $M.90: ref;
var $M.91: i64;
var $M.92: ref;
var $M.93: i64;
var $M.94: ref;
var $M.95: i64;
var $M.96: ref;
var $M.97: i64;
var $M.98: ref;
var $M.99: i64;
var $M.100: ref;
var $M.101: i64;
var $M.102: ref;
var $M.103: i64;
var $M.104: ref;
var $M.105: i64;
var $M.106: ref;
var $M.107: i64;
var $M.108: ref;
var $M.109: i64;
var $M.110: ref;
var $M.111: i64;
var $M.112: ref;
var $M.113: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 561054));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32840));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const ldv_irq_1_3: ref;
axiom (ldv_irq_1_3 == $sub.ref(0, 1028));
const ldv_irq_1_0: ref;
axiom (ldv_irq_1_0 == $sub.ref(0, 2056));
const ldv_irq_1_2: ref;
axiom (ldv_irq_1_2 == $sub.ref(0, 3084));
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 4112));
const ldv_irq_1_1: ref;
axiom (ldv_irq_1_1 == $sub.ref(0, 5140));
const ldv_timer_state_2: ref;
axiom (ldv_timer_state_2 == $sub.ref(0, 6168));
const __ksymtab_serial8250_clear_and_reinit_fifos: ref;
axiom (__ksymtab_serial8250_clear_and_reinit_fifos == $sub.ref(0, 7208));
const {:count 34} __kstrtab_serial8250_clear_and_reinit_fifos: ref;
axiom (__kstrtab_serial8250_clear_and_reinit_fifos == $sub.ref(0, 8266));
const {:count 23} __kstrtab_serial8250_release_dma: ref;
axiom (__kstrtab_serial8250_release_dma == $sub.ref(0, 9313));
const {:count 23} __kstrtab_serial8250_request_dma: ref;
axiom (__kstrtab_serial8250_request_dma == $sub.ref(0, 10360));
const {:count 18} __kstrtab_serial8250_rx_dma: ref;
axiom (__kstrtab_serial8250_rx_dma == $sub.ref(0, 11402));
const {:count 18} __kstrtab_serial8250_tx_dma: ref;
axiom (__kstrtab_serial8250_tx_dma == $sub.ref(0, 12444));
const {:count 25} modem_names: ref;
axiom (modem_names == $sub.ref(0, 13668));
const {:count 154} pnp_dev_table: ref;
axiom (pnp_dev_table == $sub.ref(0, 17156));
const serial_pnp_driver: ref;
axiom (serial_pnp_driver == $sub.ref(0, 18364));
const skip_txen_test: ref;
axiom (skip_txen_test == $sub.ref(0, 19392));
const {:count 32} irq_lists: ref;
axiom (irq_lists == $sub.ref(0, 20672));
const hash_mutex: ref;
axiom (hash_mutex == $sub.ref(0, 21864));
const probe_rsa_count: ref;
axiom (probe_rsa_count == $sub.ref(0, 22892));
const {:count 4} probe_rsa: ref;
axiom (probe_rsa == $sub.ref(0, 23948));
const serial8250_isa_driver: ref;
axiom (serial8250_isa_driver == $sub.ref(0, 25148));
const {:count 23} __kstrtab_serial8250_resume_port: ref;
axiom (__kstrtab_serial8250_resume_port == $sub.ref(0, 26195));
const {:count 24} __kstrtab_serial8250_suspend_port: ref;
axiom (__kstrtab_serial8250_suspend_port == $sub.ref(0, 27243));
const {:count 27} __kstrtab_serial8250_unregister_port: ref;
axiom (__kstrtab_serial8250_unregister_port == $sub.ref(0, 28294));
const {:count 30} __kstrtab_serial8250_register_8250_port: ref;
axiom (__kstrtab_serial8250_register_8250_port == $sub.ref(0, 29348));
const serial_mutex: ref;
axiom (serial_mutex == $sub.ref(0, 30540));
const serial8250_reg: ref;
axiom (serial8250_reg == $sub.ref(0, 31628));
const {:count 4} old_serial_port: ref;
axiom (old_serial_port == $sub.ref(0, 32844));
const share_irqs: ref;
axiom (share_irqs == $sub.ref(0, 33872));
const serial8250_pops: ref;
axiom (serial8250_pops == $sub.ref(0, 35104));
const nr_uarts: ref;
axiom (nr_uarts == $sub.ref(0, 36132));
const {:count 32} __kstrtab_serial8250_set_isa_configurator: ref;
axiom (__kstrtab_serial8250_set_isa_configurator == $sub.ref(0, 37188));
const {:count 17} __kstrtab_serial8250_do_pm: ref;
axiom (__kstrtab_serial8250_do_pm == $sub.ref(0, 38229));
const {:count 26} __kstrtab_serial8250_do_set_termios: ref;
axiom (__kstrtab_serial8250_do_set_termios == $sub.ref(0, 39279));
const {:count 22} __kstrtab_serial8250_handle_irq: ref;
axiom (__kstrtab_serial8250_handle_irq == $sub.ref(0, 40325));
const {:count 24} __kstrtab_serial8250_modem_status: ref;
axiom (__kstrtab_serial8250_modem_status == $sub.ref(0, 41373));
const {:count 20} __kstrtab_serial8250_tx_chars: ref;
axiom (__kstrtab_serial8250_tx_chars == $sub.ref(0, 42417));
const {:count 20} __kstrtab_serial8250_rx_chars: ref;
axiom (__kstrtab_serial8250_rx_chars == $sub.ref(0, 43461));
const {:count 29} uart_config: ref;
axiom (uart_config == $sub.ref(0, 45181));
const ldv_retval_6: ref;
axiom (ldv_retval_6 == $sub.ref(0, 46209));
const ldv_retval_4: ref;
axiom (ldv_retval_4 == $sub.ref(0, 47237));
const ldv_retval_5: ref;
axiom (ldv_retval_5 == $sub.ref(0, 48265));
const __mod_pnp__pnp_dev_table_device_table: ref;
axiom (__mod_pnp__pnp_dev_table_device_table == $sub.ref(0, 49305));
const ldv_retval_3: ref;
axiom (ldv_retval_3 == $sub.ref(0, 50333));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 51361));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 52389));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 53417));
const serial8250_isa_devs: ref;
axiom (serial8250_isa_devs == $sub.ref(0, 54449));
const serial8250_isa_config: ref;
axiom (serial8250_isa_config == $sub.ref(0, 55481));
const {:count 4} serial8250_ports: ref;
axiom (serial8250_ports == $sub.ref(0, 58521));
const ldv_state_variable_4: ref;
axiom (ldv_state_variable_4 == $sub.ref(0, 59549));
const ldv_irq_line_1_2: ref;
axiom (ldv_irq_line_1_2 == $sub.ref(0, 60577));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 61605));
const ldv_irq_line_1_1: ref;
axiom (ldv_irq_line_1_1 == $sub.ref(0, 62633));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 63661));
const ldv_timer_list_2: ref;
axiom (ldv_timer_list_2 == $sub.ref(0, 64693));
const ldv_irq_line_1_0: ref;
axiom (ldv_irq_line_1_0 == $sub.ref(0, 65721));
const ldv_state_variable_3: ref;
axiom (ldv_state_variable_3 == $sub.ref(0, 66749));
const serial8250_isa_driver_group0: ref;
axiom (serial8250_isa_driver_group0 == $sub.ref(0, 67781));
const ldv_irq_line_1_3: ref;
axiom (ldv_irq_line_1_3 == $sub.ref(0, 68809));
const serial_pnp_driver_group0: ref;
axiom (serial_pnp_driver_group0 == $sub.ref(0, 69841));
const ldv_irq_data_1_2: ref;
axiom (ldv_irq_data_1_2 == $sub.ref(0, 70873));
const serial8250_pops_group0: ref;
axiom (serial8250_pops_group0 == $sub.ref(0, 71905));
const ldv_irq_data_1_3: ref;
axiom (ldv_irq_data_1_3 == $sub.ref(0, 72937));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 73965));
const ldv_state_variable_5: ref;
axiom (ldv_state_variable_5 == $sub.ref(0, 74993));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 76021));
const ldv_irq_data_1_0: ref;
axiom (ldv_irq_data_1_0 == $sub.ref(0, 77053));
const ldv_irq_data_1_1: ref;
axiom (ldv_irq_data_1_1 == $sub.ref(0, 78085));
const ldv_spin: ref;
axiom (ldv_spin == $sub.ref(0, 79113));
const __ksymtab_serial8250_release_dma: ref;
axiom (__ksymtab_serial8250_release_dma == $sub.ref(0, 80153));
const __ksymtab_serial8250_request_dma: ref;
axiom (__ksymtab_serial8250_request_dma == $sub.ref(0, 81193));
const __ksymtab_serial8250_rx_dma: ref;
axiom (__ksymtab_serial8250_rx_dma == $sub.ref(0, 82233));
const __ksymtab_serial8250_tx_dma: ref;
axiom (__ksymtab_serial8250_tx_dma == $sub.ref(0, 83273));
const __ksymtab_serial8250_resume_port: ref;
axiom (__ksymtab_serial8250_resume_port == $sub.ref(0, 84313));
const __ksymtab_serial8250_suspend_port: ref;
axiom (__ksymtab_serial8250_suspend_port == $sub.ref(0, 85353));
const __ksymtab_serial8250_unregister_port: ref;
axiom (__ksymtab_serial8250_unregister_port == $sub.ref(0, 86393));
const __ksymtab_serial8250_register_8250_port: ref;
axiom (__ksymtab_serial8250_register_8250_port == $sub.ref(0, 87433));
const __ksymtab_serial8250_set_isa_configurator: ref;
axiom (__ksymtab_serial8250_set_isa_configurator == $sub.ref(0, 88473));
const __ksymtab_serial8250_do_pm: ref;
axiom (__ksymtab_serial8250_do_pm == $sub.ref(0, 89513));
const __ksymtab_serial8250_do_set_termios: ref;
axiom (__ksymtab_serial8250_do_set_termios == $sub.ref(0, 90553));
const __ksymtab_serial8250_handle_irq: ref;
axiom (__ksymtab_serial8250_handle_irq == $sub.ref(0, 91593));
const __ksymtab_serial8250_modem_status: ref;
axiom (__ksymtab_serial8250_modem_status == $sub.ref(0, 92633));
const __ksymtab_serial8250_tx_chars: ref;
axiom (__ksymtab_serial8250_tx_chars == $sub.ref(0, 93673));
const __ksymtab_serial8250_rx_chars: ref;
axiom (__ksymtab_serial8250_rx_chars == $sub.ref(0, 94713));
const {:count 41} .str.83: ref;
axiom (.str.83 == $sub.ref(0, 95778));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32776));
const .str: ref;
axiom (.str == $sub.ref(0, 96805));
const {:count 3} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 97832));
const {:count 9} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 98865));
const {:count 5} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 99894));
const {:count 23} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 100941));
const {:count 224} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 102189));
const {:count 23} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 103236));
const {:count 37} .str.84: ref;
axiom (.str.84 == $sub.ref(0, 104297));
const pv_irq_ops: ref;
axiom (pv_irq_ops == $sub.ref(0, 32784));
const {:count 34} .str.85: ref;
axiom (.str.85 == $sub.ref(0, 105355));
const x86_dma_fallback_dev: ref;
axiom (x86_dma_fallback_dev == $sub.ref(0, 32792));
const {:count 23} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 106402));
const {:count 23} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 107449));
const {:count 8} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 108481));
const {:count 6} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 109511));
const {:count 6} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 110541));
const {:count 7} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 111572));
const {:count 7} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 112603));
const {:count 8} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 113635));
const {:count 10} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 114669));
const {:count 8} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 115701));
const {:count 9} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 116734));
const {:count 11} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 117769));
const {:count 8} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 118801));
const {:count 8} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 119833));
const {:count 4} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 120861));
const {:count 9} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 121894));
const {:count 7} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 122925));
const {:count 7} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 123956));
const {:count 4} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 124984));
const {:count 10} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 126018));
const {:count 6} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 127048));
const {:count 9} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 128081));
const {:count 8} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 129113));
const {:count 9} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 130146));
const {:count 9} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 131179));
const {:count 10} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 132213));
const {:count 20} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 133257));
const {:count 20} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 134301));
const {:count 21} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 135346));
const nr_irqs: ref;
axiom (nr_irqs == $sub.ref(0, 32800));
const iomem_resource: ref;
axiom (iomem_resource == $sub.ref(0, 32808));
const ioport_resource: ref;
axiom (ioport_resource == $sub.ref(0, 32816));
const pv_cpu_ops: ref;
axiom (pv_cpu_ops == $sub.ref(0, 32824));
const {:count 44} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 136414));
const {:count 11} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 137449));
const {:count 7} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 138480));
const {:count 225} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 139729));
const jiffies: ref;
axiom (jiffies == $sub.ref(0, 32832));
const {:count 19} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 140772));
const {:count 36} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 141832));
const {:count 29} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 142885));
const {:count 45} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 143954));
const {:count 33} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 145011));
const {:count 19} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 146054));
const {:count 21} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 147099));
const {:count 38} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 148161));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32840));
const {:count 5} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 149190));
const {:count 23} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 150237));
const {:count 13} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 151274));
const {:count 11} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 152309));
const {:count 63} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 153396));
const {:count 21} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 154441));
const {:count 11} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 155476));
const {:count 6} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 156506));
const {:count 6} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 157536));
const {:count 6} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 158566));
const {:count 4} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 159594));
const {:count 4} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 160622));
const {:count 4} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 161650));
const {:count 4} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 162678));
const {:count 4} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 163706));
const {:count 4} .str.67: ref;
axiom (.str.67 == $sub.ref(0, 164734));
const {:count 5} .str.68: ref;
axiom (.str.68 == $sub.ref(0, 165763));
const {:count 5} .str.69: ref;
axiom (.str.69 == $sub.ref(0, 166792));
const {:count 5} .str.70: ref;
axiom (.str.70 == $sub.ref(0, 167821));
const {:count 7} .str.71: ref;
axiom (.str.71 == $sub.ref(0, 168852));
const {:count 7} .str.72: ref;
axiom (.str.72 == $sub.ref(0, 169883));
const {:count 7} .str.73: ref;
axiom (.str.73 == $sub.ref(0, 170914));
const {:count 7} .str.74: ref;
axiom (.str.74 == $sub.ref(0, 171945));
const {:count 7} .str.75: ref;
axiom (.str.75 == $sub.ref(0, 172976));
const {:count 7} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 174007));
const {:count 6} .str.77: ref;
axiom (.str.77 == $sub.ref(0, 175037));
const {:count 6} .str.78: ref;
axiom (.str.78 == $sub.ref(0, 176067));
const {:count 6} .str.79: ref;
axiom (.str.79 == $sub.ref(0, 177097));
const {:count 5} .str.80: ref;
axiom (.str.80 == $sub.ref(0, 178126));
const {:count 5} .str.81: ref;
axiom (.str.81 == $sub.ref(0, 179155));
const {:count 5} .str.82: ref;
axiom (.str.82 == $sub.ref(0, 180184));
const {:count 22} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 181230));
const {:count 3} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 182257));
const {:count 4} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 183285));
const {:count 59} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 184368));
const {:count 14} .str.2.90: ref;
axiom (.str.2.90 == $sub.ref(0, 185406));
const serial8250_clear_and_reinit_fifos: ref;
axiom (serial8250_clear_and_reinit_fifos == $sub.ref(0, 186438));
procedure  serial8250_clear_and_reinit_fifos($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4977, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_clear_fifos($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4978, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4978, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4978, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4978, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref(uart_config, $mul.ref($i4, 24));
  $p6 := $add.ref($add.ref(uart_config, $mul.ref($i4, 24)), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4978, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.1, $p6);
  // WARNING: %8 = load i8, i8* %7, align 4, !dbg !5238, !verifier.code !5232
  call {:cexpr "fcr"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4979, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4979, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4980, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 187470));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const serial8250_clear_fifos: ref;
axiom (serial8250_clear_fifos == $sub.ref(0, 188502));
procedure  serial8250_clear_fifos($p0: ref)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4963, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4964, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4965, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4966, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4969, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_out: ref;
axiom (serial_out == $sub.ref(0, 189534));
procedure  serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !5263, metadata !5230), !dbg !5264, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !5265, metadata !5230), !dbg !5266, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4679, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  $p4 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4679, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4679, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $p0;
  call devirtbounce($p5, $p6, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4680, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_rx_chars: ref;
axiom (serial8250_rx_chars == $sub.ref(0, 190566));
procedure  serial8250_rx_chars($p0: ref, $i1: i8)
  returns ($r: i8)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i8;
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i32;
  var $i10: i8;
  var $i11: i8;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $i46: i8;
  var $i65: i32;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i8;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i8;
  var $i81: i32;
  var $i82: i32;
  var $i83: i1;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i89: i32;
  var $i90: i32;
  var $i91: i1;
  var $i92: i8;
  var $i88: i8;
  var $i84: i8;
  var $i93: i8;
  var $i94: i8;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i99: i8;
  var $i100: i32;
  var $i101: i32;
  var $i102: i1;
  var $i104: i32;
  var $i105: i1;
  var $i106: i8;
  var $i103: i8;
  var $i107: i8;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !5277, metadata !5230), !dbg !5278, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5825, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %3, i64 0, metadata !5283, metadata !5230), !dbg !5284, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5826, 3} true;
  assume {:verifier.code 0} true;
  $i3, $i4 := 256, $i1;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5828, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5828, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i64($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5828, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 1);
  // WARNING: %7 = call i64 @ldv__builtin_expect(i64 %6, i64 1), !dbg !5244, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5829, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5829, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5830, 11} true;
  assume {:verifier.code 0} true;
  call $i9 := serial_in($p0, 0);
  // WARNING: %10 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 0), !dbg !5250, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5831, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  // WARNING: %11 = trunc i32 %10 to i8, !dbg !5254, !verifier.code !5232
  call {:cexpr "ch"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5832, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb4;
$bb3:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  // WARNING: %.05 = phi i8 [ %11, %9 ], [ 0, %12 ], !verifier.code !5232
  $p12 := $add.ref($p0, 184);
  $p13 := $add.ref($add.ref($p0, 184), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5836, 34} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5836, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14, 1);
  $p16 := $add.ref($p0, 184);
  $p17 := $add.ref($add.ref($p0, 184), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5836, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 23} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 41} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 39} true;
  assume {:verifier.code 0} true;
  $i22 := $or.i32($i20, $i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5837, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  // WARNING: %25 = trunc i32 %24 to i8, !dbg !5264, !verifier.code !5232
  call {:cexpr "lsr"} boogie_si_record_i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5838, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5838, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 34} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 44} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i25, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 50} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i1.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 33} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5839, 13} true;
  assume {:verifier.code 0} true;
  call $i30 := ldv__builtin_expect($i29, 0);
  // WARNING: %32 = call i64 @ldv__builtin_expect(i64 %31, i64 0), !dbg !5273, !verifier.code !5232
  call {:cexpr "tmp___2"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5840, 15} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5840, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5841, 10} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5841, 20} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i32, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5841, 26} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5841, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i93, $i94 := $i23, 0;
  goto $bb32;
$bb7:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5842, 13} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5842, 32} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i35, 243);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5842, 13} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  // WARNING: %41 = trunc i32 %40 to i8, !dbg !5285, !verifier.code !5232
  call {:cexpr "lsr"} boogie_si_record_i8($i37);
  $p38 := $add.ref($p0, 184);
  $p39 := $add.ref($add.ref($p0, 184), 36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5843, 39} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5843, 43} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, 1);
  $p42 := $add.ref($p0, 184);
  $p43 := $add.ref($add.ref($p0, 184), 36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5843, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5844, 17} true;
  assume {:verifier.code 0} true;
  call $i44 := uart_handle_break($p2);
  // WARNING: %48 = call i32 @uart_handle_break(%struct.uart_port* %3), !dbg !5291, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5845, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5845, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5851, 10} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5851, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i32($i47, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5851, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5851, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb14, $bb15;
$bb9:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5846, 9} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5881, 13} true;
  assume {:verifier.code 0} true;
  call $i98 := serial_in($p0, 5);
  // WARNING: %122 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5361, !verifier.code !5232
  call {:cexpr "tmp___3"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5882, 9} true;
  assume {:verifier.code 0} true;
  $i99 := $trunc.i32.i8($i98);
  // WARNING: %123 = trunc i32 %122 to i8, !dbg !5364, !verifier.code !5232
  call {:cexpr "lsr"} boogie_si_record_i8($i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5883, 8} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i8.i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5883, 18} true;
  assume {:verifier.code 0} true;
  $i101 := $and.i32($i100, 17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5883, 24} true;
  assume {:verifier.code 0} true;
  $i102 := $ne.i32($i101, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5883, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $i99;
  assume {:branchcond $i102} true;
  goto $bb33, $bb34;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5850, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $i37;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5859, 10} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5859, 20} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i32($i65, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5859, 25} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5859, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb20, $bb21;
$bb14:
  assume ($i49 == 1);
  $p50 := $add.ref($p0, 184);
  $p51 := $add.ref($add.ref($p0, 184), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5852, 42} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5852, 49} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i52, 1);
  $p54 := $add.ref($p0, 184);
  $p55 := $add.ref($add.ref($p0, 184), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5852, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, $i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5853, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i49 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5854, 10} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5854, 20} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i32($i56, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5854, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5854, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb17, $bb18;
$bb16:
  assume {:verifier.code 0} true;
  $i46 := $i23;
  goto $bb13;
$bb17:
  assume ($i58 == 1);
  $p59 := $add.ref($p0, 184);
  $p60 := $add.ref($add.ref($p0, 184), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5855, 41} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5855, 47} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61, 1);
  $p63 := $add.ref($p0, 184);
  $p64 := $add.ref($add.ref($p0, 184), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5855, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, $i62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5856, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb20:
  assume ($i67 == 1);
  $p68 := $add.ref($p0, 184);
  $p69 := $add.ref($add.ref($p0, 184), 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5860, 43} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5860, 51} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i70, 1);
  $p72 := $add.ref($p0, 184);
  $p73 := $add.ref($add.ref($p0, 184), 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5860, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, $i71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  $p74 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 40} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 18} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 11} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 60} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 58} true;
  assume {:verifier.code 0} true;
  $i79 := $and.i32($i77, $i78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5864, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i32.i8($i79);
  // WARNING: %97 = trunc i32 %96 to i8, !dbg !5332, !verifier.code !5232
  call {:cexpr "lsr"} boogie_si_record_i8($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5865, 10} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5865, 20} true;
  assume {:verifier.code 0} true;
  $i82 := $and.i32($i81, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5865, 26} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.i32($i82, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5865, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5867, 5} true;
  assume {:verifier.code 0} true;
  $i84 := 1;
  goto $bb25;
$bb24:
  assume !(($i83 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5868, 10} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5868, 20} true;
  assume {:verifier.code 0} true;
  $i86 := $and.i32($i85, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5868, 25} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5868, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb26, $bb27;
$bb25:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5876, 3} true;
  assume {:verifier.code 0} true;
  $i93, $i94 := $i80, $i84;
  goto $bb32;
$bb26:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5870, 5} true;
  assume {:verifier.code 0} true;
  $i88 := 3;
  goto $bb28;
$bb27:
  assume !(($i87 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5871, 10} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5871, 20} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5871, 25} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5871, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb29, $bb30;
$bb28:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i84 := $i88;
  goto $bb25;
$bb29:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5873, 5} true;
  assume {:verifier.code 0} true;
  $i92 := 2;
  goto $bb31;
$bb30:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  $i92 := 0;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i88 := $i92;
  goto $bb28;
$bb32:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5879, 26} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5879, 50} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5879, 69} true;
  assume {:verifier.code 0} true;
  $i97 := $sext.i8.i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5879, 3} true;
  assume {:verifier.code 0} true;
  call uart_insert_char($p2, $i95, 2, $i96, $i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5879, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb33:
  assume ($i102 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5885, 27} true;
  assume {:verifier.code 0} true;
  $i104 := $sub.i32($i3, 1);
  // WARNING: %128 = sub nsw i32 %.04, 1, !dbg !5372, !verifier.code !5232
  call {:cexpr "max_count"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5886, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $sgt.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5886, 9} true;
  assume {:verifier.code 0} true;
  $i3, $i4, $i106 := $i104, $i99, $i99;
  assume {:branchcond $i105} true;
  goto $bb35, $bb36;
$bb34:
  assume !(($i102 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5886, 9} true;
  assume {:verifier.code 0} true;
  assume ($i105 == 1);
  goto $bb1;
$bb36:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5889, 7} true;
  assume {:verifier.code 0} true;
  $i107 := $i106;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  $p108 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5895, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p108);
  $p109 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5896, 33} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5896, 41} true;
  assume {:verifier.code 0} true;
  $p111 := $p110;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5896, 3} true;
  assume {:verifier.code 0} true;
  call tty_flip_buffer_push($p111);
  $p112 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5897, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5898, 3} true;
  assume {:verifier.code 0} true;
  $r := $i107;
  $exn := false;
  return;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5883, 27} true;
  assume {:verifier.code 0} true;
  $i107 := $i103;
  goto $bb37;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 191598));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5436, metadata !5230), !dbg !5437, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4469, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const serial_in: ref;
axiom (serial_in == $sub.ref(0, 192630));
procedure  serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !5445, metadata !5230), !dbg !5446, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4670, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4670, 25} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4670, 47} true;
  assume {:verifier.code 0} true;
  $p5 := $p0;
  call $i6 := devirtbounce.1($p4, $p5, $i1);
  // WARNING: %7 = call i32 @devirtbounce.1(i32 (%struct.uart_port*, i32)* %5, %struct.uart_port* %6, i32 %1)
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4671, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const uart_handle_break: ref;
axiom (uart_handle_break == $sub.ref(0, 193662));
procedure  uart_handle_break($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4637, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4637, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4638, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4638, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4638, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4638, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4638, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4639, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4639, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  call devirtbounce.2($p8, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4640, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4643, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4643, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4643, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4643, 26} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4643, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4644, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $p2;
  $p14 := $add.ref($p2, 320);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4644, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4644, 5} true;
  assume {:verifier.code 0} true;
  call do_SAK($p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4645, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4648, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const uart_insert_char: ref;
axiom (uart_insert_char == $sub.ref(0, 194694));
procedure  uart_insert_char($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32);
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 195726));
procedure  spin_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9195, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9196, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_5($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9197, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tty_flip_buffer_push: ref;
axiom (tty_flip_buffer_push == $sub.ref(0, 196758));
procedure  tty_flip_buffer_push($p0: ref);
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 197790));
procedure  spin_lock($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9175, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9176, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_1($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9177, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock: ref;
axiom (ldv_spin_lock == $sub.ref(0, 198822));
procedure  ldv_spin_lock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10943, 12} true;
  assume {:verifier.code 0} true;
  $M.2 := 1;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10944, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock_1: ref;
axiom (ldv_spin_lock_1 == $sub.ref(0, 199854));
procedure  ldv_spin_lock_1($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4231, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4231, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4231, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4232, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 200886));
procedure  _raw_spin_lock($p0: ref);
const ldv_spin_unlock: ref;
axiom (ldv_spin_unlock == $sub.ref(0, 201918));
procedure  ldv_spin_unlock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10952, 12} true;
  assume {:verifier.code 0} true;
  $M.2 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10953, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_5: ref;
axiom (ldv_spin_unlock_5 == $sub.ref(0, 202950));
procedure  ldv_spin_unlock_5($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4251, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4251, 37} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4251, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4252, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 203982));
procedure  _raw_spin_unlock($p0: ref);
const do_SAK: ref;
axiom (do_SAK == $sub.ref(0, 205014));
procedure  do_SAK($p0: ref);
const serial8250_tx_chars: ref;
axiom (serial8250_tx_chars == $sub.ref(0, 206046));
procedure  serial8250_tx_chars($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $i54: i16;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $i68: i64;
  var $i69: i64;
  var $i70: i1;
  var $p71: ref;
  var $i72: i32;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5918, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5919, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5919, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1072);
  $p5 := $add.ref($p0, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5920, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5920, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5920, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5920, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  $p9 := $add.ref($p0, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5921, 39} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5921, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5921, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i11);
  $p12 := $add.ref($p0, 184);
  $p13 := $add.ref($add.ref($p0, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5922, 36} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5922, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14, 1);
  $p16 := $add.ref($p0, 184);
  $p17 := $add.ref($add.ref($p0, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5922, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i15);
  $p18 := $add.ref($p0, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5923, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5924, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5980, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5928, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := uart_tx_stopped($p1);
  // WARNING: %23 = call i32 @uart_tx_stopped(%struct.uart_port* %2), !dbg !5256, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5929, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5929, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5930, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_tx($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5931, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  $p21 := $add.ref($add.ref($p3, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5935, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  $p23 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5935, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5935, 18} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i22, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5936, 5} true;
  assume {:verifier.code 0} true;
  call __stop_tx($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5937, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5941, 25} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5941, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  // WARNING: %37 = load i32, i32* %36, align 4, !dbg !5273, !verifier.code !5232
  call {:cexpr "count"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5941, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i27;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 39} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  $p31 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 67} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 45} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 43} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p30, $mul.ref($i33, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 25} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5943, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i36);
  $p37 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5944, 23} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5944, 28} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i38, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5944, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i32($i39, 4095);
  $p41 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5944, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $i40);
  $p42 := $add.ref($p0, 184);
  $p43 := $add.ref($add.ref($p0, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5945, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5945, 37} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i44, 1);
  $p46 := $add.ref($p0, 184);
  $p47 := $add.ref($add.ref($p0, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5945, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, $i45);
  $p48 := $add.ref($add.ref($p3, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5946, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  $p50 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5946, 27} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5946, 18} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i32($i49, $i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5946, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5947, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  $p63 := $add.ref($add.ref($p3, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  $p65 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 44} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 36} true;
  assume {:verifier.code 0} true;
  $i67 := $sub.i32($i64, $i66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 8} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 50} true;
  assume {:verifier.code 0} true;
  $i69 := $and.i64($i68, 4095);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 60} true;
  assume {:verifier.code 0} true;
  $i70 := $ule.i64($i69, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5968, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 22} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 22} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 8} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i16.i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 35} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i32($i55, 16384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 44} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5952, 15} true;
  assume {:verifier.code 0} true;
  call $i58 := serial_port_in($p1, 5);
  // WARNING: %72 = call i32 @serial_port_in(%struct.uart_port* %2, i32 5), !dbg !5304, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5953, 18} true;
  assume {:verifier.code 0} true;
  $i59 := $and.i32($i58, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5953, 24} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5953, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb18:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5954, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5958, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5961, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $sub.i32($i28, 1);
  // WARNING: %80 = sub nsw i32 %.0, 1, !dbg !5315, !verifier.code !5232
  call {:cexpr "count"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5962, 13} true;
  assume {:verifier.code 0} true;
  $i62 := $sgt.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5962, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $i61;
  assume {:branchcond $i62} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5962, 7} true;
  assume {:verifier.code 0} true;
  assume ($i62 == 1);
  goto $bb11;
$bb23:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5962, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb25:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5969, 5} true;
  assume {:verifier.code 0} true;
  call uart_write_wakeup($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5970, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  $p71 := $add.ref($add.ref($p3, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5973, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  $p73 := $add.ref($add.ref($p3, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5973, 27} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5973, 18} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i72, $i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5973, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5974, 5} true;
  assume {:verifier.code 0} true;
  call __stop_tx($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5975, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5978, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const uart_tx_stopped: ref;
axiom (uart_tx_stopped == $sub.ref(0, 207078));
procedure  uart_tx_stopped($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4619, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4619, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4619, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  $p4 := $add.ref($p2, 320);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4619, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 1316);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 22} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 61} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4621, 5} true;
  assume {:verifier.code 0} true;
  $i16 := 1;
  goto $bb6;
$bb3:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 81} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 102} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 1316);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 79} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 64} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 112} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4620, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb2;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4627, 1} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4625, 3} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb6;
}
const serial8250_stop_tx: ref;
axiom (serial8250_stop_tx == $sub.ref(0, 208110));
procedure  serial8250_stop_tx($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5721, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5722, 3} true;
  assume {:verifier.code 0} true;
  call __stop_tx($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5723, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5723, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5723, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5723, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 46} true;
  assume {:verifier.code 0} true;
  $i8 := $or.i32($i7, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5724, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5725, 47} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5725, 47} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5725, 33} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5725, 5} true;
  assume {:verifier.code 0} true;
  call serial_icr_write($p1, 0, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5726, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5729, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __stop_tx: ref;
axiom (__stop_tx == $sub.ref(0, 209142));
procedure  __stop_tx($p0: ref)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5705, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 32} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 32} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 36} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5706, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5707, 31} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5707, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5707, 22} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5707, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5711, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_port_in: ref;
axiom (serial_port_in == $sub.ref(0, 210174));
procedure  serial_port_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5710, metadata !5230), !dbg !5711, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4580, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4580, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  call $i4 := devirtbounce.1($p3, $p0, $i1);
  // WARNING: %5 = call i32 @devirtbounce.1(i32 (%struct.uart_port*, i32)* %4, %struct.uart_port* %0, i32 %1)
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4581, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const uart_write_wakeup: ref;
axiom (uart_write_wakeup == $sub.ref(0, 211206));
procedure  uart_write_wakeup($p0: ref);
const serial_icr_write: ref;
axiom (serial_icr_write == $sub.ref(0, 212238));
procedure  serial_icr_write($p0: ref, $i1: i32, $i2: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !5720, metadata !5230), !dbg !5721, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !5722, metadata !5230), !dbg !5723, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4938, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 7, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4939, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 5, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4940, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_modem_status: ref;
axiom (serial8250_modem_status == $sub.ref(0, 213270));
procedure  serial8250_modem_status($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5996, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5997, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := serial_in($p0, 6);
  // WARNING: %3 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 6), !dbg !5237, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !5740, metadata !5230), !dbg !5741, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5999, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 472);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5999, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5999, 12} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5999, 51} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, $i2);
  // WARNING: %7 = or i32 %6, %3, !dbg !5244, !verifier.code !5232
  call {:cexpr "status"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6000, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 472);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6000, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i6, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 23} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 47} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 51} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i12, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 56} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 62} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 29} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume ($i14 == 1);
  $p15 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 87} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 65} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 93} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 62} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb3;
$bb6:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6002, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i6, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6002, 23} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6002, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6001, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb3;
$bb8:
  assume ($i20 == 1);
  $p21 := $add.ref($p0, 184);
  $p22 := $add.ref($add.ref($p0, 184), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6003, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6003, 43} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i23, 1);
  $p25 := $add.ref($p0, 184);
  $p26 := $add.ref($add.ref($p0, 184), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6003, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6004, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6007, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i6, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6007, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6007, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i28 == 1);
  $p29 := $add.ref($p0, 184);
  $p30 := $add.ref($add.ref($p0, 184), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6008, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6008, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i31, 1);
  $p33 := $add.ref($p0, 184);
  $p34 := $add.ref($add.ref($p0, 184), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6008, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6009, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6012, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i6, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6012, 23} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6012, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6013, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i6, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6013, 7} true;
  assume {:verifier.code 0} true;
  call uart_handle_dcd_change($p1, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6014, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6017, 22} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6017, 22} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6017, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6018, 43} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i32($i6, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6018, 7} true;
  assume {:verifier.code 0} true;
  call uart_handle_cts_change($p1, $i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6019, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  $p41 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6022, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6022, 32} true;
  assume {:verifier.code 0} true;
  $p43 := $p42;
  $p44 := $add.ref($p42, 600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6022, 5} true;
  assume {:verifier.code 0} true;
  call __wake_up($p44, 1, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6023, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6026, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const uart_handle_dcd_change: ref;
axiom (uart_handle_dcd_change == $sub.ref(0, 214302));
procedure  uart_handle_dcd_change($p0: ref, $i1: i32);
const uart_handle_cts_change: ref;
axiom (uart_handle_cts_change == $sub.ref(0, 215334));
procedure  uart_handle_cts_change($p0: ref, $i1: i32);
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 216366));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref);
const serial8250_handle_irq: ref;
axiom (serial8250_handle_irq == $sub.ref(0, 217398));
procedure  serial8250_handle_irq($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $i21: i1;
  var $i22: i32;
  var $i23: i8;
  var $i24: i8;
  var $i25: i8;
  var $i26: i8;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5806, metadata !5230), !dbg !5807, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6049, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %3, i64 0, metadata !5814, metadata !5230), !dbg !5815, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6051, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6051, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6051, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6052, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6082, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6056, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := serial_port_in($p0, 5);
  // WARNING: %9 = call i32 @serial_port_in(%struct.uart_port* %0, i32 5), !dbg !5249, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6058, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  // WARNING: %10 = trunc i32 %9 to i8, !dbg !5252, !verifier.code !5232
  call {:cexpr "status"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6059, 8} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6059, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6059, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6059, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6060, 33} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6060, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6060, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6060, 37} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6060, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i26 := $i7;
  goto $bb16;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6061, 17} true;
  assume {:verifier.code 0} true;
  call $i15 := serial8250_rx_dma($p2, $i1);
  // WARNING: %20 = call i32 @serial8250_rx_dma(%struct.uart_8250_port* %3, i32 %1), !dbg !5266, !verifier.code !5232
  call {:cexpr "dma_err"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6062, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 9} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 84} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb10, $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 84} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6066, 44} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6066, 44} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6066, 16} true;
  assume {:verifier.code 0} true;
  call $i24 := serial8250_rx_chars($p2, $i23);
  // WARNING: %32 = call zeroext i8 @serial8250_rx_chars(%struct.uart_8250_port* %3, i8 zeroext %31), !dbg !5279, !verifier.code !5232
  call {:cexpr "status"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6067, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i24;
  goto $bb15;
$bb12:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 95} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb13, $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6065, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb11;
$bb14:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  $i25 := $i7;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6070, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $i25;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6073, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := serial8250_modem_status($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 31} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 31} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 82} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 86} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 99} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i32, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 105} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb20, $bb21;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 82} true;
  assume {:verifier.code 0} true;
  assume !(($i31 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb20:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6075, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_tx_chars($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6076, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6074, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb19;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6079, 34} true;
  assume {:verifier.code 0} true;
  $p35 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6079, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p35, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6080, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb3;
}
const serial8250_rx_dma: ref;
axiom (serial8250_rx_dma == $sub.ref(0, 218430));
procedure  serial8250_rx_dma($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i14: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !5878, metadata !5230), !dbg !5879, !verifier.code !5232
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10661, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10661, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10662, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10662, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10662, 47} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10662, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10662, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := dmaengine_tx_status($p6, $i8, $p2);
  // WARNING: %10 = call i32 @dmaengine_tx_status(%struct.dma_chan* %7, i32 %9, %struct.dma_tx_state* %3), !dbg !5243, !verifier.code !5229
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  // WARNING: call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !5891, metadata !5230), !dbg !5892, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10664, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i1, 63);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i10, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i10, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb3:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i10, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10668, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10668, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb10, $bb11;
$bb5:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10666, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 5);
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10698, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb10:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10669, 26} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10669, 26} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10669, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := dmaengine_pause($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10670, 23} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10670, 5} true;
  assume {:verifier.code 0} true;
  call __dma_rx_complete($p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10671, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10674, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 110);
  goto $bb9;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10676, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10679, 18} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10680, 5} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb9;
$bb16:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 43} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 56} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p4, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 56} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 70} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 70} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10684, 10} true;
  assume {:verifier.code 0} true;
  call $p27 := dmaengine_prep_slave_single($p22, $i24, $i26, 2, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10685, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10685, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i64($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10685, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10686, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 16);
  goto $bb9;
$bb19:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10690, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p27, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10690, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, __dma_rx_complete);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10691, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10691, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p27, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10691, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10692, 20} true;
  assume {:verifier.code 0} true;
  call $i33 := dmaengine_submit($p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10692, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10692, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 37} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 37} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 46} true;
  assume {:verifier.code 0} true;
  $p37 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 46} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 55} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 55} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 65} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 65} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i64($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 79} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 79} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10693, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_device($p40, $i42, $i44, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10695, 32} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10695, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10695, 3} true;
  assume {:verifier.code 0} true;
  call dma_async_issue_pending($p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10696, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb9;
}
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 219462));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !5947, metadata !5230), !dbg !5948, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9215, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9216, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_8($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9217, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_irqrestore_8: ref;
axiom (ldv_spin_unlock_irqrestore_8 == $sub.ref(0, 220494));
procedure  ldv_spin_unlock_irqrestore_8($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !5956, metadata !5230), !dbg !5957, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4271, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4271, 48} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4271, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4272, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 221526));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const dmaengine_tx_status: ref;
axiom (dmaengine_tx_status == $sub.ref(0, 222558));
procedure  dmaengine_tx_status($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.dma_chan* %0, i64 0, metadata !5966, metadata !5230), !dbg !5967, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10481, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10481, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10481, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10481, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  call $i7 := devirtbounce.3($p6, $p0, $i1, $p2);
  // WARNING: %8 = call i32 @devirtbounce.3(i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* %7, %struct.dma_chan* %0, i32 %1, %struct.dma_tx_state* %2)
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10482, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const dmaengine_pause: ref;
axiom (dmaengine_pause == $sub.ref(0, 223590));
procedure  dmaengine_pause($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10471, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := dmaengine_device_control($p0, 1, 0);
  // WARNING: %2 = call i32 @dmaengine_device_control(%struct.dma_chan* %0, i32 1, i64 0), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10472, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __dma_rx_complete: ref;
axiom (__dma_rx_complete == $sub.ref(0, 224622));
procedure  __dma_rx_complete($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $i28: i64;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10593, 7} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10594, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10594, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10595, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  $p6 := $add.ref($p2, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10595, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10595, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 34} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 34} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $p10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 43} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 52} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 52} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 62} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 62} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 76} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 76} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10596, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_cpu($p14, $i16, $i18, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10598, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10598, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10598, 41} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p4, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10598, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10598, 3} true;
  assume {:verifier.code 0} true;
  call $i23 := dmaengine_tx_status($p20, $i22, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10599, 32} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10599, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10599, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := dmaengine_terminate_all($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 38} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 38} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 18} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i64.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 54} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 54} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.3, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10600, 46} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32($i29, $i31);
  // WARNING: %33 = sub i32 %30, %32, !dbg !5259, !verifier.code !5227
  call {:cexpr "count"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10601, 66} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10601, 66} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10601, 74} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10601, 3} true;
  assume {:verifier.code 0} true;
  call $i36 := tty_insert_flip_string($p8, $p34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10602, 26} true;
  assume {:verifier.code 0} true;
  $p37 := $p2;
  $p38 := $add.ref($p2, 184);
  $p39 := $add.ref($add.ref($p2, 184), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10602, 38} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10602, 41} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10602, 6} true;
  assume {:verifier.code 0} true;
  $p42 := $p2;
  $p43 := $add.ref($p2, 184);
  $p44 := $add.ref($add.ref($p2, 184), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10602, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10603, 3} true;
  assume {:verifier.code 0} true;
  call tty_flip_buffer_push($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10604, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dmaengine_prep_slave_single: ref;
axiom (dmaengine_prep_slave_single == $sub.ref(0, 225654));
procedure  dmaengine_prep_slave_single($p0: ref, $i1: i64, $i2: i64, $i3: i32, $i4: i64)
  returns ($r: ref)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.dma_chan* %0, i64 0, metadata !6033, metadata !5230), !dbg !6034, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !6035, metadata !5230), !dbg !6036, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !6037, metadata !5230), !dbg !6038, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !6039, metadata !5230), !dbg !6040, !verifier.code !5232
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10450, 3} true;
  assume {:verifier.code 0} true;
  call sg_init_table($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10451, 6} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10451, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p6, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10452, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10452, 6} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10452, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10453, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10453, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10453, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10453, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  call $p13 := devirtbounce.4($p12, $p0, $p5, 1, $i3, $i4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10454, 3} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const dmaengine_submit: ref;
axiom (dmaengine_submit == $sub.ref(0, 226686));
procedure  dmaengine_submit($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10490, 18} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10490, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  call $i3 := devirtbounce.5($p2, $p0);
  // WARNING: %4 = call i32 @devirtbounce.5(i32 (%struct.dma_async_tx_descriptor*)* %3, %struct.dma_async_tx_descriptor* %0)
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10491, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const dma_sync_single_for_device: ref;
axiom (dma_sync_single_for_device == $sub.ref(0, 227718));
procedure  dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !6066, metadata !5230), !dbg !6067, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !6068, metadata !5230), !dbg !6069, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !6070, metadata !5230), !dbg !6071, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10263, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10265, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %6 = call i32 @valid_dma_direction(i32 %3), !dbg !5243, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10266, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10266, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10266, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10266, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !5248, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10267, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10267, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  call devirtbounce.6(0, .str.83, 115, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10268, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10271, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10275, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10275, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10275, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10275, 51} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10275, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10279, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10279, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce.7($p16, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10280, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10283, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_device($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10284, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_async_issue_pending: ref;
axiom (dma_async_issue_pending == $sub.ref(0, 228750));
procedure  dma_async_issue_pending($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10517, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10517, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10517, 22} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10517, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  call devirtbounce.8($p4, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10518, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 229782));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10144, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10144, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10144, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10144, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10144, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !5236, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10147, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10147, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 1224);
  $p8 := $add.ref($p0, 1224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10146, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10149, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1224);
  $p15 := $add.ref($p0, 1224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10149, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10149, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10152, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 230814));
procedure  valid_dma_direction($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i3: i1;
  var $i4: i1;
  var $i2: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 31} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  assume {:branchcond $i1} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 31} true;
  assume {:verifier.code 0} true;
  assume ($i1 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 54} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 54} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 54} true;
  assume {:verifier.code 0} true;
  assume ($i3 == 1);
  goto $bb2;
$bb5:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10107, 54} true;
  assume {:verifier.code 0} true;
  $i2 := $i4;
  goto $bb2;
}
const debug_dma_sync_single_for_device: ref;
axiom (debug_dma_sync_single_for_device == $sub.ref(0, 231846));
procedure  debug_dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const sg_init_table: ref;
axiom (sg_init_table == $sub.ref(0, 232878));
procedure  sg_init_table($p0: ref, $i1: i32);
const dma_sync_single_for_cpu: ref;
axiom (dma_sync_single_for_cpu == $sub.ref(0, 233910));
procedure  dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !6155, metadata !5230), !dbg !6156, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !6157, metadata !5230), !dbg !6158, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !6159, metadata !5230), !dbg !6160, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10230, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10232, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %6 = call i32 @valid_dma_direction(i32 %3), !dbg !5243, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10233, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10233, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10233, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10233, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !5248, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10234, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  call devirtbounce.6(0, .str.83, 103, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10235, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10238, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10242, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10242, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10242, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10242, 48} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10246, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10246, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce.7($p16, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10247, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10250, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_cpu($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10251, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dmaengine_terminate_all: ref;
axiom (dmaengine_terminate_all == $sub.ref(0, 234942));
procedure  dmaengine_terminate_all($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10462, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := dmaengine_device_control($p0, 0, 0);
  // WARNING: %2 = call i32 @dmaengine_device_control(%struct.dma_chan* %0, i32 0, i64 0), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10463, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const tty_insert_flip_string: ref;
axiom (tty_insert_flip_string == $sub.ref(0, 235974));
procedure  tty_insert_flip_string($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6206, metadata !5230), !dbg !6207, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10097, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := tty_insert_flip_string_fixed_flag($p0, $p1, 0, $i2);
  // WARNING: %4 = call i32 @tty_insert_flip_string_fixed_flag(%struct.tty_port* %0, i8* %1, i8 signext 0, i64 %2), !dbg !5237, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10098, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const tty_insert_flip_string_fixed_flag: ref;
axiom (tty_insert_flip_string_fixed_flag == $sub.ref(0, 237006));
procedure  tty_insert_flip_string_fixed_flag($p0: ref, $p1: ref, $i2: i8, $i3: i64)
  returns ($r: i32);
const dmaengine_device_control: ref;
axiom (dmaengine_device_control == $sub.ref(0, 238038));
procedure  dmaengine_device_control($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.dma_chan* %0, i64 0, metadata !6216, metadata !5230), !dbg !6217, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6218, metadata !5230), !dbg !6219, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 54} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10420, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10423, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10423, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10423, 30} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10423, 30} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  call $i13 := devirtbounce.9($p12, $p0, $i1, $i2);
  // WARNING: %15 = call i32 @devirtbounce.9(i32 (%struct.dma_chan*, i32, i64)* %14, %struct.dma_chan* %0, i32 %1, i64 %2)
  call {:cexpr "tmp"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10424, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10430, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10428, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 38);
  goto $bb3;
}
const debug_dma_sync_single_for_cpu: ref;
axiom (debug_dma_sync_single_for_cpu == $sub.ref(0, 239070));
procedure  debug_dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const serial8250_do_set_termios: ref;
axiom (serial8250_do_set_termios == $sub.ref(0, 240102));
procedure  serial8250_do_set_termios($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i8;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $i22: i8;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $i29: i8;
  var $p30: ref;
  var $i31: i16;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i8;
  var $i37: i32;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i32;
  var $i44: i8;
  var $i45: i8;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $i53: i8;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $p62: ref;
  var $i63: i16;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i32;
  var $p71: ref;
  var $i72: i16;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $i80: i32;
  var $i81: i64;
  var $p82: ref;
  var $p83: ref;
  var $i84: i8;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i1;
  var $i90: i1;
  var $i91: i32;
  var $i92: i32;
  var $i93: i8;
  var $i94: i8;
  var $i95: i8;
  var $p96: ref;
  var $i97: i16;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $i105: i32;
  var $i106: i32;
  var $i107: i1;
  var $p108: ref;
  var $i109: i8;
  var $i110: i32;
  var $i111: i32;
  var $i112: i8;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i8;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $p122: ref;
  var $p123: ref;
  var $i124: i32;
  var $p125: ref;
  var $p126: ref;
  var $i127: i32;
  var $i128: i32;
  var $i129: i1;
  var $p130: ref;
  var $i131: i32;
  var $i132: i32;
  var $p133: ref;
  var $p134: ref;
  var $i135: i32;
  var $i136: i32;
  var $i137: i1;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i32;
  var $i145: i32;
  var $i146: i1;
  var $p147: ref;
  var $i148: i32;
  var $i149: i32;
  var $p150: ref;
  var $p151: ref;
  var $i152: i32;
  var $i153: i32;
  var $i154: i1;
  var $p155: ref;
  var $i156: i32;
  var $i157: i32;
  var $p158: ref;
  var $p159: ref;
  var $i160: i32;
  var $i161: i32;
  var $i162: i1;
  var $p163: ref;
  var $i164: i32;
  var $i165: i32;
  var $p166: ref;
  var $p167: ref;
  var $i168: i32;
  var $i169: i32;
  var $i170: i1;
  var $p171: ref;
  var $i172: i32;
  var $i173: i32;
  var $p174: ref;
  var $p175: ref;
  var $i176: i8;
  var $i177: i32;
  var $i178: i32;
  var $i179: i8;
  var $p180: ref;
  var $p181: ref;
  var $i182: i16;
  var $i183: i32;
  var $i184: i32;
  var $i185: i1;
  var $p186: ref;
  var $p187: ref;
  var $i188: i32;
  var $i189: i32;
  var $i190: i1;
  var $p191: ref;
  var $i192: i32;
  var $i193: i1;
  var $p194: ref;
  var $i195: i32;
  var $i196: i32;
  var $i197: i1;
  var $p198: ref;
  var $i199: i8;
  var $i200: i32;
  var $i201: i32;
  var $i202: i8;
  var $p203: ref;
  var $p204: ref;
  var $i205: i16;
  var $i206: i32;
  var $i207: i32;
  var $i208: i1;
  var $p209: ref;
  var $i210: i8;
  var $i211: i32;
  var $i212: i32;
  var $i213: i8;
  var $p214: ref;
  var $p215: ref;
  var $i216: i16;
  var $i217: i32;
  var $i218: i32;
  var $i219: i1;
  var $p220: ref;
  var $i221: i8;
  var $i222: i32;
  var $i223: i32;
  var $i224: i8;
  var $p225: ref;
  var $p226: ref;
  var $i227: i8;
  var $i228: i32;
  var $p229: ref;
  var $i230: i16;
  var $i231: i32;
  var $i232: i32;
  var $i233: i1;
  var $p234: ref;
  var $i235: i32;
  var $i236: i1;
  var $i237: i32;
  var $i238: i32;
  var $i239: i8;
  var $i240: i8;
  var $p241: ref;
  var $i242: i32;
  var $i243: i32;
  var $i244: i1;
  var $i245: i32;
  var $i246: i32;
  var $i247: i32;
  var $i248: i1;
  var $i249: i1;
  var $i250: i32;
  var $i251: i32;
  var $p252: ref;
  var $i253: i16;
  var $i254: i32;
  var $i255: i32;
  var $i256: i1;
  var $i257: i32;
  var $i258: i32;
  var $p259: ref;
  var $p260: ref;
  var $i261: i32;
  var $i262: i1;
  var $p263: ref;
  var $i264: i32;
  var $i265: i32;
  var $i266: i32;
  var $i267: i32;
  var $i268: i16;
  var $i269: i32;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i8;
  var $i274: i32;
  var $i275: i32;
  var $i276: i32;
  var $p277: ref;
  var $i278: i32;
  var $i279: i1;
  var $i280: i32;
  var $i281: i32;
  var $p282: ref;
  var $p283: ref;
  var $i284: i32;
  var $i285: i1;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i289: i32;
  var $p290: ref;
  var $i291: i32;
  var $p292: ref;
  var $i293: i32;
  var $i294: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7033, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %4, i64 0, metadata !6248, metadata !5230), !dbg !6249, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6250, metadata !5230), !dbg !6251, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7036, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7036, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7036, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 48);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i6, 16);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb12, $bb13;
$bb3:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i6, 48);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i6, 32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb10, $bb11;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i6, 48);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb6, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7049, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 3;
  goto $bb18;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb10:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7045, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 2;
  goto $bb18;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb9;
$bb12:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i6, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb16, $bb17;
$bb13:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i6, 16);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7042, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 1;
  goto $bb18;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb9;
$bb16:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7039, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb9;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7052, 17} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7052, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7052, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7052, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7052, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7045, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb20:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7053, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7053, 32} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i19, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7053, 12} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  // WARNING: %21 = trunc i32 %20 to i8, !dbg !5261, !verifier.code !5230
  call {:cexpr "cval"} boogie_si_record_i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7054, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i21;
  goto $bb22;
$bb21:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i22 := $i14;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7057, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7057, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7057, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7057, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7057, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7058, 12} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7058, 32} true;
  assume {:verifier.code 0} true;
  $i28 := $or.i32($i27, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7058, 12} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i32.i8($i28);
  // WARNING: %31 = trunc i32 %30 to i8, !dbg !5270, !verifier.code !5230
  call {:cexpr "cval"} boogie_si_record_i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p3, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i16($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 10} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i16.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i32, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7059, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  $i36, $i37 := $i22, 0;
  goto $bb28;
$bb25:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7061, 5} true;
  assume {:verifier.code 0} true;
  $i35 := 1;
  goto $bb27;
$bb26:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7064, 3} true;
  assume {:verifier.code 0} true;
  $i36, $i37 := $i29, $i35;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7067, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7067, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7067, 25} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i32($i39, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7067, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7067, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7068, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7068, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $or.i32($i42, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7068, 12} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i8($i43);
  // WARNING: %49 = trunc i32 %48 to i8, !dbg !5287, !verifier.code !5230
  call {:cexpr "cval"} boogie_si_record_i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7069, 3} true;
  assume {:verifier.code 0} true;
  $i45 := $i44;
  goto $bb31;
$bb30:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i45 := $i36;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7072, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7072, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7072, 25} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i32($i47, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7072, 40} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7072, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7073, 12} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7073, 32} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i32($i50, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7073, 12} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  // WARNING: %59 = trunc i32 %58 to i8, !dbg !5296, !verifier.code !5230
  call {:cexpr "cval"} boogie_si_record_i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7074, 3} true;
  assume {:verifier.code 0} true;
  $i53 := $i52;
  goto $bb34;
$bb33:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  $i53 := $i45;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 55} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 55} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 63} true;
  assume {:verifier.code 0} true;
  $i56 := $udiv.i32($i55, 1048560);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 81} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 81} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 89} true;
  assume {:verifier.code 0} true;
  $i59 := $udiv.i32($i58, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7077, 10} true;
  assume {:verifier.code 0} true;
  call $i60 := uart_get_baud_rate($p0, $p1, $p2, $i56, $i59);
  // WARNING: %68 = call i32 @uart_get_baud_rate(%struct.uart_port* %0, %struct.ktermios* %1, %struct.ktermios* %2, i32 %64, i32 %67), !dbg !5304, !verifier.code !5230
  call {:cexpr "baud"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7078, 10} true;
  assume {:verifier.code 0} true;
  call $i61 := serial8250_get_divisor($p0, $i60);
  // WARNING: %69 = call i32 @serial8250_get_divisor(%struct.uart_port* %0, i32 %68), !dbg !5307, !verifier.code !5230
  call {:cexpr "quot"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 21} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p3, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 21} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i16($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i16.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 26} true;
  assume {:verifier.code 0} true;
  $i65 := $and.i32($i64, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 26} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 30} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 39} true;
  assume {:verifier.code 0} true;
  $i67 := $and.i32($i61, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 47} true;
  assume {:verifier.code 0} true;
  $i68 := $eq.i32($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb38, $bb39;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  $i70 := $i61;
  goto $bb40;
$bb38:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7080, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i61, 1);
  // WARNING: %79 = add i32 %69, 1, !dbg !5319, !verifier.code !5230
  call {:cexpr "quot"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7081, 3} true;
  assume {:verifier.code 0} true;
  $i70 := $i69;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7079, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i68 == 1));
  goto $bb37;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 22} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 22} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i16($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 8} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i16.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 35} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 42} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 56} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 56} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 65} true;
  assume {:verifier.code 0} true;
  $i78 := $ugt.i32($i77, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb44, $bb45;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 47} true;
  assume {:verifier.code 0} true;
  assume !(($i75 == 1));
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  $i95 := 0;
  goto $bb55;
$bb44:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7085, 29} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7085, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7085, 11} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i32.i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7085, 11} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref(uart_config, $mul.ref($i81, 24));
  $p83 := $add.ref($add.ref(uart_config, $mul.ref($i81, 24)), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7085, 35} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.1, $p83);
  // WARNING: %97 = load i8, i8* %96, align 4, !dbg !5335, !verifier.code !5230
  call {:cexpr "fcr"} boogie_si_record_i8($i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 15} true;
  assume {:verifier.code 0} true;
  $i85 := $ule.i32($i60, 2399);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb46, $bb47;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7084, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i78 == 1));
  goto $bb43;
$bb46:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 51} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p3, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 51} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 27} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 55} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 103} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i85 == 1));
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 115} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb52, $bb53;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 103} true;
  assume {:verifier.code 0} true;
  assume ($i89 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7087, 13} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7087, 32} true;
  assume {:verifier.code 0} true;
  $i92 := $and.i32($i91, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7087, 13} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  // WARNING: %109 = trunc i32 %108 to i8, !dbg !5347, !verifier.code !5230
  call {:cexpr "fcr"} boogie_si_record_i8($i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7089, 5} true;
  assume {:verifier.code 0} true;
  $i94 := $i93;
  goto $bb54;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 103} true;
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb48;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7086, 9} true;
  assume {:verifier.code 0} true;
  assume ($i90 == 1);
  goto $bb50;
$bb53:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  $i94 := $i84;
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7092, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 23} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 23} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i16($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i16.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 36} true;
  assume {:verifier.code 0} true;
  $i99 := $and.i32($i98, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 44} true;
  assume {:verifier.code 0} true;
  $i100 := $ne.i32($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 58} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 58} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 67} true;
  assume {:verifier.code 0} true;
  $i103 := $ugt.i32($i102, 31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb59, $bb61;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 49} true;
  assume {:verifier.code 0} true;
  assume !(($i100 == 1));
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 84} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 84} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 90} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i32($i105, 2097152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 102} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb62, $bb63;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 74} true;
  assume {:verifier.code 0} true;
  assume ($i103 == 1);
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 42} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p3, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 42} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i8($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 19} true;
  assume {:verifier.code 0} true;
  $i110 := $zext.i8.i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 46} true;
  assume {:verifier.code 0} true;
  $i111 := $and.i32($i110, 223);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 19} true;
  assume {:verifier.code 0} true;
  $i112 := $trunc.i32.i8($i111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 13} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p3, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7096, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p113, $i112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7097, 24} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7097, 24} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7097, 32} true;
  assume {:verifier.code 0} true;
  $i116 := $slt.i32($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7097, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb64, $bb65;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i103 == 1));
  goto $bb58;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7095, 7} true;
  assume {:verifier.code 0} true;
  assume ($i107 == 1);
  goto $bb60;
$bb63:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb64:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 44} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p3, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 44} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i8($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 21} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 48} true;
  assume {:verifier.code 0} true;
  $i120 := $or.i32($i119, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 21} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 15} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p3, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7098, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p122, $i121);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7099, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7102, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7105, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7106, 38} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7106, 38} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7106, 3} true;
  assume {:verifier.code 0} true;
  call uart_update_timeout($p0, $i124, $i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7107, 9} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7107, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p125, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7108, 17} true;
  assume {:verifier.code 0} true;
  $p126 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7108, 17} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i32($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7108, 25} true;
  assume {:verifier.code 0} true;
  $i128 := $and.i32($i127, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7108, 32} true;
  assume {:verifier.code 0} true;
  $i129 := $ne.i32($i128, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7108, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7109, 36} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7109, 36} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7109, 53} true;
  assume {:verifier.code 0} true;
  $i132 := $or.i32($i131, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7109, 11} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7109, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p133, $i132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7110, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7113, 17} true;
  assume {:verifier.code 0} true;
  $p134 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7113, 17} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i32($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7113, 25} true;
  assume {:verifier.code 0} true;
  $i136 := $and.i32($i135, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7113, 32} true;
  assume {:verifier.code 0} true;
  $i137 := $ne.i32($i136, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7113, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7114, 36} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7114, 36} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i32($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7114, 53} true;
  assume {:verifier.code 0} true;
  $i140 := $or.i32($i139, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7114, 11} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7114, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p141, $i140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7115, 3} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7118, 9} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7118, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7119, 17} true;
  assume {:verifier.code 0} true;
  $p143 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7119, 17} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7119, 25} true;
  assume {:verifier.code 0} true;
  $i145 := $and.i32($i144, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7119, 31} true;
  assume {:verifier.code 0} true;
  $i146 := $ne.i32($i145, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7119, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7120, 38} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7120, 38} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7120, 57} true;
  assume {:verifier.code 0} true;
  $i149 := $or.i32($i148, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7120, 11} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7120, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p150, $i149);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7121, 3} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7124, 22} true;
  assume {:verifier.code 0} true;
  $p151 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7124, 22} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i32($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7124, 30} true;
  assume {:verifier.code 0} true;
  $i153 := $and.i32($i152, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7124, 30} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7124, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7125, 38} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7125, 38} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7125, 57} true;
  assume {:verifier.code 0} true;
  $i157 := $or.i32($i156, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7125, 11} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7125, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p158, $i157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7126, 19} true;
  assume {:verifier.code 0} true;
  $p159 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7126, 19} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i32($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7126, 27} true;
  assume {:verifier.code 0} true;
  $i161 := $and.i32($i160, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7126, 33} true;
  assume {:verifier.code 0} true;
  $i162 := $ne.i32($i161, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7126, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i162} true;
  goto $bb79, $bb80;
$bb78:
  assume !(($i154 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb79:
  assume ($i162 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7127, 40} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7127, 40} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i32($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7127, 59} true;
  assume {:verifier.code 0} true;
  $i165 := $or.i32($i164, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7127, 13} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7127, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p166, $i165);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7128, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb80:
  assume !(($i162 == 1));
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7131, 3} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7134, 17} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7134, 17} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i32($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7134, 25} true;
  assume {:verifier.code 0} true;
  $i169 := $and.i32($i168, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7134, 33} true;
  assume {:verifier.code 0} true;
  $i170 := $eq.i32($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7134, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7135, 38} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7135, 38} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7135, 57} true;
  assume {:verifier.code 0} true;
  $i173 := $or.i32($i172, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7135, 11} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7135, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p174, $i173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7136, 3} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 40} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 40} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i8($M.0, $p175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 17} true;
  assume {:verifier.code 0} true;
  $i177 := $zext.i8.i32($i176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 44} true;
  assume {:verifier.code 0} true;
  $i178 := $and.i32($i177, 247);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 17} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i8($i178);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 11} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7139, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p180, $i179);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 22} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p3, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 22} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i16($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 8} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i16.i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 27} true;
  assume {:verifier.code 0} true;
  $i184 := $and.i32($i183, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 32} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.i32($i184, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb86, $bb87;
$bb86:
  assume ($i185 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 51} true;
  assume {:verifier.code 0} true;
  $p186 := $p3;
  $p187 := $add.ref($p3, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 56} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 62} true;
  assume {:verifier.code 0} true;
  $i189 := $and.i32($i188, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 71} true;
  assume {:verifier.code 0} true;
  $i190 := $ne.i32($i189, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 77} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb89, $bb91;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i185 == 1));
  goto $bb88;
$bb88:
  assume {:verifier.code 0} true;
  goto $bb96;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 77} true;
  assume {:verifier.code 0} true;
  assume ($i190 == 1);
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 42} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 42} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i8($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 19} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 46} true;
  assume {:verifier.code 0} true;
  $i201 := $or.i32($i200, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 19} true;
  assume {:verifier.code 0} true;
  $i202 := $trunc.i32.i8($i201);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 13} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7141, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p203, $i202);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7142, 3} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb91:
  assume !(($i190 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 95} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 95} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i32($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 103} true;
  assume {:verifier.code 0} true;
  $i193 := $slt.i32($i192, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 108} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb92, $bb93;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 108} true;
  assume {:verifier.code 0} true;
  assume ($i193 == 1);
  goto $bb90;
$bb93:
  assume !(($i193 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 121} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 121} true;
  assume {:verifier.code 0} true;
  $i195 := $load.i32($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 129} true;
  assume {:verifier.code 0} true;
  $i196 := $and.i32($i195, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 138} true;
  assume {:verifier.code 0} true;
  $i197 := $eq.i32($i196, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i197} true;
  goto $bb94, $bb95;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 7} true;
  assume {:verifier.code 0} true;
  assume ($i197 == 1);
  goto $bb90;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7140, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i197 == 1));
  goto $bb88;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 22} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 22} true;
  assume {:verifier.code 0} true;
  $i205 := $load.i16($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 8} true;
  assume {:verifier.code 0} true;
  $i206 := $zext.i16.i32($i205);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 35} true;
  assume {:verifier.code 0} true;
  $i207 := $and.i32($i206, 4096);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 43} true;
  assume {:verifier.code 0} true;
  $i208 := $ne.i32($i207, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7145, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 42} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 42} true;
  assume {:verifier.code 0} true;
  $i210 := $load.i8($M.0, $p209);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 19} true;
  assume {:verifier.code 0} true;
  $i211 := $zext.i8.i32($i210);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 46} true;
  assume {:verifier.code 0} true;
  $i212 := $or.i32($i211, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 19} true;
  assume {:verifier.code 0} true;
  $i213 := $trunc.i32.i8($i212);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 13} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7146, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p214, $i213);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7147, 3} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i208 == 1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 22} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 22} true;
  assume {:verifier.code 0} true;
  $i216 := $load.i16($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 8} true;
  assume {:verifier.code 0} true;
  $i217 := $zext.i16.i32($i216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 35} true;
  assume {:verifier.code 0} true;
  $i218 := $and.i32($i217, 8192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 43} true;
  assume {:verifier.code 0} true;
  $i219 := $ne.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7150, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb100, $bb101;
$bb100:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 42} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 42} true;
  assume {:verifier.code 0} true;
  $i221 := $load.i8($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 19} true;
  assume {:verifier.code 0} true;
  $i222 := $zext.i8.i32($i221);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 46} true;
  assume {:verifier.code 0} true;
  $i223 := $or.i32($i222, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 19} true;
  assume {:verifier.code 0} true;
  $i224 := $trunc.i32.i8($i223);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 13} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7151, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p225, $i224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7152, 3} true;
  assume {:verifier.code 0} true;
  goto $bb102;
$bb101:
  assume !(($i219 == 1));
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7155, 42} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p3, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7155, 42} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i8($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7155, 28} true;
  assume {:verifier.code 0} true;
  $i228 := $zext.i8.i32($i227);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7155, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 22} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 22} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i16($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 8} true;
  assume {:verifier.code 0} true;
  $i231 := $zext.i16.i32($i230);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 35} true;
  assume {:verifier.code 0} true;
  $i232 := $and.i32($i231, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 42} true;
  assume {:verifier.code 0} true;
  $i233 := $ne.i32($i232, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7156, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i233} true;
  goto $bb103, $bb104;
$bb103:
  assume ($i233 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7158, 24} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7158, 24} true;
  assume {:verifier.code 0} true;
  $i235 := $load.i32($M.0, $p234);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7158, 32} true;
  assume {:verifier.code 0} true;
  $i236 := $slt.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7158, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb105, $bb106;
$bb104:
  assume !(($i233 == 1));
  assume {:verifier.code 0} true;
  goto $bb111;
$bb105:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7159, 13} true;
  assume {:verifier.code 0} true;
  $i237 := $zext.i8.i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7159, 32} true;
  assume {:verifier.code 0} true;
  $i238 := $or.i32($i237, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7159, 13} true;
  assume {:verifier.code 0} true;
  $i239 := $trunc.i32.i8($i238);
  // WARNING: %297 = trunc i32 %296 to i8, !dbg !5532, !verifier.code !5230
  call {:cexpr "efr"} boogie_si_record_i8($i239);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7160, 5} true;
  assume {:verifier.code 0} true;
  $i240 := $i239;
  goto $bb107;
$bb106:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  $i240 := 0;
  goto $bb107;
$bb107:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7163, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7164, 16} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7164, 16} true;
  assume {:verifier.code 0} true;
  $i242 := $load.i32($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7164, 22} true;
  assume {:verifier.code 0} true;
  $i243 := $and.i32($i242, 33554432);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7164, 35} true;
  assume {:verifier.code 0} true;
  $i244 := $ne.i32($i243, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7164, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i244} true;
  goto $bb108, $bb109;
$bb108:
  assume ($i244 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7165, 32} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i8.i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7165, 7} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 9, $i245);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7166, 5} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb109:
  assume !(($i244 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7167, 32} true;
  assume {:verifier.code 0} true;
  $i246 := $zext.i8.i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7167, 7} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, $i246);
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7169, 3} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7172, 9} true;
  assume {:verifier.code 0} true;
  call $i247 := is_omap1_8250($p3);
  // WARNING: %311 = call i32 @is_omap1_8250(%struct.uart_8250_port* %4), !dbg !5550, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7173, 11} true;
  assume {:verifier.code 0} true;
  $i248 := $ne.i32($i247, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7173, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i248} true;
  goto $bb112, $bb113;
$bb112:
  assume ($i248 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7174, 14} true;
  assume {:verifier.code 0} true;
  $i249 := $eq.i32($i60, 115200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7174, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i249} true;
  goto $bb114, $bb115;
$bb113:
  assume !(($i248 == 1));
  assume {:verifier.code 0} true;
  $i251 := $i70;
  goto $bb117;
$bb114:
  assume ($i249 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7176, 7} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 19, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7177, 5} true;
  assume {:verifier.code 0} true;
  $i250 := 1;
  goto $bb116;
$bb115:
  assume !(($i249 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7178, 7} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 19, 0);
  assume {:verifier.code 0} true;
  $i250 := $i70;
  goto $bb116;
$bb116:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7180, 3} true;
  assume {:verifier.code 0} true;
  $i251 := $i250;
  goto $bb117;
$bb117:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 22} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p3, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 22} true;
  assume {:verifier.code 0} true;
  $i253 := $load.i16($M.0, $p252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 8} true;
  assume {:verifier.code 0} true;
  $i254 := $zext.i16.i32($i253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 35} true;
  assume {:verifier.code 0} true;
  $i255 := $and.i32($i254, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 40} true;
  assume {:verifier.code 0} true;
  $i256 := $ne.i32($i255, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7183, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i256} true;
  goto $bb118, $bb119;
$bb118:
  assume ($i256 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7184, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7185, 3} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb119:
  assume !(($i256 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7186, 37} true;
  assume {:verifier.code 0} true;
  $i257 := $zext.i8.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7186, 57} true;
  assume {:verifier.code 0} true;
  $i258 := $or.i32($i257, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7186, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, $i258);
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7188, 3} true;
  assume {:verifier.code 0} true;
  call serial_dl_write($p3, $i251);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7189, 15} true;
  assume {:verifier.code 0} true;
  $p259 := $p3;
  $p260 := $add.ref($p3, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7189, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $load.i32($M.0, $p260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7189, 25} true;
  assume {:verifier.code 0} true;
  $i262 := $eq.i32($i261, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7189, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i262} true;
  goto $bb121, $bb122;
$bb121:
  assume ($i262 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7190, 23} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7190, 23} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i32($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7190, 31} true;
  assume {:verifier.code 0} true;
  $i265 := $mul.i32($i264, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7190, 37} true;
  assume {:verifier.code 0} true;
  $i266 := $udiv.i32($i265, $i60);
  // WARNING: %338 = udiv i32 %337, %68, !dbg !5588, !verifier.code !5230
  call {:cexpr "baud_x32"} boogie_si_record_i32($i266);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7191, 32} true;
  assume {:verifier.code 0} true;
  $i267 := $udiv.i32($i266, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7191, 16} true;
  assume {:verifier.code 0} true;
  $i268 := $trunc.i32.i16($i267);
  // WARNING: %340 = trunc i32 %339 to i16, !dbg !5592, !verifier.code !5230
  call {:cexpr "quot___0"} boogie_si_record_i16($i268);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7192, 20} true;
  assume {:verifier.code 0} true;
  $i269 := $and.i32($i266, 31);
  // WARNING: %341 = and i32 %338, 31, !dbg !5595, !verifier.code !5230
  call {:cexpr "__x"} boogie_si_record_i32($i269);
  // WARNING: call void @llvm.dbg.value(metadata i32 %341, i64 0, metadata !6605, metadata !5230), !dbg !6606, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7194, 44} true;
  assume {:verifier.code 0} true;
  $i270 := $sdiv.i32(2, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7194, 49} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270, $i269);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7194, 56} true;
  assume {:verifier.code 0} true;
  $i272 := $udiv.i32($i271, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7194, 17} true;
  assume {:verifier.code 0} true;
  $i273 := $trunc.i32.i8($i272);
  // WARNING: %345 = trunc i32 %344 to i8, !dbg !5603, !verifier.code !5230
  call {:cexpr "quot_frac"} boogie_si_record_i8($i273);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7195, 29} true;
  assume {:verifier.code 0} true;
  $i274 := $zext.i16.i32($i268);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7195, 5} true;
  assume {:verifier.code 0} true;
  call serial_dl_write($p3, $i274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7196, 30} true;
  assume {:verifier.code 0} true;
  $i275 := $zext.i8.i32($i273);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7196, 46} true;
  assume {:verifier.code 0} true;
  $i276 := $and.i32($i275, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7196, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, $i276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7197, 3} true;
  assume {:verifier.code 0} true;
  goto $bb123;
$bb122:
  assume !(($i262 == 1));
  assume {:verifier.code 0} true;
  goto $bb123;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7200, 13} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7200, 13} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i32($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7200, 18} true;
  assume {:verifier.code 0} true;
  $i279 := $eq.i32($i278, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7200, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb124, $bb125;
$bb124:
  assume ($i279 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7201, 30} true;
  assume {:verifier.code 0} true;
  $i280 := $zext.i8.i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7201, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, $i280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7202, 3} true;
  assume {:verifier.code 0} true;
  goto $bb126;
$bb125:
  assume !(($i279 == 1));
  assume {:verifier.code 0} true;
  goto $bb126;
$bb126:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7205, 28} true;
  assume {:verifier.code 0} true;
  $i281 := $zext.i8.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7205, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, $i281);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7206, 11} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p3, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7206, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p282, $i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7207, 13} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7207, 13} true;
  assume {:verifier.code 0} true;
  $i284 := $load.i32($M.0, $p283);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7207, 18} true;
  assume {:verifier.code 0} true;
  $i285 := $ne.i32($i284, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7207, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i285} true;
  goto $bb127, $bb128;
$bb127:
  assume ($i285 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7208, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $zext.i8.i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7208, 19} true;
  assume {:verifier.code 0} true;
  $i287 := $and.i32($i286, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7208, 19} true;
  assume {:verifier.code 0} true;
  $i288 := $ne.i32($i287, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7208, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb129, $bb130;
$bb128:
  assume !(($i285 == 1));
  assume {:verifier.code 0} true;
  goto $bb132;
$bb129:
  assume ($i288 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7210, 5} true;
  assume {:verifier.code 0} true;
  goto $bb131;
$bb130:
  assume !(($i288 == 1));
  assume {:verifier.code 0} true;
  goto $bb131;
$bb131:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7213, 30} true;
  assume {:verifier.code 0} true;
  $i289 := $zext.i8.i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7213, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, $i289);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7214, 3} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7217, 36} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7217, 36} true;
  assume {:verifier.code 0} true;
  $i291 := $load.i32($M.0, $p290);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7217, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p0, $i291);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7218, 34} true;
  assume {:verifier.code 0} true;
  $p292 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7218, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p292, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7219, 13} true;
  assume {:verifier.code 0} true;
  call $i293 := tty_termios_baud_rate($p1);
  // WARNING: %376 = call i32 @tty_termios_baud_rate(%struct.ktermios* %1), !dbg !5643, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i293);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7220, 15} true;
  assume {:verifier.code 0} true;
  $i294 := $ne.i32($i293, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7220, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i294} true;
  goto $bb133, $bb134;
$bb133:
  assume ($i294 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7221, 5} true;
  assume {:verifier.code 0} true;
  call tty_termios_encode_baud_rate($p1, $i60, $i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7222, 3} true;
  assume {:verifier.code 0} true;
  goto $bb135;
$bb134:
  assume !(($i294 == 1));
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7225, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_get_baud_rate: ref;
axiom (uart_get_baud_rate == $sub.ref(0, 241134));
procedure  uart_get_baud_rate($p0: ref, $p1: ref, $p2: ref, $i3: i32, $i4: i32)
  returns ($r: i32);
const serial8250_get_divisor: ref;
axiom (serial8250_get_divisor == $sub.ref(0, 242166));
procedure  serial8250_get_divisor($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i20: i32;
  var $i19: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6665, metadata !5230), !dbg !6666, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 65536);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 30} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 45} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 45} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $udiv.i32($i7, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 58} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i12, 65536);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7002, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 32769;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7000, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7008, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 45} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 53} true;
  assume {:verifier.code 0} true;
  $i17 := $udiv.i32($i16, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 58} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7006, 12} true;
  assume {:verifier.code 0} true;
  call $i20 := uart_get_divisor($p0, $i1);
  // WARNING: %25 = call i32 @uart_get_divisor(%struct.uart_port* %0, i32 %1), !dbg !5262, !verifier.code !5232
  call {:cexpr "quot"} boogie_si_record_i32($i20);
  assume {:verifier.code 0} true;
  $i19 := $i20;
  goto $bb12;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7005, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 32770;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7003, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb9;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i10 := $i19;
  goto $bb6;
}
const uart_update_timeout: ref;
axiom (uart_update_timeout == $sub.ref(0, 243198));
procedure  uart_update_timeout($p0: ref, $i1: i32, $i2: i32);
const serial_port_out: ref;
axiom (serial_port_out == $sub.ref(0, 244230));
procedure  serial_port_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6700, metadata !5230), !dbg !6701, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6702, metadata !5230), !dbg !6703, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4589, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4589, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  call devirtbounce($p4, $p0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4590, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const is_omap1_8250: ref;
axiom (is_omap1_8250 == $sub.ref(0, 245262));
procedure  is_omap1_8250($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4709, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial_dl_write: ref;
axiom (serial_dl_write == $sub.ref(0, 246294));
procedure  serial_dl_write($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !6715, metadata !5230), !dbg !6716, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4698, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4698, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  call devirtbounce.10($p3, $p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4699, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_set_mctrl: ref;
axiom (serial8250_set_mctrl == $sub.ref(0, 247326));
procedure  serial8250_set_mctrl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i8;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $i26: i8;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i8;
  var $i32: i8;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i8;
  var $i47: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6723, metadata !5230), !dbg !6724, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6513, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %3, i64 0, metadata !6731, metadata !5230), !dbg !6732, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6515, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6515, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6515, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6516, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6516, 30} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6516, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  // WARNING: %9 = trunc i32 %8 to i8, !dbg !5245, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6517, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6520, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6520, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6520, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6521, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6521, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6521, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  // WARNING: %17 = trunc i32 %16 to i8, !dbg !5253, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6522, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb6;
$bb5:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i14 := $i8;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6525, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i1, 8192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6525, 23} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6525, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6526, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6526, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i17, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6526, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  // WARNING: %25 = trunc i32 %24 to i8, !dbg !5261, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6527, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i20 := $i14;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6530, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i32($i1, 16384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6530, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6530, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6531, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6531, 30} true;
  assume {:verifier.code 0} true;
  $i24 := $or.i32($i23, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6531, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  // WARNING: %33 = trunc i32 %32 to i8, !dbg !5269, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6532, 3} true;
  assume {:verifier.code 0} true;
  $i26 := $i25;
  goto $bb12;
$bb11:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i26 := $i20;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6535, 14} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6535, 24} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6536, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6536, 30} true;
  assume {:verifier.code 0} true;
  $i30 := $or.i32($i29, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6536, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i8($i30);
  // WARNING: %41 = trunc i32 %40 to i8, !dbg !5277, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6537, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $i31;
  goto $bb15;
$bb14:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  $i32 := $i26;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 468);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 34} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i35, $i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 63} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 469);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 63} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 49} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 47} true;
  assume {:verifier.code 0} true;
  $i41 := $or.i32($i37, $i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 90} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p2, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 90} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 76} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 74} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i41, $i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6540, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  // WARNING: %57 = trunc i32 %56 to i8, !dbg !5291, !verifier.code !5230
  call {:cexpr "mcr"} boogie_si_record_i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6541, 28} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6541, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 4, $i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6542, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tty_termios_baud_rate: ref;
axiom (tty_termios_baud_rate == $sub.ref(0, 248358));
procedure  tty_termios_baud_rate($p0: ref)
  returns ($r: i32);
const tty_termios_encode_baud_rate: ref;
axiom (tty_termios_encode_baud_rate == $sub.ref(0, 249390));
procedure  tty_termios_encode_baud_rate($p0: ref, $i1: i32, $i2: i32);
const uart_get_divisor: ref;
axiom (uart_get_divisor == $sub.ref(0, 250422));
procedure  uart_get_divisor($p0: ref, $i1: i32)
  returns ($r: i32);
const serial8250_do_pm: ref;
axiom (serial8250_do_pm == $sub.ref(0, 251454));
procedure  serial8250_do_pm($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i1;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !6790, metadata !5230), !dbg !6791, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6792, metadata !5230), !dbg !6793, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7275, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7276, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7276, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7276, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_set_sleep($p3, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7277, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_set_sleep: ref;
axiom (serial8250_set_sleep == $sub.ref(0, 252486));
procedure  serial8250_set_sleep($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i32;
  var $p12: ref;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i16;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $i22: i1;
  var $i23: i32;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !6806, metadata !5230), !dbg !6807, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 27} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5001, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5001, 24} true;
  assume {:verifier.code 0} true;
  havoc $i11;
  assume ((($i10 == 1) ==> ($i11 == 255)) && (($i10 != 1) ==> ($i11 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5001, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 139, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5002, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $p0;
  $p7 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 38} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 43} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5000, 7} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb2;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5027, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 30} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 1024);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5006, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 10} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 32} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5007, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5008, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5009, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5010, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5011, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5014, 28} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5014, 22} true;
  assume {:verifier.code 0} true;
  havoc $i23;
  assume ((($i22 == 1) ==> ($i23 == 16)) && (($i22 != 1) ==> ($i23 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5014, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 10} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i26, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 39} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5015, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5016, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5017, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5018, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5019, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5022, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5025, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const serial8250_set_isa_configurator: ref;
axiom (serial8250_set_isa_configurator == $sub.ref(0, 253518));
procedure  serial8250_set_isa_configurator($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7626, 25} true;
  assume {:verifier.code 0} true;
  $M.4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7627, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_register_8250_port: ref;
axiom (serial8250_register_8250_port == $sub.ref(0, 254550));
procedure  serial8250_register_8250_port($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i8;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i32;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i16;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i32;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $i89: i16;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $i94: i1;
  var $p95: ref;
  var $i96: i32;
  var $i97: i1;
  var $p98: ref;
  var $p99: ref;
  var $i100: i32;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i32;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i64;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i64;
  var $i135: i1;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i64;
  var $i145: i1;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i64;
  var $i155: i1;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i64;
  var $i165: i1;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i64;
  var $i175: i1;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: i64;
  var $i184: i1;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $i190: i64;
  var $i191: i1;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i64;
  var $i198: i1;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $i203: i64;
  var $i204: i1;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i32;
  var $i210: i1;
  var $p211: ref;
  var $p212: ref;
  var $i213: i32;
  var $i214: i32;
  var $i215: i32;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !6870, metadata !5230), !dbg !6871, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8075, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8075, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8075, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8076, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8191, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8080, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(serial_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8081, 52} true;
  assume {:verifier.code 0} true;
  $p6 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8081, 10} true;
  assume {:verifier.code 0} true;
  call $p7 := serial8250_find_match_or_unused($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 76} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 85} true;
  assume {:verifier.code 0} true;
  $p10 := $p7;
  $p11 := $add.ref($p7, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 90} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 95} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 76} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  $i215 := $sub.i32(0, 28);
  goto $bb58;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8083, 31} true;
  assume {:verifier.code 0} true;
  $p14 := $p7;
  $p15 := $add.ref($p7, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8083, 36} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8083, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8083, 40} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8083, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8082, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb7;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8084, 54} true;
  assume {:verifier.code 0} true;
  $p19 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8084, 7} true;
  assume {:verifier.code 0} true;
  call $i20 := uart_remove_one_port(serial8250_reg, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8085, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8088, 33} true;
  assume {:verifier.code 0} true;
  $p21 := $p0;
  $p22 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8088, 38} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8088, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $p7;
  $p25 := $add.ref($p7, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8088, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p25, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8089, 34} true;
  assume {:verifier.code 0} true;
  $p26 := $p0;
  $p27 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8089, 39} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8089, 11} true;
  assume {:verifier.code 0} true;
  $p29 := $p7;
  $p30 := $add.ref($p7, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8089, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8090, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $p0;
  $p32 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8090, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8090, 11} true;
  assume {:verifier.code 0} true;
  $p34 := $p7;
  $p35 := $add.ref($p7, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8090, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8091, 35} true;
  assume {:verifier.code 0} true;
  $p36 := $p0;
  $p37 := $add.ref($p0, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8091, 40} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8091, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $p7;
  $p40 := $add.ref($p7, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8091, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p40, $i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8092, 34} true;
  assume {:verifier.code 0} true;
  $p41 := $p0;
  $p42 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8092, 39} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8092, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $p7;
  $p45 := $add.ref($p7, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8092, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8093, 35} true;
  assume {:verifier.code 0} true;
  $p46 := $p0;
  $p47 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8093, 40} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8093, 11} true;
  assume {:verifier.code 0} true;
  $p49 := $p7;
  $p50 := $add.ref($p7, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8093, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8094, 35} true;
  assume {:verifier.code 0} true;
  $p51 := $p0;
  $p52 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8094, 40} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8094, 11} true;
  assume {:verifier.code 0} true;
  $p54 := $p7;
  $p55 := $add.ref($p7, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8094, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p55, $i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8095, 33} true;
  assume {:verifier.code 0} true;
  $p56 := $p0;
  $p57 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8095, 38} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i8($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8095, 11} true;
  assume {:verifier.code 0} true;
  $p59 := $p7;
  $p60 := $add.ref($p7, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8095, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8096, 32} true;
  assume {:verifier.code 0} true;
  $p61 := $p0;
  $p62 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8096, 37} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8096, 43} true;
  assume {:verifier.code 0} true;
  $i64 := $or.i32($i63, 268435456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8096, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $p7;
  $p66 := $add.ref($p7, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8096, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8097, 26} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8097, 26} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i16($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8097, 11} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p7, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8097, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8098, 34} true;
  assume {:verifier.code 0} true;
  $p70 := $p0;
  $p71 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8098, 39} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i64($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8098, 11} true;
  assume {:verifier.code 0} true;
  $p73 := $p7;
  $p74 := $add.ref($p7, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8098, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p74, $i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8099, 39} true;
  assume {:verifier.code 0} true;
  $p75 := $p0;
  $p76 := $add.ref($p0, 304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8099, 44} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8099, 11} true;
  assume {:verifier.code 0} true;
  $p78 := $p7;
  $p79 := $add.ref($p7, 304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8099, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p79, $p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8100, 35} true;
  assume {:verifier.code 0} true;
  $p80 := $p0;
  $p81 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8100, 40} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8100, 11} true;
  assume {:verifier.code 0} true;
  $p83 := $p7;
  $p84 := $add.ref($p7, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8100, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8101, 31} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8101, 31} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8101, 11} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p7, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8101, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8102, 34} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8102, 34} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i16($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8102, 11} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p7, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8102, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p90, $i89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 15} true;
  assume {:verifier.code 0} true;
  $p91 := $p7;
  $p92 := $add.ref($p7, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 20} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 29} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.i32($i93, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 44} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p7, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 44} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8104, 31} true;
  assume {:verifier.code 0} true;
  $p98 := $p7;
  $p99 := $add.ref($p7, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8104, 36} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i32($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8104, 13} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p7, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8104, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, $i100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8105, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8103, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i97 == 1));
  goto $bb15;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8108, 33} true;
  assume {:verifier.code 0} true;
  $p102 := $p0;
  $p103 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8108, 38} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8108, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8108, 42} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8108, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8109, 32} true;
  assume {:verifier.code 0} true;
  $p107 := $p0;
  $p108 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8109, 37} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8109, 13} true;
  assume {:verifier.code 0} true;
  $p110 := $p7;
  $p111 := $add.ref($p7, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8109, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $p109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8110, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8113, 18} true;
  assume {:verifier.code 0} true;
  $p112 := $p0;
  $p113 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8113, 23} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8113, 29} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i32($i114, 134217728);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8113, 43} true;
  assume {:verifier.code 0} true;
  $i116 := $ne.i32($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8113, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8114, 53} true;
  assume {:verifier.code 0} true;
  $p117 := $p0;
  $p118 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8114, 58} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8114, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_init_fixed_type_port($p7, $i119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8115, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8118, 30} true;
  assume {:verifier.code 0} true;
  $p120 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8118, 5} true;
  assume {:verifier.code 0} true;
  call set_io_from_upio($p120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8119, 33} true;
  assume {:verifier.code 0} true;
  $p121 := $p0;
  $p122 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8119, 38} true;
  assume {:verifier.code 0} true;
  $p123 := $load.ref($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8119, 9} true;
  assume {:verifier.code 0} true;
  $i124 := $p2i.ref.i64($p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8119, 48} true;
  assume {:verifier.code 0} true;
  $i125 := $ne.i64($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8119, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8121, 38} true;
  assume {:verifier.code 0} true;
  $p126 := $p0;
  $p127 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8121, 43} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8121, 13} true;
  assume {:verifier.code 0} true;
  $p129 := $p7;
  $p130 := $add.ref($p7, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8121, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p130, $p128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8122, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8125, 33} true;
  assume {:verifier.code 0} true;
  $p131 := $p0;
  $p132 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8125, 38} true;
  assume {:verifier.code 0} true;
  $p133 := $load.ref($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8125, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p133);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8125, 49} true;
  assume {:verifier.code 0} true;
  $i135 := $ne.i64($i134, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8125, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8128, 39} true;
  assume {:verifier.code 0} true;
  $p136 := $p0;
  $p137 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8128, 44} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8128, 13} true;
  assume {:verifier.code 0} true;
  $p139 := $p7;
  $p140 := $add.ref($p7, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8128, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p140, $p138);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8129, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8132, 33} true;
  assume {:verifier.code 0} true;
  $p141 := $p0;
  $p142 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8132, 38} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8132, 9} true;
  assume {:verifier.code 0} true;
  $i144 := $p2i.ref.i64($p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8132, 49} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i64($i144, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8132, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8133, 39} true;
  assume {:verifier.code 0} true;
  $p146 := $p0;
  $p147 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8133, 44} true;
  assume {:verifier.code 0} true;
  $p148 := $load.ref($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8133, 13} true;
  assume {:verifier.code 0} true;
  $p149 := $p7;
  $p150 := $add.ref($p7, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8133, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p150, $p148);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8134, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8137, 33} true;
  assume {:verifier.code 0} true;
  $p151 := $p0;
  $p152 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8137, 38} true;
  assume {:verifier.code 0} true;
  $p153 := $load.ref($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8137, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $p2i.ref.i64($p153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8137, 50} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.i64($i154, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8137, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8140, 40} true;
  assume {:verifier.code 0} true;
  $p156 := $p0;
  $p157 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8140, 45} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8140, 13} true;
  assume {:verifier.code 0} true;
  $p159 := $p7;
  $p160 := $add.ref($p7, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8140, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p160, $p158);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8141, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8144, 33} true;
  assume {:verifier.code 0} true;
  $p161 := $p0;
  $p162 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8144, 38} true;
  assume {:verifier.code 0} true;
  $p163 := $load.ref($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8144, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $p2i.ref.i64($p163);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8144, 41} true;
  assume {:verifier.code 0} true;
  $i165 := $ne.i64($i164, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8144, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i165} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i165 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8147, 31} true;
  assume {:verifier.code 0} true;
  $p166 := $p0;
  $p167 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8147, 36} true;
  assume {:verifier.code 0} true;
  $p168 := $load.ref($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8147, 13} true;
  assume {:verifier.code 0} true;
  $p169 := $p7;
  $p170 := $add.ref($p7, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8147, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p170, $p168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8148, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i165 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8151, 33} true;
  assume {:verifier.code 0} true;
  $p171 := $p0;
  $p172 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8151, 38} true;
  assume {:verifier.code 0} true;
  $p173 := $load.ref($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8151, 9} true;
  assume {:verifier.code 0} true;
  $i174 := $p2i.ref.i64($p173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8151, 51} true;
  assume {:verifier.code 0} true;
  $i175 := $ne.i64($i174, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8151, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i175} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i175 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8152, 41} true;
  assume {:verifier.code 0} true;
  $p176 := $p0;
  $p177 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8152, 46} true;
  assume {:verifier.code 0} true;
  $p178 := $load.ref($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8152, 13} true;
  assume {:verifier.code 0} true;
  $p179 := $p7;
  $p180 := $add.ref($p7, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8152, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p180, $p178);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8153, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i175 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8156, 33} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8156, 33} true;
  assume {:verifier.code 0} true;
  $p182 := $load.ref($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8156, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $p2i.ref.i64($p182);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8156, 41} true;
  assume {:verifier.code 0} true;
  $i184 := $ne.i64($i183, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8156, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i184 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8157, 31} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8157, 31} true;
  assume {:verifier.code 0} true;
  $p186 := $load.ref($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8157, 13} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p7, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8157, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p187, $p186);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8158, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i184 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8161, 33} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8161, 33} true;
  assume {:verifier.code 0} true;
  $p189 := $load.ref($M.0, $p188);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8161, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $p2i.ref.i64($p189);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8161, 42} true;
  assume {:verifier.code 0} true;
  $i191 := $ne.i64($i190, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8161, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8163, 32} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8163, 32} true;
  assume {:verifier.code 0} true;
  $p193 := $load.ref($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8163, 13} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p7, 496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8163, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p194, $p193);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8164, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i191 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8167, 33} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8167, 33} true;
  assume {:verifier.code 0} true;
  $p196 := $load.ref($M.0, $p195);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8167, 9} true;
  assume {:verifier.code 0} true;
  $i197 := $p2i.ref.i64($p196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8167, 37} true;
  assume {:verifier.code 0} true;
  $i198 := $ne.i64($i197, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8167, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i198 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8168, 27} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8168, 27} true;
  assume {:verifier.code 0} true;
  $p200 := $load.ref($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8168, 13} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p7, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8168, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p201, $p200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8169, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i198 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8172, 25} true;
  assume {:verifier.code 0} true;
  $p202 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $p2i.ref.i64($p202);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8172, 47} true;
  assume {:verifier.code 0} true;
  $i204 := $ne.i64($i203, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i204} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i204 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8175, 9} true;
  assume {:verifier.code 0} true;
  $p205 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8175, 43} true;
  assume {:verifier.code 0} true;
  $p206 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8175, 57} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p7, 456);
  call devirtbounce.11($p205, 0, $p206, $p207);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8176, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i204 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8179, 55} true;
  assume {:verifier.code 0} true;
  $p208 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8179, 11} true;
  assume {:verifier.code 0} true;
  call $i209 := uart_add_one_port(serial8250_reg, $p208);
  // WARNING: %257 = call i32 @uart_add_one_port(%struct.uart_driver* @serial8250_reg, %struct.uart_port* %256), !dbg !5477, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8180, 13} true;
  assume {:verifier.code 0} true;
  $i210 := $eq.i32($i209, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8180, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i210 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8181, 25} true;
  assume {:verifier.code 0} true;
  $p211 := $p7;
  $p212 := $add.ref($p7, 276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8181, 30} true;
  assume {:verifier.code 0} true;
  $i213 := $load.i32($M.0, $p212);
  // WARNING: %262 = load i32, i32* %261, align 4, !dbg !5483, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i213);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8182, 5} true;
  assume {:verifier.code 0} true;
  $i214 := $i213;
  goto $bb57;
$bb56:
  assume !(($i210 == 1));
  assume {:verifier.code 0} true;
  $i214 := $i209;
  goto $bb57;
$bb57:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8185, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $i214;
  goto $bb58;
$bb58:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8188, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(serial_mutex);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8189, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i215;
  goto $bb3;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 255582));
procedure  mutex_lock_nested($p0: ref, $i1: i32);
const serial8250_find_match_or_unused: ref;
axiom (serial8250_find_match_or_unused == $sub.ref(0, 256614));
procedure  serial8250_find_match_or_unused($p0: ref)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $p11: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i3: i32;
  var $i16: i32;
  var $i17: i1;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $i31: i32;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i18: i32;
  var $i37: i32;
  var $i38: i1;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i64;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i39: i32;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7133, metadata !5230), !dbg !7134, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $ult.i32(0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8030, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8021, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8021, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref(serial8250_ports, $mul.ref($i4, 504));
  $p6 := $add.ref(serial8250_ports, $mul.ref($i4, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8021, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := uart_match_port($p6, $p0);
  // WARNING: %8 = call i32 @uart_match_port(%struct.uart_port* %7, %struct.uart_port* %0), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8022, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8022, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $i3;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8023, 61} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  $p11 := $add.ref(serial8250_ports, $mul.ref($i10, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8023, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $p11;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8067, 1} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8027, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i3, 1);
  // WARNING: %15 = add nsw i32 %.0110, 1, !dbg !5250, !verifier.code !5232
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 24} true;
  assume {:verifier.code 0} true;
  $i15 := $ult.i32($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i13;
  assume {:branchcond $i15} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb4;
$bb11:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8029, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 24} true;
  assume {:verifier.code 0} true;
  $i17 := $ult.i32(0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8045, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 7} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref(serial8250_ports, $mul.ref($i19, 504));
  $p21 := $add.ref(serial8250_ports, $mul.ref($i19, 504));
  $p22 := $add.ref($add.ref(serial8250_ports, $mul.ref($i19, 504)), 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 46} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 46} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref(serial8250_ports, $mul.ref($i25, 504));
  $p27 := $add.ref(serial8250_ports, $mul.ref($i25, 504));
  $p28 := $add.ref($add.ref(serial8250_ports, $mul.ref($i25, 504)), 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 71} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 78} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $i18;
  assume {:branchcond $i30} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 43} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb21:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8038, 61} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i31);
  $p33 := $add.ref(serial8250_ports, $mul.ref($i32, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8038, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $p33;
  goto $bb8;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8037, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb20;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8042, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i18, 1);
  // WARNING: %42 = add nsw i32 %.16, 1, !dbg !5270, !verifier.code !5232
  call {:cexpr "i"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 26} true;
  assume {:verifier.code 0} true;
  $i35 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $ult.i32($i34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i34;
  assume {:branchcond $i36} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb16;
$bb25:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8044, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 26} true;
  assume {:verifier.code 0} true;
  $i37 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 24} true;
  assume {:verifier.code 0} true;
  $i38 := $ult.i32(0, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  $i39 := 0;
  goto $bb30;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb30:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8060, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8052, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8052, 7} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref(serial8250_ports, $mul.ref($i40, 504));
  $p42 := $add.ref(serial8250_ports, $mul.ref($i40, 504));
  $p43 := $add.ref($add.ref(serial8250_ports, $mul.ref($i40, 504)), 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8052, 32} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8052, 37} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8052, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $i39;
  assume {:branchcond $i45} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i45 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8053, 61} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i46);
  $p48 := $add.ref(serial8250_ports, $mul.ref($i47, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8053, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $p48;
  goto $bb8;
$bb33:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8057, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i39, 1);
  // WARNING: %62 = add nsw i32 %.25, 1, !dbg !5285, !verifier.code !5232
  call {:cexpr "i"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 26} true;
  assume {:verifier.code 0} true;
  $i50 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 24} true;
  assume {:verifier.code 0} true;
  $i51 := $ult.i32($i49, $i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i49;
  assume {:branchcond $i51} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb30;
$bb36:
  assume !(($i51 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8059, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8065, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb8;
}
const uart_remove_one_port: ref;
axiom (uart_remove_one_port == $sub.ref(0, 257646));
procedure  uart_remove_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const serial8250_init_fixed_type_port: ref;
axiom (serial8250_init_fixed_type_port == $sub.ref(0, 258678));
procedure  serial8250_init_fixed_type_port($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i16;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i1;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i16;
  var $p33: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !7195, metadata !5230), !dbg !7196, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7734, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7734, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7735, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  $p5 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7735, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7735, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7735, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 44} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 44} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref(uart_config, $mul.ref($i8, 24));
  $p10 := $add.ref($add.ref(uart_config, $mul.ref($i8, 24)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 62} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.6, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $p0;
  $p14 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7736, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7737, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7740, 15} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7740, 15} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7740, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7740, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 40} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 40} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref(uart_config, $mul.ref($i18, 24));
  $p20 := $add.ref($add.ref(uart_config, $mul.ref($i18, 24)), 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 58} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.7, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7741, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7742, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7745, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7745, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7745, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7745, 43} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7745, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 45} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 45} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref(uart_config, $mul.ref($i28, 24));
  $p30 := $add.ref($add.ref(uart_config, $mul.ref($i28, 24)), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 63} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.8, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i16($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 13} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7746, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7747, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7750, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const set_io_from_upio: ref;
axiom (set_io_from_upio == $sub.ref(0, 259710));
procedure  set_io_from_upio($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $p21: ref;
  var $p22: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4887, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4888, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4888, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, default_serial_dl_read);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4889, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4889, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, default_serial_dl_write);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4890, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4890, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4890, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i6, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i6, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4896, 6} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4896, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, mem_serial_in);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4897, 6} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4897, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p14, mem_serial_out);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4898, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i6, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4900, 6} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4900, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, mem32_serial_in);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4901, 6} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4901, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, mem32_serial_out);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4902, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4892, 6} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4892, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, hub6_serial_in);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4893, 6} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4893, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, hub6_serial_out);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4894, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb8;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4909, 27} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4909, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4909, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 470);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4909, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4910, 6} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4910, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, serial8250_default_handle_irq);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4911, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4904, 6} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4904, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, io_serial_in);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4905, 6} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4905, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p18, io_serial_out);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4906, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
}
const uart_add_one_port: ref;
axiom (uart_add_one_port == $sub.ref(0, 260742));
procedure  uart_add_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 261774));
procedure  mutex_unlock($p0: ref);
const default_serial_dl_read: ref;
axiom (default_serial_dl_read == $sub.ref(0, 262806));
procedure  default_serial_dl_read($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4779, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, 0);
  // WARNING: %2 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 0), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4780, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := serial_in($p0, 1);
  // WARNING: %3 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5235, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4781, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $shl.i32($i2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4781, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4781, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const default_serial_dl_write: ref;
axiom (default_serial_dl_write == $sub.ref(0, 263838));
procedure  default_serial_dl_write($p0: ref, $i1: i32)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !7294, metadata !5230), !dbg !7295, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4789, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $and.i32($i1, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4789, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4790, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $ashr.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4790, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4790, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4791, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const hub6_serial_in: ref;
axiom (hub6_serial_in == $sub.ref(0, 264870));
procedure  hub6_serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i8;
  var $p14: ref;
  var $i15: i64;
  var $i16: i32;
  var $p17: ref;
  var $i18: i64;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $i22: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7306, metadata !5230), !dbg !7307, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4799, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4799, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4799, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4799, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, $i4);
  // WARNING: %6 = shl i32 %1, %5, !dbg !5236, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 31} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 54} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 45} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i8, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 79} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 8} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4801, 17} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4801, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4801, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4800, 3} true;
  assume {:verifier.code 0} true;
  call outb($i13, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4802, 38} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4802, 38} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4802, 20} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i64.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4802, 45} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4802, 9} true;
  assume {:verifier.code 0} true;
  call $i21 := inb($i20);
  // WARNING: %22 = call zeroext i8 @inb(i32 %21), !dbg !5250, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4803, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4803, 3} true;
  assume {:verifier.code 0} true;
  $r := $i22;
  $exn := false;
  return;
}
const hub6_serial_out: ref;
axiom (hub6_serial_out == $sub.ref(0, 265902));
procedure  hub6_serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i8;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $p15: ref;
  var $i16: i64;
  var $i17: i32;
  var $i18: i8;
  var $i19: i32;
  var $i20: i8;
  var $p21: ref;
  var $i22: i64;
  var $i23: i32;
  var $i24: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7333, metadata !5230), !dbg !7334, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7335, metadata !5230), !dbg !7336, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4811, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4811, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4811, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4811, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i32($i1, $i5);
  // WARNING: %7 = shl i32 %1, %6, !dbg !5238, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 40} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 54} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 45} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i9, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 79} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i12, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4813, 17} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4813, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4813, 8} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i64.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4812, 3} true;
  assume {:verifier.code 0} true;
  call outb($i14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 8} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i8($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 64} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 64} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 46} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i64.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 71} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4814, 3} true;
  assume {:verifier.code 0} true;
  call outb($i20, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4815, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mem_serial_in: ref;
axiom (mem_serial_in == $sub.ref(0, 266934));
procedure  mem_serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7361, metadata !5230), !dbg !7362, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4823, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4823, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4823, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4823, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, $i4);
  // WARNING: %6 = shl i32 %1, %5, !dbg !5236, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4824, 43} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4824, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4824, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4824, 51} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4824, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := readb($p9);
  // WARNING: %11 = call zeroext i8 @readb(i8* %10), !dbg !5240, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4825, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4825, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const mem_serial_out: ref;
axiom (mem_serial_out == $sub.ref(0, 267966));
procedure  mem_serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7378, metadata !5230), !dbg !7379, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7380, metadata !5230), !dbg !7381, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4833, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4833, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4833, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4833, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i32($i1, $i5);
  // WARNING: %7 = shl i32 %1, %6, !dbg !5238, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 63} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 63} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 73} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 71} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, $mul.ref($i12, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4834, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i9, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4835, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mem32_serial_in: ref;
axiom (mem32_serial_in == $sub.ref(0, 268998));
procedure  mem32_serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7396, metadata !5230), !dbg !7397, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4853, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4853, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4853, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4853, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, $i4);
  // WARNING: %6 = shl i32 %1, %5, !dbg !5236, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4854, 43} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4854, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4854, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4854, 51} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4854, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := readl($p9);
  // WARNING: %11 = call i32 @readl(i8* %10), !dbg !5240, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4855, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const mem32_serial_out: ref;
axiom (mem32_serial_out == $sub.ref(0, 270030));
procedure  mem32_serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7412, metadata !5230), !dbg !7413, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7414, metadata !5230), !dbg !7415, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4843, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4843, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4843, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4843, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i32($i1, $i5);
  // WARNING: %7 = shl i32 %1, %6, !dbg !5238, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4844, 54} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4844, 54} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4844, 64} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4844, 62} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p8, $mul.ref($i9, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4844, 3} true;
  assume {:verifier.code 0} true;
  call writel($i2, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4845, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const io_serial_in: ref;
axiom (io_serial_in == $sub.ref(0, 271062));
procedure  io_serial_in($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7428, metadata !5230), !dbg !7429, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4863, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4863, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4863, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4863, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i1, $i4);
  // WARNING: %6 = shl i32 %1, %5, !dbg !5236, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4864, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4864, 38} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4864, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4864, 45} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4864, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := inb($i9);
  // WARNING: %11 = call zeroext i8 @inb(i32 %10), !dbg !5240, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4865, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4865, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const io_serial_out: ref;
axiom (io_serial_out == $sub.ref(0, 272094));
procedure  io_serial_out($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !7445, metadata !5230), !dbg !7446, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7447, metadata !5230), !dbg !7448, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4873, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4873, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4873, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4873, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i32($i1, $i5);
  // WARNING: %7 = shl i32 %1, %6, !dbg !5238, !verifier.code !5230
  call {:cexpr "offset"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 8} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 8} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 64} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 64} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 46} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 71} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i12, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4874, 3} true;
  assume {:verifier.code 0} true;
  call outb($i9, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4875, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_default_handle_irq: ref;
axiom (serial8250_default_handle_irq == $sub.ref(0, 273126));
procedure  serial8250_default_handle_irq($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6099, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_port_in($p0, 2);
  // WARNING: %2 = call i32 @serial_port_in(%struct.uart_port* %0, i32 2), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7467, metadata !5230), !dbg !7468, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6101, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := serial8250_handle_irq($p0, $i1);
  // WARNING: %3 = call i32 @serial8250_handle_irq(%struct.uart_port* %0, i32 %2), !dbg !5237, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6102, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const outb: ref;
axiom (outb == $sub.ref(0, 274158));
procedure  outb($i0: i8, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !7478, metadata !5230), !dbg !7479, !verifier.code !5232
  call devirtbounce.12(0, $i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4336, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const inb: ref;
axiom (inb == $sub.ref(0, 275190));
procedure  inb($i0: i32)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  call $i1 := devirtbounce.13(0, $i0);
  // WARNING: %2 = call i8 @devirtbounce.13(i8 (i32)* asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}", i32 %0)
  call {:cexpr "value"} boogie_si_record_i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4345, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const writel: ref;
axiom (writel == $sub.ref(0, 276222));
procedure  writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4324, 58} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.14(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4325, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const readl: ref;
axiom (readl == $sub.ref(0, 277254));
procedure  readl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4306, 57} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce.15(0, $p1);
  // WARNING: %3 = call i32 @devirtbounce.15(i32 (i32*)* asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %2)
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4307, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const writeb: ref;
axiom (writeb == $sub.ref(0, 278286));
procedure  writeb($i0: i8, $p1: ref)
{
$bb0:
  call devirtbounce.16(0, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4316, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const readb: ref;
axiom (readb == $sub.ref(0, 279318));
procedure  readb($p0: ref)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  call $i1 := devirtbounce.17(0, $p0);
  // WARNING: %2 = call i8 @devirtbounce.17(i8 (i8*)* asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i8* %0)
  call {:cexpr "ret"} boogie_si_record_i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4298, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const uart_match_port: ref;
axiom (uart_match_port == $sub.ref(0, 280350));
procedure  uart_match_port($p0: ref, $p1: ref)
  returns ($r: i32);
const serial8250_unregister_port: ref;
axiom (serial8250_unregister_port == $sub.ref(0, 281382));
procedure  serial8250_unregister_port($i0: i32)
{
  var $i1: i64;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i16;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8208, 58} true;
  assume {:verifier.code 0} true;
  $i1 := $sext.i32.i64($i0);
  $p2 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8209, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(serial_mutex, 0);
  $p3 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8210, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := uart_remove_one_port(serial8250_reg, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8211, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8211, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8211, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8211, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  $p8 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p9 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8212, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8212, 41} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, $sub.i32(0, 268435457));
  $p12 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p13 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8212, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i11);
  $p14 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p15 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8213, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8214, 24} true;
  assume {:verifier.code 0} true;
  $p16 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8214, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 16);
  $p18 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p19 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8214, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, $p17);
  $p20 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p21 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 66} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 43} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i32.i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 43} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref(uart_config, $mul.ref($i23, 24));
  $p25 := $add.ref($add.ref(uart_config, $mul.ref($i23, 24)), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 72} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.8, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 26} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i32.i16($i26);
  $p28 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8215, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p28, $i27);
  $p29 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8216, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := uart_add_one_port(serial8250_reg, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8217, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  $p31 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p32 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8218, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $0.ref);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8220, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(serial_mutex);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8221, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_suspend_port: ref;
axiom (serial8250_suspend_port == $sub.ref(0, 282414));
procedure  serial8250_suspend_port($i0: i32)
{
  var $i1: i64;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7840, 41} true;
  assume {:verifier.code 0} true;
  $i1 := $sext.i32.i64($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7840, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p3 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7840, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := uart_suspend_port(serial8250_reg, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7841, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_suspend_port: ref;
axiom (uart_suspend_port == $sub.ref(0, 283446));
procedure  uart_suspend_port($p0: ref, $p1: ref)
  returns ($r: i32);
const serial8250_resume_port: ref;
axiom (serial8250_resume_port == $sub.ref(0, 284478));
procedure  serial8250_resume_port($i0: i32)
{
  var $i1: i64;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7850, 60} true;
  assume {:verifier.code 0} true;
  $i1 := $sext.i32.i64($i0);
  $p2 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p3 := $add.ref(serial8250_ports, $mul.ref($i1, 504));
  $p4 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7852, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7852, 8} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7852, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i6, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7852, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7852, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7853, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p3, 3, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7854, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := ns16550a_goto_highspeed($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7855, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p3, 3, 0);
  $p10 := $add.ref($add.ref(serial8250_ports, $mul.ref($i1, 504)), 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7856, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7857, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7860, 3} true;
  assume {:verifier.code 0} true;
  call $i11 := uart_resume_port(serial8250_reg, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7861, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ns16550a_goto_highspeed: ref;
axiom (ns16550a_goto_highspeed == $sub.ref(0, 285510));
procedure  ns16550a_goto_highspeed($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i8: i32;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i8;
  var $i13: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5316, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, 4);
  // WARNING: %2 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5317, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  // WARNING: %3 = trunc i32 %2 to i8, !dbg !5235, !verifier.code !5230
  call {:cexpr "status"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5318, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5318, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5318, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5318, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5319, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5321, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5321, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5321, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  // WARNING: %11 = trunc i32 %10 to i8, !dbg !5245, !verifier.code !5230
  call {:cexpr "status"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5322, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5322, 36} true;
  assume {:verifier.code 0} true;
  $i11 := $or.i32($i10, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5322, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i8($i11);
  // WARNING: %14 = trunc i32 %13 to i8, !dbg !5248, !verifier.code !5230
  call {:cexpr "status"} boogie_si_record_i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5323, 27} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5323, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i13);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5327, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5325, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
}
const uart_resume_port: ref;
axiom (uart_resume_port == $sub.ref(0, 286542));
procedure  uart_resume_port($p0: ref, $p1: ref)
  returns ($r: i32);
const serial8250_tx_dma: ref;
axiom (serial8250_tx_dma == $sub.ref(0, 287574));
procedure  serial8250_tx_dma($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $i44: i1;
  var $p45: ref;
  var $i46: i8;
  var $i47: i8;
  var $i48: i8;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $i20: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10617, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10617, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10618, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  $p4 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10618, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10618, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 1072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10619, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10619, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := uart_tx_stopped($p7);
  // WARNING: %9 = call i32 @uart_tx_stopped(%struct.uart_port* %8), !dbg !5242, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 12} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 17} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10621, 5} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb8;
$bb3:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 37} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 58} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 67} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 74} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb2;
$bb5:
  assume !(($i14 == 1));
  $p15 := $add.ref($add.ref($p5, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 83} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  $p17 := $add.ref($add.ref($p5, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 97} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 88} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10620, 7} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb2;
$bb7:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10643, 1} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
$bb9:
  $p21 := $add.ref($add.ref($p5, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10625, 45} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10625, 22} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i32(4096, $i22);
  // WARNING: %28 = sub i32 4096, %27, !dbg !5263, !verifier.code !5230
  call {:cexpr "end"} boogie_si_record_i32($i23);
  $p24 := $add.ref($add.ref($p5, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10626, 14} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10626, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10626, 26} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i26, 4095);
  // WARNING: %32 = and i32 %31, 4095, !dbg !5268, !verifier.code !5230
  call {:cexpr "n"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $slt.i32($i27, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $i27;
  goto $bb12;
$bb11:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $i23;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 28} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10627, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 43} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 43} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 56} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 56} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  $p36 := $add.ref($add.ref($p5, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 85} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 66} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 64} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i35, $i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10629, 43} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p2, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10629, 43} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i64($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10628, 10} true;
  assume {:verifier.code 0} true;
  call $p42 := dmaengine_prep_slave_single($p33, $i39, $i41, 1, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10630, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10630, 28} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10630, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10631, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32(0, 16);
  goto $bb8;
$bb14:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10635, 8} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p2, 192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10635, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10635, 19} true;
  assume {:verifier.code 0} true;
  $i47 := $and.i8($i46, $sub.i8(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10635, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $or.i8($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10635, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10636, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p42, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10636, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p49, __dma_tx_complete);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10637, 26} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10637, 9} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p42, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10637, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10638, 20} true;
  assume {:verifier.code 0} true;
  call $i52 := dmaengine_submit($p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10638, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10638, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 37} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 37} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 46} true;
  assume {:verifier.code 0} true;
  $p56 := $p55;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 46} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 55} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 55} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 65} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 65} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10639, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_device($p59, $i61, 4096, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10640, 32} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10640, 32} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10640, 3} true;
  assume {:verifier.code 0} true;
  call dma_async_issue_pending($p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10641, 3} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb8;
}
const __dma_tx_complete: ref;
axiom (__dma_tx_complete == $sub.ref(0, 288606));
procedure  __dma_tx_complete($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $i17: i8;
  var $i18: i8;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i64;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $i35: i64;
  var $i36: i32;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $i46: i64;
  var $i47: i64;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10556, 7} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10557, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10557, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10558, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  $p5 := $add.ref($p1, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10558, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10558, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 1072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 34} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 43} true;
  assume {:verifier.code 0} true;
  $p10 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 52} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 52} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 62} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 62} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10559, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_cpu($p13, $i15, 4096, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10560, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10561, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p3, 192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10561, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10561, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i8($i17, $sub.i8(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10561, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, $i18);
  $p19 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 71} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 71} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 51} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i64.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 49} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i20, $i23);
  $p25 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10562, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  $p26 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10563, 22} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10563, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $and.i32($i27, 4095);
  $p29 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10563, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 26} true;
  assume {:verifier.code 0} true;
  $p30 := $p1;
  $p31 := $add.ref($p1, 184);
  $p32 := $add.ref($add.ref($p1, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 56} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p3, 184);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 56} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 43} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i64.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 41} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i32($i33, $i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 6} true;
  assume {:verifier.code 0} true;
  $p38 := $p1;
  $p39 := $add.ref($p1, 184);
  $p40 := $add.ref($add.ref($p1, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10564, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i37);
  $p41 := $add.ref($add.ref($p6, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 31} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  $p43 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 44} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 36} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.i32($i42, $i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 8} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 50} true;
  assume {:verifier.code 0} true;
  $i47 := $and.i64($i46, 4095);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 60} true;
  assume {:verifier.code 0} true;
  $i48 := $ule.i64($i47, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10565, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10566, 28} true;
  assume {:verifier.code 0} true;
  $p49 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10566, 5} true;
  assume {:verifier.code 0} true;
  call uart_write_wakeup($p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10567, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $p50 := $add.ref($add.ref($p6, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10570, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  $p52 := $add.ref($add.ref($p6, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10570, 27} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10570, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i51, $i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10570, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10571, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10571, 11} true;
  assume {:verifier.code 0} true;
  call $i56 := uart_tx_stopped($p55);
  // WARNING: %61 = call i32 @uart_tx_stopped(%struct.uart_port* %60), !dbg !5286, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10572, 13} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10572, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10573, 7} true;
  assume {:verifier.code 0} true;
  call $i58 := serial8250_tx_dma($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10574, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10577, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10580, 31} true;
  assume {:verifier.code 0} true;
  $p59 := $p1;
  $p60 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10580, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p60, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10581, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_request_dma: ref;
axiom (serial8250_request_dma == $sub.ref(0, 289638));
procedure  serial8250_request_dma($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $i79: i1;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i64;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $i157: i24;
  var $i158: i24;
  var $i159: i24;
  var $p160: ref;
  var $p161: ref;
  var $i162: i8;
  var $i163: i64;
  var $i164: i64;
  var $i165: i64;
  var $i166: i1;
  var $i167: i32;
  var $i168: i1;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $i172: i32;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $i37: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10718, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10718, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10719, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 32);
  $p7 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10719, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10720, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 32);
  $p9 := $add.ref($add.ref($p5, 32), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10720, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10721, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  $p11 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10721, 34} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10721, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p5, 32);
  $p14 := $add.ref($add.ref($p5, 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10721, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10722, 8} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 80);
  $p16 := $add.ref($p5, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10722, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10723, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 80);
  $p18 := $add.ref($add.ref($p5, 80), 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10723, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10724, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  $p20 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10724, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10724, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p5, 80);
  $p23 := $add.ref($add.ref($p5, 80), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10724, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p23, $i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10725, 3} true;
  assume {:verifier.code 0} true;
  call __dma_cap_zero($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10726, 3} true;
  assume {:verifier.code 0} true;
  call __dma_cap_set(9, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 57} true;
  assume {:verifier.code 0} true;
  $p24 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 57} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 66} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 66} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 79} true;
  assume {:verifier.code 0} true;
  $p28 := $p0;
  $p29 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10728, 84} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10727, 17} true;
  assume {:verifier.code 0} true;
  call $p31 := __dma_request_slave_channel_compat($p1, $p25, $p27, $p30, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10727, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10727, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10730, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10730, 28} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10730, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10730, 35} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10730, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10731, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10806, 1} true;
  assume {:verifier.code 0} true;
  $r := $i37;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10735, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10735, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10735, 46} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10735, 3} true;
  assume {:verifier.code 0} true;
  call $i41 := dmaengine_slave_config($p39, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 57} true;
  assume {:verifier.code 0} true;
  $p42 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 57} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 66} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 66} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 79} true;
  assume {:verifier.code 0} true;
  $p46 := $p0;
  $p47 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10737, 84} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10736, 17} true;
  assume {:verifier.code 0} true;
  call $p49 := __dma_request_slave_channel_compat($p1, $p43, $p45, $p48, .str.1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10736, 8} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10736, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p50, $p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10739, 28} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10739, 28} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10739, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10739, 35} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10739, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10740, 30} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10740, 30} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10740, 5} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10741, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $sub.i32(0, 19);
  goto $bb3;
$bb6:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10745, 31} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10745, 31} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10745, 46} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p5, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10745, 3} true;
  assume {:verifier.code 0} true;
  call $i60 := dmaengine_slave_config($p58, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10746, 12} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p5, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10746, 12} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10746, 20} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10747, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p5, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10747, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p64, 4096);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10748, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 40} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 40} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 49} true;
  assume {:verifier.code 0} true;
  $p67 := $p66;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 49} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 58} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 58} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 68} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p5, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 68} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i64($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 84} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 17} true;
  assume {:verifier.code 0} true;
  call $p74 := dma_alloc_attrs($p70, $i72, $p73, 208, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 8} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p5, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10751, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10753, 28} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10753, 28} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10753, 7} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10753, 35} true;
  assume {:verifier.code 0} true;
  $i79 := $eq.i64($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10753, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10754, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10802, 28} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10802, 28} true;
  assume {:verifier.code 0} true;
  $p174 := $load.ref($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10802, 3} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p174);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10803, 28} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10803, 28} true;
  assume {:verifier.code 0} true;
  $p176 := $load.ref($M.0, $p175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10803, 3} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10804, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $sub.i32(0, 12);
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 46} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 46} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 55} true;
  assume {:verifier.code 0} true;
  $p82 := $p81;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 55} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 64} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 64} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 81} true;
  assume {:verifier.code 0} true;
  $p86 := $p0;
  $p87 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 86} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 94} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 1072);
  $p90 := $add.ref($p88, 1072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 99} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 18} true;
  assume {:verifier.code 0} true;
  call $i92 := dma_map_single_attrs($p85, $p91, 4096, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 8} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p5, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10758, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p93, $i92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 34} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 34} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 43} true;
  assume {:verifier.code 0} true;
  $p96 := $p95;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 43} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 52} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p97, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 52} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 62} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p5, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 62} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i64($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10760, 9} true;
  assume {:verifier.code 0} true;
  call $i102 := dma_mapping_error($p99, $i101);
  // WARNING: %114 = call i32 @dma_mapping_error(%struct.device* %111, i64 %113), !dbg !5348, !verifier.code !5227
  call {:cexpr "tmp"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10761, 11} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i102, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10761, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 27} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 27} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 36} true;
  assume {:verifier.code 0} true;
  $p106 := $p105;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 36} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 45} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 45} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 55} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p5, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 55} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i64($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 69} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p5, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 69} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 82} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 82} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i64($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10762, 5} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p109, $i111, $p113, $i115, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb16:
  assume !(($i103 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10768, 7} true;
  assume {:verifier.code 0} true;
  $p116 := $p2;
  $p117 := $p2;
  $p118 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10768, 30} true;
  assume {:verifier.code 0} true;
  $p119 := $bitcast.ref.ref($p118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10768, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p119, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10769, 7} true;
  assume {:verifier.code 0} true;
  $p120 := $p2;
  $p121 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10769, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p121, $sub.i32(0, 559067475));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10770, 7} true;
  assume {:verifier.code 0} true;
  $p122 := $p2;
  $p123 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10770, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p123, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10771, 7} true;
  assume {:verifier.code 0} true;
  $p124 := $p2;
  $p125 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10771, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p125, $i2p.i64.ref($sub.i64(0, 1)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10772, 7} true;
  assume {:verifier.code 0} true;
  $p126 := $p2;
  $p127 := $add.ref($p2, 24);
  $p128 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10772, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p128, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10773, 7} true;
  assume {:verifier.code 0} true;
  $p129 := $p2;
  $p130 := $add.ref($p2, 24);
  $p131 := $add.ref($add.ref($p2, 24), 8);
  $p132 := $add.ref($add.ref($p2, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10773, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p132, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10774, 7} true;
  assume {:verifier.code 0} true;
  $p133 := $p2;
  $p134 := $add.ref($p2, 24);
  $p135 := $add.ref($add.ref($p2, 24), 8);
  $p136 := $add.ref($add.ref($add.ref($p2, 24), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10774, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p136, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10775, 7} true;
  assume {:verifier.code 0} true;
  $p137 := $p2;
  $p138 := $add.ref($p2, 24);
  $p139 := $add.ref($add.ref($p2, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10775, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p139, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10776, 7} true;
  assume {:verifier.code 0} true;
  $p140 := $p2;
  $p141 := $add.ref($p2, 24);
  $p142 := $add.ref($add.ref($p2, 24), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10776, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10777, 7} true;
  assume {:verifier.code 0} true;
  $p143 := $p2;
  $p144 := $add.ref($p2, 24);
  $p145 := $add.ref($add.ref($p2, 24), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10777, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p145, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10778, 7} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10778, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p146, 1250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10779, 7} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p2, 76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10779, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p147, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10780, 7} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p2, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10780, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p148, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10781, 7} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p2, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10781, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10782, 7} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10782, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p150, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10783, 14} true;
  assume {:verifier.code 0} true;
  $p151 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10783, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p151, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10784, 14} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10784, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p152, .str.4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10785, 14} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10785, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p153, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10786, 14} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10786, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p154, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 14} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 14} true;
  assume {:verifier.code 0} true;
  $p156 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 21} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i24($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 21} true;
  assume {:verifier.code 0} true;
  $i158 := $and.i24($i157, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 21} true;
  assume {:verifier.code 0} true;
  $i159 := $or.i24($i158, 267);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10787, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p156, $i159);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10788, 14} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10788, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p160, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10789, 51} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10789, 51} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i8($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10789, 33} true;
  assume {:verifier.code 0} true;
  $i163 := $zext.i8.i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10789, 57} true;
  assume {:verifier.code 0} true;
  $i164 := $and.i64($i163, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10789, 13} true;
  assume {:verifier.code 0} true;
  call $i165 := ldv__builtin_expect($i164, 0);
  // WARNING: %180 = call i64 @ldv__builtin_expect(i64 %179, i64 0), !dbg !5409, !verifier.code !5227
  call {:cexpr "tmp___0"} boogie_si_record_i64($i165);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10790, 15} true;
  assume {:verifier.code 0} true;
  $i166 := $ne.i64($i165, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10790, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i166 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10791, 15} true;
  assume {:verifier.code 0} true;
  call $i167 := ___ratelimit($p2, .str.4);
  // WARNING: %183 = call i32 @___ratelimit(%struct.ratelimit_state* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)), !dbg !5415, !verifier.code !5227
  call {:cexpr "tmp___1"} boogie_si_record_i32($i167);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10792, 17} true;
  assume {:verifier.code 0} true;
  $i168 := $ne.i32($i167, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10792, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb20:
  assume ($i168 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10793, 67} true;
  assume {:verifier.code 0} true;
  $p169 := $p0;
  $p170 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10793, 72} true;
  assume {:verifier.code 0} true;
  $p171 := $load.ref($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10793, 7} true;
  assume {:verifier.code 0} true;
  call $i172 := __dynamic_dev_dbg.ref.ref.ref($p3, $p171, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10794, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i168 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10797, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10800, 3} true;
  assume {:verifier.code 0} true;
  $i37 := 0;
  goto $bb3;
}
const __dma_cap_zero: ref;
axiom (__dma_cap_zero == $sub.ref(0, 290670));
procedure  __dma_cap_zero($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10508, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10508, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  call bitmap_zero($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10509, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dma_cap_set: ref;
axiom (__dma_cap_set == $sub.ref(0, 291702));
procedure  __dma_cap_set($i0: i32, $p1: ref)
{
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10499, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i32.i64($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10499, 64} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10499, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10499, 3} true;
  assume {:verifier.code 0} true;
  call set_bit($i2, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10500, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dma_request_slave_channel_compat: ref;
axiom (__dma_request_slave_channel_compat == $sub.ref(0, 292734));
procedure  __dma_request_slave_channel_compat($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: ref)
{
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10537, 10} true;
  assume {:verifier.code 0} true;
  call $p5 := dma_request_slave_channel($p3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10538, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10538, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10538, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10539, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $p5;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10546, 1} true;
  assume {:verifier.code 0} true;
  $r := $p8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10543, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := __dma_request_channel($p0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10544, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $p9;
  goto $bb3;
}
const dmaengine_slave_config: ref;
axiom (dmaengine_slave_config == $sub.ref(0, 293766));
procedure  dmaengine_slave_config($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10436, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10436, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := dmaengine_device_control($p0, 3, $i2);
  // WARNING: %4 = call i32 @dmaengine_device_control(%struct.dma_chan* %0, i32 3, i64 %3), !dbg !5238, !verifier.code !5233
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10437, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const dma_release_channel: ref;
axiom (dma_release_channel == $sub.ref(0, 294798));
procedure  dma_release_channel($p0: ref);
const dma_alloc_attrs: ref;
axiom (dma_alloc_attrs == $sub.ref(0, 295830));
procedure  dma_alloc_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8051, metadata !5230), !dbg !8052, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !8055, metadata !5230), !dbg !8056, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10353, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10355, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i3, $sub.i32(0, 8));
  // WARNING: %7 = and i32 %3, -8, !dbg !5245, !verifier.code !5230
  call {:cexpr "gfp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10356, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10356, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10356, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10358, 3} true;
  assume {:verifier.code 0} true;
  $p9 := x86_dma_fallback_dev;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $p9 := $p0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10361, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := is_device_dma_capable($p9);
  // WARNING: %13 = call i32 @is_device_dma_capable(%struct.device* %.01), !dbg !5252, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10362, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10363, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10379, 1} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10367, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10367, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10367, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10367, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10367, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10370, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10374, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := dma_alloc_coherent_gfp_flags($p9, $i6);
  // WARNING: %25 = call i32 @dma_alloc_coherent_gfp_flags(%struct.device* %.01, i32 %7), !dbg !5267, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10375, 20} true;
  assume {:verifier.code 0} true;
  $p18 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10375, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call $p20 := devirtbounce.18($p19, $p9, $i1, $p2, $i17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10376, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10376, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_alloc_coherent($p9, $i1, $i21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10377, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $p20;
  goto $bb6;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 296862));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: i64, $i3: i32, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8104, metadata !5230), !dbg !8105, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8106, metadata !5230), !dbg !8107, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10165, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10167, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10167, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10168, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !5249, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10169, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10169, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10169, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10169, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !5254, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10170, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  call devirtbounce.6(0, .str.83, 19, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10171, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10174, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10178, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10178, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  // WARNING: %19 = call i64 @__phys_addr(i64 %18), !dbg !5264, !verifier.code !5232
  call {:cexpr "tmp___2"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10179, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10179, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10179, 77} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.i64($i14, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10179, 66} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i17, 64));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10180, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10180, 49} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 4095);
  call $i21 := devirtbounce.19($p16, $p0, $p18, $i20, $i2, $i3, $p4);
  // WARNING: %26 = call i64 @devirtbounce.19(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_183*)* %21, %struct.device* %0, %struct.page* %23, i64 %25, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_183* %4)
  call {:cexpr "addr"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10181, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10181, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := __phys_addr($i22);
  // WARNING: %28 = call i64 @__phys_addr(i64 %27), !dbg !5275, !verifier.code !5232
  call {:cexpr "tmp___3"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10182, 70} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.i64($i23, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10182, 59} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i24, 64));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10182, 78} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10182, 98} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i64($i26, 4095);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10182, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p25, $i27, $i2, $i3, $i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10184, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const dma_mapping_error: ref;
axiom (dma_mapping_error == $sub.ref(0, 297894));
procedure  dma_mapping_error($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i11: i1;
  var $i12: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8156, metadata !5230), !dbg !8157, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10294, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10296, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_mapping_error($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10297, 28} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10297, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10297, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10297, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10299, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10299, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  call $i9 := devirtbounce.20($p8, $p0, $i1);
  // WARNING: %11 = call i32 @devirtbounce.20(i32 (%struct.device*, i64)* %10, %struct.device* %0, i64 %1)
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10300, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10306, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10304, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10304, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10304, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i12;
  goto $bb3;
}
const dma_free_attrs: ref;
axiom (dma_free_attrs == $sub.ref(0, 298926));
procedure  dma_free_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i64, $p4: ref)
{
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8181, metadata !5230), !dbg !8182, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !8185, metadata !5230), !dbg !8186, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10391, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10393, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := arch_local_save_flags();
  // WARNING: %7 = call i64 @arch_local_save_flags(), !dbg !5245, !verifier.code !5230
  call {:cexpr "_flags"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10394, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := arch_irqs_disabled_flags($i6);
  // WARNING: %8 = call i32 @arch_irqs_disabled_flags(i64 %7), !dbg !5248, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10395, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10395, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %10 = zext i1 %9 to i32, !dbg !5251, !verifier.code !5230
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10396, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10396, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10396, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10396, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !5256, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10397, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10397, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10398, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.84, 166);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10399, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10402, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10402, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10402, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10402, 3} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10403, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_free_coherent($p0, $i1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10404, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10404, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10404, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10404, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10404, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10407, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10407, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  call devirtbounce.21($p24, $p0, $i1, $p2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10408, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10411, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ___ratelimit: ref;
axiom (___ratelimit == $sub.ref(0, 299958));
procedure  ___ratelimit($p0: ref, $p1: ref)
  returns ($r: i32);
const __dynamic_dev_dbg: ref;
axiom (__dynamic_dev_dbg == $sub.ref(0, 300990));
procedure  __dynamic_dev_dbg.ref.ref.ref($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const arch_local_save_flags: ref;
axiom (arch_local_save_flags == $sub.ref(0, 302022));
procedure  arch_local_save_flags()
  returns ($r: i64)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !8233, metadata !5230), !dbg !8234, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !8235, metadata !5230), !dbg !8236, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !8237, metadata !5230), !dbg !8238, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !8239, metadata !5230), !dbg !8240, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 64} true;
  assume {:verifier.code 0} true;
  $p0 := $load.ref($M.0, pv_irq_ops);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 69} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 69} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10062, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !5245, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10064, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10064, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  call devirtbounce.6(0, .str.85, 804, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10065, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10068, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  call $i7 := devirtbounce.22(0, 44, pv_irq_ops, 1);
  // WARNING: %12 = call i64 @devirtbounce.22(i64 (i64, i8**, i32)* asm sideeffect "771:\0A\09call *${2:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${1:c}\0A  .byte 772b-771b\0A  .short ${3:c}\0A.popsection\0A", "={ax},i,i,i,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i64 44, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), i32 1)
  call {:cexpr "__eax"} boogie_si_record_i64($i7);
  // WARNING: call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !8241, metadata !5230), !dbg !8242, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10076, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const arch_irqs_disabled_flags: ref;
axiom (arch_irqs_disabled_flags == $sub.ref(0, 303054));
procedure  arch_irqs_disabled_flags($i0: i64)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10084, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $and.i64($i0, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10084, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10084, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10084, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 304086));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const debug_dma_free_coherent: ref;
axiom (debug_dma_free_coherent == $sub.ref(0, 305118));
procedure  debug_dma_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const debug_dma_mapping_error: ref;
axiom (debug_dma_mapping_error == $sub.ref(0, 306150));
procedure  debug_dma_mapping_error($p0: ref, $i1: i64);
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 307182));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !8271, metadata !5230), !dbg !8272, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10123, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 308214));
procedure  __phys_addr($i0: i64)
  returns ($r: i64);
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 309246));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i64, $i6: i1);
const is_device_dma_capable: ref;
axiom (is_device_dma_capable == $sub.ref(0, 310278));
procedure  is_device_dma_capable($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i5: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 74} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 84} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 1160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 77} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 94} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:verifier.code 0} true;
  $i5 := $i9;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 74} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10115, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const dma_alloc_coherent_gfp_flags: ref;
axiom (dma_alloc_coherent_gfp_flags == $sub.ref(0, 311310));
procedure  dma_alloc_coherent_gfp_flags($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8295, metadata !5230), !dbg !8296, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10328, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := dma_alloc_coherent_mask($p0, $i1);
  // WARNING: %3 = call i64 @dma_alloc_coherent_mask(%struct.device* %0, i32 %1), !dbg !5235, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i2);
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !8301, metadata !5230), !dbg !8302, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10330, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $ule.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10330, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10331, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i1, 1);
  // WARNING: %6 = or i32 %1, 1, !dbg !5244, !verifier.code !5232
  call {:cexpr "gfp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10332, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i5 := $i1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i2, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 68} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i10 := $i5;
  goto $bb9;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10336, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, 4);
  // WARNING: %14 = or i32 %.0, 4, !dbg !5254, !verifier.code !5232
  call {:cexpr "gfp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10337, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10335, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10340, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const debug_dma_alloc_coherent: ref;
axiom (debug_dma_alloc_coherent == $sub.ref(0, 312342));
procedure  debug_dma_alloc_coherent($p0: ref, $i1: i64, $i2: i64, $p3: ref);
const dma_alloc_coherent_mask: ref;
axiom (dma_alloc_coherent_mask == $sub.ref(0, 313374));
procedure  dma_alloc_coherent_mask($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8325, metadata !5230), !dbg !8326, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8327, metadata !5230), !dbg !8328, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10313, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10313, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  // WARNING: %4 = load i64, i64* %3, align 8, !dbg !5237, !verifier.code !5232
  call {:cexpr "dma_mask"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10314, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10314, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10315, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10315, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10315, 16} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 16777215)) && (($i6 != 1) ==> ($i7 == 4294967295)));
  // WARNING: %9 = select i1 %8, i64 16777215, i64 4294967295, !dbg !5244, !verifier.code !5232
  call {:cexpr "dma_mask"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10316, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i8 := $i3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10319, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const dma_request_slave_channel: ref;
axiom (dma_request_slave_channel == $sub.ref(0, 314406));
procedure  dma_request_slave_channel($p0: ref, $p1: ref)
  returns ($r: ref);
const __dma_request_channel: ref;
axiom (__dma_request_channel == $sub.ref(0, 315438));
procedure  __dma_request_channel($p0: ref, $p1: ref, $p2: ref)
  returns ($r: ref);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 316470));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.23(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10029, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const bitmap_zero: ref;
axiom (bitmap_zero == $sub.ref(0, 317502));
procedure  bitmap_zero($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64* %0, i64 0, metadata !8353, metadata !5230), !dbg !8354, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10041, 33} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10041, 55} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10041, 63} true;
  assume {:verifier.code 0} true;
  $i4 := $udiv.i64($i3, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10041, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10041, 71} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i32($i5, 8);
  // WARNING: %7 = mul i32 %6, 8, !dbg !5240, !verifier.code !5232
  call {:cexpr "len"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10042, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10042, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10042, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p7, 0, $i8, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10043, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 318534));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const serial8250_release_dma: ref;
axiom (serial8250_release_dma == $sub.ref(0, 319566));
procedure  serial8250_release_dma($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i8;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i24;
  var $i84: i24;
  var $i85: i24;
  var $p86: ref;
  var $p87: ref;
  var $i88: i8;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $i92: i1;
  var $i93: i32;
  var $i94: i1;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10825, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10825, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10826, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10826, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10826, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10827, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10875, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10831, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10831, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10831, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := dmaengine_terminate_all($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 25} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 34} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 43} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 43} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 53} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 53} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 67} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 67} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 80} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p4, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 80} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10832, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p15, $i17, $p19, $i21, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10834, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10834, 28} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10834, 3} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10835, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10835, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10836, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10836, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10836, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := dmaengine_terminate_all($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 42} true;
  assume {:verifier.code 0} true;
  $p30 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 42} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 51} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 51} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 61} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 61} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10837, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p33, $i35, 4096, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10838, 28} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10838, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10838, 3} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10839, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10839, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p38, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10840, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p4, 192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10840, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10840, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i8($i40, $sub.i8(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10840, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10841, 7} true;
  assume {:verifier.code 0} true;
  $p42 := $p1;
  $p43 := $p1;
  $p44 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10841, 30} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10841, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10842, 7} true;
  assume {:verifier.code 0} true;
  $p46 := $p1;
  $p47 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10842, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, $sub.i32(0, 559067475));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10843, 7} true;
  assume {:verifier.code 0} true;
  $p48 := $p1;
  $p49 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10843, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10844, 7} true;
  assume {:verifier.code 0} true;
  $p50 := $p1;
  $p51 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10844, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $i2p.i64.ref($sub.i64(0, 1)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10845, 7} true;
  assume {:verifier.code 0} true;
  $p52 := $p1;
  $p53 := $add.ref($p1, 24);
  $p54 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10845, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10846, 7} true;
  assume {:verifier.code 0} true;
  $p55 := $p1;
  $p56 := $add.ref($p1, 24);
  $p57 := $add.ref($add.ref($p1, 24), 8);
  $p58 := $add.ref($add.ref($p1, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10846, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p58, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10847, 7} true;
  assume {:verifier.code 0} true;
  $p59 := $p1;
  $p60 := $add.ref($p1, 24);
  $p61 := $add.ref($add.ref($p1, 24), 8);
  $p62 := $add.ref($add.ref($add.ref($p1, 24), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10847, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10848, 7} true;
  assume {:verifier.code 0} true;
  $p63 := $p1;
  $p64 := $add.ref($p1, 24);
  $p65 := $add.ref($add.ref($p1, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10848, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p65, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10849, 7} true;
  assume {:verifier.code 0} true;
  $p66 := $p1;
  $p67 := $add.ref($p1, 24);
  $p68 := $add.ref($add.ref($p1, 24), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10849, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10850, 7} true;
  assume {:verifier.code 0} true;
  $p69 := $p1;
  $p70 := $add.ref($p1, 24);
  $p71 := $add.ref($add.ref($p1, 24), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10850, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p71, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10851, 7} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10851, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, 1250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10852, 7} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p1, 76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10852, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10853, 7} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10853, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p74, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10854, 7} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p1, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10854, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10855, 7} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10855, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p76, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10856, 14} true;
  assume {:verifier.code 0} true;
  $p77 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10856, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10857, 14} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10857, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, .str.7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10858, 14} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10858, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p79, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10859, 14} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10859, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, .str.8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 14} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 14} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 21} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i24($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 21} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i24($i83, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $or.i24($i84, 300);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10860, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p82, $i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10861, 14} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10861, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p86, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10862, 47} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10862, 47} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i8($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10862, 29} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10862, 53} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i64($i89, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10862, 9} true;
  assume {:verifier.code 0} true;
  call $i91 := ldv__builtin_expect($i90, 0);
  // WARNING: %95 = call i64 @ldv__builtin_expect(i64 %94, i64 0), !dbg !5335, !verifier.code !5229
  call {:cexpr "tmp"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10863, 11} true;
  assume {:verifier.code 0} true;
  $i92 := $ne.i64($i91, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10863, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10864, 15} true;
  assume {:verifier.code 0} true;
  call $i93 := ___ratelimit($p1, .str.7);
  // WARNING: %98 = call i32 @___ratelimit(%struct.ratelimit_state* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)), !dbg !5341, !verifier.code !5229
  call {:cexpr "tmp___0"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10865, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.i32($i93, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10865, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10866, 67} true;
  assume {:verifier.code 0} true;
  $p95 := $p0;
  $p96 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10866, 72} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10866, 7} true;
  assume {:verifier.code 0} true;
  call $i98 := __dynamic_dev_dbg.ref.ref.ref($p2, $p97, .str.8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10867, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10870, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10873, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const dma_unmap_single_attrs: ref;
axiom (dma_unmap_single_attrs == $sub.ref(0, 320598));
procedure  dma_unmap_single_attrs($p0: ref, $i1: i64, $i2: i64, $i3: i32, $p4: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !8479, metadata !5230), !dbg !8480, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !8481, metadata !5230), !dbg !8482, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !8483, metadata !5230), !dbg !8484, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10197, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10199, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i3);
  // WARNING: %7 = call i32 @valid_dma_direction(i32 %3), !dbg !5245, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10200, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10200, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10200, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10200, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !5250, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10201, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10201, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  call devirtbounce.6(0, .str.83, 36, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10202, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10205, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10209, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10209, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10209, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10209, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10213, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10213, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call devirtbounce.24($p17, $p0, $i1, $i2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10214, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10217, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10218, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_dma_unmap_page: ref;
axiom (debug_dma_unmap_page == $sub.ref(0, 321630));
procedure  debug_dma_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32, $i4: i1);
const serial8250_tx_empty: ref;
axiom (serial8250_tx_empty == $sub.ref(0, 322662));
procedure  serial8250_tx_empty($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6461, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6462, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6463, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := serial_port_in($p0, 5);
  // WARNING: %3 = call i32 @serial_port_in(%struct.uart_port* %0, i32 5), !dbg !5238, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !8530, metadata !5230), !dbg !8531, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 52} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 52} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 87} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 71} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 108} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 68} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6465, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6466, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6466, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p12, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6467, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i2, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6467, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i13, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6467, 23} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i1.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6467, 3} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
}
const serial8250_get_mctrl: ref;
axiom (serial8250_get_mctrl == $sub.ref(0, 323694));
procedure  serial8250_get_mctrl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6479, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6480, 12} true;
  assume {:verifier.code 0} true;
  call $i2 := serial8250_modem_status($p1);
  // WARNING: %3 = call i32 @serial8250_modem_status(%struct.uart_8250_port* %2), !dbg !5237, !verifier.code !5230
  call {:cexpr "status"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !8557, metadata !5230), !dbg !8558, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6482, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6482, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6482, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6483, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $or.i32(0, 64);
  // WARNING: %7 = or i32 0, 64, !dbg !5246, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6484, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6487, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i2, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6487, 22} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6487, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6488, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i6, 128);
  // WARNING: %13 = or i32 %.0, 128, !dbg !5253, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6489, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb6;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i10 := $i6;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6492, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6492, 22} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6492, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6493, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i10, 256);
  // WARNING: %19 = or i32 %.1, 256, !dbg !5260, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6494, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb9;
$bb8:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i14 := $i10;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6497, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6497, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6497, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6498, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i14, 32);
  // WARNING: %25 = or i32 %.2, 32, !dbg !5267, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6499, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $i17;
  goto $bb12;
$bb11:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i18 := $i14;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6502, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const serial8250_start_tx: ref;
axiom (serial8250_start_tx == $sub.ref(0, 324726));
procedure  serial8250_start_tx($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $p22: ref;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i8;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $i49: i8;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5742, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5743, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5743, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5743, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5743, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5743, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5744, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := serial8250_tx_dma($p1);
  // WARNING: %8 = call i32 @serial8250_tx_dma(%struct.uart_8250_port* %2), !dbg !5242, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5745, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5745, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5750, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5746, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5748, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5778, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 22} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 8} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 26} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5752, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 42} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 46} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i15, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 13} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5753, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5754, 44} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5754, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5754, 30} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5754, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 24} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 24} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i16($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 10} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 34} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5755, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb9:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5756, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := serial_in($p1, 5);
  // WARNING: %35 = call i32 @serial_in(%struct.uart_8250_port* %2, i32 5), !dbg !5275, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5757, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i8($i27);
  // WARNING: %36 = trunc i32 %35 to i8, !dbg !5279, !verifier.code !5230
  call {:cexpr "lsr"} boogie_si_record_i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 79} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 79} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 50} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 99} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 125} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i32, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 96} true;
  assume {:verifier.code 0} true;
  $i34 := $or.i32($i31, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 33} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5758, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5759, 12} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5759, 22} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i37, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5759, 28} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5759, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5760, 9} true;
  assume {:verifier.code 0} true;
  call serial8250_tx_chars($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5761, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5767, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 43} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 43} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 47} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 52} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb20, $bb21;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 25} true;
  assume {:verifier.code 0} true;
  assume !(($i42 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb20:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 42} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 42} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i8($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 46} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5771, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5772, 47} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5772, 47} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5772, 33} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5772, 5} true;
  assume {:verifier.code 0} true;
  call serial_icr_write($p1, 0, $i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5773, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5770, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i47 == 1));
  goto $bb19;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5776, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const serial8250_stop_rx: ref;
axiom (serial8250_stop_rx == $sub.ref(0, 325758));
procedure  serial8250_stop_rx($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i8;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5786, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 40} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 40} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 251);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5787, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5788, 43} true;
  assume {:verifier.code 0} true;
  $p8 := $p1;
  $p9 := $add.ref($p1, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5788, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5788, 65} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5788, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $p1;
  $p13 := $add.ref($p1, 164);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5788, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5789, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5789, 42} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5789, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5789, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5790, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_enable_ms: ref;
axiom (serial8250_enable_ms == $sub.ref(0, 326790));
procedure  serial8250_enable_ms($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $i11: i8;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5800, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 8} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5802, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5810, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 40} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $or.i32($i9, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5806, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5807, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5807, 42} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5807, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5807, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5808, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial8250_break_ctl: ref;
axiom (serial8250_break_ctl == $sub.ref(0, 327822));
procedure  serial8250_break_ctl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i1;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i8;
  var $p9: ref;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $p19: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !8735, metadata !5230), !dbg !8736, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6553, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6554, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6555, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6555, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 42} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p2, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 46} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i6, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6556, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6557, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 42} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 46} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i12, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6558, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, $i14);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6560, 42} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 466);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6560, 42} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6560, 28} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6560, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, $i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6561, 34} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6561, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p19, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6562, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_startup: ref;
axiom (serial8250_startup == $sub.ref(0, 328854));
procedure  serial8250_startup($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i16;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $i29: i16;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i16;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $p48: ref;
  var $i49: i8;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i32;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $i102: i1;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $i106: i32;
  var $i107: i1;
  var $i108: i32;
  var $i109: i8;
  var $i110: i32;
  var $i111: i32;
  var $i112: i8;
  var $i113: i32;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $p120: ref;
  var $p121: ref;
  var $i122: i64;
  var $i123: i64;
  var $i124: i1;
  var $p125: ref;
  var $i126: i32;
  var $i127: i32;
  var $i128: i8;
  var $i129: i32;
  var $i130: i8;
  var $p131: ref;
  var $i132: i64;
  var $i133: i64;
  var $i134: i1;
  var $p135: ref;
  var $i136: i32;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $i140: i1;
  var $i141: i32;
  var $i142: i32;
  var $i143: i1;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $i147: i32;
  var $i148: i1;
  var $p149: ref;
  var $i150: i16;
  var $i151: i32;
  var $i152: i32;
  var $i153: i16;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i24;
  var $i162: i24;
  var $i163: i24;
  var $p164: ref;
  var $p165: ref;
  var $i166: i8;
  var $i167: i64;
  var $i168: i64;
  var $i169: i64;
  var $i170: i1;
  var $i171: i32;
  var $i172: i32;
  var $p173: ref;
  var $i174: i16;
  var $i175: i32;
  var $i176: i32;
  var $i177: i1;
  var $p178: ref;
  var $p179: ref;
  var $i180: i64;
  var $p181: ref;
  var $p182: ref;
  var $i183: i32;
  var $p184: ref;
  var $i185: i64;
  var $i186: i64;
  var $i187: i64;
  var $i188: i64;
  var $i189: i32;
  var $p190: ref;
  var $i191: i32;
  var $i192: i1;
  var $i193: i64;
  var $p194: ref;
  var $p195: ref;
  var $i196: i32;
  var $p197: ref;
  var $i198: i64;
  var $i199: i64;
  var $i200: i64;
  var $i201: i32;
  var $i202: i32;
  var $i203: i1;
  var $p204: ref;
  var $p205: ref;
  var $i206: i32;
  var $i207: i32;
  var $i208: i1;
  var $p209: ref;
  var $p210: ref;
  var $i211: i32;
  var $i212: i1;
  var $p213: ref;
  var $p214: ref;
  var $i215: i32;
  var $i216: i32;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $i220: i32;
  var $i221: i1;
  var $p222: ref;
  var $p223: ref;
  var $i224: i32;
  var $i225: i32;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $i229: i32;
  var $i230: i32;
  var $i231: i1;
  var $p232: ref;
  var $p233: ref;
  var $i234: i32;
  var $i235: i32;
  var $i236: i1;
  var $i237: i32;
  var $i238: i8;
  var $i239: i32;
  var $i240: i8;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i245: i32;
  var $i246: i1;
  var $p247: ref;
  var $i248: i16;
  var $i249: i32;
  var $i250: i32;
  var $i251: i1;
  var $p252: ref;
  var $i253: i16;
  var $i254: i32;
  var $i255: i32;
  var $i256: i16;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $i264: i24;
  var $i265: i24;
  var $i266: i24;
  var $p267: ref;
  var $p268: ref;
  var $i269: i8;
  var $i270: i64;
  var $i271: i64;
  var $i272: i64;
  var $i273: i1;
  var $i274: i32;
  var $i275: i32;
  var $p276: ref;
  var $i277: i16;
  var $i278: i32;
  var $i279: i32;
  var $i280: i16;
  var $p281: ref;
  var $p282: ref;
  var $i283: i32;
  var $i284: i32;
  var $i285: i32;
  var $i286: i32;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $p290: ref;
  var $i291: i64;
  var $i292: i1;
  var $i293: i32;
  var $i294: i1;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $p299: ref;
  var $p300: ref;
  var $p301: ref;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $p305: ref;
  var $p306: ref;
  var $p307: ref;
  var $p308: ref;
  var $p309: ref;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $p319: ref;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $p326: ref;
  var $p327: ref;
  var $p328: ref;
  var $p329: ref;
  var $i330: i32;
  var $i331: i1;
  var $i332: i32;
  var $i333: i32;
  var $p334: ref;
  var $p335: ref;
  var $p336: ref;
  var $i337: i8;
  var $i338: i32;
  var $p339: ref;
  var $i340: i32;
  var $i341: i32;
  var $i342: i1;
  var $p343: ref;
  var $i344: i64;
  var $i345: i32;
  var $i346: i32;
  var $i347: i32;
  var $i348: i8;
  var $i9: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6698, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6699, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6699, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6699, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6699, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6700, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6953, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6704, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6704, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6704, 22} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6704, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 55} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 55} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 37} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref(uart_config, $mul.ref($i15, 24));
  $p17 := $add.ref($add.ref(uart_config, $mul.ref($i15, 24)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 61} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.6, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6705, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6706, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6709, 15} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p5, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6709, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6709, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6709, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 58} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 58} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 40} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 40} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref(uart_config, $mul.ref($i26, 24));
  $p28 := $add.ref($add.ref(uart_config, $mul.ref($i26, 24)), 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 64} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i16($M.7, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 13} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6710, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6714, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p5, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6714, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6714, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6714, 43} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6714, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 63} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 63} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 45} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 45} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref(uart_config, $mul.ref($i38, 24));
  $p40 := $add.ref($add.ref(uart_config, $mul.ref($i38, 24)), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 69} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.8, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 28} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i16($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p5, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6715, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p43, $i42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6716, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6719, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 467);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6719, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 43} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p5, 470);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 43} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i8($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 26} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i47, $i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6720, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6721, 5} true;
  assume {:verifier.code 0} true;
  call set_io_from_upio($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6722, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6725, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6725, 13} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6725, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6725, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6726, 13} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p5, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6726, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p55, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6727, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6728, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6729, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6730, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6731, 5} true;
  assume {:verifier.code 0} true;
  call serial_icr_write($p5, 12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6732, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6733, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6734, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6735, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6738, 3} true;
  assume {:verifier.code 0} true;
  call enable_rsa($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6739, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_clear_fifos($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6740, 3} true;
  assume {:verifier.code 0} true;
  call $i56 := serial_port_in($p0, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6741, 3} true;
  assume {:verifier.code 0} true;
  call $i57 := serial_port_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6742, 3} true;
  assume {:verifier.code 0} true;
  call $i58 := serial_port_in($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6743, 3} true;
  assume {:verifier.code 0} true;
  call $i59 := serial_port_in($p0, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6744, 14} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6744, 14} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6744, 20} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i32($i61, 16384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6744, 30} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6744, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6745, 15} true;
  assume {:verifier.code 0} true;
  call $i64 := serial_port_in($p0, 5);
  // WARNING: %83 = call i32 @serial_port_in(%struct.uart_port* %0, i32 5), !dbg !5343, !verifier.code !5227
  call {:cexpr "tmp___1"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6746, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6746, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6747, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $p1;
  $p67 := $p1;
  $p68 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6747, 34} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6747, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6748, 11} true;
  assume {:verifier.code 0} true;
  $p70 := $p1;
  $p71 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6748, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, $sub.i32(0, 559067475));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6749, 11} true;
  assume {:verifier.code 0} true;
  $p72 := $p1;
  $p73 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6749, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6750, 11} true;
  assume {:verifier.code 0} true;
  $p74 := $p1;
  $p75 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6750, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $i2p.i64.ref($sub.i64(0, 1)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6751, 11} true;
  assume {:verifier.code 0} true;
  $p76 := $p1;
  $p77 := $add.ref($p1, 24);
  $p78 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6751, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6752, 11} true;
  assume {:verifier.code 0} true;
  $p79 := $p1;
  $p80 := $add.ref($p1, 24);
  $p81 := $add.ref($add.ref($p1, 24), 8);
  $p82 := $add.ref($add.ref($p1, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6752, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p82, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6753, 11} true;
  assume {:verifier.code 0} true;
  $p83 := $p1;
  $p84 := $add.ref($p1, 24);
  $p85 := $add.ref($add.ref($p1, 24), 8);
  $p86 := $add.ref($add.ref($add.ref($p1, 24), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6753, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p86, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6754, 11} true;
  assume {:verifier.code 0} true;
  $p87 := $p1;
  $p88 := $add.ref($p1, 24);
  $p89 := $add.ref($add.ref($p1, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6754, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p89, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6755, 11} true;
  assume {:verifier.code 0} true;
  $p90 := $p1;
  $p91 := $add.ref($p1, 24);
  $p92 := $add.ref($add.ref($p1, 24), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6755, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p92, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6756, 11} true;
  assume {:verifier.code 0} true;
  $p93 := $p1;
  $p94 := $add.ref($p1, 24);
  $p95 := $add.ref($add.ref($p1, 24), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6756, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p95, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6757, 11} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6757, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p96, 1250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6758, 11} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p1, 76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6758, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p97, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6759, 11} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p1, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6759, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p98, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6760, 11} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p1, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6760, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6761, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6761, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p100, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6762, 17} true;
  assume {:verifier.code 0} true;
  call $i101 := ___ratelimit($p1, .str.50);
  // WARNING: %121 = call i32 @___ratelimit(%struct.ratelimit_state* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0)), !dbg !5382, !verifier.code !5227
  call {:cexpr "tmp___0"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6763, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $ne.i32($i101, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6763, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i102 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6764, 15} true;
  assume {:verifier.code 0} true;
  call $i103 := serial_index($p0);
  // WARNING: %124 = call i32 @serial_index(%struct.uart_port* %0), !dbg !5388, !verifier.code !5227
  call {:cexpr "tmp"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6765, 9} true;
  assume {:verifier.code 0} true;
  call $i104 := printk.ref.i32(.str.51, $i103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6766, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i102 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6769, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb3;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6773, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6776, 13} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6776, 13} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6776, 18} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32($i106, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6776, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6777, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p5, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6778, 15} true;
  assume {:verifier.code 0} true;
  call $i108 := serial_in($p5, 1);
  // WARNING: %136 = call i32 @serial_in(%struct.uart_8250_port* %6, i32 1), !dbg !5402, !verifier.code !5227
  call {:cexpr "tmp___2"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6779, 28} true;
  assume {:verifier.code 0} true;
  $i109 := $trunc.i32.i8($i108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6779, 12} true;
  assume {:verifier.code 0} true;
  $i110 := $zext.i8.i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6779, 53} true;
  assume {:verifier.code 0} true;
  $i111 := $and.i32($i110, 127);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6779, 12} true;
  assume {:verifier.code 0} true;
  $i112 := $trunc.i32.i8($i111);
  // WARNING: %140 = trunc i32 %139 to i8, !dbg !5406, !verifier.code !5227
  call {:cexpr "fctr"} boogie_si_record_i8($i112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6780, 37} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i8.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6780, 57} true;
  assume {:verifier.code 0} true;
  $i114 := $or.i32($i113, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6780, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6781, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6782, 37} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i8.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6782, 57} true;
  assume {:verifier.code 0} true;
  $i116 := $or.i32($i115, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6782, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6783, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6784, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6785, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6788, 13} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6788, 13} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i32($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6788, 17} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i32($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6788, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6789, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6790, 18} true;
  assume {:verifier.code 0} true;
  $p120 := $p5;
  $p121 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6790, 23} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i64($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6790, 32} true;
  assume {:verifier.code 0} true;
  $i123 := $and.i64($i122, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6790, 41} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i64($i123, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6790, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb34:
  assume ($i124 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6791, 32} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6791, 32} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6791, 7} true;
  assume {:verifier.code 0} true;
  call disable_irq_nosync($i126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6792, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6795, 5} true;
  assume {:verifier.code 0} true;
  call wait_for_xmitr($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6796, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out_sync($p0, 1, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6797, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6798, 15} true;
  assume {:verifier.code 0} true;
  call $i127 := serial_port_in($p0, 2);
  // WARNING: %161 = call i32 @serial_port_in(%struct.uart_port* %0, i32 2), !dbg !5439, !verifier.code !5227
  call {:cexpr "tmp___3"} boogie_si_record_i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6799, 12} true;
  assume {:verifier.code 0} true;
  $i128 := $trunc.i32.i8($i127);
  // WARNING: %162 = trunc i32 %161 to i8, !dbg !5442, !verifier.code !5227
  call {:cexpr "iir1"} boogie_si_record_i8($i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6800, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6801, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out_sync($p0, 1, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6802, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6803, 15} true;
  assume {:verifier.code 0} true;
  call $i129 := serial_port_in($p0, 2);
  // WARNING: %163 = call i32 @serial_port_in(%struct.uart_port* %0, i32 2), !dbg !5448, !verifier.code !5227
  call {:cexpr "tmp___4"} boogie_si_record_i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6804, 11} true;
  assume {:verifier.code 0} true;
  $i130 := $trunc.i32.i8($i129);
  // WARNING: %164 = trunc i32 %163 to i8, !dbg !5451, !verifier.code !5227
  call {:cexpr "iir"} boogie_si_record_i8($i130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6805, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6806, 16} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p0, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6806, 16} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i64($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6806, 25} true;
  assume {:verifier.code 0} true;
  $i133 := $and.i64($i132, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6806, 34} true;
  assume {:verifier.code 0} true;
  $i134 := $ne.i64($i133, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6806, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6807, 24} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6807, 24} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i32($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6807, 7} true;
  assume {:verifier.code 0} true;
  call enable_irq($i136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6808, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6811, 36} true;
  assume {:verifier.code 0} true;
  $p137 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6811, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p137, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 11} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 22} true;
  assume {:verifier.code 0} true;
  $i139 := $and.i32($i138, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 27} true;
  assume {:verifier.code 0} true;
  $i140 := $eq.i32($i139, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 35} true;
  assume {:verifier.code 0} true;
  $i141 := $zext.i8.i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 45} true;
  assume {:verifier.code 0} true;
  $i142 := $and.i32($i141, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 45} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.i32($i142, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb43, $bb45;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 32} true;
  assume {:verifier.code 0} true;
  assume !(($i140 == 1));
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 62} true;
  assume {:verifier.code 0} true;
  $p144 := $p5;
  $p145 := $add.ref($p5, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 67} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 73} true;
  assume {:verifier.code 0} true;
  $i147 := $and.i32($i146, 67108864);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 86} true;
  assume {:verifier.code 0} true;
  $i148 := $ne.i32($i147, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb46, $bb47;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 50} true;
  assume {:verifier.code 0} true;
  assume ($i143 == 1);
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 45} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 45} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i16($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 22} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i16.i32($i150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 50} true;
  assume {:verifier.code 0} true;
  $i152 := $or.i32($i151, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 22} true;
  assume {:verifier.code 0} true;
  $i153 := $trunc.i32.i16($i152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 15} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6813, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p154, $i153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6814, 18} true;
  assume {:verifier.code 0} true;
  $p155 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6814, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p155, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6815, 18} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6815, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p156, .str.50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6816, 18} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6816, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p157, .str.52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6817, 18} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6817, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p158, .str.53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 18} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 18} true;
  assume {:verifier.code 0} true;
  $p160 := $bitcast.ref.ref($p159);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 25} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i24($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 25} true;
  assume {:verifier.code 0} true;
  $i162 := $and.i24($i161, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 25} true;
  assume {:verifier.code 0} true;
  $i163 := $or.i24($i162, 2126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6818, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p160, $i163);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6819, 18} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6819, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p164, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6820, 55} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6820, 55} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i8($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6820, 37} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i8.i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6820, 61} true;
  assume {:verifier.code 0} true;
  $i168 := $and.i64($i167, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6820, 17} true;
  assume {:verifier.code 0} true;
  call $i169 := ldv__builtin_expect($i168, 0);
  // WARNING: %209 = call i64 @ldv__builtin_expect(i64 %208, i64 0), !dbg !5502, !verifier.code !5227
  call {:cexpr "tmp___6"} boogie_si_record_i64($i169);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6821, 19} true;
  assume {:verifier.code 0} true;
  $i170 := $ne.i64($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6821, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb48, $bb49;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i143 == 1));
  goto $bb42;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6812, 9} true;
  assume {:verifier.code 0} true;
  assume ($i148 == 1);
  goto $bb44;
$bb47:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb48:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6822, 19} true;
  assume {:verifier.code 0} true;
  call $i171 := serial_index($p0);
  // WARNING: %212 = call i32 @serial_index(%struct.uart_port* %0), !dbg !5508, !verifier.code !5227
  call {:cexpr "tmp___5"} boogie_si_record_i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6823, 9} true;
  assume {:verifier.code 0} true;
  call $i172 := __dynamic_pr_debug.ref.ref.i32($p2, .str.53, $i171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6824, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6827, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6830, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 22} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 22} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i16($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 8} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i16.i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 27} true;
  assume {:verifier.code 0} true;
  $i176 := $and.i32($i175, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 32} true;
  assume {:verifier.code 0} true;
  $i177 := $ne.i32($i176, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6833, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6834, 13} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p5, 312);
  $p179 := $add.ref($add.ref($p5, 312), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6834, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p179, serial8250_backup_timeout);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6835, 26} true;
  assume {:verifier.code 0} true;
  $i180 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6835, 13} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p5, 312);
  $p182 := $add.ref($add.ref($p5, 312), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6835, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p182, $i180);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6836, 15} true;
  assume {:verifier.code 0} true;
  call $i183 := uart_poll_timeout($p0);
  // WARNING: %231 = call i32 @uart_poll_timeout(%struct.uart_port* %0), !dbg !5528, !verifier.code !5227
  call {:cexpr "tmp___7"} boogie_si_record_i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 32} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p5, 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 40} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i32.i64($i183);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 82} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 64} true;
  assume {:verifier.code 0} true;
  $i187 := $add.i64($i185, $i186);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 91} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i64($i187, 50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6837, 5} true;
  assume {:verifier.code 0} true;
  call $i189 := ldv_mod_timer_23($p184, $i188);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6838, 3} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i177 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6841, 13} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6841, 13} true;
  assume {:verifier.code 0} true;
  $i191 := $load.i32($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6841, 17} true;
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i191, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6841, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6842, 26} true;
  assume {:verifier.code 0} true;
  $i193 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6842, 13} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p5, 312);
  $p195 := $add.ref($add.ref($p5, 312), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6842, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p195, $i193);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6843, 15} true;
  assume {:verifier.code 0} true;
  call $i196 := uart_poll_timeout($p0);
  // WARNING: %247 = call i32 @uart_poll_timeout(%struct.uart_port* %0), !dbg !5546, !verifier.code !5227
  call {:cexpr "tmp___8"} boogie_si_record_i32($i196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6844, 32} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p5, 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6844, 39} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i32.i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6844, 81} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6844, 63} true;
  assume {:verifier.code 0} true;
  $i200 := $add.i64($i198, $i199);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6844, 5} true;
  assume {:verifier.code 0} true;
  call $i201 := ldv_mod_timer_24($p197, $i200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6845, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i192 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6846, 14} true;
  assume {:verifier.code 0} true;
  call $i202 := serial_link_irq_chain($p5);
  // WARNING: %254 = call i32 @serial_link_irq_chain(%struct.uart_8250_port* %6), !dbg !5555, !verifier.code !5227
  call {:cexpr "retval"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6847, 16} true;
  assume {:verifier.code 0} true;
  $i203 := $ne.i32($i202, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6847, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb59, $bb60;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6853, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6854, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6855, 16} true;
  assume {:verifier.code 0} true;
  $p204 := $p5;
  $p205 := $add.ref($p5, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6855, 21} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i32($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6855, 27} true;
  assume {:verifier.code 0} true;
  $i207 := $and.i32($i206, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6855, 33} true;
  assume {:verifier.code 0} true;
  $i208 := $ne.i32($i207, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6855, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb62, $bb63;
$bb59:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6848, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $i202;
  goto $bb3;
$bb60:
  assume !(($i203 == 1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  goto $bb58;
$bb62:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6856, 17} true;
  assume {:verifier.code 0} true;
  $p209 := $p5;
  $p210 := $add.ref($p5, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6856, 22} true;
  assume {:verifier.code 0} true;
  $i211 := $load.i32($M.0, $p210);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6856, 26} true;
  assume {:verifier.code 0} true;
  $i212 := $eq.i32($i211, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6856, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i212} true;
  goto $bb64, $bb65;
$bb63:
  assume !(($i208 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6862, 13} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6862, 13} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i32($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  $i221 := $ne.i32($i220, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6862, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb68, $bb69;
$bb64:
  assume ($i212 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6857, 36} true;
  assume {:verifier.code 0} true;
  $p213 := $p5;
  $p214 := $add.ref($p5, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6857, 41} true;
  assume {:verifier.code 0} true;
  $i215 := $load.i32($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6857, 47} true;
  assume {:verifier.code 0} true;
  $i216 := $or.i32($i215, 8192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6857, 15} true;
  assume {:verifier.code 0} true;
  $p217 := $p5;
  $p218 := $add.ref($p5, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6857, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p218, $i216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6858, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i212 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6861, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6867, 36} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6867, 36} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i32($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6867, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p0, $i229);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  $i230 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 22} true;
  assume {:verifier.code 0} true;
  $i231 := $ne.i32($i230, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i231} true;
  goto $bb71, $bb73;
$bb68:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6863, 34} true;
  assume {:verifier.code 0} true;
  $p222 := $p5;
  $p223 := $add.ref($p5, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6863, 39} true;
  assume {:verifier.code 0} true;
  $i224 := $load.i32($M.0, $p223);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6863, 45} true;
  assume {:verifier.code 0} true;
  $i225 := $or.i32($i224, 16384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6863, 13} true;
  assume {:verifier.code 0} true;
  $p226 := $p5;
  $p227 := $add.ref($p5, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6863, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p227, $i225);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6864, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  goto $bb67;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 28} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb73:
  assume !(($i231 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 40} true;
  assume {:verifier.code 0} true;
  $p232 := $p5;
  $p233 := $add.ref($p5, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 45} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 51} true;
  assume {:verifier.code 0} true;
  $i235 := $and.i32($i234, 32768);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 61} true;
  assume {:verifier.code 0} true;
  $i236 := $ne.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb74, $bb75;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  assume ($i236 == 1);
  goto $bb72;
$bb75:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6903, 34} true;
  assume {:verifier.code 0} true;
  $p282 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6903, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p282, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6904, 3} true;
  assume {:verifier.code 0} true;
  call $i283 := serial_port_in($p0, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6905, 3} true;
  assume {:verifier.code 0} true;
  call $i284 := serial_port_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6906, 3} true;
  assume {:verifier.code 0} true;
  call $i285 := serial_port_in($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6907, 3} true;
  assume {:verifier.code 0} true;
  call $i286 := serial_port_in($p0, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6908, 11} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p5, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6908, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p287, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6909, 11} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($p5, 472);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6909, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p288, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6910, 31} true;
  assume {:verifier.code 0} true;
  $p289 := $add.ref($p5, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6910, 31} true;
  assume {:verifier.code 0} true;
  $p290 := $load.ref($M.0, $p289);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6910, 7} true;
  assume {:verifier.code 0} true;
  $i291 := $p2i.ref.i64($p290);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6910, 35} true;
  assume {:verifier.code 0} true;
  $i292 := $ne.i64($i291, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6910, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i292} true;
  goto $bb90, $bb91;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6873, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6874, 13} true;
  assume {:verifier.code 0} true;
  call $i237 := serial_port_in($p0, 5);
  // WARNING: %306 = call i32 @serial_port_in(%struct.uart_port* %0, i32 5), !dbg !5612, !verifier.code !5227
  call {:cexpr "tmp___9"} boogie_si_record_i32($i237);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6875, 9} true;
  assume {:verifier.code 0} true;
  $i238 := $trunc.i32.i8($i237);
  // WARNING: %307 = trunc i32 %306 to i8, !dbg !5615, !verifier.code !5227
  call {:cexpr "lsr"} boogie_si_record_i8($i238);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6876, 14} true;
  assume {:verifier.code 0} true;
  call $i239 := serial_port_in($p0, 2);
  // WARNING: %308 = call i32 @serial_port_in(%struct.uart_port* %0, i32 2), !dbg !5618, !verifier.code !5227
  call {:cexpr "tmp___10"} boogie_si_record_i32($i239);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6877, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i32.i8($i239);
  // WARNING: %309 = trunc i32 %308 to i8, !dbg !5621, !verifier.code !5227
  call {:cexpr "iir"} boogie_si_record_i8($i240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6878, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 8} true;
  assume {:verifier.code 0} true;
  $i241 := $zext.i8.i32($i238);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 18} true;
  assume {:verifier.code 0} true;
  $i242 := $and.i32($i241, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 24} true;
  assume {:verifier.code 0} true;
  $i243 := $ne.i32($i242, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 32} true;
  assume {:verifier.code 0} true;
  $i244 := $zext.i8.i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 42} true;
  assume {:verifier.code 0} true;
  $i245 := $and.i32($i244, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 42} true;
  assume {:verifier.code 0} true;
  $i246 := $ne.i32($i245, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i246} true;
  goto $bb81, $bb82;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 29} true;
  assume {:verifier.code 0} true;
  assume !(($i243 == 1));
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 43} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 43} true;
  assume {:verifier.code 0} true;
  $i277 := $load.i16($M.0, $p276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 20} true;
  assume {:verifier.code 0} true;
  $i278 := $zext.i16.i32($i277);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 48} true;
  assume {:verifier.code 0} true;
  $i279 := $and.i32($i278, 65533);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 20} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i16($i279);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 13} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6900, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p281, $i280);
  assume {:verifier.code 0} true;
  goto $bb89;
$bb81:
  assume ($i246 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 24} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 24} true;
  assume {:verifier.code 0} true;
  $i248 := $load.i16($M.0, $p247);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 10} true;
  assume {:verifier.code 0} true;
  $i249 := $zext.i16.i32($i248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 29} true;
  assume {:verifier.code 0} true;
  $i250 := $and.i32($i249, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 34} true;
  assume {:verifier.code 0} true;
  $i251 := $eq.i32($i250, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6880, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb83, $bb84;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i246 == 1));
  goto $bb80;
$bb83:
  assume ($i251 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 45} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 45} true;
  assume {:verifier.code 0} true;
  $i253 := $load.i16($M.0, $p252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 22} true;
  assume {:verifier.code 0} true;
  $i254 := $zext.i16.i32($i253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 50} true;
  assume {:verifier.code 0} true;
  $i255 := $or.i32($i254, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 22} true;
  assume {:verifier.code 0} true;
  $i256 := $trunc.i32.i16($i255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 15} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($p5, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6881, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p257, $i256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6882, 22} true;
  assume {:verifier.code 0} true;
  $p258 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6882, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p258, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6883, 22} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6883, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p259, .str.50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6884, 22} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6884, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p260, .str.52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6885, 22} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6885, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p261, .str.54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 22} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 22} true;
  assume {:verifier.code 0} true;
  $p263 := $bitcast.ref.ref($p262);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i24($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $i265 := $and.i24($i264, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $i266 := $or.i24($i265, 2200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p263, $i266);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6887, 22} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6887, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p267, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6888, 60} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6888, 60} true;
  assume {:verifier.code 0} true;
  $i269 := $load.i8($M.0, $p268);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6888, 38} true;
  assume {:verifier.code 0} true;
  $i270 := $zext.i8.i64($i269);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6888, 66} true;
  assume {:verifier.code 0} true;
  $i271 := $and.i64($i270, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6888, 18} true;
  assume {:verifier.code 0} true;
  call $i272 := ldv__builtin_expect($i271, 0);
  // WARNING: %344 = call i64 @ldv__builtin_expect(i64 %343, i64 0), !dbg !5660, !verifier.code !5227
  call {:cexpr "tmp___12"} boogie_si_record_i64($i272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6889, 20} true;
  assume {:verifier.code 0} true;
  $i273 := $ne.i64($i272, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6889, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb85, $bb86;
$bb84:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb85:
  assume ($i273 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6890, 20} true;
  assume {:verifier.code 0} true;
  call $i274 := serial_index($p0);
  // WARNING: %347 = call i32 @serial_index(%struct.uart_port* %0), !dbg !5666, !verifier.code !5227
  call {:cexpr "tmp___11"} boogie_si_record_i32($i274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6891, 9} true;
  assume {:verifier.code 0} true;
  call $i275 := __dynamic_pr_debug.ref.ref.i32($p3, .str.54, $i274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6893, 7} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i273 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6899, 3} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6879, 44} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb90:
  assume ($i292 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6911, 14} true;
  assume {:verifier.code 0} true;
  call $i293 := serial8250_request_dma($p5);
  // WARNING: %374 = call i32 @serial8250_request_dma(%struct.uart_8250_port* %6), !dbg !5697, !verifier.code !5227
  call {:cexpr "retval"} boogie_si_record_i32($i293);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6912, 16} true;
  assume {:verifier.code 0} true;
  $i294 := $ne.i32($i293, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6912, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i294} true;
  goto $bb92, $bb93;
$bb91:
  assume !(($i292 == 1));
  assume {:verifier.code 0} true;
  goto $bb98;
$bb92:
  assume ($i294 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6913, 15} true;
  assume {:verifier.code 0} true;
  $p295 := $p4;
  $p296 := $p4;
  $p297 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6913, 38} true;
  assume {:verifier.code 0} true;
  $p298 := $bitcast.ref.ref($p297);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6913, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p298, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6914, 15} true;
  assume {:verifier.code 0} true;
  $p299 := $p4;
  $p300 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6914, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p300, $sub.i32(0, 559067475));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6915, 15} true;
  assume {:verifier.code 0} true;
  $p301 := $p4;
  $p302 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6915, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p302, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6916, 15} true;
  assume {:verifier.code 0} true;
  $p303 := $p4;
  $p304 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6916, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p304, $i2p.i64.ref($sub.i64(0, 1)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6917, 15} true;
  assume {:verifier.code 0} true;
  $p305 := $p4;
  $p306 := $add.ref($p4, 24);
  $p307 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6917, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p307, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6918, 15} true;
  assume {:verifier.code 0} true;
  $p308 := $p4;
  $p309 := $add.ref($p4, 24);
  $p310 := $add.ref($add.ref($p4, 24), 8);
  $p311 := $add.ref($add.ref($p4, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6918, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p311, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6919, 15} true;
  assume {:verifier.code 0} true;
  $p312 := $p4;
  $p313 := $add.ref($p4, 24);
  $p314 := $add.ref($add.ref($p4, 24), 8);
  $p315 := $add.ref($add.ref($add.ref($p4, 24), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6919, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p315, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6920, 15} true;
  assume {:verifier.code 0} true;
  $p316 := $p4;
  $p317 := $add.ref($p4, 24);
  $p318 := $add.ref($add.ref($p4, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6920, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p318, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6921, 15} true;
  assume {:verifier.code 0} true;
  $p319 := $p4;
  $p320 := $add.ref($p4, 24);
  $p321 := $add.ref($add.ref($p4, 24), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6921, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p321, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6922, 15} true;
  assume {:verifier.code 0} true;
  $p322 := $p4;
  $p323 := $add.ref($p4, 24);
  $p324 := $add.ref($add.ref($p4, 24), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6922, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p324, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6923, 15} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6923, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p325, 1250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6924, 15} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6924, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p326, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6925, 15} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p4, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6925, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p327, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6926, 15} true;
  assume {:verifier.code 0} true;
  $p328 := $add.ref($p4, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6926, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p328, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6927, 15} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6927, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p329, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6928, 18} true;
  assume {:verifier.code 0} true;
  call $i330 := ___ratelimit($p4, .str.50);
  // WARNING: %412 = call i32 @___ratelimit(%struct.ratelimit_state* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0)), !dbg !5734, !verifier.code !5227
  call {:cexpr "tmp___14"} boogie_si_record_i32($i330);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6929, 20} true;
  assume {:verifier.code 0} true;
  $i331 := $ne.i32($i330, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6929, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i331} true;
  goto $bb94, $bb95;
$bb93:
  assume !(($i294 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb94:
  assume ($i331 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6930, 20} true;
  assume {:verifier.code 0} true;
  call $i332 := serial_index($p0);
  // WARNING: %415 = call i32 @serial_index(%struct.uart_port* %0), !dbg !5740, !verifier.code !5227
  call {:cexpr "tmp___13"} boogie_si_record_i32($i332);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6931, 9} true;
  assume {:verifier.code 0} true;
  call $i333 := printk.ref.i32(.str.55, $i332);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6932, 7} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i331 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6935, 15} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p5, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6935, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p334, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6936, 5} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6939, 3} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6942, 11} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p5, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6942, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p335, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6943, 42} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($p5, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6943, 42} true;
  assume {:verifier.code 0} true;
  $i337 := $load.i8($M.0, $p336);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6943, 28} true;
  assume {:verifier.code 0} true;
  $i338 := $zext.i8.i32($i337);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6943, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i338);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6944, 14} true;
  assume {:verifier.code 0} true;
  $p339 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6944, 14} true;
  assume {:verifier.code 0} true;
  $i340 := $load.i32($M.0, $p339);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6944, 20} true;
  assume {:verifier.code 0} true;
  $i341 := $and.i32($i340, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6944, 26} true;
  assume {:verifier.code 0} true;
  $i342 := $ne.i32($i341, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6944, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i342} true;
  goto $bb99, $bb100;
$bb99:
  assume ($i342 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6945, 33} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6945, 33} true;
  assume {:verifier.code 0} true;
  $i344 := $load.i64($M.0, $p343);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6945, 12} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6945, 40} true;
  assume {:verifier.code 0} true;
  $i346 := $and.i32($i345, 4064);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6945, 49} true;
  assume {:verifier.code 0} true;
  $i347 := $or.i32($i346, 31);
  // WARNING: %437 = or i32 %436, 31, !dbg !5764, !verifier.code !5227
  call {:cexpr "icp"} boogie_si_record_i32($i347);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6946, 5} true;
  assume {:verifier.code 0} true;
  call outb_p($sub.i8(0, 128), $i347);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6947, 5} true;
  assume {:verifier.code 0} true;
  call $i348 := inb_p($i347);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6948, 3} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb100:
  assume !(($i342 == 1));
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6951, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
}
const serial8250_shutdown: ref;
axiom (serial8250_shutdown == $sub.ref(0, 329886));
procedure  serial8250_shutdown($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i64;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6963, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6964, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6964, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6965, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6966, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6966, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6966, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6966, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6966, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6967, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_release_dma($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6968, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6971, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6972, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6972, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6972, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6972, 26} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6972, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 38} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i64.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 45} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i13, 4064);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 54} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, 31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6973, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := inb($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6974, 25} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6974, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6974, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i18, 8192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6974, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6974, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6975, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6976, 25} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6976, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6976, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, $sub.i32(0, 16385));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6976, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6976, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6978, 36} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6978, 36} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6978, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p0, $i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6979, 34} true;
  assume {:verifier.code 0} true;
  $p27 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6979, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p27, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6980, 9} true;
  assume {:verifier.code 0} true;
  call $i28 := serial_port_in($p0, 3);
  // WARNING: %35 = call i32 @serial_port_in(%struct.uart_port* %0, i32 3), !dbg !5274, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6981, 32} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28, $sub.i32(0, 65));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6981, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 3, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6982, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_clear_fifos($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6983, 3} true;
  assume {:verifier.code 0} true;
  call disable_rsa($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6984, 3} true;
  assume {:verifier.code 0} true;
  call $i30 := serial_port_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6985, 35} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6985, 3} true;
  assume {:verifier.code 0} true;
  call $i32 := ldv_del_timer_sync_25($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6986, 11} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 312);
  $p34 := $add.ref($add.ref($p1, 312), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6986, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, serial8250_timeout);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6987, 13} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6987, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6987, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6987, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6988, 5} true;
  assume {:verifier.code 0} true;
  call serial_unlink_irq_chain($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6989, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6992, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_set_termios: ref;
axiom (serial8250_set_termios == $sub.ref(0, 330918));
procedure  serial8250_set_termios($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7244, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7244, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7244, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7244, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7244, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7247, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7247, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  call devirtbounce.25($p8, $p0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7248, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7249, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_do_set_termios($p0, $p1, $p2);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7251, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_set_ldisc: ref;
axiom (serial8250_set_ldisc == $sub.ref(0, 331950));
procedure  serial8250_set_ldisc($p0: ref, $i1: i32)
{
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !9382, metadata !5230), !dbg !9383, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7259, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7259, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7260, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7260, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7260, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $or.i32($i4, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7260, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7260, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7261, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_enable_ms($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7262, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7263, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7263, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7263, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, $sub.i32(0, 2049));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7263, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7263, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7265, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_pm: ref;
axiom (serial8250_pm == $sub.ref(0, 332982));
procedure  serial8250_pm($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !9404, metadata !5230), !dbg !9405, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9406, metadata !5230), !dbg !9407, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7293, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7293, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7293, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7293, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7293, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7295, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7295, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  call devirtbounce($p8, $p0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7296, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7297, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_do_pm($p0, $i1, $i2);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7299, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_type: ref;
axiom (serial8250_type == $sub.ref(0, 334014));
procedure  serial8250_type($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7603, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7603, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  // WARNING: %3 = load i32, i32* %2, align 4, !dbg !5231, !verifier.code !5230
  call {:cexpr "type"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7604, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $ugt.i32($i2, 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7604, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7606, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := $i2;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7609, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7609, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref(uart_config, $mul.ref($i5, 24));
  $p7 := $add.ref(uart_config, $mul.ref($i5, 24));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7609, 45} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.11, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7609, 3} true;
  assume {:verifier.code 0} true;
  $r := $p8;
  $exn := false;
  return;
}
const serial8250_release_port: ref;
axiom (serial8250_release_port == $sub.ref(0, 335046));
procedure  serial8250_release_port($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7476, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7477, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_release_std_resource($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7478, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7478, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7478, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7478, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7479, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_release_rsa_resource($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7480, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7483, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_request_port: ref;
axiom (serial8250_request_port == $sub.ref(0, 336078));
procedure  serial8250_request_port($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7494, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7495, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7495, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7495, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7495, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7496, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7513, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7500, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := serial8250_request_std_resource($p1);
  // WARNING: %9 = call i32 @serial8250_request_std_resource(%struct.uart_8250_port* %2), !dbg !5243, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  $i13 := $i6;
  goto $bb13;
$bb8:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7502, 11} true;
  assume {:verifier.code 0} true;
  call $i11 := serial8250_request_rsa_resource($p1);
  // WARNING: %16 = call i32 @serial8250_request_rsa_resource(%struct.uart_8250_port* %2), !dbg !5253, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7503, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7503, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7501, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb7;
$bb10:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7504, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_release_std_resource($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7505, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7508, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i11;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7511, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i13;
  goto $bb3;
}
const serial8250_config_port: ref;
axiom (serial8250_config_port == $sub.ref(0, 337110));
procedure  serial8250_config_port($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i16;
  var $i30: i32;
  var $i31: i32;
  var $i32: i16;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i38: i16;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !9492, metadata !5230), !dbg !9493, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7523, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %3, i64 0, metadata !9500, metadata !5230), !dbg !9501, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7525, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7525, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7525, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7525, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7526, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7584, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7530, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := serial8250_request_std_resource($p2);
  // WARNING: %10 = call i32 @serial8250_request_std_resource(%struct.uart_8250_port* %3), !dbg !5247, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7531, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7531, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7532, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7536, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := serial8250_request_rsa_resource($p2);
  // WARNING: %15 = call i32 @serial8250_request_rsa_resource(%struct.uart_8250_port* %3), !dbg !5255, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7537, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7537, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7538, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($sub.i32(0, 1), $sub.i32(0, 2));
  // WARNING: %18 = and i32 -1, -2, !dbg !5259, !verifier.code !5230
  call {:cexpr "probeflags"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7539, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb10;
$bb9:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 1);
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 43} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 470);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 43} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 26} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7542, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7543, 5} true;
  assume {:verifier.code 0} true;
  call set_io_from_upio($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7544, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7547, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7547, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7547, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7548, 5} true;
  assume {:verifier.code 0} true;
  call autoconfig($p2, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7549, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 18} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 48} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 48} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 27} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 55} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb20, $bb21;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb20:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 43} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 43} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i16($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 20} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 48} true;
  assume {:verifier.code 0} true;
  $i31 := $or.i32($i30, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 20} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i16($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 13} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7553, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7554, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7552, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb19;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7557, 13} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7557, 13} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7557, 18} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7557, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 43} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 43} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i16($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 20} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i16.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 48} true;
  assume {:verifier.code 0} true;
  $i40 := $or.i32($i39, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i16($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p2, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7558, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7559, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 13} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 18} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 34} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 39} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb29:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7563, 5} true;
  assume {:verifier.code 0} true;
  call autoconfig_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7564, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7562, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i47 == 1));
  goto $bb28;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i49, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 39} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 39} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb35, $bb36;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 25} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb35:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7568, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_release_rsa_resource($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7569, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7567, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i52 == 1));
  goto $bb34;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7572, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7572, 13} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7572, 18} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7572, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7573, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_release_std_resource($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7574, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 13} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 13} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 18} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i32($i57, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb41, $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 25} true;
  assume {:verifier.code 0} true;
  assume ($i58 == 1);
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7578, 11} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7578, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, exar_handle_irq);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7579, 3} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb43:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 34} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 34} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 39} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i60, 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb44, $bb45;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7577, 7} true;
  assume {:verifier.code 0} true;
  assume ($i61 == 1);
  goto $bb42;
$bb45:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7582, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const serial8250_verify_port: ref;
axiom (serial8250_verify_port == $sub.ref(0, 338142));
procedure  serial8250_verify_port($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 24} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, nr_irqs);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $sge.i32($i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 32} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7591, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 22);
  goto $bb16;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 44} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 49} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb2;
$bb5:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 57} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 57} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 67} true;
  assume {:verifier.code 0} true;
  $i11 := $sle.i32($i10, 9599);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 76} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 76} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb7:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 84} true;
  assume {:verifier.code 0} true;
  $p12 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 84} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 89} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 94} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 94} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb2;
$bb9:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 117} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 117} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 122} true;
  assume {:verifier.code 0} true;
  $i17 := $ugt.i32($i16, 28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 129} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 129} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb2;
$bb11:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 137} true;
  assume {:verifier.code 0} true;
  $p18 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 137} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 142} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 148} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 148} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb2;
$bb13:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 156} true;
  assume {:verifier.code 0} true;
  $p21 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 156} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 161} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7590, 7} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1);
  goto $bb2;
$bb15:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7597, 1} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7595, 3} true;
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb16;
}
const serial8250_put_poll_char: ref;
axiom (serial8250_put_poll_char == $sub.ref(0, 339174));
procedure  serial8250_put_poll_char($p0: ref, $i1: i8)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !9650, metadata !5230), !dbg !9651, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6649, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6650, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := serial_port_in($p0, 1);
  // WARNING: %4 = call i32 @serial_port_in(%struct.uart_port* %0, i32 1), !dbg !5239, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !9661, metadata !5230), !dbg !9662, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p2, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 8} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i6, 4096);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6652, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6653, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6654, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6655, 5} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, 0);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6657, 3} true;
  assume {:verifier.code 0} true;
  call wait_for_xmitr($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6658, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6658, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6659, 3} true;
  assume {:verifier.code 0} true;
  call wait_for_xmitr($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6660, 3} true;
  assume {:verifier.code 0} true;
  call serial_port_out($p0, 1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6661, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_get_poll_char: ref;
axiom (serial8250_get_poll_char == $sub.ref(0, 340206));
procedure  serial8250_get_poll_char($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6629, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_port_in($p0, 5);
  // WARNING: %2 = call i32 @serial_port_in(%struct.uart_port* %0, i32 5), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6630, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  // WARNING: %3 = trunc i32 %2 to i8, !dbg !5235, !verifier.code !5230
  call {:cexpr "lsr"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6631, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6631, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6631, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6631, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6632, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 16711680;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6639, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6636, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := serial_port_in($p0, 0);
  // WARNING: %10 = call i32 @serial_port_in(%struct.uart_port* %0, i32 0), !dbg !5245, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6637, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i7;
  goto $bb3;
}
const wait_for_xmitr: ref;
axiom (wait_for_xmitr == $sub.ref(0, 341238));
procedure  wait_for_xmitr($p0: ref, $i1: i32)
{
  var $i2: i32;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i8;
  var $i19: i32;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i8;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i33: i32;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i8;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i46: i1;
  var $i32: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !9705, metadata !5230), !dbg !9706, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9707, metadata !5230), !dbg !9708, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6577, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := serial_in($p0, 5);
  // WARNING: %3 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5235, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !9713, metadata !5230), !dbg !9714, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 52} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 52} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 87} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 71} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 111} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 68} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 38} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6581, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  $i14 := 10000;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6594, 16} true;
  assume {:verifier.code 0} true;
  $p27 := $p0;
  $p28 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6594, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6594, 27} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, 8388608);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6594, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6594, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb12, $bb13;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6585, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32($i14, 1);
  // WARNING: %18 = sub i32 %.013, 1, !dbg !5255, !verifier.code !5230
  call {:cexpr "tmout"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6586, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6586, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6587, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6591, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6577, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := serial_in($p0, 5);
  // WARNING: %23 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5235, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i17);
  // WARNING: call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !9713, metadata !5230), !dbg !9714, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 52} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 87} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 71} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 111} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 68} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i19, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i32.i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6579, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i17, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 38} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $i15;
  assume {:branchcond $i26} true;
  goto $bb5, $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i26 == 1));
  goto $bb4;
$bb12:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6610, 9} true;
  assume {:verifier.code 0} true;
  $i32 := 1000000;
  goto $bb14;
$bb13:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6611, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6598, 15} true;
  assume {:verifier.code 0} true;
  call $i33 := serial_in($p0, 6);
  // WARNING: %41 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 6), !dbg !5272, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i33);
  // WARNING: call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !9749, metadata !5230), !dbg !9750, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 54} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 472);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 54} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 89} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 73} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 110} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 70} true;
  assume {:verifier.code 0} true;
  $i40 := $or.i32($i36, $i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 472);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6600, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6601, 14} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i33, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6601, 21} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6601, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6602, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6616, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6606, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6607, 5} true;
  assume {:verifier.code 0} true;
  call touch_nmi_watchdog();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6608, 27} true;
  assume {:verifier.code 0} true;
  $i45 := $sub.i32($i32, 1);
  // WARNING: %56 = sub i32 %.02, 1, !dbg !5293, !verifier.code !5230
  call {:cexpr "tmout___0"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6610, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6610, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i45;
  assume {:branchcond $i46} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6610, 9} true;
  assume {:verifier.code 0} true;
  assume ($i46 == 1);
  goto $bb14;
$bb21:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6610, 22} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6619, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __const_udelay: ref;
axiom (__const_udelay == $sub.ref(0, 342270));
procedure  __const_udelay($i0: i64);
const touch_nmi_watchdog: ref;
axiom (touch_nmi_watchdog == $sub.ref(0, 343302));
procedure  touch_nmi_watchdog();
const serial8250_request_std_resource: ref;
axiom (serial8250_request_std_resource == $sub.ref(0, 344334));
procedure  serial8250_request_std_resource($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i1;
  var $i46: i32;
  var $i16: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7332, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial8250_port_size($p0);
  // WARNING: %2 = call i32 @serial8250_port_size(%struct.uart_8250_port* %0), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9783, metadata !5230), !dbg !9784, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7334, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %3, i64 0, metadata !9788, metadata !5230), !dbg !9789, !verifier.code !5232
  $p3 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7336, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7336, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb3:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb6;
$bb4:
  assume {:verifier.code 0} true;
  assume ($i7 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7336, 31} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i5, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7336, 31} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7336, 31} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb13:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb18, $bb20;
$bb14:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7366, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb17;
$bb17:
  $p13 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7341, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7341, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7341, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb21, $bb22;
$bb18:
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb19;
$bb19:
  $p40 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7369, 73} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i64($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7369, 81} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7369, 13} true;
  assume {:verifier.code 0} true;
  call $p43 := __request_region(ioport_resource, $i41, $i42, .str.37, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7371, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7371, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i64($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7371, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb34, $bb35;
$bb20:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb12;
$bb21:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7342, 5} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb23;
$bb22:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7379, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb24:
  $p17 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7346, 54} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7346, 63} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7346, 13} true;
  assume {:verifier.code 0} true;
  call $p20 := __request_region(iomem_resource, $i18, $i19, .str.37, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7348, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7348, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7350, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $sub.i32(0, 16);
  goto $bb23;
$bb26:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  $p23 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7354, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7354, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $slt.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7354, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i25 == 1);
  $p26 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7355, 37} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7355, 46} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7355, 15} true;
  assume {:verifier.code 0} true;
  call $p29 := ioremap_nocache($i27, $i28);
  $p30 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7356, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, $p29);
  $p31 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7357, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7357, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7357, 39} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7357, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i39 := 0;
  goto $bb33;
$bb30:
  assume ($i34 == 1);
  $p35 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7358, 48} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7358, 57} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7358, 7} true;
  assume {:verifier.code 0} true;
  call __release_region(iomem_resource, $i36, $i37);
  // WARNING: call void @__release_region(%struct.resource* @iomem_resource, i64 %41, i64 %42), !dbg !5287, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7360, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 12);
  goto $bb32;
$bb31:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i38 := 0;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7363, 3} true;
  assume {:verifier.code 0} true;
  $i39 := $i38;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7366, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i39;
  goto $bb23;
$bb34:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7373, 3} true;
  assume {:verifier.code 0} true;
  $i46 := $sub.i32(0, 16);
  goto $bb36;
$bb35:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  $i46 := 0;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7376, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i46;
  goto $bb23;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7377, 3} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb23;
}
const serial8250_request_rsa_resource: ref;
axiom (serial8250_request_rsa_resource == $sub.ref(0, 345366));
procedure  serial8250_request_rsa_resource($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7428, 48} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7428, 53} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7428, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7428, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($sub.i32(0, 8), $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7428, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  // WARNING: %7 = sext i32 %6 to i64, !dbg !5236, !verifier.code !5230
  call {:cexpr "start"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7429, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $p0;
  $p8 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7429, 50} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7429, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7429, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $shl.i32(8, $i10);
  // WARNING: %12 = shl i32 8, %11, !dbg !5242, !verifier.code !5230
  call {:cexpr "size"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7430, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %13, i64 0, metadata !9875, metadata !5230), !dbg !9876, !verifier.code !5232
  $p13 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7432, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7432, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i15, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb9;
$bb3:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i15, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7432, 31} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb5:
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb7:
  assume {:verifier.code 0} true;
  assume ($i18 == 1);
  goto $bb8;
$bb8:
  $p19 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7435, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7435, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, $i6);
  // WARNING: %21 = add i64 %20, %7, !dbg !5256, !verifier.code !5230
  call {:cexpr "start"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7436, 70} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7436, 9} true;
  assume {:verifier.code 0} true;
  call $p23 := __request_region(ioport_resource, $i21, $i22, .str.48, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7438, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb6;
$bb10:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7440, 3} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb12;
$bb11:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 16);
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7443, 3} true;
  assume {:verifier.code 0} true;
  $i27 := $i26;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7446, 3} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7444, 3} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i32(0, 22);
  goto $bb13;
}
const autoconfig: ref;
axiom (autoconfig == $sub.ref(0, 346398));
procedure  autoconfig($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i8;
  var $i21: i32;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $i26: i32;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i38: i8;
  var $i39: i32;
  var $i40: i8;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i46: i8;
  var $i47: i32;
  var $i48: i32;
  var $i49: i8;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $i54: i32;
  var $i55: i32;
  var $i56: i8;
  var $i57: i32;
  var $i58: i1;
  var $i59: i1;
  var $i60: i1;
  var $i61: i1;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i1;
  var $i70: i32;
  var $i71: i1;
  var $i73: i64;
  var $p74: ref;
  var $i75: i64;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $i79: i32;
  var $i80: i1;
  var $p81: ref;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i72: i32;
  var $i85: i32;
  var $p86: ref;
  var $p87: ref;
  var $i88: i32;
  var $i89: i64;
  var $p90: ref;
  var $p91: ref;
  var $i92: i16;
  var $i93: i32;
  var $p94: ref;
  var $p95: ref;
  var $i96: i16;
  var $i97: i32;
  var $p98: ref;
  var $i99: i32;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i16;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i64;
  var $p109: ref;
  var $p110: ref;
  var $i111: i16;
  var $i112: i32;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i32;
  var $p122: ref;
  var $i123: i16;
  var $i124: i32;
  var $i125: i32;
  var $i126: i1;
  var $p127: ref;
  var $p128: ref;
  var $i129: i16;
  var $i130: i32;
  var $i131: i1;
  var $i132: i32;
  var $p133: ref;
  var $i134: i16;
  var $i135: i32;
  var $i136: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !9900, metadata !5230), !dbg !9901, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5512, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  $p6 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 37} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 45} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume ($i8 == 1);
  $p9 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 79} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 57} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 87} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5514, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5513, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5640, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5518, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5519, 11} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5519, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5520, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5520, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p14, 0);
  $p15 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5521, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5521, 20} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 16384);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5521, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5521, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5522, 11} true;
  assume {:verifier.code 0} true;
  call $i19 := serial_in($p0, 1);
  // WARNING: %26 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5264, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5523, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i8($i19);
  // WARNING: %27 = trunc i32 %26 to i8, !dbg !5268, !verifier.code !5232
  call {:cexpr "scratch"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5524, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5525, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := serial_in($p0, 1);
  // WARNING: %28 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5272, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5526, 32} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5526, 16} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5526, 57} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5526, 16} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  // WARNING: %32 = trunc i32 %31 to i8, !dbg !5276, !verifier.code !5232
  call {:cexpr "scratch2"} boogie_si_record_i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5527, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5528, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := serial_in($p0, 1);
  // WARNING: %33 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5281, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5529, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i32.i8($i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5529, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5529, 57} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5529, 16} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  // WARNING: %37 = trunc i32 %36 to i8, !dbg !5285, !verifier.code !5232
  call {:cexpr "scratch3"} boogie_si_record_i8($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5530, 27} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5530, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb12, $bb14;
$bb11:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 39} true;
  assume {:verifier.code 0} true;
  assume ($i33 == 1);
  goto $bb13;
$bb13:
  $p36 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5532, 7} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p36, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5533, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 42} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 66} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb15, $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5531, 9} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb13;
$bb16:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5638, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5537, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5540, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := serial_in($p0, 4);
  // WARNING: %50 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4), !dbg !5303, !verifier.code !5232
  call {:cexpr "tmp___2"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5541, 14} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i32.i8($i37);
  // WARNING: %51 = trunc i32 %50 to i8, !dbg !5306, !verifier.code !5232
  call {:cexpr "save_mcr"} boogie_si_record_i8($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5542, 13} true;
  assume {:verifier.code 0} true;
  call $i39 := serial_in($p0, 3);
  // WARNING: %52 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 3), !dbg !5309, !verifier.code !5232
  call {:cexpr "tmp___3"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5543, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i32.i8($i39);
  // WARNING: %53 = trunc i32 %52 to i8, !dbg !5312, !verifier.code !5232
  call {:cexpr "save_lcr"} boogie_si_record_i8($i40);
  $p41 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5544, 14} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5544, 20} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i42, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5544, 27} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5544, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5545, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5546, 15} true;
  assume {:verifier.code 0} true;
  call $i45 := serial_in($p0, 6);
  // WARNING: %59 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 6), !dbg !5322, !verifier.code !5232
  call {:cexpr "tmp___4"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5547, 31} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5547, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5547, 56} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i32($i47, 240);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5547, 15} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i8($i48);
  // WARNING: %63 = trunc i32 %62 to i8, !dbg !5326, !verifier.code !5232
  call {:cexpr "status1"} boogie_si_record_i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5548, 27} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5548, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5549, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5549, 32} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5549, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb22:
  assume ($i52 == 1);
  $p53 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5550, 7} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p53, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5551, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb23:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5555, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5558, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5559, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5560, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5561, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5562, 13} true;
  assume {:verifier.code 0} true;
  call $i54 := serial_in($p0, 2);
  // WARNING: %73 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5344, !verifier.code !5232
  call {:cexpr "tmp___5"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5563, 38} true;
  assume {:verifier.code 0} true;
  $i55 := $ashr.i32($i54, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5563, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i32.i8($i55);
  // WARNING: %75 = trunc i32 %74 to i8, !dbg !5348, !verifier.code !5232
  call {:cexpr "scratch"} boogie_si_record_i8($i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5564, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i56);
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  $i58 := $slt.i32($i57, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i58 == 1);
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i57, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb34, $bb35;
$bb28:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  $i59 := $slt.i32($i57, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i59 == 1);
  $p64 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5572, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5573, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb30:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i57, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5575, 3} true;
  assume {:verifier.code 0} true;
  call autoconfig_16550a($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5576, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb32:
  assume {:verifier.code 0} true;
  assume !(($i60 == 1));
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb34:
  assume ($i61 == 1);
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i57, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i61 == 1));
  $p63 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5569, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5570, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb36:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5566, 3} true;
  assume {:verifier.code 0} true;
  call autoconfig_8250($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5567, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume {:verifier.code 0} true;
  assume !(($i62 == 1));
  goto $bb33;
$bb38:
  $p65 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 13} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5577, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb40:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 44} true;
  assume {:verifier.code 0} true;
  $i68 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 44} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb43, $bb44;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i67 == 1));
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb43:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 28} true;
  assume {:verifier.code 0} true;
  $i70 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 26} true;
  assume {:verifier.code 0} true;
  $i71 := $ult.i32(0, $i70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb45, $bb46;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5579, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb42;
$bb45:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  $i72 := 0;
  goto $bb48;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb59;
$bb48:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5597, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 9} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref(probe_rsa, $mul.ref($i73, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i64($M.13, $p74);
  $p76 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 31} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i64($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 22} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i64($i75, $i77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5583, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5584, 17} true;
  assume {:verifier.code 0} true;
  call $i79 := __enable_rsa($p0);
  // WARNING: %102 = call i32 @__enable_rsa(%struct.uart_8250_port* %0), !dbg !5379, !verifier.code !5232
  call {:cexpr "tmp___6"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5585, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i32($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5585, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb52, $bb53;
$bb51:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb52:
  assume ($i80 == 1);
  $p81 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5586, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5587, 9} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5602, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5591, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5594, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i32($i72, 1);
  // WARNING: %110 = add nsw i32 %.07, 1, !dbg !5390, !verifier.code !5232
  call {:cexpr "i"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 28} true;
  assume {:verifier.code 0} true;
  $i83 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 26} true;
  assume {:verifier.code 0} true;
  $i84 := $ult.i32($i82, $i83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $i82;
  assume {:branchcond $i84} true;
  goto $bb57, $bb58;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  assume ($i84 == 1);
  goto $bb48;
$bb58:
  assume !(($i84 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 9} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5596, 28} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5605, 25} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5605, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, $i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 55} true;
  assume {:verifier.code 0} true;
  $p86 := $p0;
  $p87 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 60} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i32($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 35} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i32.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 35} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref(uart_config, $mul.ref($i89, 24));
  $p91 := $add.ref($add.ref(uart_config, $mul.ref($i89, 24)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 66} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i16($M.6, $p91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 20} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i16.i32($i92);
  $p94 := $add.ref($p0, 156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5606, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5607, 45} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5607, 45} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i16($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5607, 22} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i16.i32($i96);
  // WARNING: %131 = zext i16 %130 to i32, !dbg !5405, !verifier.code !5232
  call {:cexpr "old_capabilities"} boogie_si_record_i32($i97);
  $p98 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 61} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 43} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i32.i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 43} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref(uart_config, $mul.ref($i100, 24));
  $p102 := $add.ref($add.ref(uart_config, $mul.ref($i100, 24)), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 67} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.8, $p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 26} true;
  assume {:verifier.code 0} true;
  $i104 := $trunc.i32.i16($i103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 11} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5608, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p105, $i104);
  $p106 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 56} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 38} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.i32.i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 38} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref(uart_config, $mul.ref($i108, 24));
  $p110 := $add.ref($add.ref(uart_config, $mul.ref($i108, 24)), 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 62} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i16($M.7, $p110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 23} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i16.i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 11} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p0, 460);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5609, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p113, $i112);
  $p114 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5610, 13} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5610, 18} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5610, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5611, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  $p127 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5629, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p127, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 30} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 30} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i16($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i16.i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 43} true;
  assume {:verifier.code 0} true;
  $i131 := $ne.i32($i130, $i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb71, $bb72;
$bb64:
  $p117 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5615, 13} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i32($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5615, 18} true;
  assume {:verifier.code 0} true;
  $i119 := $eq.i32($i118, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5615, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5616, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, $sub.i32(0, 6), 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5617, 3} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5620, 25} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i8.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5620, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5621, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_clear_fifos($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5622, 3} true;
  assume {:verifier.code 0} true;
  call $i121 := serial_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 22} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 22} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i16($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 8} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i16.i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 35} true;
  assume {:verifier.code 0} true;
  $i125 := $and.i32($i124, 4096);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 43} true;
  assume {:verifier.code 0} true;
  $i126 := $ne.i32($i125, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5624, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5625, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i126 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5626, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 0);
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5623, 46} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb71:
  assume ($i131 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5631, 15} true;
  assume {:verifier.code 0} true;
  call $i132 := serial_index($p2);
  // WARNING: %177 = call i32 @serial_index(%struct.uart_port* %3), !dbg !5456, !verifier.code !5232
  call {:cexpr "tmp___7"} boogie_si_record_i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5633, 26} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5633, 26} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i16($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5633, 12} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i16.i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5632, 5} true;
  assume {:verifier.code 0} true;
  call $i136 := printk.ref.i32.i32.i32(.str.49, $i132, $i97, $i135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5634, 3} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i131 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5630, 46} true;
  assume {:verifier.code 0} true;
  goto $bb17;
}
const autoconfig_irq: ref;
axiom (autoconfig_irq == $sub.ref(0, 347430));
procedure  autoconfig_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i8;
  var $i12: i8;
  var $i13: i8;
  var $i14: i32;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i18: i8;
  var $i19: i32;
  var $i20: i8;
  var $i21: i64;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i8;
  var $i39: i1;
  var $i40: i32;
  var $p41: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5655, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %2, i64 0, metadata !10142, metadata !5230), !dbg !10143, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !10144, metadata !5230), !dbg !10145, !verifier.code !5232
  $p2 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5658, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5658, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5658, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5658, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  $p6 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5659, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5659, 12} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5659, 40} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 4064);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5659, 49} true;
  assume {:verifier.code 0} true;
  $i10 := $or.i32($i9, 31);
  // WARNING: %12 = or i32 %11, 31, !dbg !5250, !verifier.code !5232
  call {:cexpr "ICP"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5660, 16} true;
  assume {:verifier.code 0} true;
  call $i11 := inb_p($i10);
  // WARNING: %13 = call zeroext i8 @inb_p(i32 %12), !dbg !5251, !verifier.code !5232
  call {:cexpr "save_ICP"} boogie_si_record_i8($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5661, 5} true;
  assume {:verifier.code 0} true;
  call outb_p($sub.i8(0, 128), $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5662, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := inb_p($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5663, 3} true;
  assume {:verifier.code 0} true;
  $i13, $i14 := $i11, $i10;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i13, $i14 := 0, 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5666, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := probe_irq_on();
  // WARNING: %17 = call i64 @probe_irq_on(), !dbg !5255, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5667, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := probe_irq_off($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5668, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := serial_in($p0, 4);
  // WARNING: %19 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4), !dbg !5259, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5669, 14} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  // WARNING: %20 = trunc i32 %19 to i8, !dbg !5262, !verifier.code !5232
  call {:cexpr "save_mcr"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5670, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := serial_in($p0, 1);
  // WARNING: %21 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5265, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5671, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i8($i19);
  // WARNING: %22 = trunc i32 %21 to i8, !dbg !5268, !verifier.code !5232
  call {:cexpr "save_ier"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5672, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5673, 10} true;
  assume {:verifier.code 0} true;
  call $i21 := probe_irq_on();
  // WARNING: %23 = call i64 @probe_irq_on(), !dbg !5272, !verifier.code !5232
  call {:cexpr "irqs"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5674, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5675, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  $p22 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5676, 14} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5676, 20} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5676, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5676, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5677, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5678, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i25 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5679, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 11);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5681, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5682, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := serial_in($p0, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5683, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := serial_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5684, 3} true;
  assume {:verifier.code 0} true;
  call $i28 := serial_in($p0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5685, 3} true;
  assume {:verifier.code 0} true;
  call $i29 := serial_in($p0, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5686, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5687, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(85900);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5688, 9} true;
  assume {:verifier.code 0} true;
  call $i30 := probe_irq_off($i21);
  // WARNING: %35 = call i32 @probe_irq_off(i64 %23), !dbg !5294, !verifier.code !5232
  call {:cexpr "irq"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5689, 25} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5689, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5690, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5690, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i32);
  $p33 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5691, 14} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5691, 20} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i34, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5691, 26} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5691, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5692, 12} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5692, 12} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i32.i8($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5692, 5} true;
  assume {:verifier.code 0} true;
  call outb_p($i38, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5693, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $sgt.i32(0, $i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 31} true;
  assume {:verifier.code 0} true;
  $i40 := 0;
  goto $bb12;
$bb11:
  assume !(($i39 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $i30;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 31} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5696, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5697, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_release_rsa_resource: ref;
axiom (serial8250_release_rsa_resource == $sub.ref(0, 348462));
procedure  serial8250_release_rsa_resource($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7456, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7456, 54} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7456, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7456, 32} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($sub.i32(0, 8), $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7456, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  // WARNING: %7 = sext i32 %6 to i64, !dbg !5238, !verifier.code !5232
  call {:cexpr "offset"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7457, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $p0;
  $p8 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7457, 50} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7457, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7457, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $shl.i32(8, $i10);
  // WARNING: %12 = shl i32 8, %11, !dbg !5244, !verifier.code !5232
  call {:cexpr "size"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7458, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  $p13 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7459, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7459, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i15, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb9;
$bb3:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i15, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7459, 31} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb5:
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:verifier.code 0} true;
  assume ($i18 == 1);
  goto $bb8;
$bb8:
  $p19 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7462, 64} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7462, 71} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7462, 82} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7462, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(ioport_resource, $i21, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7463, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb6;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7466, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7464, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
}
const serial8250_release_std_resource: ref;
axiom (serial8250_release_std_resource == $sub.ref(0, 349494));
procedure  serial8250_release_std_resource($p0: ref)
{
  var $i1: i32;
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7389, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial8250_port_size($p0);
  // WARNING: %2 = call i32 @serial8250_port_size(%struct.uart_8250_port* %0), !dbg !5233, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10264, metadata !5230), !dbg !10265, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7391, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7392, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7392, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb3:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb6;
$bb4:
  assume {:verifier.code 0} true;
  assume ($i7 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7392, 31} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i5, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7392, 31} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7392, 31} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb13:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb18, $bb20;
$bb14:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7409, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb17;
$bb17:
  $p13 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7397, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7397, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7397, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb21, $bb22;
$bb18:
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb19;
$bb19:
  $p25 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7412, 63} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7412, 71} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7412, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(ioport_resource, $i26, $i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7413, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb20:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb12;
$bb21:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7398, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7416, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb24:
  $p16 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7402, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7402, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i18 == 1);
  $p19 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7403, 38} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7403, 5} true;
  assume {:verifier.code 0} true;
  call iounmap($p20);
  $p21 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7404, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7405, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  $p22 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7408, 44} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7408, 53} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7408, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(iomem_resource, $i23, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7409, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
}
const exar_handle_irq: ref;
axiom (exar_handle_irq == $sub.ref(0, 350526));
procedure  exar_handle_irq($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6120, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_port_in($p0, 2);
  // WARNING: %2 = call i32 @serial_port_in(%struct.uart_port* %0, i32 2), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10312, metadata !5230), !dbg !10313, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6122, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := serial8250_handle_irq($p0, $i1);
  // WARNING: %3 = call i32 @serial8250_handle_irq(%struct.uart_port* %0, i32 %2), !dbg !5237, !verifier.code !5230
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 25} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6124, 15} true;
  assume {:verifier.code 0} true;
  call $i9 := serial_port_in($p0, 128);
  // WARNING: %12 = call i32 @serial_port_in(%struct.uart_port* %0, i32 128), !dbg !5248, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6126, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := serial_port_in($p0, 129);
  // WARNING: %13 = call i32 @serial_port_in(%struct.uart_port* %0, i32 129), !dbg !5252, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6128, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := serial_port_in($p0, 130);
  // WARNING: %14 = call i32 @serial_port_in(%struct.uart_port* %0, i32 130), !dbg !5255, !verifier.code !5230
  call {:cexpr "tmp___2"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6130, 15} true;
  assume {:verifier.code 0} true;
  call $i12 := serial_port_in($p0, 131);
  // WARNING: %15 = call i32 @serial_port_in(%struct.uart_port* %0, i32 131), !dbg !5258, !verifier.code !5230
  call {:cexpr "tmp___3"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6132, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 39} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6123, 7} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb2;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6135, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const serial8250_port_size: ref;
axiom (serial8250_port_size == $sub.ref(0, 351558));
procedure  serial8250_port_size($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7307, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7307, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7307, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7307, 38} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7308, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 4096;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7320, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7312, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := is_omap1_8250($p0);
  // WARNING: %10 = call i32 @is_omap1_8250(%struct.uart_8250_port* %0), !dbg !5242, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7313, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7314, 45} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  $p10 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7314, 50} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7314, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7314, 32} true;
  assume {:verifier.code 0} true;
  $i13 := $shl.i32(22, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7314, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $i13;
  goto $bb3;
$bb6:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7318, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $p0;
  $p15 := $add.ref($p0, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7318, 47} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7318, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7318, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $shl.i32(8, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7318, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i18;
  goto $bb3;
}
const iounmap: ref;
axiom (iounmap == $sub.ref(0, 352590));
procedure  iounmap($p0: ref);
const __release_region: ref;
axiom (__release_region == $sub.ref(0, 353622));
procedure  __release_region($p0: ref, $i1: i64, $i2: i64);
const inb_p: ref;
axiom (inb_p == $sub.ref(0, 354654));
procedure  inb_p($i0: i32)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4364, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := inb($i0);
  // WARNING: %2 = call zeroext i8 @inb(i32 %0), !dbg !5233, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i8($i1);
  // WARNING: call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !10377, metadata !5230), !dbg !10378, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4366, 3} true;
  assume {:verifier.code 0} true;
  call slow_down_io();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4367, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const outb_p: ref;
axiom (outb_p == $sub.ref(0, 355686));
procedure  outb_p($i0: i8, $i1: i32)
{
  var $i2: i32;
  var $i3: i8;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !10384, metadata !5230), !dbg !10385, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4353, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4353, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4353, 3} true;
  assume {:verifier.code 0} true;
  call outb($i3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4354, 3} true;
  assume {:verifier.code 0} true;
  call slow_down_io();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4355, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const probe_irq_on: ref;
axiom (probe_irq_on == $sub.ref(0, 356718));
procedure  probe_irq_on()
  returns ($r: i64);
const probe_irq_off: ref;
axiom (probe_irq_off == $sub.ref(0, 357750));
procedure  probe_irq_off($i0: i64)
  returns ($r: i32);
const slow_down_io: ref;
axiom (slow_down_io == $sub.ref(0, 358782));
procedure  slow_down_io()
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4208, 17} true;
  assume {:verifier.code 0} true;
  $p0 := $load.ref($M.0, $add.ref(pv_cpu_ops, 208));
  call devirtbounce.26($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4209, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const autoconfig_8250: ref;
axiom (autoconfig_8250 == $sub.ref(0, 359814));
procedure  autoconfig_8250($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i8;
  var $i5: i32;
  var $i6: i8;
  var $i7: i32;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5272, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5272, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5273, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := serial_in($p0, 7);
  // WARNING: %4 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 7), !dbg !5236, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5274, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  // WARNING: %5 = trunc i32 %4 to i8, !dbg !5239, !verifier.code !5232
  call {:cexpr "scratch"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5275, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 7, 165);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5276, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := serial_in($p0, 7);
  // WARNING: %6 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 7), !dbg !5243, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5277, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i5);
  // WARNING: %7 = trunc i32 %6 to i8, !dbg !5246, !verifier.code !5232
  call {:cexpr "status1"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5278, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 7, 90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5279, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := serial_in($p0, 7);
  // WARNING: %8 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 7), !dbg !5250, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5280, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  // WARNING: %9 = trunc i32 %8 to i8, !dbg !5253, !verifier.code !5232
  call {:cexpr "status2"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5281, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5281, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 7, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 165);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 41} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 64} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 38} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5283, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $p0;
  $p15 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5283, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5284, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5282, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5287, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const autoconfig_16550a: ref;
axiom (autoconfig_16550a == $sub.ref(0, 360846));
procedure  autoconfig_16550a($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i32;
  var $i6: i32;
  var $i7: i16;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i8;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i16;
  var $i38: i32;
  var $i39: i32;
  var $i40: i16;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i8;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $i55: i32;
  var $i56: i32;
  var $i57: i32;
  var $i58: i8;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i1;
  var $i65: i32;
  var $i66: i16;
  var $i67: i32;
  var $i68: i32;
  var $i69: i16;
  var $i70: i32;
  var $i71: i1;
  var $i72: i32;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i16;
  var $i79: i32;
  var $i80: i32;
  var $i81: i16;
  var $p82: ref;
  var $i83: i32;
  var $i84: i32;
  var $i85: i8;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i1;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i16;
  var $i97: i32;
  var $i98: i32;
  var $i99: i16;
  var $p100: ref;
  var $i101: i32;
  var $i102: i32;
  var $i103: i32;
  var $i104: i32;
  var $i105: i1;
  var $i106: i32;
  var $i107: i32;
  var $i108: i32;
  var $i109: i1;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i16;
  var $i114: i32;
  var $i115: i32;
  var $i116: i16;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i32;
  var $i121: i32;
  var $i122: i1;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i16;
  var $i127: i32;
  var $i128: i32;
  var $i129: i16;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i32;
  var $i134: i1;
  var $i135: i32;
  var $i136: i1;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i16;
  var $i141: i32;
  var $i142: i32;
  var $i143: i16;
  var $p144: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5352, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5352, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 49} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 62} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5353, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5354, 16} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  $p10 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5354, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5354, 27} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 33554432);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5354, 40} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5354, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5355, 11} true;
  assume {:verifier.code 0} true;
  call $i14 := serial_in($p0, 141);
  // WARNING: %16 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 141), !dbg !5247, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5356, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  // WARNING: %17 = trunc i32 %16 to i8, !dbg !5251, !verifier.code !5232
  call {:cexpr "status1"} boogie_si_record_i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 10} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 41} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb3, $bb5;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 41} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5358, 15} true;
  assume {:verifier.code 0} true;
  $p22 := $p0;
  $p23 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5358, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 53} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 53} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 30} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 66} true;
  assume {:verifier.code 0} true;
  $i27 := $or.i32($i26, 3584);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i16($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 15} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5359, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5360, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb5:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 44} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 67} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 76} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 76} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb4;
$bb7:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 79} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 102} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5357, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb4;
$bb9:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5488, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5364, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5367, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5368, 13} true;
  assume {:verifier.code 0} true;
  call $i30 := serial_in($p0, 2);
  // WARNING: %39 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5277, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5369, 15} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5369, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5370, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5371, 15} true;
  assume {:verifier.code 0} true;
  call $i32 := serial_in($p0, 2);
  // WARNING: %42 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5285, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5372, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5372, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb15:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5373, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $p0;
  $p35 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5373, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 53} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 53} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 66} true;
  assume {:verifier.code 0} true;
  $i39 := $or.i32($i38, 1536);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 30} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i32.i16($i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 15} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5374, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5375, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5378, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5379, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5383, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5384, 13} true;
  assume {:verifier.code 0} true;
  call $i42 := serial_in($p0, 2);
  // WARNING: %57 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5303, !verifier.code !5232
  call {:cexpr "tmp___2"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5385, 15} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5385, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5386, 15} true;
  assume {:verifier.code 0} true;
  call $i44 := broken_efr($p0);
  // WARNING: %60 = call i32 @broken_efr(%struct.uart_8250_port* %0), !dbg !5309, !verifier.code !5232
  call {:cexpr "tmp___3"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5387, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5387, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb21:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5388, 7} true;
  assume {:verifier.code 0} true;
  call autoconfig_has_efr($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5389, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5393, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5396, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5397, 13} true;
  assume {:verifier.code 0} true;
  call $i46 := serial_in($p0, 4);
  // WARNING: %67 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4), !dbg !5321, !verifier.code !5232
  call {:cexpr "tmp___4"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5398, 13} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  // WARNING: %68 = trunc i32 %67 to i8, !dbg !5324, !verifier.code !5232
  call {:cexpr "status1"} boogie_si_record_i8($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5399, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5400, 13} true;
  assume {:verifier.code 0} true;
  call $i48 := serial_in($p0, 2);
  // WARNING: %69 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5326, !verifier.code !5232
  call {:cexpr "tmp___5"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5401, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i8($i48);
  // WARNING: %70 = trunc i32 %69 to i8, !dbg !5329, !verifier.code !5232
  call {:cexpr "status2"} boogie_si_record_i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 25} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 23} true;
  assume {:verifier.code 0} true;
  $i52 := $xor.i32($i50, $i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 40} true;
  assume {:verifier.code 0} true;
  $i53 := $and.i32($i52, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 46} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5403, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5404, 34} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5404, 57} true;
  assume {:verifier.code 0} true;
  $i56 := $xor.i32($i55, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5404, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5405, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5406, 15} true;
  assume {:verifier.code 0} true;
  call $i57 := serial_in($p0, 2);
  // WARNING: %79 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5345, !verifier.code !5232
  call {:cexpr "tmp___6"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5407, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i32.i8($i57);
  // WARNING: %80 = trunc i32 %79 to i8, !dbg !5348, !verifier.code !5232
  call {:cexpr "status2"} boogie_si_record_i8($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5408, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5409, 27} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5409, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 11} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 27} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 25} true;
  assume {:verifier.code 0} true;
  $i62 := $xor.i32($i60, $i61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 42} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i32($i62, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 48} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5410, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb27:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5411, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5412, 17} true;
  assume {:verifier.code 0} true;
  call $i65 := serial_dl_read($p0);
  // WARNING: %88 = call i32 @serial_dl_read(%struct.uart_8250_port* %0), !dbg !5361, !verifier.code !5232
  call {:cexpr "tmp___7"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5413, 14} true;
  assume {:verifier.code 0} true;
  $i66 := $trunc.i32.i16($i65);
  // WARNING: %89 = trunc i32 %88 to i16, !dbg !5364, !verifier.code !5232
  call {:cexpr "quot"} boogie_si_record_i16($i66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5414, 14} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i16.i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5414, 25} true;
  assume {:verifier.code 0} true;
  $i68 := $shl.i32($i67, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5414, 14} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i16($i68);
  // WARNING: %92 = trunc i32 %91 to i16, !dbg !5367, !verifier.code !5232
  call {:cexpr "quot"} boogie_si_record_i16($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5415, 17} true;
  assume {:verifier.code 0} true;
  call $i70 := ns16550a_goto_highspeed($p0);
  // WARNING: %93 = call i32 @ns16550a_goto_highspeed(%struct.uart_8250_port* %0), !dbg !5369, !verifier.code !5232
  call {:cexpr "tmp___8"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5416, 19} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5416, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb29:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5417, 33} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5417, 9} true;
  assume {:verifier.code 0} true;
  call serial_dl_write($p0, $i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5418, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5421, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5422, 15} true;
  assume {:verifier.code 0} true;
  $p73 := $p0;
  $p74 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5422, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p74, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5423, 15} true;
  assume {:verifier.code 0} true;
  $p75 := $p0;
  $p76 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5423, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p76, 14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 53} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 53} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i16($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 30} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i16.i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 66} true;
  assume {:verifier.code 0} true;
  $i80 := $or.i32($i79, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 30} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 15} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5424, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5425, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5429, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5432, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5433, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5434, 13} true;
  assume {:verifier.code 0} true;
  call $i83 := serial_in($p0, 2);
  // WARNING: %113 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5393, !verifier.code !5232
  call {:cexpr "tmp___9"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5435, 38} true;
  assume {:verifier.code 0} true;
  $i84 := $ashr.i32($i83, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5435, 13} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i32.i8($i84);
  // WARNING: %115 = trunc i32 %114 to i8, !dbg !5397, !verifier.code !5232
  call {:cexpr "status1"} boogie_si_record_i8($i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5436, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5437, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5438, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5439, 14} true;
  assume {:verifier.code 0} true;
  call $i86 := serial_in($p0, 2);
  // WARNING: %116 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5401, !verifier.code !5232
  call {:cexpr "tmp___10"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5440, 39} true;
  assume {:verifier.code 0} true;
  $i87 := $ashr.i32($i86, 5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5440, 13} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  // WARNING: %118 = trunc i32 %117 to i8, !dbg !5405, !verifier.code !5232
  call {:cexpr "status2"} boogie_si_record_i8($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5441, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5442, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $eq.i32($i89, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 39} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 62} true;
  assume {:verifier.code 0} true;
  $i92 := $eq.i32($i91, 7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb37, $bb38;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i90 == 1));
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb37:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5444, 13} true;
  assume {:verifier.code 0} true;
  $p93 := $p0;
  $p94 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5444, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 51} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 51} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i16($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 28} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i16.i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 64} true;
  assume {:verifier.code 0} true;
  $i98 := $or.i32($i97, 3072);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 28} true;
  assume {:verifier.code 0} true;
  $i99 := $trunc.i32.i16($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 13} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5445, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p100, $i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5446, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5443, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i92 == 1));
  goto $bb36;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5450, 14} true;
  assume {:verifier.code 0} true;
  call $i101 := serial_in($p0, 1);
  // WARNING: %135 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5425, !verifier.code !5232
  call {:cexpr "tmp___11"} boogie_si_record_i32($i101);
  // WARNING: call void @llvm.dbg.value(metadata i32 %135, i64 0, metadata !10634, metadata !5230), !dbg !10635, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5452, 39} true;
  assume {:verifier.code 0} true;
  $i102 := $and.i32($i101, $sub.i32(0, 65));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5452, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5453, 14} true;
  assume {:verifier.code 0} true;
  call $i103 := serial_in($p0, 1);
  // WARNING: %137 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5432, !verifier.code !5232
  call {:cexpr "tmp___13"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5454, 17} true;
  assume {:verifier.code 0} true;
  $i104 := $and.i32($i103, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5454, 23} true;
  assume {:verifier.code 0} true;
  $i105 := $eq.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5454, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5455, 42} true;
  assume {:verifier.code 0} true;
  $i106 := $or.i32($i101, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5455, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5456, 16} true;
  assume {:verifier.code 0} true;
  call $i107 := serial_in($p0, 1);
  // WARNING: %142 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5442, !verifier.code !5232
  call {:cexpr "tmp___12"} boogie_si_record_i32($i107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5457, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $and.i32($i107, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5457, 25} true;
  assume {:verifier.code 0} true;
  $i109 := $ne.i32($i108, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5457, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb42, $bb43;
$bb41:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb42:
  assume ($i109 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5458, 15} true;
  assume {:verifier.code 0} true;
  $p110 := $p0;
  $p111 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5458, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p111, 15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 53} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 53} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i16($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 30} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i16.i32($i113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 66} true;
  assume {:verifier.code 0} true;
  $i115 := $or.i32($i114, 12288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 30} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i32.i16($i115);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 15} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5459, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p117, $i116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5460, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb43:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5464, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5467, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5468, 16} true;
  assume {:verifier.code 0} true;
  $p118 := $p0;
  $p119 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5468, 21} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5468, 27} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i32($i120, 33554432);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5468, 40} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i32($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5468, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5469, 13} true;
  assume {:verifier.code 0} true;
  $p123 := $p0;
  $p124 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5469, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p124, 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 51} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 51} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i16($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 28} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i16.i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 64} true;
  assume {:verifier.code 0} true;
  $i128 := $or.i32($i127, 3584);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 28} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i32.i16($i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 13} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5470, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5471, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb47:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5475, 15} true;
  assume {:verifier.code 0} true;
  $p131 := $p0;
  $p132 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5475, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i32($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5475, 25} true;
  assume {:verifier.code 0} true;
  $i134 := $eq.i32($i133, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5475, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5476, 16} true;
  assume {:verifier.code 0} true;
  call $i135 := size_fifo($p0);
  // WARNING: %179 = call i32 @size_fifo(%struct.uart_8250_port* %0), !dbg !5480, !verifier.code !5232
  call {:cexpr "tmp___14"} boogie_si_record_i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5477, 18} true;
  assume {:verifier.code 0} true;
  $i136 := $eq.i32($i135, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5477, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb51, $bb52;
$bb50:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb51:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5478, 15} true;
  assume {:verifier.code 0} true;
  $p137 := $p0;
  $p138 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5478, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p138, 19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 53} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 53} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i16($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 30} true;
  assume {:verifier.code 0} true;
  $i141 := $zext.i16.i32($i140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 66} true;
  assume {:verifier.code 0} true;
  $i142 := $or.i32($i141, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 30} true;
  assume {:verifier.code 0} true;
  $i143 := $trunc.i32.i16($i142);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 15} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5479, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p144, $i143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5480, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5483, 3} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5486, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
}
const __enable_rsa: ref;
axiom (__enable_rsa == $sub.ref(0, 361878));
procedure  __enable_rsa($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5036, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, $sub.i32(0, 8));
  // WARNING: %2 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 -8), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5037, 10} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  // WARNING: %3 = trunc i32 %2 to i8, !dbg !5235, !verifier.code !5230
  call {:cexpr "mode"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5038, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5038, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 4);
  // WARNING: %5 = and i32 %4, 4, !dbg !5239, !verifier.code !5230
  call {:cexpr "result"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5039, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5039, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5040, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5040, 55} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i6, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5040, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, $sub.i32(0, 8), $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5041, 15} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_in($p0, $sub.i32(0, 8));
  // WARNING: %10 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 -8), !dbg !5249, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5042, 12} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  // WARNING: %11 = trunc i32 %10 to i8, !dbg !5252, !verifier.code !5230
  call {:cexpr "mode"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5043, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5043, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, 4);
  // WARNING: %13 = and i32 %12, 4, !dbg !5254, !verifier.code !5230
  call {:cexpr "result"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5044, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i11;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i12 := $i4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5047, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5047, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5048, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $p0;
  $p15 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5048, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5049, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5052, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const serial_index: ref;
axiom (serial_index == $sub.ref(0, 362910));
procedure  serial_index($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 49} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i32($M.0, $add.ref(serial8250_reg, 28));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 63} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 63} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 55} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 69} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i4, $sub.i32(0, 64));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4724, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 363942));
procedure  printk.ref.i32.ref($p0: ref, p.1: i32, p.2: ref)
  returns ($r: i32);
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32)
  returns ($r: i32);
const broken_efr: ref;
axiom (broken_efr == $sub.ref(0, 364974));
procedure  broken_efr($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5296, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := autoconfig_read_divisor_id($p0);
  // WARNING: %2 = call i32 @autoconfig_read_divisor_id(%struct.uart_8250_port* %0), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5297, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 513);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5298, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := size_fifo($p0);
  // WARNING: %5 = call i32 @size_fifo(%struct.uart_8250_port* %0), !dbg !5238, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5299, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5299, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5300, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5309, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5304, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5307, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb5;
}
const autoconfig_has_efr: ref;
axiom (autoconfig_has_efr == $sub.ref(0, 366006));
procedure  autoconfig_has_efr($p0: ref)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $i20: i1;
  var $p21: ref;
  var $i22: i16;
  var $i23: i32;
  var $i24: i32;
  var $i25: i16;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 62} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i3, 1536);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5225, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5226, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5226, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5227, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 191);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5228, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5229, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5230, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_icr_read($p0, 8);
  // WARNING: %9 = call i32 @serial_icr_read(%struct.uart_8250_port* %0, i32 8), !dbg !5244, !verifier.code !5232
  call {:cexpr "id1"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5231, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := serial_icr_read($p0, 9);
  // WARNING: %10 = call i32 @serial_icr_read(%struct.uart_8250_port* %0, i32 9), !dbg !5247, !verifier.code !5232
  call {:cexpr "id2"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5232, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := serial_icr_read($p0, 10);
  // WARNING: %11 = call i32 @serial_icr_read(%struct.uart_8250_port* %0, i32 10), !dbg !5250, !verifier.code !5232
  call {:cexpr "id3"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5233, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := serial_icr_read($p0, 11);
  // WARNING: %12 = call i32 @serial_icr_read(%struct.uart_8250_port* %0, i32 11), !dbg !5253, !verifier.code !5232
  call {:cexpr "rev"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 26} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i9, 201);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 44} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i10, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 51} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb6, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 51} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5235, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $p0;
  $p18 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5235, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i10, 82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb13, $bb14;
$bb8:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 58} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i10, 82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 66} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 66} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb7;
$bb10:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 73} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i10, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb11, $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 7} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5234, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb3;
$bb13:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 45} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 45} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 22} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 50} true;
  assume {:verifier.code 0} true;
  $i24 := $or.i32($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i16($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 15} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 458);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5237, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5238, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5236, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb15;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5245, 9} true;
  assume {:verifier.code 0} true;
  call $i27 := autoconfig_read_divisor_id($p0);
  // WARNING: %39 = call i32 @autoconfig_read_divisor_id(%struct.uart_8250_port* %0), !dbg !5288, !verifier.code !5232
  call {:cexpr "id1"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5246, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $lshr.i32($i27, 8);
  // WARNING: %40 = lshr i32 %39, 8, !dbg !5289, !verifier.code !5232
  call {:cexpr "id2"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 12} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb21, $bb23;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 19} true;
  assume {:verifier.code 0} true;
  assume ($i29 == 1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5248, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $p0;
  $p33 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5248, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5249, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb23:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i28, 18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 34} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb22;
$bb25:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i28, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5247, 7} true;
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb22;
$bb27:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5253, 9} true;
  assume {:verifier.code 0} true;
  call $i34 := size_fifo($p0);
  // WARNING: %51 = call i32 @size_fifo(%struct.uart_8250_port* %0), !dbg !5303, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5254, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5254, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5255, 13} true;
  assume {:verifier.code 0} true;
  $p36 := $p0;
  $p37 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5255, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5256, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5257, 13} true;
  assume {:verifier.code 0} true;
  $p38 := $p0;
  $p39 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5257, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, 7);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5259, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
}
const serial_dl_read: ref;
axiom (serial_dl_read == $sub.ref(0, 367038));
procedure  serial_dl_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4689, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4689, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  call $i3 := devirtbounce.27($p2, $p0);
  // WARNING: %4 = call i32 @devirtbounce.27(i32 (%struct.uart_8250_port*)* %3, %struct.uart_8250_port* %0)
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4690, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const size_fifo: ref;
axiom (size_fifo == $sub.ref(0, 368070));
procedure  size_fifo($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i8;
  var $i3: i32;
  var $i4: i8;
  var $i5: i32;
  var $i6: i8;
  var $i7: i32;
  var $i8: i16;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i13: i32;
  var $i21: i32;
  var $i12: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5128, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, 3);
  // WARNING: %2 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 3), !dbg !5231, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5129, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  // WARNING: %3 = trunc i32 %2 to i8, !dbg !5235, !verifier.code !5230
  call {:cexpr "old_lcr"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5130, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5131, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := serial_in($p0, 2);
  // WARNING: %4 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 2), !dbg !5239, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5132, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  // WARNING: %5 = trunc i32 %4 to i8, !dbg !5242, !verifier.code !5230
  call {:cexpr "old_fcr"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5133, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := serial_in($p0, 4);
  // WARNING: %6 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4), !dbg !5245, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5134, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i5);
  // WARNING: %7 = trunc i32 %6 to i8, !dbg !5248, !verifier.code !5230
  call {:cexpr "old_mcr"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5135, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, 7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5136, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5137, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5138, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := serial_dl_read($p0);
  // WARNING: %8 = call i32 @serial_dl_read(%struct.uart_8250_port* %0), !dbg !5254, !verifier.code !5230
  call {:cexpr "tmp___2"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5139, 12} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i16($i7);
  // WARNING: %9 = trunc i32 %8 to i16, !dbg !5257, !verifier.code !5230
  call {:cexpr "old_dl"} boogie_si_record_i16($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5140, 3} true;
  assume {:verifier.code 0} true;
  call serial_dl_write($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5141, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 3);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 3, i32 3), !dbg !5261, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5148, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 0);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 0), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 1);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 1), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb4:
  // WARNING: call void @llvm.dbg.value(metadata i64 20, i64 0, metadata !10911, metadata !5230), !dbg !10912, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 20, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5160, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5171, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := serial_in($p0, 5);
  // WARNING: %16 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5278, !verifier.code !5230
  call {:cexpr "tmp___4"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  assume {:branchcond $i11} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5173, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5168, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := serial_in($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5169, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i13, 1);
  // WARNING: %21 = add nsw i32 %.12, 1, !dbg !5285, !verifier.code !5230
  call {:cexpr "count"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5171, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := serial_in($p0, 5);
  // WARNING: %22 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5278, !verifier.code !5230
  call {:cexpr "tmp___4"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $sle.i32($i15, 255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i1($i18, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  $i13, $i21 := $i15, $i15;
  assume {:branchcond $i20} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb12;
$bb15:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5172, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $i21;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5177, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5177, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 2, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5178, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5178, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 4, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5179, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5180, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5180, 3} true;
  assume {:verifier.code 0} true;
  call serial_dl_write($p0, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5181, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5181, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, $i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5182, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5156, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !5274, !verifier.code !5230
  // WARNING: call void @llvm.dbg.value(metadata i64 19, i64 0, metadata !10913, metadata !5230), !dbg !10914, !verifier.code !5232
  assume {:verifier.code 0} true;
  goto $bb8;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 2);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 2), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 3);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 3), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 4);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 4), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 5);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 5), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 6);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 6), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 7);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 7), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 8);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 8), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 9);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 9), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 10);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 10), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 11);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 11), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 12);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 12), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 13);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 13), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 14);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 14), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 15);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 15), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 16);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 16), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 17);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 17), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 18);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 18), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 19);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 19), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 20);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 20), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 21);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 21), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 22);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 22), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 23);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 23), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 24);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 24), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 25);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 25), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 26);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 26), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 27);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 27), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 28);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 28), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 29);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 29), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 30);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 30), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 31);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 31), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 32);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 32), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 33);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 33), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 34);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 34), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 35);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 35), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 36);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 36), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 37);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 37), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 38);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 38), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 39);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 39), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 40);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 40), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 41);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 41), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 42);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 42), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 43);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 43), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 44);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 44), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 45);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 45), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 46);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 46), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 47);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 47), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 48);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 48), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 49);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 49), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 50);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 50), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 51);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 51), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 52);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 52), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 53);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 53), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 54);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 54), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 55);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 55), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 56);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 56), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 57);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 57), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 58);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 58), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 59);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 59), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 60);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 60), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 61);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 61), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 62);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 62), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 63);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 63), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 64);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 64), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 65);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 65), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 66);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 66), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 67);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 67), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 68);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 68), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 69);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 69), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 70);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 70), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 71);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 71), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 72);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 72), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb106;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 73);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 73), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 74);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 74), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 75);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 75), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 76);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 76), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 77);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 77), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 78);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 78), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 79);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 79), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 80);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 80), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb114;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 81);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 81), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 82);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 82), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 83);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 83), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb117;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 84);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 84), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 85);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 85), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 86);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 86), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 87);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 87), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 88);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 88), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 89);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 89), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb123;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 90);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 90), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 91);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 91), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb125:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 92);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 92), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb126;
$bb126:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 93);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 93), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 94);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 94), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb128;
$bb128:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 95);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 95), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb129;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 96);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 96), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 97);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 97), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb131;
$bb131:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 98);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 98), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 99);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 99), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb133;
$bb133:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 100);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 100), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb134;
$bb134:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 101);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 101), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 102);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 102), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb136;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 103);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 103), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb137;
$bb137:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 104);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 104), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb138;
$bb138:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 105);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 105), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb139;
$bb139:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 106);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 106), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb140;
$bb140:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 107);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 107), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb141;
$bb141:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 108);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 108), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 109);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 109), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb143;
$bb143:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 110);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 110), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb144;
$bb144:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 111);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 111), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb145;
$bb145:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 112);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 112), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb146;
$bb146:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 113);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 113), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb147;
$bb147:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 114);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 114), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb148;
$bb148:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 115);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 115), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb149;
$bb149:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 116);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 116), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb150;
$bb150:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 117);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 117), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb151;
$bb151:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 118);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 118), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 119);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 119), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb153;
$bb153:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 120);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 120), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb154;
$bb154:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 121);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 121), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb155;
$bb155:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 122);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 122), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb156;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 123);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 123), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 124);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 124), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb158;
$bb158:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 125);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 125), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb159:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 126);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 126), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb160;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 127);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 127), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb161;
$bb161:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 128);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 128), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb162;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 129);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 129), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 130);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 130), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb164;
$bb164:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 131);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 131), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb165;
$bb165:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 132);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 132), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb166;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 133);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 133), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb167;
$bb167:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 134);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 134), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb168;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 135);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 135), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb169;
$bb169:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 136);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 136), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb170;
$bb170:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 137);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 137), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb171;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 138);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 138), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb172;
$bb172:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 139);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 139), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb173;
$bb173:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 140);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 140), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb174;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 141);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 141), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb175;
$bb175:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 142);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 142), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb176;
$bb176:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 143);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 143), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb177;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 144);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 144), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb178:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 145);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 145), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb179;
$bb179:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 146);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 146), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb180;
$bb180:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 147);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 147), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 148);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 148), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb182;
$bb182:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 149);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 149), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb183;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 150);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 150), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 151);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 151), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb185;
$bb185:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 152);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 152), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb186;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 153);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 153), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb187;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 154);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 154), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb188;
$bb188:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 155);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 155), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb189;
$bb189:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 156);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 156), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb190;
$bb190:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 157);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 157), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb191;
$bb191:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 158);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 158), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb192;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 159);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 159), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb193;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 160);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 160), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb194;
$bb194:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 161);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 161), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb195;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 162);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 162), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb196:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 163);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 163), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb197;
$bb197:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 164);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 164), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb198;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 165);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 165), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb199;
$bb199:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 166);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 166), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb200;
$bb200:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 167);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 167), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb201;
$bb201:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 168);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 168), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb202;
$bb202:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 169);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 169), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb203;
$bb203:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 170);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 170), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb204;
$bb204:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 171);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 171), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb205;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 172);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 172), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb206;
$bb206:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 173);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 173), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb207;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 174);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 174), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb208;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 175);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 175), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb209;
$bb209:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 176);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 176), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb210;
$bb210:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 177);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 177), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb211;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 178);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 178), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb212;
$bb212:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 179);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 179), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb213;
$bb213:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 180);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 180), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb214;
$bb214:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 181);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 181), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb215;
$bb215:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 182);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 182), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb216:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 183);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 183), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb217;
$bb217:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 184);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 184), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb218;
$bb218:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 185);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 185), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb219;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 186);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 186), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 187);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 187), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb221;
$bb221:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 188);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 188), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb222;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 189);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 189), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb223;
$bb223:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 190);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 190), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb224;
$bb224:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 191);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 191), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb225;
$bb225:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 192);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 192), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb226;
$bb226:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 193);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 193), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb227;
$bb227:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 194);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 194), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb228;
$bb228:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 195);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 195), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb229;
$bb229:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 196);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 196), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb230;
$bb230:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 197);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 197), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb231;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 198);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 198), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb232;
$bb232:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 199);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 199), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb233;
$bb233:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 200);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 200), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb234;
$bb234:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 201);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 201), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb235;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 202);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 202), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb236;
$bb236:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 203);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 203), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb237;
$bb237:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 204);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 204), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb238;
$bb238:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 205);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 205), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb239;
$bb239:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 206);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 206), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb240;
$bb240:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 207);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 207), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb241;
$bb241:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 208);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 208), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb242;
$bb242:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 209);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 209), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb243;
$bb243:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 210);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 210), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb244;
$bb244:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 211);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 211), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb245;
$bb245:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 212);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 212), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 213);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 213), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 214);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 214), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb248;
$bb248:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 215);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 215), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb249;
$bb249:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 216);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 216), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb250;
$bb250:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 217);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 217), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb251;
$bb251:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 218);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 218), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb252;
$bb252:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 219);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 219), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb253;
$bb253:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 220);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 220), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb254;
$bb254:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 221);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 221), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb255;
$bb255:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 222);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 222), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb256;
$bb256:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 223);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 223), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb257;
$bb257:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 224);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 224), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb258;
$bb258:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 225);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 225), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb259;
$bb259:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 226);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 226), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb260;
$bb260:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 227);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 227), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb261;
$bb261:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 228);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 228), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb262;
$bb262:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 229);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 229), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb263;
$bb263:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 230);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 230), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb264;
$bb264:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 231);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 231), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb265;
$bb265:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 232);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 232), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb266;
$bb266:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 233);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 233), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb267;
$bb267:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 234);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 234), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb268;
$bb268:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 235);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 235), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb269;
$bb269:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 236);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 236), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb270;
$bb270:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 237);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 237), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb271;
$bb271:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 238);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 238), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb272;
$bb272:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 239);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 239), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb273;
$bb273:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 240);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 240), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb274;
$bb274:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 241);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 241), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb275;
$bb275:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 242);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 242), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb276:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 243);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 243), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb277;
$bb277:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 244);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 244), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb278;
$bb278:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 245);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 245), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb279;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 246);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 246), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb280;
$bb280:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 247);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 247), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb281;
$bb281:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 248);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 248), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb282;
$bb282:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 249);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 249), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb283;
$bb283:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 250);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 250), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb284;
$bb284:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 251);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 251), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb285;
$bb285:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 252);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 252), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb286;
$bb286:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 253);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 253), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb287;
$bb287:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 254);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 254), !dbg !5265, !verifier.code !5230
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb288;
$bb288:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5145, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 255);
  // WARNING: call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 255), !dbg !5265, !verifier.code !5230
  assume {:verifier.code 0} true;
  goto $bb4;
}
const serial_icr_read: ref;
axiom (serial_icr_read == $sub.ref(0, 369102));
procedure  serial_icr_read($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %0, i64 0, metadata !10945, metadata !5230), !dbg !10946, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4949, 61} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4949, 61} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4949, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4949, 65} true;
  assume {:verifier.code 0} true;
  $i5 := $or.i32($i4, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4949, 3} true;
  assume {:verifier.code 0} true;
  call serial_icr_write($p0, 0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4950, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 7, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4951, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := serial_in($p0, 5);
  // WARNING: %7 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  // WARNING: call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !10956, metadata !5230), !dbg !10957, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4953, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4953, 45} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4953, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4953, 3} true;
  assume {:verifier.code 0} true;
  call serial_icr_write($p0, 0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4954, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const autoconfig_read_divisor_id: ref;
axiom (autoconfig_read_divisor_id == $sub.ref(0, 370134));
procedure  autoconfig_read_divisor_id($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i8;
  var $i3: i32;
  var $i4: i8;
  var $i5: i32;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5198, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := serial_in($p0, 3);
  // WARNING: %2 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 3), !dbg !5233, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5199, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i8($i1);
  // WARNING: %3 = trunc i32 %2 to i8, !dbg !5237, !verifier.code !5232
  call {:cexpr "old_lcr"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5200, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5201, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := serial_in($p0, 0);
  // WARNING: %4 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 0), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5202, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  // WARNING: %5 = trunc i32 %4 to i8, !dbg !5244, !verifier.code !5232
  call {:cexpr "old_dll"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5203, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := serial_in($p0, 1);
  // WARNING: %6 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5247, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5204, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i5);
  // WARNING: %7 = trunc i32 %6 to i8, !dbg !5250, !verifier.code !5232
  call {:cexpr "old_dlm"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5205, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5206, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5207, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := serial_in($p0, 0);
  // WARNING: %8 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 0), !dbg !5255, !verifier.code !5232
  call {:cexpr "tmp___2"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5208, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_in($p0, 1);
  // WARNING: %9 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 1), !dbg !5258, !verifier.code !5232
  call {:cexpr "tmp___3"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5209, 43} true;
  assume {:verifier.code 0} true;
  $i9 := $shl.i32($i8, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5209, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $or.i32($i7, $i9);
  // WARNING: %11 = or i32 %8, %10, !dbg !5262, !verifier.code !5232
  call {:cexpr "id"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5210, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5210, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 0, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5211, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5211, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 1, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5212, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5212, 3} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, 3, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5213, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const __request_region: ref;
axiom (__request_region == $sub.ref(0, 371166));
procedure  __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32)
  returns ($r: ref);
const ioremap_nocache: ref;
axiom (ioremap_nocache == $sub.ref(0, 372198));
procedure  ioremap_nocache($i0: i64, $i1: i64)
  returns ($r: ref);
const disable_rsa: ref;
axiom (disable_rsa == $sub.ref(0, 373230));
procedure  disable_rsa($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $p0;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 56} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 32} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5088, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5088, 5} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5089, 11} true;
  assume {:verifier.code 0} true;
  call $i11 := serial_in($p0, $sub.i32(0, 8));
  // WARNING: %14 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 -8), !dbg !5247, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5090, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i8($i11);
  // WARNING: %15 = trunc i32 %14 to i8, !dbg !5250, !verifier.code !5232
  call {:cexpr "mode"} boogie_si_record_i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5091, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5091, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i13, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5091, 31} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5091, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  // WARNING: %19 = zext i1 %18 to i32, !dbg !5255, !verifier.code !5232
  call {:cexpr "result"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5092, 16} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5092, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5087, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5093, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5093, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i18, $sub.i32(0, 5));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5093, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, $sub.i32(0, 8), $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5094, 17} true;
  assume {:verifier.code 0} true;
  call $i20 := serial_in($p0, $sub.i32(0, 8));
  // WARNING: %24 = call i32 @serial_in(%struct.uart_8250_port* %0, i32 -8), !dbg !5265, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5095, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  // WARNING: %25 = trunc i32 %24 to i8, !dbg !5268, !verifier.code !5232
  call {:cexpr "mode"} boogie_si_record_i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5096, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5096, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5096, 33} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5096, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  // WARNING: %29 = zext i1 %28 to i32, !dbg !5271, !verifier.code !5232
  call {:cexpr "result"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5097, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $i25;
  goto $bb8;
$bb7:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i26 := $i16;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5100, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5100, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5101, 15} true;
  assume {:verifier.code 0} true;
  $p28 := $p0;
  $p29 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5101, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, 1843200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5102, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5105, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $p0;
  $p31 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5105, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5106, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5109, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_del_timer_sync_25: ref;
axiom (ldv_del_timer_sync_25 == $sub.ref(0, 374262));
procedure  ldv_del_timer_sync_25($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9324, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := del_timer_sync($p0);
  // WARNING: %2 = call i32 @del_timer_sync(%struct.timer_list* %0), !dbg !5233, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11067, metadata !5230), !dbg !11068, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9326, 3} true;
  assume {:verifier.code 0} true;
  call disable_suitable_timer_2($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9327, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const serial8250_timeout: ref;
axiom (serial8250_timeout == $sub.ref(0, 375294));
procedure  serial8250_timeout($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6394, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $i2p.i64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6395, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  $p3 := $add.ref($p1, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6395, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6395, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  call $i6 := devirtbounce.28($p4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6396, 37} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6396, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := uart_poll_timeout($p7);
  // WARNING: %9 = call i32 @uart_poll_timeout(%struct.uart_port* %8), !dbg !5239, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6397, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6397, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6397, 75} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6397, 57} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i10, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6397, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_mod_timer_21($p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6398, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_unlink_irq_chain: ref;
axiom (serial_unlink_irq_chain == $sub.ref(0, 376326));
procedure  serial_unlink_irq_chain($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p13: ref;
  var $p29: ref;
  var $p30: ref;
  var $p11: ref;
  var $p12: ref;
  var $p23: ref;
  var $p24: ref;
  var $i31: i64;
  var $i32: i1;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $i41: i32;
  var $i42: i64;
  var $i43: i64;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6337, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(hash_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6338, 69} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6338, 74} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6338, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6338, 78} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i64($i4, 31);
  $p6 := $add.ref(irq_lists, $mul.ref($i5, 8));
  $p7 := $add.ref(irq_lists, $mul.ref($i5, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6339, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 25} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $p11, $p12 := $u1, $p8;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $p8;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6352, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6343, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 25} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 40} true;
  assume {:verifier.code 0} true;
  $p17 := $p0;
  $p18 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 45} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i16, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6344, 7} true;
  assume {:verifier.code 0} true;
  $p21, $p22 := $p13, $p13;
  assume {:branchcond $i20} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6345, 5} true;
  assume {:verifier.code 0} true;
  $p23, $p24 := $p21, $p22;
  goto $bb8;
$bb7:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6357, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6357, 47} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6357, 47} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i1.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6357, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6357, 9} true;
  assume {:verifier.code 0} true;
  call $i35 := ldv__builtin_expect($i34, 0);
  // WARNING: %35 = call i64 @ldv__builtin_expect(i64 %34, i64 0), !dbg !5268, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6359, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6359, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb13, $bb14;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6349, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6349, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 25} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $p13, $p29, $p30 := $p26, $p13, $p26;
  assume {:branchcond $i28} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb4;
$bb11:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 7} true;
  assume {:verifier.code 0} true;
  $p11, $p12 := $p29, $p30;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6351, 67} true;
  assume {:verifier.code 0} true;
  $p23, $p24 := $p12, $p11;
  goto $bb8;
$bb13:
  assume ($i36 == 1);
  call devirtbounce.6(0, .str.52, 1774, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6363, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 52} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p24, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 52} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 57} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 57} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i1.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 33} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6367, 13} true;
  assume {:verifier.code 0} true;
  call $i43 := ldv__builtin_expect($i42, 0);
  // WARNING: %47 = call i64 @ldv__builtin_expect(i64 %46, i64 0), !dbg !5280, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6369, 15} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6369, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i44 == 1);
  call devirtbounce.6(0, .str.52, 1775, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6370, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6373, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6377, 55} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p24, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6377, 55} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6377, 13} true;
  assume {:verifier.code 0} true;
  call $i47 := list_empty($p46);
  // WARNING: %55 = call i32 @list_empty(%struct.list_head* %54), !dbg !5290, !verifier.code !5232
  call {:cexpr "tmp___1"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6378, 15} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6378, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6379, 29} true;
  assume {:verifier.code 0} true;
  $p49 := $p0;
  $p50 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6379, 34} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6379, 39} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6379, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_20($i51, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6380, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6383, 3} true;
  assume {:verifier.code 0} true;
  call serial_do_unlink($p24, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6384, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(hash_mutex);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6385, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_empty: ref;
axiom (list_empty == $sub.ref(0, 377358));
procedure  list_empty($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 62} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 68} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 68} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4154, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ldv_free_irq_20: ref;
axiom (ldv_free_irq_20 == $sub.ref(0, 378390));
procedure  ldv_free_irq_20($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9265, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9266, 3} true;
  assume {:verifier.code 0} true;
  call disable_suitable_irq_1($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9267, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_do_unlink: ref;
axiom (serial_do_unlink == $sub.ref(0, 379422));
procedure  serial_do_unlink($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $i25: i32;
  var $i26: i64;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6223, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6223, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6224, 55} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6224, 55} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6224, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := list_empty($p4);
  // WARNING: %6 = call i32 @list_empty(%struct.list_head* %5), !dbg !5239, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6225, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 63} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 36} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i9, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6226, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 50} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 50} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 85} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 58} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 55} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i21, $i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6233, 11} true;
  assume {:verifier.code 0} true;
  call $i27 := ldv__builtin_expect($i26, 0);
  // WARNING: %33 = call i64 @ldv__builtin_expect(i64 %32, i64 0), !dbg !5268, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6235, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6235, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 28} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6227, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6228, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6231, 24} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6231, 5} true;
  assume {:verifier.code 0} true;
  call list_del($p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6232, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6245, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6245, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6246, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6246, 26} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6246, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6246, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6246, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb11, $bb12;
$bb7:
  assume ($i28 == 1);
  call devirtbounce.6(0, .str.52, 1693, 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6236, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6239, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6243, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6243, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $0.ref);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb11:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6247, 20} true;
  assume {:verifier.code 0} true;
  $p35 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6247, 5} true;
  assume {:verifier.code 0} true;
  call hlist_del($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6248, 11} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6248, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6249, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6252, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_lock_irq: ref;
axiom (spin_lock_irq == $sub.ref(0, 380454));
procedure  spin_lock_irq($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9185, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9186, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_irq_4($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9187, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_del: ref;
axiom (list_del == $sub.ref(0, 381486));
procedure  list_del($p0: ref);
const spin_unlock_irq: ref;
axiom (spin_unlock_irq == $sub.ref(0, 382518));
procedure  spin_unlock_irq($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9205, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9206, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irq_7($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9207, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const hlist_del: ref;
axiom (hlist_del == $sub.ref(0, 383550));
procedure  hlist_del($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4179, 3} true;
  assume {:verifier.code 0} true;
  call __hlist_del($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4180, 6} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4180, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $i2p.i64.ref($sub.i64(0, 2401263026317557504)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4181, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4181, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $i2p.i64.ref($sub.i64(0, 2401263026316508672)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4182, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 384582));
procedure  kfree($p0: ref);
const __hlist_del: ref;
axiom (__hlist_del == $sub.ref(0, 385614));
procedure  __hlist_del($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4163, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4163, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4164, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4164, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4165, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4166, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4166, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4166, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4167, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4167, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4168, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4171, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_irq_7: ref;
axiom (ldv_spin_unlock_irq_7 == $sub.ref(0, 386646));
procedure  ldv_spin_unlock_irq_7($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4261, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4261, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4261, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4262, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irq: ref;
axiom (_raw_spin_unlock_irq == $sub.ref(0, 387678));
procedure  _raw_spin_unlock_irq($p0: ref);
const ldv_spin_lock_irq_4: ref;
axiom (ldv_spin_lock_irq_4 == $sub.ref(0, 388710));
procedure  ldv_spin_lock_irq_4($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4241, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4241, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4241, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4242, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock_irq: ref;
axiom (_raw_spin_lock_irq == $sub.ref(0, 389742));
procedure  _raw_spin_lock_irq($p0: ref);
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 390774));
procedure  free_irq($i0: i32, $p1: ref);
const disable_suitable_irq_1: ref;
axiom (disable_suitable_irq_1 == $sub.ref(0, 391806));
procedure  disable_suitable_irq_1($i0: i32, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 32} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8390, 17} true;
  assume {:verifier.code 0} true;
  $M.14 := 0;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8391, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8389, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8415, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8396, 17} true;
  assume {:verifier.code 0} true;
  $M.16 := 0;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8397, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8395, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb10;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 32} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i0, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8402, 17} true;
  assume {:verifier.code 0} true;
  $M.18 := 0;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8403, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8401, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb16;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 35} true;
  assume {:verifier.code 0} true;
  $i16 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb23:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8408, 17} true;
  assume {:verifier.code 0} true;
  $M.20 := 0;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8409, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb22;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8413, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const uart_poll_timeout: ref;
axiom (uart_poll_timeout == $sub.ref(0, 392838));
procedure  uart_poll_timeout($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4603, 25} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4603, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  // WARNING: %3 = load i32, i32* %2, align 8, !dbg !5231, !verifier.code !5230
  call {:cexpr "timeout"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $sgt.i32($i2, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $sdiv.i32($i2, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i4, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 11} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4604, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ldv_mod_timer_21: ref;
axiom (ldv_mod_timer_21 == $sub.ref(0, 393870));
procedure  ldv_mod_timer_21($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !11393, metadata !5230), !dbg !11394, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9276, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := mod_timer($p0, $i1);
  // WARNING: %3 = call i32 @mod_timer(%struct.timer_list* %0, i64 %1), !dbg !5235, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !11399, metadata !5230), !dbg !11400, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9278, 3} true;
  assume {:verifier.code 0} true;
  call activate_pending_timer_2($p0, $i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9279, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const mod_timer: ref;
axiom (mod_timer == $sub.ref(0, 394902));
procedure  mod_timer($p0: ref, $i1: i64)
  returns ($r: i32);
const activate_pending_timer_2: ref;
axiom (activate_pending_timer_2 == $sub.ref(0, 395934));
procedure  activate_pending_timer_2($p0: ref, $i1: i64, $i2: i32)
{
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !11409, metadata !5230), !dbg !11410, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11411, metadata !5230), !dbg !11412, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8353, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8353, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8353, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8353, 40} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i4, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8353, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb5;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 32} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8355, 24} true;
  assume {:verifier.code 0} true;
  $M.22 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8356, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8356, 25} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8356, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p11, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8357, 25} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_timer_state_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8358, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb5:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 48} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8354, 9} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb4;
$bb7:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8361, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8369, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8365, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := reg_timer_2($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8366, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8366, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8366, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8367, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const reg_timer_2: ref;
axiom (reg_timer_2 == $sub.ref(0, 396966));
procedure  reg_timer_2($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8343, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8344, 21} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_timer_state_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8345, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const del_timer_sync: ref;
axiom (del_timer_sync == $sub.ref(0, 397998));
procedure  del_timer_sync($p0: ref)
  returns ($r: i32);
const disable_suitable_timer_2: ref;
axiom (disable_suitable_timer_2 == $sub.ref(0, 399030));
procedure  disable_suitable_timer_2($p0: ref)
{
  var $i1: i64;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8375, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8375, 48} true;
  assume {:verifier.code 0} true;
  $p2 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8375, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8375, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8375, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8376, 23} true;
  assume {:verifier.code 0} true;
  $M.23 := 0;
  call {:cexpr "ldv_timer_state_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8377, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8383, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8381, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const enable_rsa: ref;
axiom (enable_rsa == $sub.ref(0, 400062));
procedure  enable_rsa($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5060, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5060, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5060, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5061, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $p0;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5061, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5061, 30} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5061, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5062, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5062, 7} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5063, 7} true;
  assume {:verifier.code 0} true;
  call $i11 := __enable_rsa($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5064, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  $p13 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5064, 7} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5065, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5068, 17} true;
  assume {:verifier.code 0} true;
  $p14 := $p0;
  $p15 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5068, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5068, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 14745600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5068, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5069, 7} true;
  assume {:verifier.code 0} true;
  call serial_out($p0, $sub.i32(0, 6), 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5073, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 5076, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const disable_irq_nosync: ref;
axiom (disable_irq_nosync == $sub.ref(0, 401094));
procedure  disable_irq_nosync($i0: i32);
const serial_port_out_sync: ref;
axiom (serial_port_out_sync == $sub.ref(0, 402126));
procedure  serial_port_out_sync($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !11501, metadata !5230), !dbg !11502, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !11503, metadata !5230), !dbg !11504, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4919, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4919, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4919, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb3:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb6;
$bb4:
  assume {:verifier.code 0} true;
  assume ($i7 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4919, 28} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb9;
$bb7:
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4923, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4923, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  call devirtbounce($p11, $p0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4924, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4924, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  call $i14 := devirtbounce.1($p13, $p0, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4925, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb9:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4919, 28} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb10;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4930, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4927, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4927, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce($p16, $p0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4928, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4928, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
}
const enable_irq: ref;
axiom (enable_irq == $sub.ref(0, 403158));
procedure  enable_irq($i0: i32);
const __dynamic_pr_debug: ref;
axiom (__dynamic_pr_debug == $sub.ref(0, 404190));
procedure  __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const serial8250_backup_timeout: ref;
axiom (serial8250_backup_timeout == $sub.ref(0, 405222));
procedure  serial8250_backup_timeout($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6414, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $i2p.i64.ref($i0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_8250_port* %2, i64 0, metadata !11528, metadata !5230), !dbg !11529, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6416, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6417, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  $p3 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6417, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6417, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6417, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6418, 11} true;
  assume {:verifier.code 0} true;
  call $i6 := serial_in($p1, 1);
  // WARNING: %8 = call i32 @serial_in(%struct.uart_8250_port* %2, i32 1), !dbg !5243, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !11540, metadata !5230), !dbg !11541, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6420, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p1, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6421, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6424, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_in($p1, 2);
  // WARNING: %11 = call i32 @serial_in(%struct.uart_8250_port* %2, i32 2), !dbg !5249, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  // WARNING: call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !11545, metadata !5230), !dbg !11546, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6426, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := serial_in($p1, 5);
  // WARNING: %12 = call i32 @serial_in(%struct.uart_8250_port* %2, i32 5), !dbg !5254, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i32($i9);
  // WARNING: call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !11550, metadata !5230), !dbg !11551, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 52} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 52} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 87} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 71} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 108} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 68} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 11} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 471);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6428, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 41} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 465);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 45} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 50} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 56} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i48 := $i8;
  goto $bb16;
$bb7:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 69} true;
  assume {:verifier.code 0} true;
  $p26 := $p1;
  $p27 := $add.ref($p1, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 74} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 82} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 1072);
  $p30 := $add.ref($add.ref($p28, 1072), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 87} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 104} true;
  assume {:verifier.code 0} true;
  $p32 := $p1;
  $p33 := $add.ref($p1, 176);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 109} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 117} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 1072);
  $p36 := $add.ref($add.ref($p34, 1072), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 122} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 92} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i31, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 127} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb9, $bb11;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 56} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb6;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 127} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1);
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 181} true;
  assume {:verifier.code 0} true;
  $i44 := $and.i32($i9, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 188} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb14, $bb15;
$bb11:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 153} true;
  assume {:verifier.code 0} true;
  $p39 := $p1;
  $p40 := $add.ref($p1, 160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 158} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 130} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 165} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 173} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 173} true;
  assume {:verifier.code 0} true;
  assume ($i43 == 1);
  goto $bb10;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 173} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb6;
$bb14:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6430, 15} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i8, $sub.i32(0, 16));
  // WARNING: %54 = and i32 %11, -16, !dbg !5297, !verifier.code !5230
  call {:cexpr "iir"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6431, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $or.i32($i46, 2);
  // WARNING: %55 = or i32 %54, 2, !dbg !5299, !verifier.code !5230
  call {:cexpr "iir"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6432, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $i47;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6429, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb6;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6435, 12} true;
  assume {:verifier.code 0} true;
  $i49 := $and.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6435, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6435, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6436, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_tx_chars($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6437, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6440, 15} true;
  assume {:verifier.code 0} true;
  $p51 := $p1;
  $p52 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6440, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6440, 24} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6440, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6441, 5} true;
  assume {:verifier.code 0} true;
  call serial_out($p1, 1, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6442, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6445, 36} true;
  assume {:verifier.code 0} true;
  $p55 := $p1;
  $p56 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6445, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p56, $u0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6446, 41} true;
  assume {:verifier.code 0} true;
  $p57 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6446, 13} true;
  assume {:verifier.code 0} true;
  call $i58 := uart_poll_timeout($p57);
  // WARNING: %73 = call i32 @uart_poll_timeout(%struct.uart_port* %72), !dbg !5319, !verifier.code !5230
  call {:cexpr "tmp___2"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p1, 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 38} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 80} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 62} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i60, $i61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 89} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6447, 3} true;
  assume {:verifier.code 0} true;
  call $i64 := ldv_mod_timer_22($p59, $i63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6448, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mod_timer_23: ref;
axiom (ldv_mod_timer_23 == $sub.ref(0, 406254));
procedure  ldv_mod_timer_23($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !11625, metadata !5230), !dbg !11626, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9300, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := mod_timer($p0, $i1);
  // WARNING: %3 = call i32 @mod_timer(%struct.timer_list* %0, i64 %1), !dbg !5235, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !11631, metadata !5230), !dbg !11632, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9302, 3} true;
  assume {:verifier.code 0} true;
  call activate_pending_timer_2($p0, $i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9303, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_mod_timer_24: ref;
axiom (ldv_mod_timer_24 == $sub.ref(0, 407286));
procedure  ldv_mod_timer_24($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !11639, metadata !5230), !dbg !11640, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9312, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := mod_timer($p0, $i1);
  // WARNING: %3 = call i32 @mod_timer(%struct.timer_list* %0, i64 %1), !dbg !5235, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !11645, metadata !5230), !dbg !11646, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9314, 3} true;
  assume {:verifier.code 0} true;
  call activate_pending_timer_2($p0, $i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9315, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const serial_link_irq_chain: ref;
axiom (serial_link_irq_chain == $sub.ref(0, 408318));
procedure  serial_link_irq_chain($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p20: ref;
  var $p36: ref;
  var $p37: ref;
  var $p18: ref;
  var $p19: ref;
  var $p30: ref;
  var $p31: ref;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i32;
  var $i74: i32;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i1;
  var $i65: i32;
  var $i44: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6267, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6267, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6267, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 16777216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6267, 48} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6267, 15} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 128)) && (($i6 != 1) ==> ($i7 == 0)));
  // WARNING: %8 = select i1 %7, i32 128, i32 0, !dbg !5238, !verifier.code !5227
  call {:cexpr "irq_flags"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6268, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(hash_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6269, 69} true;
  assume {:verifier.code 0} true;
  $p8 := $p0;
  $p9 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6269, 74} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6269, 45} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6269, 78} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i64($i11, 31);
  $p13 := $add.ref(irq_lists, $mul.ref($i12, 8));
  $p14 := $add.ref(irq_lists, $mul.ref($i12, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6270, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $p18, $p19 := $u1, $p15;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $p20 := $p15;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6283, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6274, 7} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 25} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $p0;
  $p25 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 45} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i23, $i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6275, 7} true;
  assume {:verifier.code 0} true;
  $p28, $p29 := $p20, $p20;
  assume {:branchcond $i27} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6276, 5} true;
  assume {:verifier.code 0} true;
  $p30, $p31 := $p28, $p29;
  goto $bb8;
$bb7:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6288, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6288, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6288, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb14;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6280, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $p20;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6280, 10} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 25} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $p20, $p36, $p37 := $p33, $p20, $p33;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb4;
$bb11:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 7} true;
  assume {:verifier.code 0} true;
  $p18, $p19 := $p36, $p37;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6282, 67} true;
  assume {:verifier.code 0} true;
  $p30, $p31 := $p19, $p18;
  goto $bb8;
$bb13:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6289, 11} true;
  assume {:verifier.code 0} true;
  call $p40 := kzalloc(104, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6290, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6291, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6291, 27} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6291, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  $p55 := $p31;
  goto $bb19;
$bb15:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6292, 7} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(hash_mutex);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6293, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 12);
  goto $bb17;
$bb16:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6325, 1} true;
  assume {:verifier.code 0} true;
  $r := $i44;
  $exn := false;
  return;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6297, 25} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p41, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6297, 5} true;
  assume {:verifier.code 0} true;
  call $p46 := spinlock_check($p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6298, 31} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p41, 24);
  $p48 := $add.ref($p41, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6298, 45} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6298, 5} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p49, .str.56, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6299, 28} true;
  assume {:verifier.code 0} true;
  $p50 := $p0;
  $p51 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6299, 33} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6299, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p41, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6299, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6300, 25} true;
  assume {:verifier.code 0} true;
  $p54 := $p41;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6300, 5} true;
  assume {:verifier.code 0} true;
  call hlist_add_head($p54, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6301, 3} true;
  assume {:verifier.code 0} true;
  $p55 := $p40;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6304, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(hash_mutex);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6305, 22} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6305, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6306, 26} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p55, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6306, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6306, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6306, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i64($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6306, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6307, 24} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6307, 33} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p55, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6307, 33} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6307, 5} true;
  assume {:verifier.code 0} true;
  call list_add($p61, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6308, 26} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p55, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6308, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p64);
  // WARNING: call void @spin_unlock_irq(%struct.spinlock* %69), !dbg !5314, !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6310, 3} true;
  assume {:verifier.code 0} true;
  $i65 := 0;
  goto $bb22;
$bb21:
  assume !(($i60 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6311, 30} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6311, 5} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6312, 25} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 440);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6312, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p55, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6312, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p68, $p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6313, 26} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p55, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6313, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6314, 47} true;
  assume {:verifier.code 0} true;
  $p70 := $p0;
  $p71 := $add.ref($p0, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6314, 52} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i64($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6314, 24} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.i64.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6314, 61} true;
  assume {:verifier.code 0} true;
  $i74 := $or.i32($i73, $i7);
  // WARNING: %79 = or i32 %78, %8, !dbg !5329, !verifier.code !5227
  call {:cexpr "irq_flags"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6315, 38} true;
  assume {:verifier.code 0} true;
  $p75 := $p0;
  $p76 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6315, 43} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6315, 72} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6316, 40} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6315, 11} true;
  assume {:verifier.code 0} true;
  call $i80 := ldv_request_irq_19($i77, serial8250_interrupt, $i78, .str.37, $p79);
  // WARNING: %85 = call i32 @ldv_request_irq_19(i32 %82, i32 (i32, i8*)* @serial8250_interrupt, i64 %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i8* %84), !dbg !5334, !verifier.code !5227
  call {:cexpr "ret"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6317, 13} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6317, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb23, $bb24;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6323, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $i65;
  goto $bb17;
$bb23:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6318, 7} true;
  assume {:verifier.code 0} true;
  call serial_do_unlink($p55, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6319, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  $i65 := $i80;
  goto $bb22;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 409350));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11770, metadata !5230), !dbg !11771, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9235, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9236, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 410382));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4223, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4223, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4223, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 411414));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const hlist_add_head: ref;
axiom (hlist_add_head == $sub.ref(0, 412446));
procedure  hlist_add_head($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4190, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4190, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4191, 6} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4191, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4192, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4192, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4193, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4193, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4193, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4194, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4197, 6} true;
  assume {:verifier.code 0} true;
  $p9 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4197, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4198, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4198, 6} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4198, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4199, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_add: ref;
axiom (list_add == $sub.ref(0, 413478));
procedure  list_add($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4144, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4144, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4144, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p1, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4145, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 414510));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4133, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4133, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4134, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4134, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4135, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_interrupt: ref;
axiom (serial8250_interrupt == $sub.ref(0, 415542));
procedure  serial8250_interrupt($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p18: ref;
  var $i19: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $i70: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $i75: i1;
  var $i76: i32;
  var $i71: i32;
  var $p77: ref;
  var $i78: i1;
  var $i79: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  // WARNING: %3 = alloca %struct.ratelimit_state, align 8, !verifier.code !5227
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6154, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  // WARNING: call void @llvm.dbg.value(metadata %struct.list_head* null, i64 0, metadata !11848, metadata !5230), !dbg !11849, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !11850, metadata !5230), !dbg !11851, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6158, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6158, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6159, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6159, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6159, 3} true;
  assume {:verifier.code 0} true;
  $p7, $p8, $i9, $i10 := $p6, $0.ref, 0, 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6162, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6162, 44} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, $mul.ref($sub.ref(0, 440), 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6163, 20} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, $mul.ref($sub.ref(0, 440), 504));
  $p14 := $add.ref($add.ref($p11, $mul.ref($sub.ref(0, 440), 504)), 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6164, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  call $i16 := devirtbounce.28($p15, $p13);
  // WARNING: %14 = call i32 @devirtbounce.28(i32 (%struct.uart_port*)* %13, %struct.uart_port* %11)
  call {:cexpr "tmp"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6165, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6165, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6168, 3} true;
  assume {:verifier.code 0} true;
  $p18, $i19 := $0.ref, 1;
  goto $bb4;
$bb3:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6169, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6169, 27} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6169, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6174, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6174, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p3, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 26} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 34} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i64($i27, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb8, $bb9;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6171, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $p7;
  goto $bb7;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  $p22 := $p8;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p18, $i19 := $p22, $i10;
  goto $bb4;
$bb8:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6177, 33} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i32($i9, 1);
  // WARNING: %32 = add nsw i32 %.01, 1, !dbg !5291, !verifier.code !5227
  call {:cexpr "pass_counter"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6178, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $sgt.i32($i9, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6178, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i19;
  assume {:branchcond $i31} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i72 := $i9;
  goto $bb17;
$bb10:
  assume ($i31 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6179, 11} true;
  assume {:verifier.code 0} true;
  $p33 := $p2;
  $p34 := $p2;
  $p35 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6179, 34} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6179, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6180, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $p2;
  $p38 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6180, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, $sub.i32(0, 559067475));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6181, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $p2;
  $p40 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6181, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6182, 11} true;
  assume {:verifier.code 0} true;
  $p41 := $p2;
  $p42 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6182, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, $i2p.i64.ref($sub.i64(0, 1)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6183, 11} true;
  assume {:verifier.code 0} true;
  $p43 := $p2;
  $p44 := $add.ref($p2, 24);
  $p45 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6183, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6184, 11} true;
  assume {:verifier.code 0} true;
  $p46 := $p2;
  $p47 := $add.ref($p2, 24);
  $p48 := $add.ref($add.ref($p2, 24), 8);
  $p49 := $add.ref($add.ref($p2, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6184, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p49, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6185, 11} true;
  assume {:verifier.code 0} true;
  $p50 := $p2;
  $p51 := $add.ref($p2, 24);
  $p52 := $add.ref($add.ref($p2, 24), 8);
  $p53 := $add.ref($add.ref($add.ref($p2, 24), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6185, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p53, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6186, 11} true;
  assume {:verifier.code 0} true;
  $p54 := $p2;
  $p55 := $add.ref($p2, 24);
  $p56 := $add.ref($add.ref($p2, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6186, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p56, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6187, 11} true;
  assume {:verifier.code 0} true;
  $p57 := $p2;
  $p58 := $add.ref($p2, 24);
  $p59 := $add.ref($add.ref($p2, 24), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6187, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6188, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $p2;
  $p61 := $add.ref($p2, 24);
  $p62 := $add.ref($add.ref($p2, 24), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6188, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p62, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6189, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6189, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, 1250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6190, 11} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p2, 76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6190, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, 10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6191, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p2, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6191, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p65, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6192, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p2, 84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6192, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6193, 11} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6193, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p67, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6194, 17} true;
  assume {:verifier.code 0} true;
  call $i68 := ___ratelimit($p2, .str.41);
  // WARNING: %70 = call i32 @___ratelimit(%struct.ratelimit_state* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i32 0, i32 0)), !dbg !5328, !verifier.code !5227
  call {:cexpr "tmp___0"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6195, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6195, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb12:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6196, 9} true;
  assume {:verifier.code 0} true;
  call $i70 := printk.ref.i32(.str.42, $i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6197, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6200, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $i32;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6213, 20} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6213, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6214, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6214, 19} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i1.i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6214, 3} true;
  assume {:verifier.code 0} true;
  $r := $i79;
  $exn := false;
  return;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6204, 3} true;
  assume {:verifier.code 0} true;
  $i72 := $i30;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 28} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 25} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i64($i73, $i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 7} true;
  assume {:verifier.code 0} true;
  $p7, $p8, $i9, $i10, $i76 := $p24, $p18, $i72, $i19, $i19;
  assume {:branchcond $i75} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 7} true;
  assume {:verifier.code 0} true;
  assume ($i75 == 1);
  goto $bb1;
$bb19:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 6207, 44} true;
  assume {:verifier.code 0} true;
  $i71 := $i76;
  goto $bb15;
}
const ldv_request_irq_19: ref;
axiom (ldv_request_irq_19 == $sub.ref(0, 416574));
procedure  ldv_request_irq_19($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !11956, metadata !5230), !dbg !11957, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9249, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_irq($i0, $p1, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_irq(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !11966, metadata !5230), !dbg !11967, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9251, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := reg_check_1($p1);
  // WARNING: %7 = call i32 @reg_check_1(i32 (i32, i8*)* %1), !dbg !5248, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9253, 5} true;
  assume {:verifier.code 0} true;
  call activate_suitable_irq_1($i0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9254, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9252, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9257, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 417606));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !11987, metadata !5230), !dbg !11988, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4560, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_threaded_irq($i0, $p1, $0.ref, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4562, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const reg_check_1: ref;
axiom (reg_check_1 == $sub.ref(0, 418638));
procedure  reg_check_1($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8421, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, $p2i.ref.i64(serial8250_interrupt));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8422, 5} true;
  assume {:verifier.code 0} true;
  $i3 := 1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8428, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8426, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
}
const activate_suitable_irq_1: ref;
axiom (activate_suitable_irq_1 == $sub.ref(0, 419670));
procedure  activate_suitable_irq_1($i0: i32, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8434, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8434, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8434, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8435, 22} true;
  assume {:verifier.code 0} true;
  $M.15 := $i0;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8436, 22} true;
  assume {:verifier.code 0} true;
  $M.24 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8437, 17} true;
  assume {:verifier.code 0} true;
  $M.14 := 1;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8438, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8468, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8442, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8442, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8442, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8443, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $i0;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8444, 22} true;
  assume {:verifier.code 0} true;
  $M.25 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8445, 17} true;
  assume {:verifier.code 0} true;
  $M.16 := 1;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8446, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8450, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8450, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8450, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8451, 22} true;
  assume {:verifier.code 0} true;
  $M.19 := $i0;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8452, 22} true;
  assume {:verifier.code 0} true;
  $M.26 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8453, 17} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8454, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8458, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8458, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8458, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8459, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $i0;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8460, 22} true;
  assume {:verifier.code 0} true;
  $M.27 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8461, 17} true;
  assume {:verifier.code 0} true;
  $M.20 := 1;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8462, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8466, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 420702));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32);
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 421734));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref);
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 422766));
procedure  ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 21} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10904, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 33} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10905, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10902, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb2;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10907, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 423798));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4450, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4452, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4454, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_mod_timer_22: ref;
axiom (ldv_mod_timer_22 == $sub.ref(0, 424830));
procedure  ldv_mod_timer_22($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !12083, metadata !5230), !dbg !12084, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9288, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := mod_timer($p0, $i1);
  // WARNING: %3 = call i32 @mod_timer(%struct.timer_list* %0, i64 %1), !dbg !5235, !verifier.code !5232
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !12089, metadata !5230), !dbg !12090, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9290, 3} true;
  assume {:verifier.code 0} true;
  call activate_pending_timer_2($p0, $i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9291, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const serial8250_probe: ref;
axiom (serial8250_probe == $sub.ref(0, 425862));
procedure  serial8250_probe($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i1;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i8;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i64;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $p100: ref;
  var $i101: i64;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $i106: i32;
  var $i107: i64;
  var $i108: i1;
  var $p11: ref;
  var $i12: i32;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(504, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7874, 59} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7874, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_platdata($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7875, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.plat_serial8250_port* %5, i64 0, metadata !12107, metadata !5230), !dbg !12108, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7877, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7877, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p5, 0, 504, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7878, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.28;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7878, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7878, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7880, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 128;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  // WARNING: %.0 = phi i32 [ 128, %9 ], [ 0, %10 ], !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 25} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  $p11, $i12 := $p3, 0;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 85} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p11, 60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 85} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 91} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i32($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb14, $bb15;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7886, 25} true;
  assume {:verifier.code 0} true;
  $p13 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7886, 25} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7886, 8} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  $p16 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7886, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p16, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7887, 43} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p11, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7887, 43} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7887, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  $p20 := $add.ref($p1, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7887, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7888, 22} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p11, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7888, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7888, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $p1;
  $p24 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7888, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7889, 27} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p11, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7889, 27} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7889, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $p1;
  $p28 := $add.ref($p1, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7889, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p28, $i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7890, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p11, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7890, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7890, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $p1;
  $p32 := $add.ref($p1, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7890, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7891, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p11, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7891, 27} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7891, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $p1;
  $p36 := $add.ref($p1, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7891, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7892, 25} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p11, 57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7892, 25} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i8($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7892, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $p1;
  $p40 := $add.ref($p1, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7892, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, $i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7893, 24} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p11, 60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7893, 24} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7893, 8} true;
  assume {:verifier.code 0} true;
  $p43 := $p1;
  $p44 := $add.ref($p1, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7893, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7894, 26} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p11, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7894, 26} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7894, 8} true;
  assume {:verifier.code 0} true;
  $p47 := $p1;
  $p48 := $add.ref($p1, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7894, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7895, 23} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p11, 58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7895, 23} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7895, 8} true;
  assume {:verifier.code 0} true;
  $p51 := $p1;
  $p52 := $add.ref($p1, 296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7895, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, $i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7896, 31} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p11, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7896, 31} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7896, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $p1;
  $p56 := $add.ref($p1, 304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7896, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p56, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7897, 23} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p11, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7897, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7897, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $p1;
  $p60 := $add.ref($p1, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7897, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7898, 28} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p11, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7898, 28} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7898, 8} true;
  assume {:verifier.code 0} true;
  $p63 := $p1;
  $p64 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7898, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p64, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7899, 29} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p11, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7899, 29} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7899, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $p1;
  $p68 := $add.ref($p1, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7899, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p68, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7900, 29} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p11, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7900, 29} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7900, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $p1;
  $p72 := $add.ref($p1, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7900, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p72, $p70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7901, 31} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p11, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7901, 31} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7901, 8} true;
  assume {:verifier.code 0} true;
  $p75 := $p1;
  $p76 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7901, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p76, $p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7902, 30} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p11, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7902, 30} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7902, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $p1;
  $p80 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7902, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, $p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7903, 21} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p11, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7903, 21} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7903, 8} true;
  assume {:verifier.code 0} true;
  $p83 := $p1;
  $p84 := $add.ref($p1, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7903, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p84, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7904, 26} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7904, 8} true;
  assume {:verifier.code 0} true;
  $p86 := $p1;
  $p87 := $add.ref($p1, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7904, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p87, $p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 29} true;
  assume {:verifier.code 0} true;
  $p88 := $p1;
  $p89 := $add.ref($p1, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 34} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 45} true;
  assume {:verifier.code 0} true;
  $i91 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 43} true;
  assume {:verifier.code 0} true;
  $i92 := $or.i64($i90, $i91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 8} true;
  assume {:verifier.code 0} true;
  $p93 := $p1;
  $p94 := $add.ref($p1, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7905, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p94, $i92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7906, 9} true;
  assume {:verifier.code 0} true;
  call $i95 := serial8250_register_8250_port($p1);
  // WARNING: %97 = call i32 @serial8250_register_8250_port(%struct.uart_8250_port* %2), !dbg !5319, !verifier.code !5227
  call {:cexpr "ret"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7907, 11} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7907, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7908, 46} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 19} true;
  assume {:verifier.code 0} true;
  $p98 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 19} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i64($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 30} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p11, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 30} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i64($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 42} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p11, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7909, 42} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7908, 5} true;
  assume {:verifier.code 0} true;
  call $i104 := dev_err.ref.ref.i32.i64.i64.i32.i32($p97, .str.43, $i12, $i99, $i101, $i103, $i95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7910, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7913, 9} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p11, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7914, 9} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i12, 1);
  // WARNING: %111 = add nsw i32 %.023, 1, !dbg !5333, !verifier.code !5227
  call {:cexpr "i"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 7} true;
  assume {:verifier.code 0} true;
  $i107 := $p2i.ref.i64($p105);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 25} true;
  assume {:verifier.code 0} true;
  $i108 := $ne.i64($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  $p11, $i12 := $p105, $i106;
  assume {:branchcond $i108} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  assume ($i108 == 1);
  goto $bb7;
$bb13:
  assume !(($i108 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 79} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb14:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7917, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb15:
  assume !(($i111 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7916, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7922, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial8250_remove: ref;
axiom (serial8250_remove == $sub.ref(0, 426894));
procedure  serial8250_remove($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.platform_device* %0, i64 0, metadata !12210, metadata !5230), !dbg !12211, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $ult.i32(0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7943, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7934, 60} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  $p5 := $add.ref(serial8250_ports, $mul.ref($i4, 504));
  $p6 := $add.ref(serial8250_ports, $mul.ref($i4, 504));
  $p7 := $add.ref($add.ref(serial8250_ports, $mul.ref($i4, 504)), 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 36} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 67} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 40} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i9, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7936, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_unregister_port($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7937, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7940, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i3, 1);
  // WARNING: %17 = add nsw i32 %.01, 1, !dbg !5251, !verifier.code !5230
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 24} true;
  assume {:verifier.code 0} true;
  $i15 := $ult.i32($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i13;
  assume {:branchcond $i15} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb4;
$bb10:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7948, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const serial8250_suspend: ref;
axiom (serial8250_suspend == $sub.ref(0, 427926));
procedure  serial8250_suspend($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $i35: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:verifier.code 0} true;
  $M.29 := $store.i32($M.29, $p3, $i1);
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %union.__anonunion_ldv_1458_15* %3, metadata !12239, metadata !5230), !dbg !12240, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7968, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $add.ref(serial8250_ports, 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 63} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $add.ref(serial8250_ports, 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 94} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 67} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i7, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7962, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := uart_suspend_port(serial8250_reg, serial8250_ports);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7963, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb5;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb11, $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7974, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb11:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 63} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 34} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 94} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 70} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 67} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i15, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb14:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7962, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := uart_suspend_port(serial8250_reg, $add.ref(serial8250_ports, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7963, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb13;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 20} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 25} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 63} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 34} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 94} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 70} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 67} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i64($i23, $i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb21:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7962, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := uart_suspend_port(serial8250_reg, $add.ref(serial8250_ports, 1008));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7963, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i26 == 1));
  goto $bb20;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 25} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 63} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 34} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 94} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 70} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 67} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i31, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb28, $bb29;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb28:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7962, 5} true;
  assume {:verifier.code 0} true;
  call $i35 := uart_suspend_port(serial8250_reg, $add.ref(serial8250_ports, 1512));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7963, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7961, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb27;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb10;
}
const serial8250_resume: ref;
axiom (serial8250_resume == $sub.ref(0, 428958));
procedure  serial8250_resume($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.platform_device* %0, i64 0, metadata !12266, metadata !5230), !dbg !12267, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7994, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 20} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i32($M.0, $add.ref(serial8250_ports, 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 63} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $add.ref(serial8250_ports, 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 94} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 70} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 67} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i4, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb6:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_resume_port(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7989, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb5;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8000, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 63} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 34} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 94} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 70} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 67} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i11, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb14:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_resume_port(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7989, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb13;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 20} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 63} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 34} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 94} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 70} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 67} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i64($i18, $i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb21:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_resume_port(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7989, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb20;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 260));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 63} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 288));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 34} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 94} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 70} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 67} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i64($i25, $i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb28, $bb29;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb28:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_resume_port(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7989, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7987, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb27;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb10;
}
const dev_get_platdata: ref;
axiom (dev_get_platdata == $sub.ref(0, 429990));
procedure  dev_get_platdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4525, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4525, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4525, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 431022));
procedure  dev_err.ref.ref.i32.i64.i64.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i64, p.4: i64, p.5: i32, p.6: i32)
  returns ($r: i32);
const serial_pnp_probe: ref;
axiom (serial_pnp_probe == $sub.ref(0, 432054));
procedure  serial_pnp_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i64;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i1;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $i61: i1;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i1;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i10: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(504, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9780, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9780, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9780, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !5237, !verifier.code !5227
  call {:cexpr "flags"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9781, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 12288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9781, 23} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9781, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9782, 11} true;
  assume {:verifier.code 0} true;
  call $i8 := serial_pnp_guess_board($p0);
  // WARNING: %10 = call i32 @serial_pnp_guess_board(%struct.pnp_dev* %0), !dbg !5244, !verifier.code !5227
  call {:cexpr "ret"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9783, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9783, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9784, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i8;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9850, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9788, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9791, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9791, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p11, 0, 504, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9792, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := pnp_irq_valid($p0, 0);
  // WARNING: %18 = call i32 @pnp_irq_valid(%struct.pnp_dev* %0, i32 0), !dbg !5255, !verifier.code !5227
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9793, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9794, 11} true;
  assume {:verifier.code 0} true;
  call $i14 := pnp_irq($p0, 0);
  // WARNING: %21 = call i64 @pnp_irq(%struct.pnp_dev* %0, i32 0), !dbg !5261, !verifier.code !5227
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9795, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9795, 10} true;
  assume {:verifier.code 0} true;
  $p16 := $p2;
  $p17 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9795, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9799, 14} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i5, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9799, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9800, 15} true;
  assume {:verifier.code 0} true;
  call $i20 := pnp_port_valid($p0, 2);
  // WARNING: %30 = call i32 @pnp_port_valid(%struct.pnp_dev* %0, i32 2), !dbg !5273, !verifier.code !5227
  call {:cexpr "tmp___5"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9801, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9801, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9808, 10} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9802, 17} true;
  assume {:verifier.code 0} true;
  call $i22 := pnp_port_start($p0, 2);
  // WARNING: %33 = call i64 @pnp_port_start(%struct.pnp_dev* %0, i32 2), !dbg !5280, !verifier.code !5227
  call {:cexpr "tmp___1"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9803, 12} true;
  assume {:verifier.code 0} true;
  $p23 := $p2;
  $p24 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9803, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p24, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9804, 12} true;
  assume {:verifier.code 0} true;
  $p25 := $p2;
  $p26 := $add.ref($p2, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9804, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9805, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9806, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9808, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9810, 15} true;
  assume {:verifier.code 0} true;
  call $i27 := pnp_port_valid($p0, 0);
  // WARNING: %42 = call i32 @pnp_port_valid(%struct.pnp_dev* %0, i32 0), !dbg !5294, !verifier.code !5227
  call {:cexpr "tmp___4"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9811, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9811, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb18, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9826, 14} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i5, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9826, 22} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9826, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb24, $bb25;
$bb18:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9812, 17} true;
  assume {:verifier.code 0} true;
  call $i29 := pnp_port_start($p0, 0);
  // WARNING: %45 = call i64 @pnp_port_start(%struct.pnp_dev* %0, i32 0), !dbg !5301, !verifier.code !5227
  call {:cexpr "tmp___2"} boogie_si_record_i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9813, 12} true;
  assume {:verifier.code 0} true;
  $p30 := $p2;
  $p31 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9813, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p31, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9814, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $p2;
  $p33 := $add.ref($p2, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9814, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9815, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9816, 17} true;
  assume {:verifier.code 0} true;
  call $i34 := pnp_mem_valid($p0, 0);
  // WARNING: %51 = call i32 @pnp_mem_valid(%struct.pnp_dev* %0, i32 0), !dbg !5310, !verifier.code !5227
  call {:cexpr "tmp___3"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9817, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9817, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb21, $bb22;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb21:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9818, 29} true;
  assume {:verifier.code 0} true;
  call $i36 := pnp_mem_start($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9818, 14} true;
  assume {:verifier.code 0} true;
  $p37 := $p2;
  $p38 := $add.ref($p2, 280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9818, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, $i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9819, 14} true;
  assume {:verifier.code 0} true;
  $p39 := $p2;
  $p40 := $add.ref($p2, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9819, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9820, 14} true;
  assume {:verifier.code 0} true;
  $p41 := $p2;
  $p42 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9820, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $sub.i32(0, 2147483648));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9821, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9822, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 19);
  goto $bb5;
$bb23:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb24:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9827, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $p2;
  $p46 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9827, 33} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9827, 39} true;
  assume {:verifier.code 0} true;
  $i48 := $or.i32($i47, 671088640);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9827, 10} true;
  assume {:verifier.code 0} true;
  $p49 := $p2;
  $p50 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9827, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9828, 10} true;
  assume {:verifier.code 0} true;
  $p51 := $p2;
  $p52 := $add.ref($p2, 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9828, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, 23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9829, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9832, 26} true;
  assume {:verifier.code 0} true;
  $p53 := $p2;
  $p54 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9832, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9832, 37} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i32($i55, 268435520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9832, 8} true;
  assume {:verifier.code 0} true;
  $p57 := $p2;
  $p58 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9832, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9833, 13} true;
  assume {:verifier.code 0} true;
  call $i59 := pnp_irq_flags($p0, 0);
  // WARNING: %84 = call i64 @pnp_irq_flags(%struct.pnp_dev* %0, i32 0), !dbg !5346, !verifier.code !5227
  call {:cexpr "tmp___6"} boogie_si_record_i64($i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9834, 16} true;
  assume {:verifier.code 0} true;
  $i60 := $and.i64($i59, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9834, 24} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9834, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9835, 28} true;
  assume {:verifier.code 0} true;
  $p62 := $p2;
  $p63 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9835, 33} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9835, 39} true;
  assume {:verifier.code 0} true;
  $i65 := $or.i32($i64, 16777216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9835, 10} true;
  assume {:verifier.code 0} true;
  $p66 := $p2;
  $p67 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9835, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, $i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9836, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9839, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $p2;
  $p69 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9839, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 1843200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9840, 26} true;
  assume {:verifier.code 0} true;
  $p70 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9840, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $p2;
  $p72 := $add.ref($p2, 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9840, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p72, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9841, 10} true;
  assume {:verifier.code 0} true;
  call $i73 := serial8250_register_8250_port($p2);
  // WARNING: %101 = call i32 @serial8250_register_8250_port(%struct.uart_8250_port* %3), !dbg !5365, !verifier.code !5227
  call {:cexpr "line"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 12} true;
  assume {:verifier.code 0} true;
  $i74 := $slt.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb30, $bb32;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 16} true;
  assume {:verifier.code 0} true;
  assume ($i74 == 1);
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9843, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 19);
  goto $bb5;
$bb32:
  assume !(($i74 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 26} true;
  assume {:verifier.code 0} true;
  $i75 := $and.i32($i5, 2048);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 34} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb33, $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  assume ($i76 == 1);
  goto $bb31;
$bb34:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9847, 33} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9847, 45} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9847, 24} true;
  assume {:verifier.code 0} true;
  $p79 := $i2p.i64.ref($i78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9847, 3} true;
  assume {:verifier.code 0} true;
  call pnp_set_drvdata($p0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9848, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb5;
}
const serial_pnp_remove: ref;
axiom (serial_pnp_remove == $sub.ref(0, 433086));
procedure  serial_pnp_remove($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9857, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := pnp_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9858, 10} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  // WARNING: %3 = ptrtoint i8* %2 to i64, !dbg !5235, !verifier.code !5230
  call {:cexpr "line"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9859, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9859, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9860, 39} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9860, 59} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i4, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9860, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_unregister_port($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9861, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9864, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial_pnp_suspend: ref;
axiom (serial_pnp_suspend == $sub.ref(0, 434118));
procedure  serial_pnp_suspend($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i8: i32;
  var $i9: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:verifier.code 0} true;
  $M.30 := $store.i32($M.30, $p3, $i1);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9873, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := pnp_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9874, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  // WARNING: %6 = ptrtoint i8* %5 to i64, !dbg !5237, !verifier.code !5227
  call {:cexpr "line"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9875, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9876, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9883, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9880, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9880, 54} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9880, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_suspend_port($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9881, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const serial_pnp_resume: ref;
axiom (serial_pnp_resume == $sub.ref(0, 435150));
procedure  serial_pnp_resume($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i5: i32;
  var $i6: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9890, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := pnp_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9891, 10} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  // WARNING: %3 = ptrtoint i8* %2 to i64, !dbg !5235, !verifier.code !5230
  call {:cexpr "line"} boogie_si_record_i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9892, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9892, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9893, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9900, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9897, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9897, 53} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9897, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_resume_port($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9898, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
}
const pnp_get_drvdata: ref;
axiom (pnp_get_drvdata == $sub.ref(0, 436182));
procedure  pnp_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9496, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9496, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9497, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 437214));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9360, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9360, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9360, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const serial_pnp_guess_board: ref;
axiom (serial_pnp_guess_board == $sub.ref(0, 438246));
procedure  serial_pnp_guess_board($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9740, 36} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1592);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9740, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9740, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := check_name($p2);
  // WARNING: %4 = call i32 @check_name(i8* %3), !dbg !5234, !verifier.code !5230
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9741, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9741, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9742, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 1512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9742, 30} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9742, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9742, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9742, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9743, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb5;
$bb4:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9745, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 1512);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9745, 45} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9745, 52} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 1496);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9745, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9745, 17} true;
  assume {:verifier.code 0} true;
  call $i14 := check_name($p13);
  // WARNING: %17 = call i32 @check_name(i8* %16), !dbg !5252, !verifier.code !5230
  call {:cexpr "tmp___0"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9746, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9746, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb6, $bb7;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9763, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb6:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9747, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb5;
$bb7:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9752, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9755, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := check_resources($p0);
  // WARNING: %25 = call i32 @check_resources(%struct.pnp_dev* %0), !dbg !5261, !verifier.code !5230
  call {:cexpr "tmp___1"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9756, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9756, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9757, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb5;
$bb12:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9761, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb5;
}
const pnp_irq_valid: ref;
axiom (pnp_irq_valid == $sub.ref(0, 439278));
procedure  pnp_irq_valid($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12579, metadata !5230), !dbg !12580, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9486, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 1024, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9487, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5239, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9488, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const pnp_irq: ref;
axiom (pnp_irq == $sub.ref(0, 440310));
procedure  pnp_irq($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12594, metadata !5230), !dbg !12595, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9451, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 1024, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9453, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9454, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9454, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9455, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9455, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9455, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9461, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9459, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 1);
  goto $bb3;
}
const pnp_port_valid: ref;
axiom (pnp_port_valid == $sub.ref(0, 441342));
procedure  pnp_port_valid($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12616, metadata !5230), !dbg !12617, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9410, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 256, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9411, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5239, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9412, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const pnp_port_start: ref;
axiom (pnp_port_start == $sub.ref(0, 442374));
procedure  pnp_port_start($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12629, metadata !5230), !dbg !12630, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9393, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 256, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9395, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9396, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9396, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9397, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9397, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9397, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9403, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9401, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const pnp_mem_valid: ref;
axiom (pnp_mem_valid == $sub.ref(0, 443406));
procedure  pnp_mem_valid($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12651, metadata !5230), !dbg !12652, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9439, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 512, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9440, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5239, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9441, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const pnp_mem_start: ref;
axiom (pnp_mem_start == $sub.ref(0, 444438));
procedure  pnp_mem_start($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12664, metadata !5230), !dbg !12665, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9422, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 512, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9424, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9425, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9425, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9426, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9426, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9426, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9432, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9430, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const pnp_irq_flags: ref;
axiom (pnp_irq_flags == $sub.ref(0, 445470));
procedure  pnp_irq_flags($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pnp_dev* %0, i64 0, metadata !12688, metadata !5230), !dbg !12689, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9469, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pnp_get_resource($p0, 1024, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9471, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := pnp_resource_valid($p2);
  // WARNING: %4 = call i32 @pnp_resource_valid(%struct.resource* %3), !dbg !5241, !verifier.code !5232
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9472, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9472, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9473, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9473, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9473, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9479, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9477, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 1073742848;
  goto $bb3;
}
const pnp_set_drvdata: ref;
axiom (pnp_set_drvdata == $sub.ref(0, 446502));
procedure  pnp_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9505, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9505, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9506, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 447534));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9368, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9368, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9369, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pnp_get_resource: ref;
axiom (pnp_get_resource == $sub.ref(0, 448566));
procedure  pnp_get_resource($p0: ref, $i1: i64, $i2: i32)
  returns ($r: ref);
const pnp_resource_valid: ref;
axiom (pnp_resource_valid == $sub.ref(0, 449598));
procedure  pnp_resource_valid($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9378, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9378, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9378, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9379, 5} true;
  assume {:verifier.code 0} true;
  $i3 := 1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9385, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9383, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
}
const check_name: ref;
axiom (check_name == $sub.ref(0, 450630));
procedure  check_name($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p4: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $load.ref($M.32, modem_names);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  $p4 := modem_names;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9694, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9685, 58} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.32, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9685, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := strstr($p0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9686, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9686, 31} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9686, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9687, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9701, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9691, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.32, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $p10;
  assume {:branchcond $i13} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb4;
$bb11:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9693, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9699, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb8;
}
const check_resources: ref;
axiom (check_resources == $sub.ref(0, 451662));
procedure  check_resources($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $i12: i64;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i64;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $i20: i64;
  var $i21: i32;
  var $i22: i1;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9709, 3} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9709, 11} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.i64($M.33, $p2, 760);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9710, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9710, 11} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.i64($M.33, $p3, 1016);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9711, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9711, 11} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.i64($M.33, $p4, 744);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9712, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9712, 11} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.i64($M.33, $p5, 1000);
  // WARNING: store i64 1000, i64* %6, align 8, !dbg !5242, !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9724, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9725, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.33, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := pnp_possible_config($p0, 256, $i7, 8);
  // WARNING: %10 = call i32 @pnp_possible_config(%struct.pnp_dev* %0, i32 256, i64 %9, i64 8), !dbg !5247, !verifier.code !5227
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9718, 5} true;
  assume {:verifier.code 0} true;
  $i10 := 1;
  goto $bb6;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9732, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9725, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.33, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := pnp_possible_config($p0, 256, $i12, 8);
  // WARNING: %21 = call i32 @pnp_possible_config(%struct.pnp_dev* %0, i32 256, i64 %20, i64 8), !dbg !5247, !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9730, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb6;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb4;
$bb11:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9725, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.33, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := pnp_possible_config($p0, 256, $i16, 8);
  // WARNING: %28 = call i32 @pnp_possible_config(%struct.pnp_dev* %0, i32 256, i64 %27, i64 8), !dbg !5247, !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume ($i18 == 1);
  goto $bb4;
$bb15:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9725, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 39} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.33, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9716, 9} true;
  assume {:verifier.code 0} true;
  call $i21 := pnp_possible_config($p0, 256, $i20, 8);
  // WARNING: %35 = call i32 @pnp_possible_config(%struct.pnp_dev* %0, i32 256, i64 %34, i64 8), !dbg !5247, !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9717, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1);
  goto $bb4;
$bb19:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb9;
}
const pnp_possible_config: ref;
axiom (pnp_possible_config == $sub.ref(0, 452694));
procedure  pnp_possible_config($p0: ref, $i1: i32, $i2: i64, $i3: i64)
  returns ($r: i32);
const strstr: ref;
axiom (strstr == $sub.ref(0, 453726));
procedure  strstr($p0: ref, $p1: ref)
  returns ($r: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 454758));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 455790));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4408, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  // WARNING: %2 = call i32 @__VERIFIER_nondet_int(), !dbg !5233, !verifier.code !5235
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4409, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4409, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4410, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4412, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4414, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4414, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4414, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4414, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4415, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4418, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const serial8250_isa_init_ports: ref;
axiom (serial8250_isa_init_ports == $sub.ref(0, 456822));
procedure  serial8250_isa_init_ports()
{
  var $p0: ref;
  var $i1: i1;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i6: i32;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $p44: ref;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $p49: ref;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
  var $p55: ref;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $i64: i8;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $p75: ref;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $i79: i16;
  var $i80: i8;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i1;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $p94: ref;
  var $i95: i1;
  var $p30: ref;
  var $i31: i32;
  var $i96: i32;
  var $i97: i1;
$bb0:
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.lock_class_key* %1, metadata !12831, metadata !5230), !dbg !12832, !verifier.code !5232
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !12833, metadata !5230), !dbg !12834, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7656, 13} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7656, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7657, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7728, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7662, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7662, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $ugt.i32($i2, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7663, 14} true;
  assume {:verifier.code 0} true;
  $M.5 := 4;
  call {:cexpr "nr_uarts"} boogie_si_record_i32(4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7664, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ult.i32(0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7684, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7670, 60} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  $p8 := $add.ref(serial8250_ports, $mul.ref($i7, 504));
  $p9 := $add.ref(serial8250_ports, $mul.ref($i7, 504));
  $p10 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7672, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i6);
  $p11 := $add.ref(serial8250_ports, $mul.ref($i7, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7673, 3} true;
  assume {:verifier.code 0} true;
  call $p12 := spinlock_check($p11);
  $p13 := $add.ref(serial8250_ports, $mul.ref($i7, 504));
  $p14 := $add.ref(serial8250_ports, $mul.ref($i7, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7674, 46} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7674, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p15, .str.36, $p0);
  $p16 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7675, 3} true;
  assume {:verifier.code 0} true;
  call $i17 := reg_timer_2($p16);
  $p18 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 312);
  $p19 := $add.ref($add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 312), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7676, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, serial8250_timeout);
  $p20 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 470);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7677, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, $sub.i8(0, 1));
  $p21 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 468);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7678, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, $sub.i8(0, 1));
  $p22 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 469);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7679, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, 0);
  $p23 := $add.ref($add.ref(serial8250_ports, $mul.ref($i7, 504)), 264);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7680, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, serial8250_pops);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7681, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i6, 1);
  // WARNING: %31 = add nsw i32 %.015, 1, !dbg !5269, !verifier.code !5227
  call {:cexpr "i"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 24} true;
  assume {:verifier.code 0} true;
  $i26 := $ult.i32($i24, $i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $i24;
  assume {:branchcond $i26} true;
  goto $bb13, $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb11;
$bb14:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7683, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7689, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $M.28;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7689, 18} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7691, 3} true;
  assume {:verifier.code 0} true;
  $i29 := 128;
  goto $bb18;
$bb17:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  // WARNING: %.02 = phi i32 [ 128, %39 ], [ 0, %40 ], !verifier.code !5227
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 30} true;
  assume {:verifier.code 0} true;
  $p30, $i31 := serial8250_ports, 0;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 52} true;
  assume {:verifier.code 0} true;
  $i96 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 50} true;
  assume {:verifier.code 0} true;
  $i97 := $ult.i32($i31, $i96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb27, $bb28;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7698, 24} true;
  assume {:verifier.code 0} true;
  $p32 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7699, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7699, 38} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref(old_serial_port, $mul.ref($i33, 48));
  $p35 := $add.ref($add.ref(old_serial_port, $mul.ref($i33, 48)), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7699, 57} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.34, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7699, 22} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i32.i64($i36);
  $p38 := $add.ref($p30, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7699, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7700, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7700, 32} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref(old_serial_port, $mul.ref($i39, 48));
  $p41 := $add.ref($add.ref(old_serial_port, $mul.ref($i39, 48)), 12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7700, 51} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.35, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7700, 9} true;
  assume {:verifier.code 0} true;
  call $i43 := irq_canonicalize($i42);
  // WARNING: %54 = call i32 @irq_canonicalize(i32 %53), !dbg !5291, !verifier.code !5227
  call {:cexpr "tmp"} boogie_si_record_i32($i43);
  $p44 := $add.ref($p30, 136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7701, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7702, 24} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7702, 24} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref(old_serial_port, $mul.ref($i45, 48));
  $p47 := $add.ref($add.ref(old_serial_port, $mul.ref($i45, 48)), 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7702, 43} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i64($M.36, $p47);
  $p49 := $add.ref($p30, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7702, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7703, 38} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7703, 38} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref(old_serial_port, $mul.ref($i50, 48));
  $p52 := $add.ref($add.ref(old_serial_port, $mul.ref($i50, 48)), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7703, 57} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.37, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7703, 67} true;
  assume {:verifier.code 0} true;
  $i54 := $mul.i32($i53, 16);
  $p55 := $add.ref($p30, 152);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7703, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7704, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7704, 21} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref(old_serial_port, $mul.ref($i56, 48));
  $p58 := $add.ref($add.ref(old_serial_port, $mul.ref($i56, 48)), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7704, 40} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.38, $p58);
  $p60 := $add.ref($p30, 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7704, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7705, 20} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7705, 20} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref(old_serial_port, $mul.ref($i61, 48));
  $p63 := $add.ref($add.ref(old_serial_port, $mul.ref($i61, 48)), 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7705, 39} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i8($M.39, $p63);
  $p65 := $add.ref($p30, 296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7705, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7706, 23} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7706, 23} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref(old_serial_port, $mul.ref($i66, 48));
  $p68 := $add.ref($add.ref(old_serial_port, $mul.ref($i66, 48)), 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7706, 42} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.40, $p68);
  $p70 := $add.ref($p30, 80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7706, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p70, $p69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7707, 22} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7707, 22} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref(old_serial_port, $mul.ref($i71, 48));
  $p73 := $add.ref($add.ref(old_serial_port, $mul.ref($i71, 48)), 21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7707, 41} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.41, $p73);
  $p75 := $add.ref($p30, 162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7707, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7708, 40} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7708, 40} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref(old_serial_port, $mul.ref($i76, 48));
  $p78 := $add.ref($add.ref(old_serial_port, $mul.ref($i76, 48)), 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7708, 59} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i16($M.42, $p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7708, 24} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i16.i8($i79);
  $p81 := $add.ref($p30, 161);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7708, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7709, 3} true;
  assume {:verifier.code 0} true;
  call set_io_from_upio($p32);
  $p82 := $add.ref($p30, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7710, 34} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i64($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7710, 45} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7710, 43} true;
  assume {:verifier.code 0} true;
  $i85 := $or.i64($i83, $i84);
  $p86 := $add.ref($p30, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7710, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p86, $i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7711, 23} true;
  assume {:verifier.code 0} true;
  $p87 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7711, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7711, 45} true;
  assume {:verifier.code 0} true;
  $i89 := $ne.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7711, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7713, 7} true;
  assume {:verifier.code 0} true;
  $p90 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7713, 43} true;
  assume {:verifier.code 0} true;
  $p91 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7713, 59} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p30, 456);
  call devirtbounce.11($p90, $i31, $p91, $p92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7714, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7717, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $add.i32($i31, 1);
  // WARNING: %107 = add nsw i32 %.13, 1, !dbg !5333, !verifier.code !5227
  call {:cexpr "i"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7718, 19} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p30, 504);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 24} true;
  assume {:verifier.code 0} true;
  $i95 := $ule.i32($i93, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 30} true;
  assume {:verifier.code 0} true;
  $p30, $i31 := $p94, $i93;
  assume {:branchcond $i95} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 30} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb19;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i95 == 1));
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb27:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7721, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7720, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i97 == 1));
  goto $bb26;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7726, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const irq_canonicalize: ref;
axiom (irq_canonicalize == $sub.ref(0, 457854));
procedure  irq_canonicalize($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 15} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $i0;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 11} true;
  assume {:verifier.code 0} true;
  $i2 := 9;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4548, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const choose_timer_2: ref;
axiom (choose_timer_2 == $sub.ref(0, 458886));
procedure  choose_timer_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8331, 20} true;
  assume {:verifier.code 0} true;
  $M.43 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8332, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8332, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8332, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8332, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  call devirtbounce.29($p2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8333, 20} true;
  assume {:verifier.code 0} true;
  $M.43 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8334, 21} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_timer_state_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8335, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_irq_1: ref;
axiom (ldv_irq_1 == $sub.ref(0, 459918));
procedure  ldv_irq_1($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12972, metadata !5230), !dbg !12973, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8475, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8475, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8476, 11} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  // WARNING: %6 = call i32 @__VERIFIER_nondet_int(), !dbg !5241, !verifier.code !5243
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb3:
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8479, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8479, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb6:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8480, 24} true;
  assume {:verifier.code 0} true;
  $M.43 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8481, 20} true;
  assume {:verifier.code 0} true;
  call $i7 := serial8250_interrupt($i1, $p2);
  // WARNING: %10 = call i32 @serial8250_interrupt(i32 %1, i8* %2), !dbg !5252, !verifier.code !5232
  call {:cexpr "irq_retval"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8482, 24} true;
  assume {:verifier.code 0} true;
  $M.43 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8483, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8497, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8487, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8492, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8489, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8490, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8490, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8495, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
}
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 460950));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4459, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4461, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 4463, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_initialize_platform_driver_4: ref;
axiom (ldv_initialize_platform_driver_4 == $sub.ref(0, 461982));
procedure  ldv_initialize_platform_driver_4()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8503, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8504, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8504, 32} true;
  assume {:verifier.code 0} true;
  $M.44 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8505, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const choose_interrupt_1: ref;
axiom (choose_interrupt_1 == $sub.ref(0, 463014));
procedure  choose_interrupt_1()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8513, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !5227, !verifier.code !5229
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i1 := $slt.i32($i0, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i0, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8522, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8522, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8522, 58} true;
  assume {:verifier.code 0} true;
  $p16 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8522, 17} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_irq_1($i14, $i15, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8522, 15} true;
  assume {:verifier.code 0} true;
  $M.14 := $i17;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8523, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb5:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8525, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8525, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $M.21;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8525, 58} true;
  assume {:verifier.code 0} true;
  $p20 := $M.27;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8525, 17} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv_irq_1($i18, $i19, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8525, 15} true;
  assume {:verifier.code 0} true;
  $M.14 := $i21;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8526, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb9:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8519, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8519, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8519, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8519, 17} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_irq_1($i10, $i11, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8519, 15} true;
  assume {:verifier.code 0} true;
  $M.14 := $i13;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8520, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8516, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8516, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8516, 58} true;
  assume {:verifier.code 0} true;
  $p8 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8516, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_irq_1($i6, $i7, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8516, 15} true;
  assume {:verifier.code 0} true;
  $M.14 := $i9;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8517, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8531, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8528, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8529, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8529, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
}
const ldv_initialize_uart_ops_5: ref;
axiom (ldv_initialize_uart_ops_5 == $sub.ref(0, 464046));
procedure  ldv_initialize_uart_ops_5()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8539, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(312);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8540, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8540, 26} true;
  assume {:verifier.code 0} true;
  $M.45 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8541, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 465078));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i8;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i1;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i71: i1;
  var $i72: i1;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i1;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i1;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i1;
  var $i93: i1;
  var $i94: i1;
  var $i95: i1;
  var $i96: i1;
  var $i97: i1;
  var $i98: i1;
  var $i99: i1;
  var $i100: i1;
  var $i101: i1;
  var $i102: i1;
  var $i103: i1;
  var $i104: i1;
  var $i105: i1;
  var $i106: i1;
  var $i107: i1;
  var $i108: i1;
  var $i109: i1;
  var $i110: i1;
  var $i111: i1;
  var $i112: i1;
  var $i113: i1;
  var $i114: i1;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $p120: ref;
  var $i121: i32;
  var $i122: i1;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $i128: i32;
  var $i129: i1;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $i133: i1;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i1;
  var $p138: ref;
  var $i139: i32;
  var $i140: i1;
  var $p141: ref;
  var $i142: i32;
  var $i143: i1;
  var $p144: ref;
  var $i145: i32;
  var $i146: i1;
  var $p147: ref;
  var $i148: i32;
  var $i149: i1;
  var $p150: ref;
  var $i151: i32;
  var $i152: i1;
  var $p153: ref;
  var $i154: i32;
  var $i155: i1;
  var $p156: ref;
  var $i157: i32;
  var $i158: i1;
  var $p159: ref;
  var $i160: i32;
  var $i161: i1;
  var $p162: ref;
  var $i163: i32;
  var $i164: i1;
  var $p165: ref;
  var $i166: i32;
  var $i167: i1;
  var $p168: ref;
  var $i169: i32;
  var $i170: i1;
  var $p171: ref;
  var $i172: i32;
  var $i173: i1;
  var $p174: ref;
  var $i175: i32;
  var $i176: i1;
  var $p177: ref;
  var $i178: i32;
  var $i179: i1;
  var $p180: ref;
  var $i181: i32;
  var $i182: i1;
  var $p183: ref;
  var $i184: i32;
  var $i185: i1;
  var $p186: ref;
  var $i187: i32;
  var $i188: i1;
  var $p189: ref;
  var $i190: i32;
  var $i191: i1;
  var $p192: ref;
  var $i193: i32;
  var $i194: i32;
  var $i195: i1;
  var $p196: ref;
  var $i197: i32;
  var $i198: i32;
  var $i199: i1;
  var $p200: ref;
  var $i201: i32;
  var $i202: i32;
  var $i203: i1;
  var $p204: ref;
  var $i205: i32;
  var $i206: i32;
  var $i207: i1;
  var $p208: ref;
  var $i209: i32;
  var $i210: i32;
  var $i211: i1;
  var $p212: ref;
  var $i213: i32;
  var $i214: i32;
  var $i215: i1;
  var $p216: ref;
  var $i217: i32;
  var $i218: i1;
  var $p219: ref;
  var $i220: i32;
  var $i221: i1;
  var $p222: ref;
  var $i223: i32;
  var $i224: i1;
  var $p225: ref;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $p229: ref;
  var $i230: i32;
  var $i231: i32;
  var $i232: i1;
  var $p233: ref;
  var $i234: i32;
  var $i235: i32;
  var $i236: i1;
  var $p237: ref;
  var $i238: i32;
  var $i239: i1;
  var $p240: ref;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $p244: ref;
  var $i245: i32;
  var $i246: i32;
  var $i247: i1;
  var $p248: ref;
  var $i249: i32;
  var $i250: i32;
  var $i251: i1;
  var $p252: ref;
  var $i253: i32;
  var $i254: i1;
  var $p255: ref;
  var $i256: i32;
  var $i257: i1;
  var $p258: ref;
  var $i259: i32;
  var $i260: i1;
  var $p261: ref;
  var $i262: i32;
  var $i263: i1;
  var $p264: ref;
  var $i265: i32;
  var $i266: i1;
  var $p267: ref;
  var $i268: i32;
  var $i269: i1;
  var $p270: ref;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $p274: ref;
  var $i275: i32;
  var $i276: i32;
  var $i277: i1;
  var $p278: ref;
  var $i279: i32;
  var $i280: i32;
  var $i281: i1;
  var $p282: ref;
  var $i283: i32;
  var $i284: i1;
  var $p285: ref;
  var $i286: i32;
  var $i287: i1;
  var $p288: ref;
  var $i289: i32;
  var $i290: i1;
  var $p291: ref;
  var $i292: i32;
  var $i293: i8;
  var $i294: i32;
  var $i295: i1;
  var $p296: ref;
  var $i297: i32;
  var $i298: i8;
  var $i299: i32;
  var $i300: i1;
  var $p301: ref;
  var $i302: i32;
  var $i303: i8;
  var $i304: i32;
  var $i305: i1;
  var $p306: ref;
  var $i307: i32;
  var $i308: i32;
  var $i309: i1;
  var $p310: ref;
  var $i311: i32;
  var $i312: i32;
  var $i313: i1;
  var $p314: ref;
  var $i315: i32;
  var $i316: i32;
  var $i317: i1;
  var $i318: i32;
  var $i319: i32;
  var $i320: i32;
  var $i321: i32;
  var $i322: i1;
  var $i323: i32;
  var $i324: i32;
  var $i325: i32;
  var $i326: i32;
  var $i327: i1;
  var $i328: i32;
  var $i329: i32;
  var $i330: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8574, 9} true;
  assume {:verifier.code 1} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8574, 9} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i1);
  // WARNING: %2 = call i32 @__VERIFIER_nondet_uint(), !dbg !5231, !verifier.code !5233
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13066, metadata !5230), !dbg !13067, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8576, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  // WARNING: %3 = call i32 @__VERIFIER_nondet_int(), !dbg !5238, !verifier.code !5233
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !13071, metadata !5230), !dbg !13072, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8578, 13} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_uchar();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uchar"} boogie_si_record_i8($i3);
  // WARNING: %4 = call zeroext i8 @__VERIFIER_nondet_uchar(), !dbg !5243, !verifier.code !5233
  call {:cexpr "tmp___1"} boogie_si_record_i8($i3);
  // WARNING: call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !13076, metadata !5230), !dbg !13077, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8580, 13} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  // WARNING: %5 = call i32 @__VERIFIER_nondet_int(), !dbg !5248, !verifier.code !5233
  call {:cexpr "tmp___2"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !13081, metadata !5230), !dbg !13082, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8582, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := ldv_zalloc(72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8583, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8584, 13} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i7);
  // WARNING: %8 = call i32 @__VERIFIER_nondet_uint(), !dbg !5259, !verifier.code !5233
  call {:cexpr "tmp___4"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !13092, metadata !5230), !dbg !13093, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8586, 13} true;
  assume {:verifier.code 0} true;
  call $p8 := ldv_zalloc(44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8587, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8588, 13} true;
  assume {:verifier.code 1} true;
  call $i10 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i10);
  // WARNING: %11 = call i32 @__VERIFIER_nondet_int(), !dbg !5270, !verifier.code !5233
  call {:cexpr "tmp___6"} boogie_si_record_i32($i10);
  // WARNING: call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !13103, metadata !5230), !dbg !13104, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8590, 13} true;
  assume {:verifier.code 1} true;
  call $i11 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i11);
  // WARNING: %12 = call i32 @__VERIFIER_nondet_uint(), !dbg !5275, !verifier.code !5233
  call {:cexpr "tmp___7"} boogie_si_record_i32($i11);
  // WARNING: call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !13108, metadata !5230), !dbg !13109, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8592, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := ldv_zalloc(44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8593, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8594, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8595, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8595, 3} true;
  assume {:verifier.code 0} true;
  call $M.46 := $memset.i8($M.46, $p14, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8596, 24} true;
  assume {:verifier.code 0} true;
  $M.47 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8597, 24} true;
  assume {:verifier.code 0} true;
  $M.48 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8598, 11} true;
  assume {:verifier.code 0} true;
  $M.49 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8599, 24} true;
  assume {:verifier.code 0} true;
  $M.50 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8600, 24} true;
  assume {:verifier.code 0} true;
  $M.51 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8601, 24} true;
  assume {:verifier.code 0} true;
  $M.52 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8602, 24} true;
  assume {:verifier.code 0} true;
  $M.53 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8602, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8604, 13} true;
  assume {:verifier.code 1} true;
  call $i15 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i15);
  // WARNING: %17 = call i32 @__VERIFIER_nondet_int(), !dbg !5296, !verifier.code !5233
  call {:cexpr "tmp___9"} boogie_si_record_i32($i15);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i15, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb12, $bb13;
$bb4:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $slt.i32($i15, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8722, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8722, 28} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8722, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb94, $bb95;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i15, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8729, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $M.52;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8729, 28} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8729, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb97, $bb98;
$bb8:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i15, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8736, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8736, 28} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i89, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8736, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb100, $bb101;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb337;
$bb12:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i15, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb16, $bb17;
$bb13:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i15, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8672, 7} true;
  assume {:verifier.code 0} true;
  $i65 := $M.48;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8672, 28} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb61, $bb62;
$bb15:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8679, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $M.50;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8679, 28} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i32($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb64, $bb65;
$bb16:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8607, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8607, 28} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8607, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb18, $bb19;
$bb17:
  assume {:verifier.code 0} true;
  assume !(($i22 == 1));
  goto $bb11;
$bb18:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8608, 16} true;
  assume {:verifier.code 1} true;
  call $i25 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i25);
  // WARNING: %22 = call i32 @__VERIFIER_nondet_int(), !dbg !5304, !verifier.code !5233
  call {:cexpr "tmp___10"} boogie_si_record_i32($i25);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb20:
  assume {:verifier.code 0} true;
  $i26 := $slt.i32($i25, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i26 == 1);
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i25, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb28, $bb29;
$bb22:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  $i27 := $slt.i32($i25, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8636, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8636, 30} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8636, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb45, $bb46;
$bb24:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i25, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8648, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8648, 30} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8648, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb51, $bb52;
$bb26:
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb57;
$bb28:
  assume ($i29 == 1);
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i25, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8624, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8624, 30} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8624, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb39, $bb40;
$bb30:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8611, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8611, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8611, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb32, $bb33;
$bb31:
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb27;
$bb32:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8612, 39} true;
  assume {:verifier.code 0} true;
  $p33 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8612, 22} true;
  assume {:verifier.code 0} true;
  call $i34 := serial8250_probe($p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8612, 20} true;
  assume {:verifier.code 0} true;
  $M.54 := $i34;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8613, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $M.54;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8613, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8613, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb34:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8614, 30} true;
  assume {:verifier.code 0} true;
  $M.47 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8615, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8615, 27} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i37, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8615, 17} true;
  assume {:verifier.code 0} true;
  $M.49 := $i38;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8616, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8619, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8622, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8667, 3} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb39:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8625, 41} true;
  assume {:verifier.code 0} true;
  $p41 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8625, 22} true;
  assume {:verifier.code 0} true;
  $p42 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8625, 22} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.46, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8625, 22} true;
  assume {:verifier.code 0} true;
  call $i44 := serial8250_suspend($p41, $i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8625, 20} true;
  assume {:verifier.code 0} true;
  $M.55 := $i44;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8626, 11} true;
  assume {:verifier.code 0} true;
  $i45 := $M.55;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8626, 24} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8626, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb41:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8627, 30} true;
  assume {:verifier.code 0} true;
  $M.47 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8628, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8631, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8634, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb45:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8637, 40} true;
  assume {:verifier.code 0} true;
  $p49 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8637, 22} true;
  assume {:verifier.code 0} true;
  call $i50 := serial8250_resume($p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8637, 20} true;
  assume {:verifier.code 0} true;
  $M.56 := $i50;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8638, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $M.56;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8638, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8638, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb47, $bb48;
$bb46:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb47:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8639, 30} true;
  assume {:verifier.code 0} true;
  $M.47 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8640, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8643, 5} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8646, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb51:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8649, 25} true;
  assume {:verifier.code 0} true;
  $p55 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8649, 7} true;
  assume {:verifier.code 0} true;
  call $i56 := serial8250_remove($p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8650, 28} true;
  assume {:verifier.code 0} true;
  $M.47 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8651, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8651, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $sub.i32($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8651, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i58;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8652, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8655, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8655, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i59, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8655, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8656, 25} true;
  assume {:verifier.code 0} true;
  $p61 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8656, 7} true;
  assume {:verifier.code 0} true;
  call $i62 := serial8250_remove($p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8657, 28} true;
  assume {:verifier.code 0} true;
  $M.47 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8658, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8658, 25} true;
  assume {:verifier.code 0} true;
  $i64 := $sub.i32($i63, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8658, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i64;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8659, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8662, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8664, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8665, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8665, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8670, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9164, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb61:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8673, 5} true;
  assume {:verifier.code 0} true;
  call choose_interrupt_1();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8674, 3} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8677, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb64:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8680, 16} true;
  assume {:verifier.code 1} true;
  call $i69 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i69);
  // WARNING: %100 = call i32 @__VERIFIER_nondet_int(), !dbg !5406, !verifier.code !5233
  call {:cexpr "tmp___11"} boogie_si_record_i32($i69);
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb66:
  assume {:verifier.code 0} true;
  $i70 := $slt.i32($i69, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb67, $bb68;
$bb67:
  assume ($i70 == 1);
  assume {:verifier.code 0} true;
  $i72 := $eq.i32($i69, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb72, $bb73;
$bb68:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i69, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8692, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $M.50;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8692, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i77, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8692, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb82, $bb83;
$bb70:
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb71;
$bb71:
  assume {:verifier.code 0} true;
  goto $bb91;
$bb72:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $M.50;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 30} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i32($i73, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb74, $bb75;
$bb73:
  assume {:verifier.code 0} true;
  assume !(($i72 == 1));
  goto $bb71;
$bb74:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 38} true;
  assume {:verifier.code 0} true;
  $i75 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 46} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb77, $bb78;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i74 == 1));
  goto $bb76;
$bb76:
  assume {:verifier.code 0} true;
  goto $bb80;
$bb77:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8684, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_exit();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8685, 28} true;
  assume {:verifier.code 0} true;
  $M.50 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8686, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8683, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i76 == 1));
  goto $bb76;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9166, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9167, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8690, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8717, 3} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb82:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8693, 22} true;
  assume {:verifier.code 0} true;
  call $i79 := serial8250_init();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8693, 20} true;
  assume {:verifier.code 0} true;
  $M.57 := $i79;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8694, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $M.57;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8694, 24} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8694, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb84, $bb85;
$bb83:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb84:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8695, 30} true;
  assume {:verifier.code 0} true;
  $M.50 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8696, 30} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8697, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_uart_ops_5();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8698, 30} true;
  assume {:verifier.code 0} true;
  $M.51 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8699, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_pnp_driver_3();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8700, 7} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8703, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $M.57;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8703, 24} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.i32($i82, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8703, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb87, $bb88;
$bb87:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8704, 30} true;
  assume {:verifier.code 0} true;
  $M.50 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8705, 9} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb88:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8709, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8712, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8714, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8715, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8715, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8720, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb94:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8723, 5} true;
  assume {:verifier.code 0} true;
  call ldv_main_exported_3();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8724, 3} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8727, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb97:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8730, 20} true;
  assume {:verifier.code 0} true;
  $p88 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8730, 5} true;
  assume {:verifier.code 0} true;
  call choose_timer_2($p88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8731, 3} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8734, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb100:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8737, 16} true;
  assume {:verifier.code 1} true;
  call $i91 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i91);
  // WARNING: %149 = call i32 @__VERIFIER_nondet_int(), !dbg !5478, !verifier.code !5233
  call {:cexpr "tmp___12"} boogie_si_record_i32($i91);
  assume {:verifier.code 0} true;
  goto $bb102;
$bb101:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb336;
$bb102:
  assume {:verifier.code 0} true;
  $i92 := $slt.i32($i91, 11);
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb103, $bb104;
$bb103:
  assume ($i92 == 1);
  assume {:verifier.code 0} true;
  $i104 := $slt.i32($i91, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb128, $bb129;
$bb104:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i91, 16);
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i93 == 1);
  assume {:verifier.code 0} true;
  $i100 := $slt.i32($i91, 13);
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb120, $bb121;
$bb106:
  assume !(($i93 == 1));
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i91, 19);
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb107, $bb108;
$bb107:
  assume ($i94 == 1);
  assume {:verifier.code 0} true;
  $i98 := $slt.i32($i91, 17);
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb116, $bb117;
$bb108:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i91, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb109, $bb110;
$bb109:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9108, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9108, 30} true;
  assume {:verifier.code 0} true;
  $i305 := $eq.i32($i304, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9108, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb316, $bb317;
$bb110:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i91, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb111, $bb112;
$bb111:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9128, 9} true;
  assume {:verifier.code 0} true;
  $i316 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9128, 30} true;
  assume {:verifier.code 0} true;
  $i317 := $eq.i32($i316, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9128, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i317} true;
  goto $bb325, $bb326;
$bb112:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i91, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb113, $bb114;
$bb113:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9144, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9144, 30} true;
  assume {:verifier.code 0} true;
  $i327 := $eq.i32($i326, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9144, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i327} true;
  goto $bb331, $bb332;
$bb114:
  assume {:verifier.code 0} true;
  assume !(($i97 == 1));
  goto $bb115;
$bb115:
  assume {:verifier.code 0} true;
  goto $bb334;
$bb116:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9048, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9048, 30} true;
  assume {:verifier.code 0} true;
  $i269 := $eq.i32($i268, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9048, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb289, $bb290;
$bb117:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  $i99 := $slt.i32($i91, 18);
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb118, $bb119;
$bb118:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9068, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9068, 30} true;
  assume {:verifier.code 0} true;
  $i281 := $eq.i32($i280, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9068, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i281} true;
  goto $bb298, $bb299;
$bb119:
  assume !(($i99 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9088, 9} true;
  assume {:verifier.code 0} true;
  $i289 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9088, 30} true;
  assume {:verifier.code 0} true;
  $i290 := $eq.i32($i289, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9088, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb307, $bb308;
$bb120:
  assume ($i100 == 1);
  assume {:verifier.code 0} true;
  $i103 := $slt.i32($i91, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb126, $bb127;
$bb121:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  $i101 := $slt.i32($i91, 14);
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb122, $bb123;
$bb122:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8988, 9} true;
  assume {:verifier.code 0} true;
  $i238 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8988, 30} true;
  assume {:verifier.code 0} true;
  $i239 := $eq.i32($i238, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8988, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i239} true;
  goto $bb262, $bb263;
$bb123:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  $i102 := $slt.i32($i91, 15);
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb124, $bb125;
$bb124:
  assume ($i102 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9008, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9008, 30} true;
  assume {:verifier.code 0} true;
  $i251 := $eq.i32($i250, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9008, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb271, $bb272;
$bb125:
  assume !(($i102 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9028, 9} true;
  assume {:verifier.code 0} true;
  $i259 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9028, 30} true;
  assume {:verifier.code 0} true;
  $i260 := $eq.i32($i259, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9028, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb280, $bb281;
$bb126:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8960, 9} true;
  assume {:verifier.code 0} true;
  $i223 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8960, 30} true;
  assume {:verifier.code 0} true;
  $i224 := $eq.i32($i223, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8960, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i224} true;
  goto $bb250, $bb251;
$bb127:
  assume !(($i103 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8980, 9} true;
  assume {:verifier.code 0} true;
  $i235 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8980, 30} true;
  assume {:verifier.code 0} true;
  $i236 := $eq.i32($i235, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8980, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb259, $bb260;
$bb128:
  assume ($i104 == 1);
  assume {:verifier.code 0} true;
  $i110 := $slt.i32($i91, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb140, $bb141;
$bb129:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  $i105 := $slt.i32($i91, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb130, $bb131;
$bb130:
  assume ($i105 == 1);
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i91, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb136, $bb137;
$bb131:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  $i106 := $slt.i32($i91, 9);
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb132, $bb133;
$bb132:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8900, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8900, 30} true;
  assume {:verifier.code 0} true;
  $i191 := $eq.i32($i190, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8900, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb223, $bb224;
$bb133:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  $i107 := $slt.i32($i91, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb134, $bb135;
$bb134:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8920, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8920, 30} true;
  assume {:verifier.code 0} true;
  $i203 := $eq.i32($i202, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8920, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb232, $bb233;
$bb135:
  assume !(($i107 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8940, 9} true;
  assume {:verifier.code 0} true;
  $i214 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8940, 30} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.i32($i214, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8940, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb241, $bb242;
$bb136:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8840, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8840, 30} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i32($i163, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8840, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i164} true;
  goto $bb196, $bb197;
$bb137:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  $i109 := $slt.i32($i91, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb138, $bb139;
$bb138:
  assume ($i109 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8860, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8860, 30} true;
  assume {:verifier.code 0} true;
  $i173 := $eq.i32($i172, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8860, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb205, $bb206;
$bb139:
  assume !(($i109 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8880, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8880, 30} true;
  assume {:verifier.code 0} true;
  $i182 := $eq.i32($i181, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8880, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i182} true;
  goto $bb214, $bb215;
$bb140:
  assume ($i110 == 1);
  assume {:verifier.code 0} true;
  $i113 := $slt.i32($i91, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb146, $bb147;
$bb141:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  $i111 := $slt.i32($i91, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb142, $bb143;
$bb142:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8780, 9} true;
  assume {:verifier.code 0} true;
  $i136 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8780, 30} true;
  assume {:verifier.code 0} true;
  $i137 := $eq.i32($i136, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8780, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb169, $bb170;
$bb143:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  $i112 := $slt.i32($i91, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb144, $bb145;
$bb144:
  assume ($i112 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8800, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8800, 30} true;
  assume {:verifier.code 0} true;
  $i146 := $eq.i32($i145, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8800, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb178, $bb179;
$bb145:
  assume !(($i112 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8820, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8820, 30} true;
  assume {:verifier.code 0} true;
  $i155 := $eq.i32($i154, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8820, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb187, $bb188;
$bb146:
  assume ($i113 == 1);
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i91, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb148, $bb149;
$bb147:
  assume !(($i113 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8760, 9} true;
  assume {:verifier.code 0} true;
  $i124 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8760, 30} true;
  assume {:verifier.code 0} true;
  $i125 := $eq.i32($i124, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8760, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb160, $bb161;
$bb148:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8740, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8740, 30} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8740, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb150, $bb151;
$bb149:
  assume {:verifier.code 0} true;
  assume !(($i114 == 1));
  goto $bb115;
$bb150:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8741, 28} true;
  assume {:verifier.code 0} true;
  $p117 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8741, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_ldisc($p117, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8742, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8743, 5} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb151:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8746, 9} true;
  assume {:verifier.code 0} true;
  $i118 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8746, 30} true;
  assume {:verifier.code 0} true;
  $i119 := $eq.i32($i118, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8746, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb153, $bb154;
$bb153:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8747, 28} true;
  assume {:verifier.code 0} true;
  $p120 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8747, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_ldisc($p120, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8748, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8749, 5} true;
  assume {:verifier.code 0} true;
  goto $bb155;
$bb154:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb155;
$bb155:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8752, 9} true;
  assume {:verifier.code 0} true;
  $i121 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8752, 30} true;
  assume {:verifier.code 0} true;
  $i122 := $eq.i32($i121, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8752, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb156, $bb157;
$bb156:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8753, 28} true;
  assume {:verifier.code 0} true;
  $p123 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8753, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_ldisc($p123, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8754, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8755, 5} true;
  assume {:verifier.code 0} true;
  goto $bb158;
$bb157:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb158;
$bb158:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8758, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb159:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9156, 3} true;
  assume {:verifier.code 0} true;
  goto $bb336;
$bb160:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8761, 23} true;
  assume {:verifier.code 0} true;
  $p126 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8761, 7} true;
  assume {:verifier.code 0} true;
  call $p127 := serial8250_type($p126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8762, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8763, 5} true;
  assume {:verifier.code 0} true;
  goto $bb162;
$bb161:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb162;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8766, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8766, 30} true;
  assume {:verifier.code 0} true;
  $i129 := $eq.i32($i128, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8766, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb163, $bb164;
$bb163:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8767, 23} true;
  assume {:verifier.code 0} true;
  $p130 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8767, 7} true;
  assume {:verifier.code 0} true;
  call $p131 := serial8250_type($p130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8768, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8769, 5} true;
  assume {:verifier.code 0} true;
  goto $bb165;
$bb164:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb165;
$bb165:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8772, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8772, 30} true;
  assume {:verifier.code 0} true;
  $i133 := $eq.i32($i132, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8772, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb166, $bb167;
$bb166:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8773, 23} true;
  assume {:verifier.code 0} true;
  $p134 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8773, 7} true;
  assume {:verifier.code 0} true;
  call $p135 := serial8250_type($p134);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8774, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8775, 5} true;
  assume {:verifier.code 0} true;
  goto $bb168;
$bb167:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  goto $bb168;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb169:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8781, 21} true;
  assume {:verifier.code 0} true;
  $p138 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8781, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_pm($p138, $i1, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8782, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8783, 5} true;
  assume {:verifier.code 0} true;
  goto $bb171;
$bb170:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  goto $bb171;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8786, 9} true;
  assume {:verifier.code 0} true;
  $i139 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8786, 30} true;
  assume {:verifier.code 0} true;
  $i140 := $eq.i32($i139, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8786, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb172, $bb173;
$bb172:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8787, 21} true;
  assume {:verifier.code 0} true;
  $p141 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8787, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_pm($p141, $i1, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8788, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8789, 5} true;
  assume {:verifier.code 0} true;
  goto $bb174;
$bb173:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb174;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8792, 9} true;
  assume {:verifier.code 0} true;
  $i142 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8792, 30} true;
  assume {:verifier.code 0} true;
  $i143 := $eq.i32($i142, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8792, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb175, $bb176;
$bb175:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8793, 21} true;
  assume {:verifier.code 0} true;
  $p144 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8793, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_pm($p144, $i1, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8794, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8795, 5} true;
  assume {:verifier.code 0} true;
  goto $bb177;
$bb176:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  goto $bb177;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8798, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb178:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8801, 31} true;
  assume {:verifier.code 0} true;
  $p147 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8801, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_release_port($p147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8802, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8803, 5} true;
  assume {:verifier.code 0} true;
  goto $bb180;
$bb179:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb180;
$bb180:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8806, 9} true;
  assume {:verifier.code 0} true;
  $i148 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8806, 30} true;
  assume {:verifier.code 0} true;
  $i149 := $eq.i32($i148, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8806, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb181, $bb182;
$bb181:
  assume ($i149 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8807, 31} true;
  assume {:verifier.code 0} true;
  $p150 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8807, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_release_port($p150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8808, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8809, 5} true;
  assume {:verifier.code 0} true;
  goto $bb183;
$bb182:
  assume !(($i149 == 1));
  assume {:verifier.code 0} true;
  goto $bb183;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8812, 9} true;
  assume {:verifier.code 0} true;
  $i151 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8812, 30} true;
  assume {:verifier.code 0} true;
  $i152 := $eq.i32($i151, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8812, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb184, $bb185;
$bb184:
  assume ($i152 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8813, 31} true;
  assume {:verifier.code 0} true;
  $p153 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8813, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_release_port($p153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8814, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8815, 5} true;
  assume {:verifier.code 0} true;
  goto $bb186;
$bb185:
  assume !(($i152 == 1));
  assume {:verifier.code 0} true;
  goto $bb186;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8818, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb187:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8821, 27} true;
  assume {:verifier.code 0} true;
  $p156 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8821, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_start_tx($p156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8822, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8823, 5} true;
  assume {:verifier.code 0} true;
  goto $bb189;
$bb188:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb189;
$bb189:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8826, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8826, 30} true;
  assume {:verifier.code 0} true;
  $i158 := $eq.i32($i157, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8826, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb190, $bb191;
$bb190:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8827, 27} true;
  assume {:verifier.code 0} true;
  $p159 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8827, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_start_tx($p159);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8828, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8829, 5} true;
  assume {:verifier.code 0} true;
  goto $bb192;
$bb191:
  assume !(($i158 == 1));
  assume {:verifier.code 0} true;
  goto $bb192;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8832, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8832, 30} true;
  assume {:verifier.code 0} true;
  $i161 := $eq.i32($i160, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8832, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb193, $bb194;
$bb193:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8833, 27} true;
  assume {:verifier.code 0} true;
  $p162 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8833, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_start_tx($p162);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8834, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8835, 5} true;
  assume {:verifier.code 0} true;
  goto $bb195;
$bb194:
  assume !(($i161 == 1));
  assume {:verifier.code 0} true;
  goto $bb195;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8838, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb196:
  assume ($i164 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8841, 30} true;
  assume {:verifier.code 0} true;
  $p165 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8841, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_termios($p165, $p13, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8842, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8843, 5} true;
  assume {:verifier.code 0} true;
  goto $bb198;
$bb197:
  assume !(($i164 == 1));
  assume {:verifier.code 0} true;
  goto $bb198;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8846, 9} true;
  assume {:verifier.code 0} true;
  $i166 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8846, 30} true;
  assume {:verifier.code 0} true;
  $i167 := $eq.i32($i166, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8846, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb199, $bb200;
$bb199:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8847, 30} true;
  assume {:verifier.code 0} true;
  $p168 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8847, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_termios($p168, $p13, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8848, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8849, 5} true;
  assume {:verifier.code 0} true;
  goto $bb201;
$bb200:
  assume !(($i167 == 1));
  assume {:verifier.code 0} true;
  goto $bb201;
$bb201:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8852, 9} true;
  assume {:verifier.code 0} true;
  $i169 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8852, 30} true;
  assume {:verifier.code 0} true;
  $i170 := $eq.i32($i169, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8852, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb202, $bb203;
$bb202:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8853, 30} true;
  assume {:verifier.code 0} true;
  $p171 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8853, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_termios($p171, $p13, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8854, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8855, 5} true;
  assume {:verifier.code 0} true;
  goto $bb204;
$bb203:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb204;
$bb204:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8858, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb205:
  assume ($i173 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8861, 30} true;
  assume {:verifier.code 0} true;
  $p174 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8861, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_config_port($p174, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8862, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb207;
$bb206:
  assume !(($i173 == 1));
  assume {:verifier.code 0} true;
  goto $bb207;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8866, 9} true;
  assume {:verifier.code 0} true;
  $i175 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8866, 30} true;
  assume {:verifier.code 0} true;
  $i176 := $eq.i32($i175, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8866, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  goto $bb208, $bb209;
$bb208:
  assume ($i176 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8867, 30} true;
  assume {:verifier.code 0} true;
  $p177 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8867, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_config_port($p177, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8868, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb210;
$bb209:
  assume !(($i176 == 1));
  assume {:verifier.code 0} true;
  goto $bb210;
$bb210:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8872, 9} true;
  assume {:verifier.code 0} true;
  $i178 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8872, 30} true;
  assume {:verifier.code 0} true;
  $i179 := $eq.i32($i178, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8872, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb211, $bb212;
$bb211:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8873, 30} true;
  assume {:verifier.code 0} true;
  $p180 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8873, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_config_port($p180, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8874, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8875, 5} true;
  assume {:verifier.code 0} true;
  goto $bb213;
$bb212:
  assume !(($i179 == 1));
  assume {:verifier.code 0} true;
  goto $bb213;
$bb213:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8878, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb214:
  assume ($i182 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8881, 28} true;
  assume {:verifier.code 0} true;
  $p183 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8881, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p183, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8882, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8883, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb215:
  assume !(($i182 == 1));
  assume {:verifier.code 0} true;
  goto $bb216;
$bb216:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8886, 9} true;
  assume {:verifier.code 0} true;
  $i184 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8886, 30} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.i32($i184, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8886, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb217, $bb218;
$bb217:
  assume ($i185 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8887, 28} true;
  assume {:verifier.code 0} true;
  $p186 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8887, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p186, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8888, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8889, 5} true;
  assume {:verifier.code 0} true;
  goto $bb219;
$bb218:
  assume !(($i185 == 1));
  assume {:verifier.code 0} true;
  goto $bb219;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8892, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8892, 30} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i32($i187, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8892, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb220, $bb221;
$bb220:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8893, 28} true;
  assume {:verifier.code 0} true;
  $p189 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8893, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_set_mctrl($p189, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8894, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8895, 5} true;
  assume {:verifier.code 0} true;
  goto $bb222;
$bb221:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb222;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8898, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb223:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8901, 26} true;
  assume {:verifier.code 0} true;
  $p192 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8901, 7} true;
  assume {:verifier.code 0} true;
  call $i193 := serial8250_startup($p192);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8902, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8903, 5} true;
  assume {:verifier.code 0} true;
  goto $bb225;
$bb224:
  assume !(($i191 == 1));
  assume {:verifier.code 0} true;
  goto $bb225;
$bb225:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8906, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8906, 30} true;
  assume {:verifier.code 0} true;
  $i195 := $eq.i32($i194, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8906, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb226, $bb227;
$bb226:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8907, 26} true;
  assume {:verifier.code 0} true;
  $p196 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8907, 7} true;
  assume {:verifier.code 0} true;
  call $i197 := serial8250_startup($p196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8908, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8909, 5} true;
  assume {:verifier.code 0} true;
  goto $bb228;
$bb227:
  assume !(($i195 == 1));
  assume {:verifier.code 0} true;
  goto $bb228;
$bb228:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8912, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8912, 30} true;
  assume {:verifier.code 0} true;
  $i199 := $eq.i32($i198, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8912, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb229, $bb230;
$bb229:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8913, 26} true;
  assume {:verifier.code 0} true;
  $p200 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8913, 7} true;
  assume {:verifier.code 0} true;
  call $i201 := serial8250_startup($p200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8914, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8915, 5} true;
  assume {:verifier.code 0} true;
  goto $bb231;
$bb230:
  assume !(($i199 == 1));
  assume {:verifier.code 0} true;
  goto $bb231;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8918, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb232:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8921, 28} true;
  assume {:verifier.code 0} true;
  $p204 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8921, 7} true;
  assume {:verifier.code 0} true;
  call $i205 := serial8250_get_mctrl($p204);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8922, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8923, 5} true;
  assume {:verifier.code 0} true;
  goto $bb234;
$bb233:
  assume !(($i203 == 1));
  assume {:verifier.code 0} true;
  goto $bb234;
$bb234:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8926, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8926, 30} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8926, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb235, $bb236;
$bb235:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8927, 28} true;
  assume {:verifier.code 0} true;
  $p208 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8927, 7} true;
  assume {:verifier.code 0} true;
  call $i209 := serial8250_get_mctrl($p208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8928, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8929, 5} true;
  assume {:verifier.code 0} true;
  goto $bb237;
$bb236:
  assume !(($i207 == 1));
  assume {:verifier.code 0} true;
  goto $bb237;
$bb237:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8932, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8932, 30} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i210, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8932, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb238, $bb239;
$bb238:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8933, 28} true;
  assume {:verifier.code 0} true;
  $p212 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8933, 7} true;
  assume {:verifier.code 0} true;
  call $i213 := serial8250_get_mctrl($p212);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8934, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8935, 5} true;
  assume {:verifier.code 0} true;
  goto $bb240;
$bb239:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  goto $bb240;
$bb240:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8938, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb241:
  assume ($i215 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8941, 28} true;
  assume {:verifier.code 0} true;
  $p216 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8941, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_enable_ms($p216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8942, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8943, 5} true;
  assume {:verifier.code 0} true;
  goto $bb243;
$bb242:
  assume !(($i215 == 1));
  assume {:verifier.code 0} true;
  goto $bb243;
$bb243:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8946, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8946, 30} true;
  assume {:verifier.code 0} true;
  $i218 := $eq.i32($i217, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8946, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i218} true;
  goto $bb244, $bb245;
$bb244:
  assume ($i218 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8947, 28} true;
  assume {:verifier.code 0} true;
  $p219 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8947, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_enable_ms($p219);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8948, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8949, 5} true;
  assume {:verifier.code 0} true;
  goto $bb246;
$bb245:
  assume !(($i218 == 1));
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8952, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8952, 30} true;
  assume {:verifier.code 0} true;
  $i221 := $eq.i32($i220, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8952, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb247, $bb248;
$bb247:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8953, 28} true;
  assume {:verifier.code 0} true;
  $p222 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8953, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_enable_ms($p222);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8954, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8955, 5} true;
  assume {:verifier.code 0} true;
  goto $bb249;
$bb248:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  goto $bb249;
$bb249:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8958, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb250:
  assume ($i224 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8961, 27} true;
  assume {:verifier.code 0} true;
  $p225 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8961, 7} true;
  assume {:verifier.code 0} true;
  call $i226 := serial8250_tx_empty($p225);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8962, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8963, 5} true;
  assume {:verifier.code 0} true;
  goto $bb252;
$bb251:
  assume !(($i224 == 1));
  assume {:verifier.code 0} true;
  goto $bb252;
$bb252:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8966, 9} true;
  assume {:verifier.code 0} true;
  $i227 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8966, 30} true;
  assume {:verifier.code 0} true;
  $i228 := $eq.i32($i227, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8966, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb253, $bb254;
$bb253:
  assume ($i228 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8967, 27} true;
  assume {:verifier.code 0} true;
  $p229 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8967, 7} true;
  assume {:verifier.code 0} true;
  call $i230 := serial8250_tx_empty($p229);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8968, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb255;
$bb254:
  assume !(($i228 == 1));
  assume {:verifier.code 0} true;
  goto $bb255;
$bb255:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8972, 9} true;
  assume {:verifier.code 0} true;
  $i231 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8972, 30} true;
  assume {:verifier.code 0} true;
  $i232 := $eq.i32($i231, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8972, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i232} true;
  goto $bb256, $bb257;
$bb256:
  assume ($i232 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8973, 27} true;
  assume {:verifier.code 0} true;
  $p233 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8973, 7} true;
  assume {:verifier.code 0} true;
  call $i234 := serial8250_tx_empty($p233);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8974, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8975, 5} true;
  assume {:verifier.code 0} true;
  goto $bb258;
$bb257:
  assume !(($i232 == 1));
  assume {:verifier.code 0} true;
  goto $bb258;
$bb258:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8978, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb259:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8981, 27} true;
  assume {:verifier.code 0} true;
  $p237 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8981, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_shutdown($p237);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8982, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8983, 5} true;
  assume {:verifier.code 0} true;
  goto $bb261;
$bb260:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb261;
$bb261:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8986, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb262:
  assume ($i239 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8989, 30} true;
  assume {:verifier.code 0} true;
  $p240 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8989, 7} true;
  assume {:verifier.code 0} true;
  call $i241 := serial8250_verify_port($p240, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8990, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  goto $bb264;
$bb263:
  assume !(($i239 == 1));
  assume {:verifier.code 0} true;
  goto $bb264;
$bb264:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8994, 9} true;
  assume {:verifier.code 0} true;
  $i242 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8994, 30} true;
  assume {:verifier.code 0} true;
  $i243 := $eq.i32($i242, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8994, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb265, $bb266;
$bb265:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8995, 30} true;
  assume {:verifier.code 0} true;
  $p244 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8995, 7} true;
  assume {:verifier.code 0} true;
  call $i245 := serial8250_verify_port($p244, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8996, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8997, 5} true;
  assume {:verifier.code 0} true;
  goto $bb267;
$bb266:
  assume !(($i243 == 1));
  assume {:verifier.code 0} true;
  goto $bb267;
$bb267:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9000, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9000, 30} true;
  assume {:verifier.code 0} true;
  $i247 := $eq.i32($i246, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9000, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i247} true;
  goto $bb268, $bb269;
$bb268:
  assume ($i247 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9001, 30} true;
  assume {:verifier.code 0} true;
  $p248 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9001, 7} true;
  assume {:verifier.code 0} true;
  call $i249 := serial8250_verify_port($p248, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9002, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9003, 5} true;
  assume {:verifier.code 0} true;
  goto $bb270;
$bb269:
  assume !(($i247 == 1));
  assume {:verifier.code 0} true;
  goto $bb270;
$bb270:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9006, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb271:
  assume ($i251 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9009, 26} true;
  assume {:verifier.code 0} true;
  $p252 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9009, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_tx($p252);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9010, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9011, 5} true;
  assume {:verifier.code 0} true;
  goto $bb273;
$bb272:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  goto $bb273;
$bb273:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9014, 9} true;
  assume {:verifier.code 0} true;
  $i253 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9014, 30} true;
  assume {:verifier.code 0} true;
  $i254 := $eq.i32($i253, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9014, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i254} true;
  goto $bb274, $bb275;
$bb274:
  assume ($i254 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9015, 26} true;
  assume {:verifier.code 0} true;
  $p255 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9015, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_tx($p255);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9016, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9017, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb275:
  assume !(($i254 == 1));
  assume {:verifier.code 0} true;
  goto $bb276;
$bb276:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9020, 9} true;
  assume {:verifier.code 0} true;
  $i256 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9020, 30} true;
  assume {:verifier.code 0} true;
  $i257 := $eq.i32($i256, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9020, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i257} true;
  goto $bb277, $bb278;
$bb277:
  assume ($i257 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9021, 26} true;
  assume {:verifier.code 0} true;
  $p258 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9021, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_tx($p258);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9022, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9023, 5} true;
  assume {:verifier.code 0} true;
  goto $bb279;
$bb278:
  assume !(($i257 == 1));
  assume {:verifier.code 0} true;
  goto $bb279;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9026, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb280:
  assume ($i260 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9029, 28} true;
  assume {:verifier.code 0} true;
  $p261 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9029, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_break_ctl($p261, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9030, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9031, 5} true;
  assume {:verifier.code 0} true;
  goto $bb282;
$bb281:
  assume !(($i260 == 1));
  assume {:verifier.code 0} true;
  goto $bb282;
$bb282:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9034, 9} true;
  assume {:verifier.code 0} true;
  $i262 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9034, 30} true;
  assume {:verifier.code 0} true;
  $i263 := $eq.i32($i262, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9034, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb283, $bb284;
$bb283:
  assume ($i263 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9035, 28} true;
  assume {:verifier.code 0} true;
  $p264 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9035, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_break_ctl($p264, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9036, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9037, 5} true;
  assume {:verifier.code 0} true;
  goto $bb285;
$bb284:
  assume !(($i263 == 1));
  assume {:verifier.code 0} true;
  goto $bb285;
$bb285:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9040, 9} true;
  assume {:verifier.code 0} true;
  $i265 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9040, 30} true;
  assume {:verifier.code 0} true;
  $i266 := $eq.i32($i265, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9040, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i266} true;
  goto $bb286, $bb287;
$bb286:
  assume ($i266 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9041, 28} true;
  assume {:verifier.code 0} true;
  $p267 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9041, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_break_ctl($p267, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9042, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9043, 5} true;
  assume {:verifier.code 0} true;
  goto $bb288;
$bb287:
  assume !(($i266 == 1));
  assume {:verifier.code 0} true;
  goto $bb288;
$bb288:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb289:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9049, 32} true;
  assume {:verifier.code 0} true;
  $p270 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9049, 7} true;
  assume {:verifier.code 0} true;
  call $i271 := serial8250_get_poll_char($p270);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9050, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9051, 5} true;
  assume {:verifier.code 0} true;
  goto $bb291;
$bb290:
  assume !(($i269 == 1));
  assume {:verifier.code 0} true;
  goto $bb291;
$bb291:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9054, 9} true;
  assume {:verifier.code 0} true;
  $i272 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9054, 30} true;
  assume {:verifier.code 0} true;
  $i273 := $eq.i32($i272, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9054, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb292, $bb293;
$bb292:
  assume ($i273 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9055, 32} true;
  assume {:verifier.code 0} true;
  $p274 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9055, 7} true;
  assume {:verifier.code 0} true;
  call $i275 := serial8250_get_poll_char($p274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9056, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9057, 5} true;
  assume {:verifier.code 0} true;
  goto $bb294;
$bb293:
  assume !(($i273 == 1));
  assume {:verifier.code 0} true;
  goto $bb294;
$bb294:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9060, 9} true;
  assume {:verifier.code 0} true;
  $i276 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9060, 30} true;
  assume {:verifier.code 0} true;
  $i277 := $eq.i32($i276, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9060, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i277} true;
  goto $bb295, $bb296;
$bb295:
  assume ($i277 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9061, 32} true;
  assume {:verifier.code 0} true;
  $p278 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9061, 7} true;
  assume {:verifier.code 0} true;
  call $i279 := serial8250_get_poll_char($p278);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9062, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9063, 5} true;
  assume {:verifier.code 0} true;
  goto $bb297;
$bb296:
  assume !(($i277 == 1));
  assume {:verifier.code 0} true;
  goto $bb297;
$bb297:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9066, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb298:
  assume ($i281 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9069, 26} true;
  assume {:verifier.code 0} true;
  $p282 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9069, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_rx($p282);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9070, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9071, 5} true;
  assume {:verifier.code 0} true;
  goto $bb300;
$bb299:
  assume !(($i281 == 1));
  assume {:verifier.code 0} true;
  goto $bb300;
$bb300:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9074, 9} true;
  assume {:verifier.code 0} true;
  $i283 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9074, 30} true;
  assume {:verifier.code 0} true;
  $i284 := $eq.i32($i283, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9074, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i284} true;
  goto $bb301, $bb302;
$bb301:
  assume ($i284 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9075, 26} true;
  assume {:verifier.code 0} true;
  $p285 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9075, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_rx($p285);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9076, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9077, 5} true;
  assume {:verifier.code 0} true;
  goto $bb303;
$bb302:
  assume !(($i284 == 1));
  assume {:verifier.code 0} true;
  goto $bb303;
$bb303:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9080, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9080, 30} true;
  assume {:verifier.code 0} true;
  $i287 := $eq.i32($i286, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9080, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i287} true;
  goto $bb304, $bb305;
$bb304:
  assume ($i287 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9081, 26} true;
  assume {:verifier.code 0} true;
  $p288 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9081, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_stop_rx($p288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9082, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9083, 5} true;
  assume {:verifier.code 0} true;
  goto $bb306;
$bb305:
  assume !(($i287 == 1));
  assume {:verifier.code 0} true;
  goto $bb306;
$bb306:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9086, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb307:
  assume ($i290 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9089, 32} true;
  assume {:verifier.code 0} true;
  $p291 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9089, 56} true;
  assume {:verifier.code 0} true;
  $i292 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9089, 56} true;
  assume {:verifier.code 0} true;
  $i293 := $trunc.i32.i8($i292);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9089, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_put_poll_char($p291, $i293);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9090, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9091, 5} true;
  assume {:verifier.code 0} true;
  goto $bb309;
$bb308:
  assume !(($i290 == 1));
  assume {:verifier.code 0} true;
  goto $bb309;
$bb309:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9094, 9} true;
  assume {:verifier.code 0} true;
  $i294 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9094, 30} true;
  assume {:verifier.code 0} true;
  $i295 := $eq.i32($i294, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9094, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i295} true;
  goto $bb310, $bb311;
$bb310:
  assume ($i295 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9095, 32} true;
  assume {:verifier.code 0} true;
  $p296 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9095, 56} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9095, 56} true;
  assume {:verifier.code 0} true;
  $i298 := $trunc.i32.i8($i297);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9095, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_put_poll_char($p296, $i298);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9096, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9097, 5} true;
  assume {:verifier.code 0} true;
  goto $bb312;
$bb311:
  assume !(($i295 == 1));
  assume {:verifier.code 0} true;
  goto $bb312;
$bb312:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9100, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9100, 30} true;
  assume {:verifier.code 0} true;
  $i300 := $eq.i32($i299, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9100, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb313, $bb314;
$bb313:
  assume ($i300 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9101, 32} true;
  assume {:verifier.code 0} true;
  $p301 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9101, 56} true;
  assume {:verifier.code 0} true;
  $i302 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9101, 56} true;
  assume {:verifier.code 0} true;
  $i303 := $trunc.i32.i8($i302);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9101, 7} true;
  assume {:verifier.code 0} true;
  call serial8250_put_poll_char($p301, $i303);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9102, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9103, 5} true;
  assume {:verifier.code 0} true;
  goto $bb315;
$bb314:
  assume !(($i300 == 1));
  assume {:verifier.code 0} true;
  goto $bb315;
$bb315:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9106, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb316:
  assume ($i305 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9109, 31} true;
  assume {:verifier.code 0} true;
  $p306 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9109, 7} true;
  assume {:verifier.code 0} true;
  call $i307 := serial8250_request_port($p306);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9110, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9111, 5} true;
  assume {:verifier.code 0} true;
  goto $bb318;
$bb317:
  assume !(($i305 == 1));
  assume {:verifier.code 0} true;
  goto $bb318;
$bb318:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9114, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9114, 30} true;
  assume {:verifier.code 0} true;
  $i309 := $eq.i32($i308, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9114, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i309} true;
  goto $bb319, $bb320;
$bb319:
  assume ($i309 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9115, 31} true;
  assume {:verifier.code 0} true;
  $p310 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9115, 7} true;
  assume {:verifier.code 0} true;
  call $i311 := serial8250_request_port($p310);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9116, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 3;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9117, 5} true;
  assume {:verifier.code 0} true;
  goto $bb321;
$bb320:
  assume !(($i309 == 1));
  assume {:verifier.code 0} true;
  goto $bb321;
$bb321:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9120, 9} true;
  assume {:verifier.code 0} true;
  $i312 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9120, 30} true;
  assume {:verifier.code 0} true;
  $i313 := $eq.i32($i312, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9120, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i313} true;
  goto $bb322, $bb323;
$bb322:
  assume ($i313 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9121, 31} true;
  assume {:verifier.code 0} true;
  $p314 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9121, 7} true;
  assume {:verifier.code 0} true;
  call $i315 := serial8250_request_port($p314);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9122, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9123, 5} true;
  assume {:verifier.code 0} true;
  goto $bb324;
$bb323:
  assume !(($i313 == 1));
  assume {:verifier.code 0} true;
  goto $bb324;
$bb324:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9126, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb325:
  assume ($i317 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9129, 7} true;
  assume {:verifier.code 0} true;
  call $i318 := ldv_release_5();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9130, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9131, 17} true;
  assume {:verifier.code 0} true;
  $i319 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9131, 25} true;
  assume {:verifier.code 0} true;
  $i320 := $sub.i32($i319, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9131, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i320;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i320);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9132, 5} true;
  assume {:verifier.code 0} true;
  goto $bb327;
$bb326:
  assume !(($i317 == 1));
  assume {:verifier.code 0} true;
  goto $bb327;
$bb327:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9135, 9} true;
  assume {:verifier.code 0} true;
  $i321 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9135, 30} true;
  assume {:verifier.code 0} true;
  $i322 := $eq.i32($i321, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9135, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i322} true;
  goto $bb328, $bb329;
$bb328:
  assume ($i322 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9136, 7} true;
  assume {:verifier.code 0} true;
  call $i323 := ldv_release_5();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9137, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9138, 17} true;
  assume {:verifier.code 0} true;
  $i324 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9138, 25} true;
  assume {:verifier.code 0} true;
  $i325 := $sub.i32($i324, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9138, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i325;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i325);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9139, 5} true;
  assume {:verifier.code 0} true;
  goto $bb330;
$bb329:
  assume !(($i322 == 1));
  assume {:verifier.code 0} true;
  goto $bb330;
$bb330:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb331:
  assume ($i327 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9145, 7} true;
  assume {:verifier.code 0} true;
  call $i328 := ldv_probe_5();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9146, 28} true;
  assume {:verifier.code 0} true;
  $M.53 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9147, 17} true;
  assume {:verifier.code 0} true;
  $i329 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9147, 25} true;
  assume {:verifier.code 0} true;
  $i330 := $add.i32($i329, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9147, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i330;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i330);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9148, 5} true;
  assume {:verifier.code 0} true;
  goto $bb333;
$bb332:
  assume !(($i327 == 1));
  assume {:verifier.code 0} true;
  goto $bb333;
$bb333:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9151, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb334:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9153, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9154, 5} true;
  assume {:verifier.code 0} true;
  goto $bb335;
$bb335:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9154, 5} true;
  assume {:verifier.code 0} true;
  goto $bb159;
$bb336:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9159, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb337:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9161, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9162, 3} true;
  assume {:verifier.code 0} true;
  goto $bb338;
$bb338:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9162, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 466110));
procedure  ldv_initialize();
const serial8250_exit: ref;
axiom (serial8250_exit == $sub.ref(0, 467142));
procedure  serial8250_exit()
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8291, 13} true;
  assume {:verifier.code 0} true;
  $p0 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8292, 23} true;
  assume {:verifier.code 0} true;
  $M.9 := $0.ref;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8293, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_driver_unregister_27(serial8250_isa_driver);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8294, 3} true;
  assume {:verifier.code 0} true;
  call platform_device_unregister($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8295, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_pnp_exit();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8296, 3} true;
  assume {:verifier.code 0} true;
  call uart_unregister_driver(serial8250_reg);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8297, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const serial8250_init: ref;
axiom (serial8250_init == $sub.ref(0, 468174));
procedure  serial8250_init()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i19: i32;
  var $p25: ref;
  var $i15: i32;
  var $i10: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8239, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_isa_init_ports();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8240, 76} true;
  assume {:verifier.code 0} true;
  $i0 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8241, 10} true;
  assume {:verifier.code 0} true;
  $i1 := $M.28;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8241, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8241, 10} true;
  assume {:verifier.code 0} true;
  havoc $p3;
  assume ((($i2 == 1) ==> ($p3 == .str.46)) && (($i2 != 1) ==> ($p3 == .str.47)));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8240, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.i32.ref(.str.45, $i0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8242, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $add.ref(serial8250_reg, 32), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8243, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := uart_register_driver(serial8250_reg);
  // WARNING: %6 = call i32 @uart_register_driver(%struct.uart_driver* @serial8250_reg), !dbg !5235, !verifier.code !5229
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8244, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8244, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8245, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8283, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8249, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := serial8250_pnp_init();
  // WARNING: %11 = call i32 @serial8250_pnp_init(), !dbg !5244, !verifier.code !5229
  call {:cexpr "ret"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8250, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8250, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8251, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i8;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8281, 3} true;
  assume {:verifier.code 0} true;
  call uart_unregister_driver(serial8250_reg);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8281, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i10;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8255, 25} true;
  assume {:verifier.code 0} true;
  call $p11 := platform_device_alloc(.str.44, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8255, 23} true;
  assume {:verifier.code 0} true;
  $M.9 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8256, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8256, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8256, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8256, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8258, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 12);
  goto $bb11;
$bb10:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8279, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_pnp_exit();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8279, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i15;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8262, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8262, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := platform_device_add($p16);
  // WARNING: %24 = call i32 @platform_device_add(%struct.platform_device* %23), !dbg !5260, !verifier.code !5229
  call {:cexpr "ret"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8263, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8263, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8264, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  goto $bb15;
$bb14:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8277, 23} true;
  assume {:verifier.code 0} true;
  $p25 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8277, 3} true;
  assume {:verifier.code 0} true;
  call platform_device_put($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8277, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i19;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8268, 49} true;
  assume {:verifier.code 0} true;
  $p20 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8268, 70} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8268, 3} true;
  assume {:verifier.code 0} true;
  call serial8250_register_ports(serial8250_reg, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8269, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv___platform_driver_register_26(serial8250_isa_driver, __this_module);
  // WARNING: %31 = call i32 @ldv___platform_driver_register_26(%struct.platform_driver* @serial8250_isa_driver, %struct.module* @__this_module), !dbg !5269, !verifier.code !5229
  call {:cexpr "ret"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8270, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8270, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8271, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i22;
  goto $bb3;
$bb18:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8275, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8275, 3} true;
  assume {:verifier.code 0} true;
  call platform_device_del($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 8275, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i22;
  goto $bb15;
}
const ldv_initialize_pnp_driver_3: ref;
axiom (ldv_initialize_pnp_driver_3 == $sub.ref(0, 469206));
procedure  ldv_initialize_pnp_driver_3()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9934, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1656);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9935, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9935, 28} true;
  assume {:verifier.code 0} true;
  $M.58 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9936, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_main_exported_3: ref;
axiom (ldv_main_exported_3 == $sub.ref(0, 470238));
procedure  ldv_main_exported_3()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9947, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_zalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9948, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9949, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9949, 3} true;
  assume {:verifier.code 0} true;
  call $M.59 := $memset.i8($M.59, $p3, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9950, 13} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  // WARNING: %5 = call i32 @__VERIFIER_nondet_int(), !dbg !5239, !verifier.code !5240
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i4, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i4, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9978, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9978, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9978, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb26, $bb27;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i4, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9990, 28} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb32, $bb33;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb38;
$bb9:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i4, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9966, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9966, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9966, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb20, $bb21;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9953, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9953, 28} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9953, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb13, $bb14;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb13:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9954, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $M.58;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9954, 20} true;
  assume {:verifier.code 0} true;
  call $i13 := serial_pnp_probe($p12, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9954, 18} true;
  assume {:verifier.code 0} true;
  $M.60 := $i13;
  call {:cexpr "ldv_retval_6"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9955, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $M.60;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9955, 22} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9955, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb15:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9956, 28} true;
  assume {:verifier.code 0} true;
  $M.51 := 2;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9957, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9957, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9957, 15} true;
  assume {:verifier.code 0} true;
  $M.49 := $i17;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9958, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9961, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9964, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10009, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb20:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9967, 39} true;
  assume {:verifier.code 0} true;
  $p20 := $M.58;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9967, 20} true;
  assume {:verifier.code 0} true;
  $p21 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9967, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.59, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9967, 20} true;
  assume {:verifier.code 0} true;
  call $i23 := serial_pnp_suspend($p20, $i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9967, 18} true;
  assume {:verifier.code 0} true;
  $M.61 := $i23;
  call {:cexpr "ldv_retval_5"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9968, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $M.61;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9968, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9968, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb22:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9969, 28} true;
  assume {:verifier.code 0} true;
  $M.51 := 3;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9970, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9973, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9976, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb26:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9979, 38} true;
  assume {:verifier.code 0} true;
  $p28 := $M.58;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9979, 20} true;
  assume {:verifier.code 0} true;
  call $i29 := serial_pnp_resume($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9979, 18} true;
  assume {:verifier.code 0} true;
  $M.62 := $i29;
  call {:cexpr "ldv_retval_4"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9980, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $M.62;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9980, 22} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9980, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb28, $bb29;
$bb27:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb28:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9981, 28} true;
  assume {:verifier.code 0} true;
  $M.51 := 2;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9982, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9985, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9988, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb32:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9991, 23} true;
  assume {:verifier.code 0} true;
  $p34 := $M.58;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9991, 5} true;
  assume {:verifier.code 0} true;
  call serial_pnp_remove($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9992, 26} true;
  assume {:verifier.code 0} true;
  $M.51 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9993, 15} true;
  assume {:verifier.code 0} true;
  $i35 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9993, 23} true;
  assume {:verifier.code 0} true;
  $i36 := $sub.i32($i35, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9993, 13} true;
  assume {:verifier.code 0} true;
  $M.49 := $i36;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9994, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9997, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9997, 28} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9997, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9998, 23} true;
  assume {:verifier.code 0} true;
  $p39 := $M.58;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9998, 5} true;
  assume {:verifier.code 0} true;
  call serial_pnp_remove($p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9999, 26} true;
  assume {:verifier.code 0} true;
  $M.51 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10000, 15} true;
  assume {:verifier.code 0} true;
  $i40 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10000, 23} true;
  assume {:verifier.code 0} true;
  $i41 := $sub.i32($i40, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10000, 13} true;
  assume {:verifier.code 0} true;
  $M.49 := $i41;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10001, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10004, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10006, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10007, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 10007, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
}
const ldv_release_5: ref;
axiom (ldv_release_5 == $sub.ref(0, 471270));
procedure  ldv_release_5()
  returns ($r: i32);
const ldv_probe_5: ref;
axiom (ldv_probe_5 == $sub.ref(0, 472302));
procedure  ldv_probe_5()
  returns ($r: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 473334));
procedure  ldv_check_final_state();
const uart_register_driver: ref;
axiom (uart_register_driver == $sub.ref(0, 474366));
procedure  uart_register_driver($p0: ref)
  returns ($r: i32);
const serial8250_pnp_init: ref;
axiom (serial8250_pnp_init == $sub.ref(0, 475398));
procedure  serial8250_pnp_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9913, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := pnp_register_driver(serial_pnp_driver);
  // WARNING: %1 = call i32 @pnp_register_driver(%struct.pnp_driver* @serial_pnp_driver), !dbg !5227, !verifier.code !5229
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9914, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const platform_device_alloc: ref;
axiom (platform_device_alloc == $sub.ref(0, 476430));
procedure  platform_device_alloc($p0: ref, $i1: i32)
  returns ($r: ref);
const platform_device_add: ref;
axiom (platform_device_add == $sub.ref(0, 477462));
procedure  platform_device_add($p0: ref)
  returns ($r: i32);
const serial8250_register_ports: ref;
axiom (serial8250_register_ports == $sub.ref(0, 478494));
procedure  serial8250_register_ports($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %1, i64 0, metadata !14092, metadata !5230), !dbg !14093, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 26} true;
  assume {:verifier.code 0} true;
  $i2 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7779, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7762, 60} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  $p6 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  $p7 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  $p8 := $add.ref($add.ref(serial8250_ports, $mul.ref($i5, 504)), 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7763, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7763, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7763, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7763, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7776, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i4, 1);
  // WARNING: %32 = add nsw i32 %.01, 1, !dbg !5264, !verifier.code !5233
  call {:cexpr "i"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 24} true;
  assume {:verifier.code 0} true;
  $i26 := $ult.i32($i24, $i25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i24;
  assume {:branchcond $i26} true;
  goto $bb13, $bb14;
$bb9:
  $p12 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  $p13 := $add.ref($add.ref(serial8250_ports, $mul.ref($i5, 504)), 288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7768, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, $p1);
  $p14 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  $p15 := $add.ref($add.ref(serial8250_ports, $mul.ref($i5, 504)), 248);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7769, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7769, 27} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 134217728);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7769, 41} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7769, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i18 == 1);
  $p19 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  $p20 := $add.ref($add.ref(serial8250_ports, $mul.ref($i5, 504)), 260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7770, 58} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7770, 5} true;
  assume {:verifier.code 0} true;
  call serial8250_init_fixed_type_port($p6, $i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7771, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  $p22 := $add.ref(serial8250_ports, $mul.ref($i5, 504));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7774, 3} true;
  assume {:verifier.code 0} true;
  call $i23 := uart_add_one_port($p0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7774, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb4;
$bb14:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7778, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 7784, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv___platform_driver_register_26: ref;
axiom (ldv___platform_driver_register_26 == $sub.ref(0, 479526));
procedure  ldv___platform_driver_register_26($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9336, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := __platform_driver_register($p0, $p1);
  // WARNING: %3 = call i32 @__platform_driver_register(%struct.platform_driver* %0, %struct.module* %1), !dbg !5236, !verifier.code !5233
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !14136, metadata !5230), !dbg !14137, !verifier.code !5232
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9338, 24} true;
  assume {:verifier.code 0} true;
  $M.47 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9339, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_platform_driver_4();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9340, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const platform_device_del: ref;
axiom (platform_device_del == $sub.ref(0, 480558));
procedure  platform_device_del($p0: ref);
const platform_device_put: ref;
axiom (platform_device_put == $sub.ref(0, 481590));
procedure  platform_device_put($p0: ref);
const serial8250_pnp_exit: ref;
axiom (serial8250_pnp_exit == $sub.ref(0, 482622));
procedure  serial8250_pnp_exit()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9922, 3} true;
  assume {:verifier.code 0} true;
  call pnp_unregister_driver(serial_pnp_driver);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9923, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_unregister_driver: ref;
axiom (uart_unregister_driver == $sub.ref(0, 483654));
procedure  uart_unregister_driver($p0: ref);
const pnp_unregister_driver: ref;
axiom (pnp_unregister_driver == $sub.ref(0, 484686));
procedure  pnp_unregister_driver($p0: ref);
const __platform_driver_register: ref;
axiom (__platform_driver_register == $sub.ref(0, 485718));
procedure  __platform_driver_register($p0: ref, $p1: ref)
  returns ($r: i32);
const pnp_register_driver: ref;
axiom (pnp_register_driver == $sub.ref(0, 486750));
procedure  pnp_register_driver($p0: ref)
  returns ($r: i32);
const ldv_platform_driver_unregister_27: ref;
axiom (ldv_platform_driver_unregister_27 == $sub.ref(0, 487782));
procedure  ldv_platform_driver_unregister_27($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9348, 3} true;
  assume {:verifier.code 0} true;
  call platform_driver_unregister($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9349, 24} true;
  assume {:verifier.code 0} true;
  $M.47 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250.ko-entry_point_true-unreach-call.cil.out-4R9WJR.c", 9350, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const platform_device_unregister: ref;
axiom (platform_device_unregister == $sub.ref(0, 488814));
procedure  platform_device_unregister($p0: ref);
const platform_driver_unregister: ref;
axiom (platform_driver_unregister == $sub.ref(0, 489846));
procedure  platform_driver_unregister($p0: ref);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 490878));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14158, metadata !5230), !dbg !14159, !verifier.code !5232
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 491910));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 492942));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 493974));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 495006));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 496038));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __VERIFIER_nondet_unsigned_char: ref;
axiom (__VERIFIER_nondet_unsigned_char == $sub.ref(0, 497070));
procedure  __VERIFIER_nondet_unsigned_char()
  returns ($r: i8)
{
  var $i0: i8;
  var $i1: i32;
  var $i2: i1;
  var $i4: i32;
  var $i5: i1;
  var $i3: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 84, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_char();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_char"} boogie_si_record_i8($i0);
  // WARNING: %1 = call zeroext i8 @__SMACK_nondet_unsigned_char(), !dbg !5229, !verifier.code !5230
  call {:cexpr "x"} boogie_si_record_i8($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i8.i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 23} true;
  assume {:verifier.code 0} true;
  $i2 := $sge.i32($i1, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 28} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 31} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i8.i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 33} true;
  assume {:verifier.code 1} true;
  $i5 := $sle.i32($i4, 255);
  assume {:verifier.code 0} true;
  $i3 := $i5;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 28} true;
  assume {:verifier.code 1} true;
  $i6 := $zext.i1.i32($i3);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 85, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i6);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 86, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 498102));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 499134));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 500166));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 501198));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 502230));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 503262));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 504294));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !5227, !verifier.code !5228
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 505326));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 506358));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 507390));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __VERIFIER_nondet_unsigned_int: ref;
axiom (__VERIFIER_nondet_unsigned_int == $sub.ref(0, 508422));
procedure  __VERIFIER_nondet_unsigned_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 138, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_int();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_unsigned_int(), !dbg !5229, !verifier.code !5230
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $uge.i32($i0, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 28} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 33} true;
  assume {:verifier.code 1} true;
  $i3 := $ule.i32($i0, 4294967295);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 28} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 139, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 140, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 509454));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 510486));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 511518));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 512550));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 513582));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 514614));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 515646));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 516678));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 517710));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 518742));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 519774));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 520806));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 521838));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_uchar: ref;
axiom (__VERIFIER_nondet_uchar == $sub.ref(0, 522870));
procedure  __VERIFIER_nondet_uchar()
  returns ($r: i8)
{
  var $i0: i8;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 223, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_char"} boogie_si_record_i8($i0);
  // WARNING: %1 = call zeroext i8 @__VERIFIER_nondet_unsigned_char(), !dbg !5229, !verifier.code !5230
  call {:cexpr "x"} boogie_si_record_i8($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 224, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_uint: ref;
axiom (__VERIFIER_nondet_uint == $sub.ref(0, 523902));
procedure  __VERIFIER_nondet_uint()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 233, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_unsigned_int(), !dbg !5229, !verifier.code !5230
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 234, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const calloc: ref;
axiom (calloc == $sub.ref(0, 524934));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !14231, metadata !5230), !dbg !14232, !verifier.code !5232
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 525966));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 526998));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 528030));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 529062));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 530094));
procedure  __SMACK_static_init()
{
$bb0:
  $M.20 := 0;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(0);
  $M.14 := 0;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(0);
  $M.18 := 0;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(0);
  $M.43 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.16 := 0;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(0);
  $M.23 := 0;
  call {:cexpr "ldv_timer_state_2"} boogie_si_record_i32(0);
  $M.63 := $p2i.ref.i64(serial8250_clear_and_reinit_fifos);
  $M.64 := __kstrtab_serial8250_clear_and_reinit_fifos;
  $M.65 := $store.i8($M.65, __kstrtab_serial8250_clear_and_reinit_fifos, 115);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 1), 101);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 2), 114);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 3), 105);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 4), 97);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 5), 108);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 6), 56);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 7), 50);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 8), 53);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 9), 48);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 10), 95);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 11), 99);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 12), 108);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 13), 101);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 14), 97);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 15), 114);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 16), 95);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 17), 97);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 18), 110);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 19), 100);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 20), 95);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 21), 114);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 22), 101);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 23), 105);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 24), 110);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 25), 105);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 26), 116);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 27), 95);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 28), 102);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 29), 105);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 30), 102);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 31), 111);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 32), 115);
  $M.65 := $store.i8($M.65, $add.ref(__kstrtab_serial8250_clear_and_reinit_fifos, 33), 0);
  $M.66 := $store.i8($M.66, __kstrtab_serial8250_release_dma, 115);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 1), 101);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 2), 114);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 3), 105);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 4), 97);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 5), 108);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 6), 56);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 7), 50);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 8), 53);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 9), 48);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 10), 95);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 11), 114);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 12), 101);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 13), 108);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 14), 101);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 15), 97);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 16), 115);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 17), 101);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 18), 95);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 19), 100);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 20), 109);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 21), 97);
  $M.66 := $store.i8($M.66, $add.ref(__kstrtab_serial8250_release_dma, 22), 0);
  $M.67 := $store.i8($M.67, __kstrtab_serial8250_request_dma, 115);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 1), 101);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 2), 114);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 3), 105);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 4), 97);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 5), 108);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 6), 56);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 7), 50);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 8), 53);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 9), 48);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 10), 95);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 11), 114);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 12), 101);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 13), 113);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 14), 117);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 15), 101);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 16), 115);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 17), 116);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 18), 95);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 19), 100);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 20), 109);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 21), 97);
  $M.67 := $store.i8($M.67, $add.ref(__kstrtab_serial8250_request_dma, 22), 0);
  $M.68 := $store.i8($M.68, __kstrtab_serial8250_rx_dma, 115);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 1), 101);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 2), 114);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 3), 105);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 4), 97);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 5), 108);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 6), 56);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 7), 50);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 8), 53);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 9), 48);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 10), 95);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 11), 114);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 12), 120);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 13), 95);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 14), 100);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 15), 109);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 16), 97);
  $M.68 := $store.i8($M.68, $add.ref(__kstrtab_serial8250_rx_dma, 17), 0);
  $M.69 := $store.i8($M.69, __kstrtab_serial8250_tx_dma, 115);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 1), 101);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 2), 114);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 3), 105);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 4), 97);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 5), 108);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 6), 56);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 7), 50);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 8), 53);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 9), 48);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 10), 95);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 11), 116);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 12), 120);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 13), 95);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 14), 100);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 15), 109);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 16), 97);
  $M.69 := $store.i8($M.69, $add.ref(__kstrtab_serial8250_tx_dma, 17), 0);
  $M.32 := $store.ref($M.32, modem_names, .str.59);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 8), .str.60);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 16), .str.61);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 24), .str.62);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 32), .str.63);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 40), .str.64);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 48), .str.65);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 56), .str.66);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 64), .str.67);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 72), .str.68);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 80), .str.69);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 88), .str.70);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 96), .str.71);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 104), .str.72);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 112), .str.73);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 120), .str.74);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 128), .str.75);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 136), .str.76);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 144), .str.77);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 152), .str.78);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 160), .str.79);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 168), .str.80);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 176), .str.81);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 184), .str.82);
  $M.32 := $store.ref($M.32, $add.ref(modem_names, 192), $0.ref);
  $M.0 := $store.i8($M.0, pnp_dev_table, 65);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1), 65);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 3), 48);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 6), 70);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 7), 0);
  $M.0 := $store.i64($M.0, $add.ref(pnp_dev_table, 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 16), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 1), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 16), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 16), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 32), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 1), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 32), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 48), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 1), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 5), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 48), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 48), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 64), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 1), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 64), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 80), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 1), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 80), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 80), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 96), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 1), 90);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 96), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 112), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 1), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 112), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 112), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 128), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 4), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 128), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 128), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 144), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 144), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 144), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 160), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 160), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 160), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 176), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 4), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 176), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 176), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 192), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 1), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 192), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 192), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 208), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 1), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 5), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 208), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 208), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 224), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 1), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 2), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 224), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 224), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 240), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 1), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 2), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 240), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 240), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 256), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 2), 86);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 256), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 256), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 272), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 1), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 2), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 272), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 272), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 288), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 1), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 2), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 288), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 288), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 304), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 1), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 304), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 304), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 320), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 320), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 320), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 336), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 336), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 336), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 352), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 352), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 352), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 368), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 368), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 368), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 384), 71);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 1), 86);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 6), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 384), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 384), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 400), 71);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 1), 86);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 6), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 400), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 400), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 416), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 416), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 416), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 432), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 6), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 432), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 432), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 448), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 6), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 448), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 448), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 464), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 4), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 464), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 464), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 480), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 4), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 480), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 480), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 496), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 4), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 496), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 496), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 512), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 512), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 512), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 528), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 2), 89);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 528), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 528), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 544), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 1), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 2), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 6), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 544), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 544), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 560), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 4), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 560), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 560), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 576), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 4), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 576), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 576), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 592), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 4), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 592), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 592), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 608), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 3), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 4), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 608), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 608), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 624), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 3), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 4), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 624), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 624), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 640), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 640), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 640), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 656), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 4), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 656), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 656), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 672), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 1), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 2), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 4), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 672), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 672), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 688), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 688), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 688), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 704), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 4), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 704), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 704), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 720), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 720), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 720), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 736), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 736), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 736), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 752), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 752), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 752), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 768), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 768), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 768), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 784), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 784), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 784), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 800), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 800), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 800), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 816), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 816), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 816), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 832), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 832), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 832), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 848), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 848), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 848), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 864), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 864), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 864), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 880), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 880), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 880), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 896), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 896), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 896), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 912), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 912), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 912), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 928), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 928), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 928), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 944), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 5), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 944), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 944), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 960), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 960), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 960), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 976), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 976), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 976), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 992), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 992), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 992), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1008), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1008), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1024), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 6), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1024), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1040), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 6), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1040), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1056), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1056), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1072), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 5), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1072), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1088), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1088), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1104), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1104), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1120), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1120), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1136), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 2), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 5), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1136), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1152), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 1), 86);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 2), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 5), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1152), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1168), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 1), 86);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 2), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 5), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1168), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1184), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 1), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 3), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 5), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1184), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1200), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 1), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1200), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1216), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1216), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1232), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1232), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1248), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1248), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1264), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1264), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1280), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1280), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1296), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1296), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1312), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1312), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1328), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1328), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1344), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1344), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1360), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 6), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1360), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1376), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1376), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1392), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1392), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1408), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1408), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1424), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 6), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1424), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1440), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 6), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1440), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1456), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1456), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1472), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 6), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1472), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1488), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 6), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1488), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1504), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 6), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1504), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1520), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 6), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1520), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1536), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 6), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1536), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1552), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 6), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1552), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1568), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1568), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1584), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 2), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1584), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1600), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 2), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1600), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1616), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 2), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1616), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1632), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 1), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 2), 75);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 3), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 4), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1632), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1648), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 5), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1648), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1664), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1664), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1680), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 5), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1680), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1696), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1696), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1712), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 4), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1712), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1728), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1728), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1744), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 5), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1744), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1760), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 4), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1760), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1776), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 4), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1776), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1792), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1792), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1808), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 1), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 2), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 5), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1808), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1824), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 6), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1824), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1840), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1840), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1856), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1856), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1872), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1872), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1888), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1888), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1904), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 6), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1904), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1920), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1920), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1936), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1936), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1952), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1952), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1968), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1968), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 1984), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 5), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 1984), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2000), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 5), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2000), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2016), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2016), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2032), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2032), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2048), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 3), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 5), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2048), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2064), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 3), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2064), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2080), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 3), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2080), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2096), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 3), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 5), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2096), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2112), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 3), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2112), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2128), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 2), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 3), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 5), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 6), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2128), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2144), 87);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 1), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 3), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 4), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 5), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 6), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2144), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2160), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 1), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2160), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2176), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2176), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2192), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 6), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2192), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2208), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2208), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2224), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2224), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2240), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 6), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2240), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2256), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 6), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2256), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2272), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2272), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2288), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 5), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 6), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2288), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2304), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 5), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 6), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2304), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2320), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 5), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 6), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2320), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2336), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 5), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 6), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2336), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2352), 70);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 2), 74);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 5), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 6), 57);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2352), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2368), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 1), 84);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 2), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 6), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2368), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2384), 87);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 1), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 3), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 5), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 6), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2384), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2400), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 3), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 4), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 5), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 6), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2400), 8), 12288);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2416), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 1), 78);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 2), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 3), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 4), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 5), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 6), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2416), 8), 12288);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2432), 87);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 1), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 6), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2432), 8), 2048);
  $M.0 := $store.i8($M.0, $add.ref(pnp_dev_table, 2448), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 7), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(pnp_dev_table, 2448), 8), 0);
  $M.0 := $store.ref($M.0, serial_pnp_driver, .str.37);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 8), pnp_dev_table);
  $M.0 := $store.i32($M.0, $add.ref(serial_pnp_driver, 16), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 24), serial_pnp_probe);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 32), serial_pnp_remove);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 48), serial_pnp_suspend);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 56), serial_pnp_resume);
  $M.0 := $store.ref($M.0, $add.ref(serial_pnp_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_pnp_driver, 64), 112), $0.ref);
  $M.10 := 0;
  call {:cexpr "skip_txen_test"} boogie_si_record_i32(0);
  $M.0 := $store.ref($M.0, irq_lists, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 224), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(irq_lists, 248), $0.ref);
  $M.0 := $store.i32($M.0, hash_mutex, 1);
  $M.0 := $store.i32($M.0, $add.ref(hash_mutex, 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(hash_mutex, 8), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(hash_mutex, 8), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hash_mutex, 8), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hash_mutex, 8), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(hash_mutex, 8), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(hash_mutex, 8), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(hash_mutex, 8), 24), 24), .str.57);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(hash_mutex, 8), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(hash_mutex, 8), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref(hash_mutex, 80), $add.ref(hash_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hash_mutex, 80), 8), $add.ref(hash_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref(hash_mutex, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hash_mutex, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(hash_mutex, 112), hash_mutex);
  $M.0 := $store.ref($M.0, $add.ref(hash_mutex, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hash_mutex, 120), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(hash_mutex, 120), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(hash_mutex, 120), 24), .str.58);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(hash_mutex, 120), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(hash_mutex, 120), 40), 0);
  $M.12 := 0;
  call {:cexpr "probe_rsa_count"} boogie_si_record_i32(0);
  $M.13 := $store.i64($M.13, probe_rsa, 0);
  $M.13 := $store.i64($M.13, $add.ref(probe_rsa, 8), 0);
  $M.13 := $store.i64($M.13, $add.ref(probe_rsa, 16), 0);
  $M.13 := $store.i64($M.13, $add.ref(probe_rsa, 24), 0);
  $M.0 := $store.ref($M.0, serial8250_isa_driver, serial8250_probe);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 8), serial8250_remove);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 24), serial8250_suspend);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 32), serial8250_resume);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 40), .str.44);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 16), __this_module);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_isa_driver, 40), 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_isa_driver, 160), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_isa_driver, 168), 0);
  $M.70 := $store.i8($M.70, __kstrtab_serial8250_resume_port, 115);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 1), 101);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 2), 114);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 3), 105);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 4), 97);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 5), 108);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 6), 56);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 7), 50);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 8), 53);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 9), 48);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 10), 95);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 11), 114);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 12), 101);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 13), 115);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 14), 117);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 15), 109);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 16), 101);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 17), 95);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 18), 112);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 19), 111);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 20), 114);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 21), 116);
  $M.70 := $store.i8($M.70, $add.ref(__kstrtab_serial8250_resume_port, 22), 0);
  $M.71 := $store.i8($M.71, __kstrtab_serial8250_suspend_port, 115);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 1), 101);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 2), 114);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 3), 105);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 4), 97);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 5), 108);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 6), 56);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 7), 50);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 8), 53);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 9), 48);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 10), 95);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 11), 115);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 12), 117);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 13), 115);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 14), 112);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 15), 101);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 16), 110);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 17), 100);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 18), 95);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 19), 112);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 20), 111);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 21), 114);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 22), 116);
  $M.71 := $store.i8($M.71, $add.ref(__kstrtab_serial8250_suspend_port, 23), 0);
  $M.72 := $store.i8($M.72, __kstrtab_serial8250_unregister_port, 115);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 1), 101);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 2), 114);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 3), 105);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 4), 97);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 5), 108);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 6), 56);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 7), 50);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 8), 53);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 9), 48);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 10), 95);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 11), 117);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 12), 110);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 13), 114);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 14), 101);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 15), 103);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 16), 105);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 17), 115);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 18), 116);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 19), 101);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 20), 114);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 21), 95);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 22), 112);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 23), 111);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 24), 114);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 25), 116);
  $M.72 := $store.i8($M.72, $add.ref(__kstrtab_serial8250_unregister_port, 26), 0);
  $M.73 := $store.i8($M.73, __kstrtab_serial8250_register_8250_port, 115);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 1), 101);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 2), 114);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 3), 105);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 4), 97);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 5), 108);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 6), 56);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 7), 50);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 8), 53);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 9), 48);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 10), 95);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 11), 114);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 12), 101);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 13), 103);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 14), 105);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 15), 115);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 16), 116);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 17), 101);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 18), 114);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 19), 95);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 20), 56);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 21), 50);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 22), 53);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 23), 48);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 24), 95);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 25), 112);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 26), 111);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 27), 114);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 28), 116);
  $M.73 := $store.i8($M.73, $add.ref(__kstrtab_serial8250_register_8250_port, 29), 0);
  $M.0 := $store.i32($M.0, serial_mutex, 1);
  $M.0 := $store.i32($M.0, $add.ref(serial_mutex, 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial_mutex, 8), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial_mutex, 8), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_mutex, 8), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_mutex, 8), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial_mutex, 8), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial_mutex, 8), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial_mutex, 8), 24), 24), .str.39);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial_mutex, 8), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial_mutex, 8), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial_mutex, 80), $add.ref(serial_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_mutex, 80), 8), $add.ref(serial_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref(serial_mutex, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_mutex, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial_mutex, 112), serial_mutex);
  $M.0 := $store.ref($M.0, $add.ref(serial_mutex, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_mutex, 120), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial_mutex, 120), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial_mutex, 120), 24), .str.40);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial_mutex, 120), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial_mutex, 120), 40), 0);
  $M.0 := $store.ref($M.0, serial8250_reg, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_reg, 8), .str.37);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_reg, 16), .str.38);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_reg, 24), 4);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_reg, 28), 64);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_reg, 32), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_reg, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_reg, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_reg, 56), $0.ref);
  $M.74 := $store.i32($M.74, old_serial_port, 0);
  $M.37 := $store.i32($M.37, $add.ref(old_serial_port, 4), 115200);
  $M.34 := $store.i32($M.34, $add.ref(old_serial_port, 8), 1016);
  $M.35 := $store.i32($M.35, $add.ref(old_serial_port, 12), 4);
  $M.38 := $store.i32($M.38, $add.ref(old_serial_port, 16), 268435648);
  $M.39 := $store.i8($M.39, $add.ref(old_serial_port, 20), 0);
  $M.41 := $store.i8($M.41, $add.ref(old_serial_port, 21), 0);
  $M.40 := $store.ref($M.40, $add.ref(old_serial_port, 24), $0.ref);
  $M.42 := $store.i16($M.42, $add.ref(old_serial_port, 32), 0);
  $M.36 := $store.i64($M.36, $add.ref(old_serial_port, 40), 0);
  $M.74 := $store.i32($M.74, $add.ref(old_serial_port, 48), 0);
  $M.37 := $store.i32($M.37, $add.ref($add.ref(old_serial_port, 48), 4), 115200);
  $M.34 := $store.i32($M.34, $add.ref($add.ref(old_serial_port, 48), 8), 760);
  $M.35 := $store.i32($M.35, $add.ref($add.ref(old_serial_port, 48), 12), 3);
  $M.38 := $store.i32($M.38, $add.ref($add.ref(old_serial_port, 48), 16), 268435648);
  $M.39 := $store.i8($M.39, $add.ref($add.ref(old_serial_port, 48), 20), 0);
  $M.41 := $store.i8($M.41, $add.ref($add.ref(old_serial_port, 48), 21), 0);
  $M.40 := $store.ref($M.40, $add.ref($add.ref(old_serial_port, 48), 24), $0.ref);
  $M.42 := $store.i16($M.42, $add.ref($add.ref(old_serial_port, 48), 32), 0);
  $M.36 := $store.i64($M.36, $add.ref($add.ref(old_serial_port, 48), 40), 0);
  $M.74 := $store.i32($M.74, $add.ref(old_serial_port, 96), 0);
  $M.37 := $store.i32($M.37, $add.ref($add.ref(old_serial_port, 96), 4), 115200);
  $M.34 := $store.i32($M.34, $add.ref($add.ref(old_serial_port, 96), 8), 1000);
  $M.35 := $store.i32($M.35, $add.ref($add.ref(old_serial_port, 96), 12), 4);
  $M.38 := $store.i32($M.38, $add.ref($add.ref(old_serial_port, 96), 16), 268435648);
  $M.39 := $store.i8($M.39, $add.ref($add.ref(old_serial_port, 96), 20), 0);
  $M.41 := $store.i8($M.41, $add.ref($add.ref(old_serial_port, 96), 21), 0);
  $M.40 := $store.ref($M.40, $add.ref($add.ref(old_serial_port, 96), 24), $0.ref);
  $M.42 := $store.i16($M.42, $add.ref($add.ref(old_serial_port, 96), 32), 0);
  $M.36 := $store.i64($M.36, $add.ref($add.ref(old_serial_port, 96), 40), 0);
  $M.74 := $store.i32($M.74, $add.ref(old_serial_port, 144), 0);
  $M.37 := $store.i32($M.37, $add.ref($add.ref(old_serial_port, 144), 4), 115200);
  $M.34 := $store.i32($M.34, $add.ref($add.ref(old_serial_port, 144), 8), 744);
  $M.35 := $store.i32($M.35, $add.ref($add.ref(old_serial_port, 144), 12), 3);
  $M.38 := $store.i32($M.38, $add.ref($add.ref(old_serial_port, 144), 16), 268435584);
  $M.39 := $store.i8($M.39, $add.ref($add.ref(old_serial_port, 144), 20), 0);
  $M.41 := $store.i8($M.41, $add.ref($add.ref(old_serial_port, 144), 21), 0);
  $M.40 := $store.ref($M.40, $add.ref($add.ref(old_serial_port, 144), 24), $0.ref);
  $M.42 := $store.i16($M.42, $add.ref($add.ref(old_serial_port, 144), 32), 0);
  $M.36 := $store.i64($M.36, $add.ref($add.ref(old_serial_port, 144), 40), 0);
  $M.28 := 1;
  call {:cexpr "share_irqs"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, serial8250_pops, serial8250_tx_empty);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 8), serial8250_set_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 16), serial8250_get_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 24), serial8250_stop_tx);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 32), serial8250_start_tx);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 64), serial8250_stop_rx);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 72), serial8250_enable_ms);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 80), serial8250_break_ctl);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 88), serial8250_startup);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 96), serial8250_shutdown);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 112), serial8250_set_termios);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 120), serial8250_set_ldisc);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 128), serial8250_pm);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 136), serial8250_type);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 144), serial8250_release_port);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 152), serial8250_request_port);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 160), serial8250_config_port);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 168), serial8250_verify_port);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 192), serial8250_put_poll_char);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_pops, 200), serial8250_get_poll_char);
  $M.5 := 4;
  call {:cexpr "nr_uarts"} boogie_si_record_i32(4);
  $M.75 := $store.i8($M.75, __kstrtab_serial8250_set_isa_configurator, 115);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 1), 101);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 2), 114);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 3), 105);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 4), 97);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 5), 108);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 6), 56);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 7), 50);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 8), 53);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 9), 48);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 10), 95);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 11), 115);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 12), 101);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 13), 116);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 14), 95);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 15), 105);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 16), 115);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 17), 97);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 18), 95);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 19), 99);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 20), 111);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 21), 110);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 22), 102);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 23), 105);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 24), 103);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 25), 117);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 26), 114);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 27), 97);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 28), 116);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 29), 111);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 30), 114);
  $M.75 := $store.i8($M.75, $add.ref(__kstrtab_serial8250_set_isa_configurator, 31), 0);
  $M.76 := $store.i8($M.76, __kstrtab_serial8250_do_pm, 115);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 1), 101);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 2), 114);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 3), 105);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 4), 97);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 5), 108);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 6), 56);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 7), 50);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 8), 53);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 9), 48);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 10), 95);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 11), 100);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 12), 111);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 13), 95);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 14), 112);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 15), 109);
  $M.76 := $store.i8($M.76, $add.ref(__kstrtab_serial8250_do_pm, 16), 0);
  $M.77 := $store.i8($M.77, __kstrtab_serial8250_do_set_termios, 115);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 1), 101);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 2), 114);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 3), 105);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 4), 97);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 5), 108);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 6), 56);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 7), 50);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 8), 53);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 9), 48);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 10), 95);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 11), 100);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 12), 111);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 13), 95);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 14), 115);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 15), 101);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 16), 116);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 17), 95);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 18), 116);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 19), 101);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 20), 114);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 21), 109);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 22), 105);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 23), 111);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 24), 115);
  $M.77 := $store.i8($M.77, $add.ref(__kstrtab_serial8250_do_set_termios, 25), 0);
  $M.78 := $store.i8($M.78, __kstrtab_serial8250_handle_irq, 115);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 1), 101);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 2), 114);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 3), 105);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 4), 97);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 5), 108);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 6), 56);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 7), 50);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 8), 53);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 9), 48);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 10), 95);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 11), 104);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 12), 97);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 13), 110);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 14), 100);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 15), 108);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 16), 101);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 17), 95);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 18), 105);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 19), 114);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 20), 113);
  $M.78 := $store.i8($M.78, $add.ref(__kstrtab_serial8250_handle_irq, 21), 0);
  $M.79 := $store.i8($M.79, __kstrtab_serial8250_modem_status, 115);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 1), 101);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 2), 114);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 3), 105);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 4), 97);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 5), 108);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 6), 56);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 7), 50);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 8), 53);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 9), 48);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 10), 95);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 11), 109);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 12), 111);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 13), 100);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 14), 101);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 15), 109);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 16), 95);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 17), 115);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 18), 116);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 19), 97);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 20), 116);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 21), 117);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 22), 115);
  $M.79 := $store.i8($M.79, $add.ref(__kstrtab_serial8250_modem_status, 23), 0);
  $M.80 := $store.i8($M.80, __kstrtab_serial8250_tx_chars, 115);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 1), 101);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 2), 114);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 3), 105);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 4), 97);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 5), 108);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 6), 56);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 7), 50);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 8), 53);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 9), 48);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 10), 95);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 11), 116);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 12), 120);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 13), 95);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 14), 99);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 15), 104);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 16), 97);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 17), 114);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 18), 115);
  $M.80 := $store.i8($M.80, $add.ref(__kstrtab_serial8250_tx_chars, 19), 0);
  $M.81 := $store.i8($M.81, __kstrtab_serial8250_rx_chars, 115);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 1), 101);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 2), 114);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 3), 105);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 4), 97);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 5), 108);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 6), 56);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 7), 50);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 8), 53);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 9), 48);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 10), 95);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 11), 114);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 12), 120);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 13), 95);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 14), 99);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 15), 104);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 16), 97);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 17), 114);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 18), 115);
  $M.81 := $store.i8($M.81, $add.ref(__kstrtab_serial8250_rx_chars, 19), 0);
  $M.11 := $store.ref($M.11, uart_config, .str.9);
  $M.6 := $store.i16($M.6, $add.ref(uart_config, 8), 1);
  $M.7 := $store.i16($M.7, $add.ref(uart_config, 10), 1);
  $M.1 := $store.i8($M.1, $add.ref(uart_config, 12), 0);
  $M.8 := $store.i32($M.8, $add.ref(uart_config, 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 24), .str.3);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 24), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 24), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 24), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 24), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 48), .str.10);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 48), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 48), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 48), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 48), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 72), .str.11);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 72), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 72), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 72), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 72), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 96), .str.12);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 96), 8), 16);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 96), 10), 16);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 96), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 96), 16), 256);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 120), .str.13);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 120), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 120), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 120), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 120), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 144), .str.14);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 144), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 144), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 144), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 144), 16), 1792);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 168), .str.15);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 168), 8), 32);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 168), 10), 16);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 168), 12), 65);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 168), 16), 1792);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 192), .str.16);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 192), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 192), 10), 64);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 192), 12), $sub.i8(0, 95));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 192), 16), 3328);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 216), .str.17);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 216), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 216), 10), 1);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 216), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 216), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 240), .str.18);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 240), 8), 128);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 240), 10), 128);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 240), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 240), 16), 1280);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 264), .str.19);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 264), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 264), 10), 32);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 264), 12), 97);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 264), 16), 1792);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 288), .str.20);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 288), 8), 128);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 288), 10), 128);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 288), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 288), 16), 1792);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 312), .str.21);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 312), 8), 2048);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 312), 10), 2048);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 312), 12), $sub.i8(0, 63));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 312), 16), 256);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 336), .str.22);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 336), 8), 16);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 336), 10), 16);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 336), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 336), 16), 264);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 360), .str.23);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 360), 8), 32);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 360), 10), 32);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 360), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 360), 16), 12544);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 384), $0.ref);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 384), 8), 0);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 384), 10), 0);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 384), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 384), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 408), .str.24);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 408), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 408), 10), 64);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 408), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 408), 16), 256);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 432), .str.25);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 432), 8), 16);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 432), 10), 16);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 432), 12), 1);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 432), 16), 2304);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 456), .str.26);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 456), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 456), 10), 64);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 456), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 456), 16), 2304);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 480), .str.27);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 480), 8), 32);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 480), 10), 8);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 480), 12), 81);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 480), 16), 8448);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 504), .str.28);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 504), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 504), 10), 64);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 504), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 504), 16), 3840);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 528), .str.29);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 528), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 528), 10), 32);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 528), 12), 9);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 528), 16), 256);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 552), .str.30);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 552), 8), 0);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 552), 10), 0);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 552), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 552), 16), 0);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 576), .str.31);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 576), 8), 256);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 576), 10), 256);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 576), 12), $sub.i8(0, 15));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 576), 16), 3840);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 600), .str.32);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 600), 8), 1);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 600), 10), 1024);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 600), 12), 0);
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 600), 16), 16384);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 624), .str.33);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 624), 8), 32);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 624), 10), 32);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 624), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 624), 16), 2304);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 648), .str.34);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 648), 8), 64);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 648), 10), 64);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 648), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 648), 16), 2304);
  $M.11 := $store.ref($M.11, $add.ref(uart_config, 672), .str.35);
  $M.6 := $store.i16($M.6, $add.ref($add.ref(uart_config, 672), 8), 128);
  $M.7 := $store.i16($M.7, $add.ref($add.ref(uart_config, 672), 10), 128);
  $M.1 := $store.i8($M.1, $add.ref($add.ref(uart_config, 672), 12), $sub.i8(0, 127));
  $M.8 := $store.i32($M.8, $add.ref($add.ref(uart_config, 672), 16), 2304);
  $M.60 := 0;
  call {:cexpr "ldv_retval_6"} boogie_si_record_i32(0);
  $M.62 := 0;
  call {:cexpr "ldv_retval_4"} boogie_si_record_i32(0);
  $M.61 := 0;
  call {:cexpr "ldv_retval_5"} boogie_si_record_i32(0);
  $M.82 := $store.i8($M.82, __mod_pnp__pnp_dev_table_device_table, 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 1), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 2), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 3), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 4), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 5), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 6), 0);
  $M.82 := $store.i8($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 7), 0);
  $M.82 := $store.i64($M.82, $add.ref(__mod_pnp__pnp_dev_table_device_table, 8), 0);
  $M.57 := 0;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32(0);
  $M.55 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.56 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.54 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.9 := $0.ref;
  $M.4 := $0.ref;
  $M.0 := $store.i32($M.0, serial8250_ports, 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 4), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 8), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 24), 40), 0);
  $M.0 := $store.i64($M.0, $add.ref(serial8250_ports, 72), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 128), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 136), 0);
  $M.0 := $store.i64($M.0, $add.ref(serial8250_ports, 144), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 152), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 156), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 160), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 161), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 162), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 163), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 164), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 168), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 176), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 184), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 20), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 28), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 32), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 36), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 184), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 232), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref(serial8250_ports, 240), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 248), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 252), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 256), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 260), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 264), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 272), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 276), 0);
  $M.0 := $store.i64($M.0, $add.ref(serial8250_ports, 280), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 288), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 296), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 297), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 298), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 299), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 299), 1), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 312), 8), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 312), 16), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 312), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 312), 32), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 312), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 312), 48), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 312), 52), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 312), 56), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 312), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 64), 15), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 312), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 80), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 312), 80), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 80), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 80), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 312), 80), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 440), 8), $0.ref);
  $M.0 := $store.i16($M.0, $add.ref(serial8250_ports, 456), 0);
  $M.0 := $store.i16($M.0, $add.ref(serial8250_ports, 458), 0);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 460), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 464), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 465), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 466), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 467), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 468), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 469), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 470), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 471), 0);
  $M.0 := $store.i8($M.0, $add.ref(serial8250_ports, 472), 0);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 480), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 488), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(serial8250_ports, 496), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 504), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 24), 40), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 504), 72), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 128), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 136), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 504), 144), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 152), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 156), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 160), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 161), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 162), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 163), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 164), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 168), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 176), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 184), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 20), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 28), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 32), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 36), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 184), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 232), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 504), 240), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 248), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 252), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 256), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 260), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 264), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 272), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 276), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 504), 280), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 288), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 296), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 297), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 298), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 299), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 299), 1), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 8), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 16), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 32), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 48), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 52), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 56), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 64), 15), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 504), 312), 80), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 504), 440), 8), $0.ref);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 504), 456), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 504), 458), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 504), 460), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 464), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 465), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 466), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 467), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 468), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 469), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 470), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 471), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 504), 472), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 480), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 488), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 504), 496), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 1008), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 24), 40), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1008), 72), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 128), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 136), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1008), 144), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 152), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 156), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 160), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 161), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 162), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 163), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 164), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 168), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 176), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 184), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 20), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 28), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 32), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 36), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 184), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 232), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1008), 240), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 248), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 252), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 256), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 260), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 264), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 272), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 276), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1008), 280), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 288), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 296), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 297), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 298), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 299), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 299), 1), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 8), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 16), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 32), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 48), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 52), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 56), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 64), 15), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1008), 312), 80), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1008), 440), 8), $0.ref);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 1008), 456), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 1008), 458), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1008), 460), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 464), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 465), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 466), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 467), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 468), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 469), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 470), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 471), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1008), 472), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 480), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 488), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1008), 496), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(serial8250_ports, 1512), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 24), 40), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1512), 72), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 128), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 136), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1512), 144), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 152), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 156), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 160), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 161), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 162), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 163), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 164), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 168), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 176), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 184), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 20), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 28), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 32), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 36), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 184), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 232), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1512), 240), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 248), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 252), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 256), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 260), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 264), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 272), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 276), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(serial8250_ports, 1512), 280), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 288), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 296), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 297), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 298), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 299), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 299), 1), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 8), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 16), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 32), $0.ref);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 48), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 52), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 56), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 64), 15), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref($add.ref(serial8250_ports, 1512), 312), 80), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(serial8250_ports, 1512), 440), 8), $0.ref);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 1512), 456), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(serial8250_ports, 1512), 458), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(serial8250_ports, 1512), 460), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 464), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 465), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 466), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 467), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 468), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 469), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 470), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 471), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(serial8250_ports, 1512), 472), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 480), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 488), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(serial8250_ports, 1512), 496), $0.ref);
  $M.47 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  $M.19 := 0;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32(0);
  $M.48 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.17 := 0;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32(0);
  $M.49 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.22 := $0.ref;
  $M.15 := 0;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32(0);
  $M.51 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  $M.44 := $0.ref;
  $M.21 := 0;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32(0);
  $M.58 := $0.ref;
  $M.26 := $0.ref;
  $M.45 := $0.ref;
  $M.27 := $0.ref;
  $M.52 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.53 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  $M.50 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.24 := $0.ref;
  $M.25 := $0.ref;
  $M.2 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  $M.83 := $p2i.ref.i64(serial8250_release_dma);
  $M.84 := __kstrtab_serial8250_release_dma;
  $M.85 := $p2i.ref.i64(serial8250_request_dma);
  $M.86 := __kstrtab_serial8250_request_dma;
  $M.87 := $p2i.ref.i64(serial8250_rx_dma);
  $M.88 := __kstrtab_serial8250_rx_dma;
  $M.89 := $p2i.ref.i64(serial8250_tx_dma);
  $M.90 := __kstrtab_serial8250_tx_dma;
  $M.91 := $p2i.ref.i64(serial8250_resume_port);
  $M.92 := __kstrtab_serial8250_resume_port;
  $M.93 := $p2i.ref.i64(serial8250_suspend_port);
  $M.94 := __kstrtab_serial8250_suspend_port;
  $M.95 := $p2i.ref.i64(serial8250_unregister_port);
  $M.96 := __kstrtab_serial8250_unregister_port;
  $M.97 := $p2i.ref.i64(serial8250_register_8250_port);
  $M.98 := __kstrtab_serial8250_register_8250_port;
  $M.99 := $p2i.ref.i64(serial8250_set_isa_configurator);
  $M.100 := __kstrtab_serial8250_set_isa_configurator;
  $M.101 := $p2i.ref.i64(serial8250_do_pm);
  $M.102 := __kstrtab_serial8250_do_pm;
  $M.103 := $p2i.ref.i64(serial8250_do_set_termios);
  $M.104 := __kstrtab_serial8250_do_set_termios;
  $M.105 := $p2i.ref.i64(serial8250_handle_irq);
  $M.106 := __kstrtab_serial8250_handle_irq;
  $M.107 := $p2i.ref.i64(serial8250_modem_status);
  $M.108 := __kstrtab_serial8250_modem_status;
  $M.109 := $p2i.ref.i64(serial8250_tx_chars);
  $M.110 := __kstrtab_serial8250_tx_chars;
  $M.111 := $p2i.ref.i64(serial8250_rx_chars);
  $M.112 := __kstrtab_serial8250_rx_chars;
  $M.0 := $store.i8($M.0, .str.3, 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 1), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 2), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 3), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 4), 0);
  $M.0 := $store.i8($M.0, .str.9, 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 1), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 2), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 3), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 4), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 5), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 6), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 7), 0);
  $M.0 := $store.i8($M.0, .str.10, 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 1), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 2), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 3), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.10, 5), 0);
  $M.0 := $store.i8($M.0, .str.11, 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.11, 1), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.11, 2), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.11, 3), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.11, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.11, 5), 0);
  $M.0 := $store.i8($M.0, .str.12, 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 1), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 2), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 3), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 4), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 5), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.12, 6), 0);
  $M.0 := $store.i8($M.0, .str.13, 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 3), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 4), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 5), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.13, 6), 0);
  $M.0 := $store.i8($M.0, .str.14, 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 1), 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 4), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.14, 7), 0);
  $M.0 := $store.i8($M.0, .str.15, 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 1), 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 4), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 7), 86);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 8), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 9), 0);
  $M.0 := $store.i8($M.0, .str.16, 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 1), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 4), 55);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 7), 0);
  $M.0 := $store.i8($M.0, .str.17, 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 1), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 2), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 3), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 6), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 7), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.17, 8), 0);
  $M.0 := $store.i8($M.0, .str.18, 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 1), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 3), 57);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 4), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 6), 47);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 7), 57);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 8), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 9), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.18, 10), 0);
  $M.0 := $store.i8($M.0, .str.19, 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 1), 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 4), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 6), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.19, 7), 0);
  $M.0 := $store.i8($M.0, .str.20, 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 1), 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 4), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.20, 7), 0);
  $M.0 := $store.i8($M.0, .str.21, 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.21, 1), 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.21, 2), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.21, 3), 0);
  $M.0 := $store.i8($M.0, .str.22, 78);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 1), 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 3), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 4), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 7), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.22, 8), 0);
  $M.0 := $store.i8($M.0, .str.23, 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 1), 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 2), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 4), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.23, 6), 0);
  $M.0 := $store.i8($M.0, .str.24, 79);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 1), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 2), 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 3), 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 4), 79);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 5), 78);
  $M.0 := $store.i8($M.0, $add.ref(.str.24, 6), 0);
  $M.0 := $store.i8($M.0, .str.25, 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.25, 1), 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.25, 2), 55);
  $M.0 := $store.i8($M.0, $add.ref(.str.25, 3), 0);
  $M.0 := $store.i8($M.0, .str.26, 85);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 1), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 3), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 4), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 5), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 6), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 7), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 8), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.26, 9), 0);
  $M.0 := $store.i8($M.0, .str.27, 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 1), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 2), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 3), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 4), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 5), 0);
  $M.0 := $store.i8($M.0, .str.28, 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 1), 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 3), 55);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 4), 68);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 5), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 6), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 7), 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.28, 8), 0);
  $M.0 := $store.i8($M.0, .str.29, 76);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 1), 80);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 2), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 3), 51);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 4), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 5), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 6), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 7), 0);
  $M.0 := $store.i8($M.0, .str.30, 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 1), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 2), 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 3), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 4), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 5), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 7), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.30, 8), 0);
  $M.0 := $store.i8($M.0, .str.31, 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 1), 82);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 3), 55);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 4), 86);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 5), 51);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 6), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 7), 88);
  $M.0 := $store.i8($M.0, $add.ref(.str.31, 8), 0);
  $M.0 := $store.i8($M.0, .str.32, 84);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 1), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 2), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 3), 77);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 4), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 5), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 6), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 7), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 8), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.32, 9), 0);
  $M.0 := $store.i8($M.0, .str.33, 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 2), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 4), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 5), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 6), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 7), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 8), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 9), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 10), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 11), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 12), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 13), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 14), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 15), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 16), 79);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 17), 51);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 18), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.33, 19), 0);
  $M.0 := $store.i8($M.0, .str.34, 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 2), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 4), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 5), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 6), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 7), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 8), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 9), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 10), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 11), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 12), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 13), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 14), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 15), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 16), 79);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 17), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 18), 52);
  $M.0 := $store.i8($M.0, $add.ref(.str.34, 19), 0);
  $M.0 := $store.i8($M.0, .str.35, 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 2), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 4), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 5), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 6), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 7), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 8), 54);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 9), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 10), 53);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 11), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 12), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 13), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 14), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 15), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 16), 79);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 17), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 18), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 19), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.35, 20), 0);
  $M.113 := $store.i8($M.113, .str.59, 77);
  $M.113 := $store.i8($M.113, $add.ref(.str.59, 1), 79);
  $M.113 := $store.i8($M.113, $add.ref(.str.59, 2), 68);
  $M.113 := $store.i8($M.113, $add.ref(.str.59, 3), 69);
  $M.113 := $store.i8($M.113, $add.ref(.str.59, 4), 77);
  $M.113 := $store.i8($M.113, $add.ref(.str.59, 5), 0);
  $M.113 := $store.i8($M.113, .str.60, 77);
  $M.113 := $store.i8($M.113, $add.ref(.str.60, 1), 111);
  $M.113 := $store.i8($M.113, $add.ref(.str.60, 2), 100);
  $M.113 := $store.i8($M.113, $add.ref(.str.60, 3), 101);
  $M.113 := $store.i8($M.113, $add.ref(.str.60, 4), 109);
  $M.113 := $store.i8($M.113, $add.ref(.str.60, 5), 0);
  $M.113 := $store.i8($M.113, .str.61, 109);
  $M.113 := $store.i8($M.113, $add.ref(.str.61, 1), 111);
  $M.113 := $store.i8($M.113, $add.ref(.str.61, 2), 100);
  $M.113 := $store.i8($M.113, $add.ref(.str.61, 3), 101);
  $M.113 := $store.i8($M.113, $add.ref(.str.61, 4), 109);
  $M.113 := $store.i8($M.113, $add.ref(.str.61, 5), 0);
  $M.113 := $store.i8($M.113, .str.62, 70);
  $M.113 := $store.i8($M.113, $add.ref(.str.62, 1), 65);
  $M.113 := $store.i8($M.113, $add.ref(.str.62, 2), 88);
  $M.113 := $store.i8($M.113, $add.ref(.str.62, 3), 0);
  $M.113 := $store.i8($M.113, .str.63, 70);
  $M.113 := $store.i8($M.113, $add.ref(.str.63, 1), 97);
  $M.113 := $store.i8($M.113, $add.ref(.str.63, 2), 120);
  $M.113 := $store.i8($M.113, $add.ref(.str.63, 3), 0);
  $M.113 := $store.i8($M.113, .str.64, 102);
  $M.113 := $store.i8($M.113, $add.ref(.str.64, 1), 97);
  $M.113 := $store.i8($M.113, $add.ref(.str.64, 2), 120);
  $M.113 := $store.i8($M.113, $add.ref(.str.64, 3), 0);
  $M.113 := $store.i8($M.113, .str.65, 53);
  $M.113 := $store.i8($M.113, $add.ref(.str.65, 1), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.65, 2), 75);
  $M.113 := $store.i8($M.113, $add.ref(.str.65, 3), 0);
  $M.113 := $store.i8($M.113, .str.66, 53);
  $M.113 := $store.i8($M.113, $add.ref(.str.66, 1), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.66, 2), 107);
  $M.113 := $store.i8($M.113, $add.ref(.str.66, 3), 0);
  $M.113 := $store.i8($M.113, .str.67, 75);
  $M.113 := $store.i8($M.113, $add.ref(.str.67, 1), 53);
  $M.113 := $store.i8($M.113, $add.ref(.str.67, 2), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.67, 3), 0);
  $M.113 := $store.i8($M.113, .str.68, 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.68, 1), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.68, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.68, 3), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.68, 4), 0);
  $M.113 := $store.i8($M.113, .str.69, 50);
  $M.113 := $store.i8($M.113, $add.ref(.str.69, 1), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.69, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.69, 3), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.69, 4), 0);
  $M.113 := $store.i8($M.113, .str.70, 49);
  $M.113 := $store.i8($M.113, $add.ref(.str.70, 1), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.70, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.70, 3), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.70, 4), 0);
  $M.113 := $store.i8($M.113, .str.71, 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 1), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 2), 44);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 3), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.71, 6), 0);
  $M.113 := $store.i8($M.113, .str.72, 50);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 1), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 2), 44);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 3), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.72, 6), 0);
  $M.113 := $store.i8($M.113, .str.73, 49);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 1), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 2), 44);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 3), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.73, 6), 0);
  $M.113 := $store.i8($M.113, .str.74, 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 1), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 3), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.74, 6), 0);
  $M.113 := $store.i8($M.113, .str.75, 50);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 1), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 3), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.75, 6), 0);
  $M.113 := $store.i8($M.113, .str.76, 49);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 1), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 2), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 3), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 5), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.76, 6), 0);
  $M.113 := $store.i8($M.113, .str.77, 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.77, 1), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.77, 2), 54);
  $M.113 := $store.i8($M.113, $add.ref(.str.77, 3), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.77, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.77, 5), 0);
  $M.113 := $store.i8($M.113, .str.78, 50);
  $M.113 := $store.i8($M.113, $add.ref(.str.78, 1), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.78, 2), 56);
  $M.113 := $store.i8($M.113, $add.ref(.str.78, 3), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.78, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.78, 5), 0);
  $M.113 := $store.i8($M.113, .str.79, 49);
  $M.113 := $store.i8($M.113, $add.ref(.str.79, 1), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.79, 2), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.79, 3), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.79, 4), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.79, 5), 0);
  $M.113 := $store.i8($M.113, .str.80, 86);
  $M.113 := $store.i8($M.113, $add.ref(.str.80, 1), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.80, 2), 57);
  $M.113 := $store.i8($M.113, $add.ref(.str.80, 3), 48);
  $M.113 := $store.i8($M.113, $add.ref(.str.80, 4), 0);
  $M.113 := $store.i8($M.113, .str.81, 86);
  $M.113 := $store.i8($M.113, $add.ref(.str.81, 1), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.81, 2), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.81, 3), 52);
  $M.113 := $store.i8($M.113, $add.ref(.str.81, 4), 0);
  $M.113 := $store.i8($M.113, .str.82, 86);
  $M.113 := $store.i8($M.113, $add.ref(.str.82, 1), 46);
  $M.113 := $store.i8($M.113, $add.ref(.str.82, 2), 51);
  $M.113 := $store.i8($M.113, $add.ref(.str.82, 3), 50);
  $M.113 := $store.i8($M.113, $add.ref(.str.82, 4), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 531126));
procedure  devirtbounce(funcPtr: ref, arg: ref, arg1: i32, arg2: i32)
{
  var $p0: ref;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i6 := $eq.ref(serial8250_pm, $p0);
  assume {:branchcond $i6} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i1 == 1);
  call serial8250_do_pm(arg, arg1, arg2);
  $exn := false;
  return;
$bb3:
  assume ($i2 == 1);
  call hub6_serial_out(arg, arg1, arg2);
  $exn := false;
  return;
$bb4:
  assume ($i3 == 1);
  call mem_serial_out(arg, arg1, arg2);
  $exn := false;
  return;
$bb5:
  assume ($i4 == 1);
  call mem32_serial_out(arg, arg1, arg2);
  $exn := false;
  return;
$bb6:
  assume ($i5 == 1);
  call io_serial_out(arg, arg1, arg2);
  $exn := false;
  return;
$bb7:
  assume ($i6 == 1);
  call serial8250_pm(arg, arg1, arg2);
  $exn := false;
  return;
$bb8:
  assume !(($i1 == 1));
  assume false;
$bb9:
  assume !(($i2 == 1));
  $i1 := $eq.ref(serial8250_do_pm, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i3 == 1));
  $i2 := $eq.ref(hub6_serial_out, $p0);
  assume {:branchcond $i2} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i4 == 1));
  $i3 := $eq.ref(mem_serial_out, $p0);
  assume {:branchcond $i3} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i5 == 1));
  $i4 := $eq.ref(mem32_serial_out, $p0);
  assume {:branchcond $i4} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i6 == 1));
  $i5 := $eq.ref(io_serial_out, $p0);
  assume {:branchcond $i5} true;
  goto $bb6, $bb12;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 532158));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i19 := $eq.ref(serial_pnp_suspend, $p0);
  assume {:branchcond $i19} true;
  goto $bb9, $bb17;
$bb2:
  assume ($i12 == 1);
  call $i1 := serial8250_handle_irq(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i13 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call $i3 := serial8250_rx_dma($p2, arg1);
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume ($i14 == 1);
  call $i4 := hub6_serial_in(arg, arg1);
  $r := $i4;
  $exn := false;
  return;
$bb5:
  assume ($i15 == 1);
  call $i5 := mem_serial_in(arg, arg1);
  $r := $i5;
  $exn := false;
  return;
$bb6:
  assume ($i16 == 1);
  call $i6 := mem32_serial_in(arg, arg1);
  $r := $i6;
  $exn := false;
  return;
$bb7:
  assume ($i17 == 1);
  call $i7 := io_serial_in(arg, arg1);
  $r := $i7;
  $exn := false;
  return;
$bb8:
  assume ($i18 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call $i9 := serial8250_suspend($p8, arg1);
  $r := $i9;
  $exn := false;
  return;
$bb9:
  assume ($i19 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call $i11 := serial_pnp_suspend($p10, arg1);
  $r := $i11;
  $exn := false;
  return;
$bb10:
  assume !(($i12 == 1));
  assume false;
$bb11:
  assume !(($i13 == 1));
  $i12 := $eq.ref(serial8250_handle_irq, $p0);
  assume {:branchcond $i12} true;
  goto $bb2, $bb10;
$bb12:
  assume !(($i14 == 1));
  $i13 := $eq.ref(serial8250_rx_dma, $p0);
  assume {:branchcond $i13} true;
  goto $bb3, $bb11;
$bb13:
  assume !(($i15 == 1));
  $i14 := $eq.ref(hub6_serial_in, $p0);
  assume {:branchcond $i14} true;
  goto $bb4, $bb12;
$bb14:
  assume !(($i16 == 1));
  $i15 := $eq.ref(mem_serial_in, $p0);
  assume {:branchcond $i15} true;
  goto $bb5, $bb13;
$bb15:
  assume !(($i17 == 1));
  $i16 := $eq.ref(mem32_serial_in, $p0);
  assume {:branchcond $i16} true;
  goto $bb6, $bb14;
$bb16:
  assume !(($i18 == 1));
  $i17 := $eq.ref(io_serial_in, $p0);
  assume {:branchcond $i17} true;
  goto $bb7, $bb15;
$bb17:
  assume !(($i19 == 1));
  $i18 := $eq.ref(serial8250_suspend, $p0);
  assume {:branchcond $i18} true;
  goto $bb8, $bb16;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 533190));
procedure  devirtbounce.2(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i20 := $eq.ref(serial_pnp_remove, $p0);
  assume {:branchcond $i20} true;
  goto $bb14, $bb27;
$bb2:
  assume ($i8 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call serial8250_clear_and_reinit_fifos($p1);
  $exn := false;
  return;
$bb3:
  assume ($i9 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call serial8250_tx_chars($p2);
  $exn := false;
  return;
$bb4:
  assume ($i10 == 1);
  call serial8250_stop_tx(arg);
  $exn := false;
  return;
$bb5:
  assume ($i11 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call __dma_rx_complete($p3);
  $exn := false;
  return;
$bb6:
  assume ($i12 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call serial8250_set_isa_configurator($p4);
  $exn := false;
  return;
$bb7:
  assume ($i13 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call __dma_tx_complete($p5);
  $exn := false;
  return;
$bb8:
  assume ($i14 == 1);
  $p6 := $bitcast.ref.ref(arg);
  call serial8250_release_dma($p6);
  $exn := false;
  return;
$bb9:
  assume ($i15 == 1);
  call serial8250_start_tx(arg);
  $exn := false;
  return;
$bb10:
  assume ($i16 == 1);
  call serial8250_stop_rx(arg);
  $exn := false;
  return;
$bb11:
  assume ($i17 == 1);
  call serial8250_enable_ms(arg);
  $exn := false;
  return;
$bb12:
  assume ($i18 == 1);
  call serial8250_shutdown(arg);
  $exn := false;
  return;
$bb13:
  assume ($i19 == 1);
  call serial8250_release_port(arg);
  $exn := false;
  return;
$bb14:
  assume ($i20 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call serial_pnp_remove($p7);
  $exn := false;
  return;
$bb15:
  assume !(($i8 == 1));
  assume false;
$bb16:
  assume !(($i9 == 1));
  $i8 := $eq.ref(serial8250_clear_and_reinit_fifos, $p0);
  assume {:branchcond $i8} true;
  goto $bb2, $bb15;
$bb17:
  assume !(($i10 == 1));
  $i9 := $eq.ref(serial8250_tx_chars, $p0);
  assume {:branchcond $i9} true;
  goto $bb3, $bb16;
$bb18:
  assume !(($i11 == 1));
  $i10 := $eq.ref(serial8250_stop_tx, $p0);
  assume {:branchcond $i10} true;
  goto $bb4, $bb17;
$bb19:
  assume !(($i12 == 1));
  $i11 := $eq.ref(__dma_rx_complete, $p0);
  assume {:branchcond $i11} true;
  goto $bb5, $bb18;
$bb20:
  assume !(($i13 == 1));
  $i12 := $eq.ref(serial8250_set_isa_configurator, $p0);
  assume {:branchcond $i12} true;
  goto $bb6, $bb19;
$bb21:
  assume !(($i14 == 1));
  $i13 := $eq.ref(__dma_tx_complete, $p0);
  assume {:branchcond $i13} true;
  goto $bb7, $bb20;
$bb22:
  assume !(($i15 == 1));
  $i14 := $eq.ref(serial8250_release_dma, $p0);
  assume {:branchcond $i14} true;
  goto $bb8, $bb21;
$bb23:
  assume !(($i16 == 1));
  $i15 := $eq.ref(serial8250_start_tx, $p0);
  assume {:branchcond $i15} true;
  goto $bb9, $bb22;
$bb24:
  assume !(($i17 == 1));
  $i16 := $eq.ref(serial8250_stop_rx, $p0);
  assume {:branchcond $i16} true;
  goto $bb10, $bb23;
$bb25:
  assume !(($i18 == 1));
  $i17 := $eq.ref(serial8250_enable_ms, $p0);
  assume {:branchcond $i17} true;
  goto $bb11, $bb24;
$bb26:
  assume !(($i19 == 1));
  $i18 := $eq.ref(serial8250_shutdown, $p0);
  assume {:branchcond $i18} true;
  goto $bb12, $bb25;
$bb27:
  assume !(($i20 == 1));
  $i19 := $eq.ref(serial8250_release_port, $p0);
  assume {:branchcond $i19} true;
  goto $bb13, $bb26;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 534222));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 535254));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: i32, arg4: i64, arg5: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 536286));
procedure  devirtbounce.5(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i48 := $eq.ref(serial_pnp_resume, $p0);
  assume {:branchcond $i48} true;
  goto $bb17, $bb33;
$bb2:
  assume ($i33 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := serial8250_modem_status($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i34 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := serial8250_register_8250_port($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i35 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := default_serial_dl_read($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i36 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := serial8250_default_handle_irq($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i37 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := serial8250_tx_dma($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i38 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := serial8250_request_dma($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i39 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := serial8250_tx_empty($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume ($i40 == 1);
  $p15 := $bitcast.ref.ref(arg);
  call $i16 := serial8250_get_mctrl($p15);
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume ($i41 == 1);
  $p17 := $bitcast.ref.ref(arg);
  call $i18 := serial8250_startup($p17);
  $r := $i18;
  $exn := false;
  return;
$bb11:
  assume ($i42 == 1);
  $p19 := $bitcast.ref.ref(arg);
  call $i20 := serial8250_request_port($p19);
  $r := $i20;
  $exn := false;
  return;
$bb12:
  assume ($i43 == 1);
  $p21 := $bitcast.ref.ref(arg);
  call $i22 := serial8250_get_poll_char($p21);
  $r := $i22;
  $exn := false;
  return;
$bb13:
  assume ($i44 == 1);
  $p23 := $bitcast.ref.ref(arg);
  call $i24 := exar_handle_irq($p23);
  $r := $i24;
  $exn := false;
  return;
$bb14:
  assume ($i45 == 1);
  $p25 := $bitcast.ref.ref(arg);
  call $i26 := serial8250_probe($p25);
  $r := $i26;
  $exn := false;
  return;
$bb15:
  assume ($i46 == 1);
  $p27 := $bitcast.ref.ref(arg);
  call $i28 := serial8250_remove($p27);
  $r := $i28;
  $exn := false;
  return;
$bb16:
  assume ($i47 == 1);
  $p29 := $bitcast.ref.ref(arg);
  call $i30 := serial8250_resume($p29);
  $r := $i30;
  $exn := false;
  return;
$bb17:
  assume ($i48 == 1);
  $p31 := $bitcast.ref.ref(arg);
  call $i32 := serial_pnp_resume($p31);
  $r := $i32;
  $exn := false;
  return;
$bb18:
  assume !(($i33 == 1));
  assume false;
$bb19:
  assume !(($i34 == 1));
  $i33 := $eq.ref(serial8250_modem_status, $p0);
  assume {:branchcond $i33} true;
  goto $bb2, $bb18;
$bb20:
  assume !(($i35 == 1));
  $i34 := $eq.ref(serial8250_register_8250_port, $p0);
  assume {:branchcond $i34} true;
  goto $bb3, $bb19;
$bb21:
  assume !(($i36 == 1));
  $i35 := $eq.ref(default_serial_dl_read, $p0);
  assume {:branchcond $i35} true;
  goto $bb4, $bb20;
$bb22:
  assume !(($i37 == 1));
  $i36 := $eq.ref(serial8250_default_handle_irq, $p0);
  assume {:branchcond $i36} true;
  goto $bb5, $bb21;
$bb23:
  assume !(($i38 == 1));
  $i37 := $eq.ref(serial8250_tx_dma, $p0);
  assume {:branchcond $i37} true;
  goto $bb6, $bb22;
$bb24:
  assume !(($i39 == 1));
  $i38 := $eq.ref(serial8250_request_dma, $p0);
  assume {:branchcond $i38} true;
  goto $bb7, $bb23;
$bb25:
  assume !(($i40 == 1));
  $i39 := $eq.ref(serial8250_tx_empty, $p0);
  assume {:branchcond $i39} true;
  goto $bb8, $bb24;
$bb26:
  assume !(($i41 == 1));
  $i40 := $eq.ref(serial8250_get_mctrl, $p0);
  assume {:branchcond $i40} true;
  goto $bb9, $bb25;
$bb27:
  assume !(($i42 == 1));
  $i41 := $eq.ref(serial8250_startup, $p0);
  assume {:branchcond $i41} true;
  goto $bb10, $bb26;
$bb28:
  assume !(($i43 == 1));
  $i42 := $eq.ref(serial8250_request_port, $p0);
  assume {:branchcond $i42} true;
  goto $bb11, $bb27;
$bb29:
  assume !(($i44 == 1));
  $i43 := $eq.ref(serial8250_get_poll_char, $p0);
  assume {:branchcond $i43} true;
  goto $bb12, $bb28;
$bb30:
  assume !(($i45 == 1));
  $i44 := $eq.ref(exar_handle_irq, $p0);
  assume {:branchcond $i44} true;
  goto $bb13, $bb29;
$bb31:
  assume !(($i46 == 1));
  $i45 := $eq.ref(serial8250_probe, $p0);
  assume {:branchcond $i45} true;
  goto $bb14, $bb30;
$bb32:
  assume !(($i47 == 1));
  $i46 := $eq.ref(serial8250_remove, $p0);
  assume {:branchcond $i46} true;
  goto $bb15, $bb31;
$bb33:
  assume !(($i48 == 1));
  $i47 := $eq.ref(serial8250_resume, $p0);
  assume {:branchcond $i47} true;
  goto $bb16, $bb32;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 537318));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 538350));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 539382));
procedure  devirtbounce.8(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i26 := $eq.ref(serial_pnp_remove, $p0);
  assume {:branchcond $i26} true;
  goto $bb14, $bb27;
$bb2:
  assume ($i14 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call serial8250_clear_and_reinit_fifos($p1);
  $exn := false;
  return;
$bb3:
  assume ($i15 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call serial8250_tx_chars($p2);
  $exn := false;
  return;
$bb4:
  assume ($i16 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call serial8250_stop_tx($p3);
  $exn := false;
  return;
$bb5:
  assume ($i17 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call __dma_rx_complete($p4);
  $exn := false;
  return;
$bb6:
  assume ($i18 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call serial8250_set_isa_configurator($p5);
  $exn := false;
  return;
$bb7:
  assume ($i19 == 1);
  $p6 := $bitcast.ref.ref(arg);
  call __dma_tx_complete($p6);
  $exn := false;
  return;
$bb8:
  assume ($i20 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call serial8250_release_dma($p7);
  $exn := false;
  return;
$bb9:
  assume ($i21 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call serial8250_start_tx($p8);
  $exn := false;
  return;
$bb10:
  assume ($i22 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call serial8250_stop_rx($p9);
  $exn := false;
  return;
$bb11:
  assume ($i23 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call serial8250_enable_ms($p10);
  $exn := false;
  return;
$bb12:
  assume ($i24 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call serial8250_shutdown($p11);
  $exn := false;
  return;
$bb13:
  assume ($i25 == 1);
  $p12 := $bitcast.ref.ref(arg);
  call serial8250_release_port($p12);
  $exn := false;
  return;
$bb14:
  assume ($i26 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call serial_pnp_remove($p13);
  $exn := false;
  return;
$bb15:
  assume !(($i14 == 1));
  assume false;
$bb16:
  assume !(($i15 == 1));
  $i14 := $eq.ref(serial8250_clear_and_reinit_fifos, $p0);
  assume {:branchcond $i14} true;
  goto $bb2, $bb15;
$bb17:
  assume !(($i16 == 1));
  $i15 := $eq.ref(serial8250_tx_chars, $p0);
  assume {:branchcond $i15} true;
  goto $bb3, $bb16;
$bb18:
  assume !(($i17 == 1));
  $i16 := $eq.ref(serial8250_stop_tx, $p0);
  assume {:branchcond $i16} true;
  goto $bb4, $bb17;
$bb19:
  assume !(($i18 == 1));
  $i17 := $eq.ref(__dma_rx_complete, $p0);
  assume {:branchcond $i17} true;
  goto $bb5, $bb18;
$bb20:
  assume !(($i19 == 1));
  $i18 := $eq.ref(serial8250_set_isa_configurator, $p0);
  assume {:branchcond $i18} true;
  goto $bb6, $bb19;
$bb21:
  assume !(($i20 == 1));
  $i19 := $eq.ref(__dma_tx_complete, $p0);
  assume {:branchcond $i19} true;
  goto $bb7, $bb20;
$bb22:
  assume !(($i21 == 1));
  $i20 := $eq.ref(serial8250_release_dma, $p0);
  assume {:branchcond $i20} true;
  goto $bb8, $bb21;
$bb23:
  assume !(($i22 == 1));
  $i21 := $eq.ref(serial8250_start_tx, $p0);
  assume {:branchcond $i21} true;
  goto $bb9, $bb22;
$bb24:
  assume !(($i23 == 1));
  $i22 := $eq.ref(serial8250_stop_rx, $p0);
  assume {:branchcond $i22} true;
  goto $bb10, $bb23;
$bb25:
  assume !(($i24 == 1));
  $i23 := $eq.ref(serial8250_enable_ms, $p0);
  assume {:branchcond $i23} true;
  goto $bb11, $bb24;
$bb26:
  assume !(($i25 == 1));
  $i24 := $eq.ref(serial8250_shutdown, $p0);
  assume {:branchcond $i24} true;
  goto $bb12, $bb25;
$bb27:
  assume !(($i26 == 1));
  $i25 := $eq.ref(serial8250_release_port, $p0);
  assume {:branchcond $i25} true;
  goto $bb13, $bb26;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 540414));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 541446));
procedure  devirtbounce.10(funcPtr: ref, arg: ref, arg1: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i9 := $eq.ref(serial8250_config_port, $p0);
  assume {:branchcond $i9} true;
  goto $bb6, $bb11;
$bb2:
  assume ($i5 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call serial8250_set_mctrl($p1, arg1);
  $exn := false;
  return;
$bb3:
  assume ($i6 == 1);
  call default_serial_dl_write(arg, arg1);
  $exn := false;
  return;
$bb4:
  assume ($i7 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call serial8250_break_ctl($p2, arg1);
  $exn := false;
  return;
$bb5:
  assume ($i8 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call serial8250_set_ldisc($p3, arg1);
  $exn := false;
  return;
$bb6:
  assume ($i9 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call serial8250_config_port($p4, arg1);
  $exn := false;
  return;
$bb7:
  assume !(($i5 == 1));
  assume false;
$bb8:
  assume !(($i6 == 1));
  $i5 := $eq.ref(serial8250_set_mctrl, $p0);
  assume {:branchcond $i5} true;
  goto $bb2, $bb7;
$bb9:
  assume !(($i7 == 1));
  $i6 := $eq.ref(default_serial_dl_write, $p0);
  assume {:branchcond $i6} true;
  goto $bb3, $bb8;
$bb10:
  assume !(($i8 == 1));
  $i7 := $eq.ref(serial8250_break_ctl, $p0);
  assume {:branchcond $i7} true;
  goto $bb4, $bb9;
$bb11:
  assume !(($i9 == 1));
  $i8 := $eq.ref(serial8250_set_ldisc, $p0);
  assume {:branchcond $i8} true;
  goto $bb5, $bb10;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 542478));
procedure  devirtbounce.11(funcPtr: ref, arg: i32, arg1: ref, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.12: ref;
axiom (devirtbounce.12 == $sub.ref(0, 543510));
procedure  devirtbounce.12(funcPtr: ref, arg: i8, arg1: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.13: ref;
axiom (devirtbounce.13 == $sub.ref(0, 544542));
procedure  devirtbounce.13(funcPtr: ref, arg: i32)
  returns ($r: i8)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.14: ref;
axiom (devirtbounce.14 == $sub.ref(0, 545574));
procedure  devirtbounce.14(funcPtr: ref, arg: i32, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.15: ref;
axiom (devirtbounce.15 == $sub.ref(0, 546606));
procedure  devirtbounce.15(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i48 := $eq.ref(serial_pnp_resume, $p0);
  assume {:branchcond $i48} true;
  goto $bb17, $bb33;
$bb2:
  assume ($i33 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := serial8250_modem_status($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i34 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := serial8250_register_8250_port($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i35 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := default_serial_dl_read($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i36 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := serial8250_default_handle_irq($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i37 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := serial8250_tx_dma($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i38 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := serial8250_request_dma($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i39 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := serial8250_tx_empty($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume ($i40 == 1);
  $p15 := $bitcast.ref.ref(arg);
  call $i16 := serial8250_get_mctrl($p15);
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume ($i41 == 1);
  $p17 := $bitcast.ref.ref(arg);
  call $i18 := serial8250_startup($p17);
  $r := $i18;
  $exn := false;
  return;
$bb11:
  assume ($i42 == 1);
  $p19 := $bitcast.ref.ref(arg);
  call $i20 := serial8250_request_port($p19);
  $r := $i20;
  $exn := false;
  return;
$bb12:
  assume ($i43 == 1);
  $p21 := $bitcast.ref.ref(arg);
  call $i22 := serial8250_get_poll_char($p21);
  $r := $i22;
  $exn := false;
  return;
$bb13:
  assume ($i44 == 1);
  $p23 := $bitcast.ref.ref(arg);
  call $i24 := exar_handle_irq($p23);
  $r := $i24;
  $exn := false;
  return;
$bb14:
  assume ($i45 == 1);
  $p25 := $bitcast.ref.ref(arg);
  call $i26 := serial8250_probe($p25);
  $r := $i26;
  $exn := false;
  return;
$bb15:
  assume ($i46 == 1);
  $p27 := $bitcast.ref.ref(arg);
  call $i28 := serial8250_remove($p27);
  $r := $i28;
  $exn := false;
  return;
$bb16:
  assume ($i47 == 1);
  $p29 := $bitcast.ref.ref(arg);
  call $i30 := serial8250_resume($p29);
  $r := $i30;
  $exn := false;
  return;
$bb17:
  assume ($i48 == 1);
  $p31 := $bitcast.ref.ref(arg);
  call $i32 := serial_pnp_resume($p31);
  $r := $i32;
  $exn := false;
  return;
$bb18:
  assume !(($i33 == 1));
  assume false;
$bb19:
  assume !(($i34 == 1));
  $i33 := $eq.ref(serial8250_modem_status, $p0);
  assume {:branchcond $i33} true;
  goto $bb2, $bb18;
$bb20:
  assume !(($i35 == 1));
  $i34 := $eq.ref(serial8250_register_8250_port, $p0);
  assume {:branchcond $i34} true;
  goto $bb3, $bb19;
$bb21:
  assume !(($i36 == 1));
  $i35 := $eq.ref(default_serial_dl_read, $p0);
  assume {:branchcond $i35} true;
  goto $bb4, $bb20;
$bb22:
  assume !(($i37 == 1));
  $i36 := $eq.ref(serial8250_default_handle_irq, $p0);
  assume {:branchcond $i36} true;
  goto $bb5, $bb21;
$bb23:
  assume !(($i38 == 1));
  $i37 := $eq.ref(serial8250_tx_dma, $p0);
  assume {:branchcond $i37} true;
  goto $bb6, $bb22;
$bb24:
  assume !(($i39 == 1));
  $i38 := $eq.ref(serial8250_request_dma, $p0);
  assume {:branchcond $i38} true;
  goto $bb7, $bb23;
$bb25:
  assume !(($i40 == 1));
  $i39 := $eq.ref(serial8250_tx_empty, $p0);
  assume {:branchcond $i39} true;
  goto $bb8, $bb24;
$bb26:
  assume !(($i41 == 1));
  $i40 := $eq.ref(serial8250_get_mctrl, $p0);
  assume {:branchcond $i40} true;
  goto $bb9, $bb25;
$bb27:
  assume !(($i42 == 1));
  $i41 := $eq.ref(serial8250_startup, $p0);
  assume {:branchcond $i41} true;
  goto $bb10, $bb26;
$bb28:
  assume !(($i43 == 1));
  $i42 := $eq.ref(serial8250_request_port, $p0);
  assume {:branchcond $i42} true;
  goto $bb11, $bb27;
$bb29:
  assume !(($i44 == 1));
  $i43 := $eq.ref(serial8250_get_poll_char, $p0);
  assume {:branchcond $i43} true;
  goto $bb12, $bb28;
$bb30:
  assume !(($i45 == 1));
  $i44 := $eq.ref(exar_handle_irq, $p0);
  assume {:branchcond $i44} true;
  goto $bb13, $bb29;
$bb31:
  assume !(($i46 == 1));
  $i45 := $eq.ref(serial8250_probe, $p0);
  assume {:branchcond $i45} true;
  goto $bb14, $bb30;
$bb32:
  assume !(($i47 == 1));
  $i46 := $eq.ref(serial8250_remove, $p0);
  assume {:branchcond $i46} true;
  goto $bb15, $bb31;
$bb33:
  assume !(($i48 == 1));
  $i47 := $eq.ref(serial8250_resume, $p0);
  assume {:branchcond $i47} true;
  goto $bb16, $bb32;
}
const devirtbounce.16: ref;
axiom (devirtbounce.16 == $sub.ref(0, 547638));
procedure  devirtbounce.16(funcPtr: ref, arg: i8, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.17: ref;
axiom (devirtbounce.17 == $sub.ref(0, 548670));
procedure  devirtbounce.17(funcPtr: ref, arg: ref)
  returns ($r: i8)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.18: ref;
axiom (devirtbounce.18 == $sub.ref(0, 549702));
procedure  devirtbounce.18(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i32, arg4: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.19: ref;
axiom (devirtbounce.19 == $sub.ref(0, 550734));
procedure  devirtbounce.19(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.20: ref;
axiom (devirtbounce.20 == $sub.ref(0, 551766));
procedure  devirtbounce.20(funcPtr: ref, arg: ref, arg1: i64)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.21: ref;
axiom (devirtbounce.21 == $sub.ref(0, 552798));
procedure  devirtbounce.21(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.22: ref;
axiom (devirtbounce.22 == $sub.ref(0, 553830));
procedure  devirtbounce.22(funcPtr: ref, arg: i64, arg1: ref, arg2: i32)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.23: ref;
axiom (devirtbounce.23 == $sub.ref(0, 554862));
procedure  devirtbounce.23(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.24: ref;
axiom (devirtbounce.24 == $sub.ref(0, 555894));
procedure  devirtbounce.24(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.25: ref;
axiom (devirtbounce.25 == $sub.ref(0, 556926));
procedure  devirtbounce.25(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
{
  var $p0: ref;
  var $i1: i1;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(serial8250_set_termios, $p0);
  assume {:branchcond $i2} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i1 == 1);
  call serial8250_do_set_termios(arg, arg1, arg2);
  $exn := false;
  return;
$bb3:
  assume ($i2 == 1);
  call serial8250_set_termios(arg, arg1, arg2);
  $exn := false;
  return;
$bb4:
  assume !(($i1 == 1));
  assume false;
$bb5:
  assume !(($i2 == 1));
  $i1 := $eq.ref(serial8250_do_set_termios, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb4;
}
const devirtbounce.26: ref;
axiom (devirtbounce.26 == $sub.ref(0, 557958));
procedure  devirtbounce.26(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.27: ref;
axiom (devirtbounce.27 == $sub.ref(0, 558990));
procedure  devirtbounce.27(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i43 := $eq.ref(serial_pnp_resume, $p0);
  assume {:branchcond $i43} true;
  goto $bb17, $bb33;
$bb2:
  assume ($i28 == 1);
  call $i1 := serial8250_modem_status(arg);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i29 == 1);
  call $i2 := serial8250_register_8250_port(arg);
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i30 == 1);
  call $i3 := default_serial_dl_read(arg);
  $r := $i3;
  $exn := false;
  return;
$bb5:
  assume ($i31 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call $i5 := serial8250_default_handle_irq($p4);
  $r := $i5;
  $exn := false;
  return;
$bb6:
  assume ($i32 == 1);
  call $i6 := serial8250_tx_dma(arg);
  $r := $i6;
  $exn := false;
  return;
$bb7:
  assume ($i33 == 1);
  call $i7 := serial8250_request_dma(arg);
  $r := $i7;
  $exn := false;
  return;
$bb8:
  assume ($i34 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call $i9 := serial8250_tx_empty($p8);
  $r := $i9;
  $exn := false;
  return;
$bb9:
  assume ($i35 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call $i11 := serial8250_get_mctrl($p10);
  $r := $i11;
  $exn := false;
  return;
$bb10:
  assume ($i36 == 1);
  $p12 := $bitcast.ref.ref(arg);
  call $i13 := serial8250_startup($p12);
  $r := $i13;
  $exn := false;
  return;
$bb11:
  assume ($i37 == 1);
  $p14 := $bitcast.ref.ref(arg);
  call $i15 := serial8250_request_port($p14);
  $r := $i15;
  $exn := false;
  return;
$bb12:
  assume ($i38 == 1);
  $p16 := $bitcast.ref.ref(arg);
  call $i17 := serial8250_get_poll_char($p16);
  $r := $i17;
  $exn := false;
  return;
$bb13:
  assume ($i39 == 1);
  $p18 := $bitcast.ref.ref(arg);
  call $i19 := exar_handle_irq($p18);
  $r := $i19;
  $exn := false;
  return;
$bb14:
  assume ($i40 == 1);
  $p20 := $bitcast.ref.ref(arg);
  call $i21 := serial8250_probe($p20);
  $r := $i21;
  $exn := false;
  return;
$bb15:
  assume ($i41 == 1);
  $p22 := $bitcast.ref.ref(arg);
  call $i23 := serial8250_remove($p22);
  $r := $i23;
  $exn := false;
  return;
$bb16:
  assume ($i42 == 1);
  $p24 := $bitcast.ref.ref(arg);
  call $i25 := serial8250_resume($p24);
  $r := $i25;
  $exn := false;
  return;
$bb17:
  assume ($i43 == 1);
  $p26 := $bitcast.ref.ref(arg);
  call $i27 := serial_pnp_resume($p26);
  $r := $i27;
  $exn := false;
  return;
$bb18:
  assume !(($i28 == 1));
  assume false;
$bb19:
  assume !(($i29 == 1));
  $i28 := $eq.ref(serial8250_modem_status, $p0);
  assume {:branchcond $i28} true;
  goto $bb2, $bb18;
$bb20:
  assume !(($i30 == 1));
  $i29 := $eq.ref(serial8250_register_8250_port, $p0);
  assume {:branchcond $i29} true;
  goto $bb3, $bb19;
$bb21:
  assume !(($i31 == 1));
  $i30 := $eq.ref(default_serial_dl_read, $p0);
  assume {:branchcond $i30} true;
  goto $bb4, $bb20;
$bb22:
  assume !(($i32 == 1));
  $i31 := $eq.ref(serial8250_default_handle_irq, $p0);
  assume {:branchcond $i31} true;
  goto $bb5, $bb21;
$bb23:
  assume !(($i33 == 1));
  $i32 := $eq.ref(serial8250_tx_dma, $p0);
  assume {:branchcond $i32} true;
  goto $bb6, $bb22;
$bb24:
  assume !(($i34 == 1));
  $i33 := $eq.ref(serial8250_request_dma, $p0);
  assume {:branchcond $i33} true;
  goto $bb7, $bb23;
$bb25:
  assume !(($i35 == 1));
  $i34 := $eq.ref(serial8250_tx_empty, $p0);
  assume {:branchcond $i34} true;
  goto $bb8, $bb24;
$bb26:
  assume !(($i36 == 1));
  $i35 := $eq.ref(serial8250_get_mctrl, $p0);
  assume {:branchcond $i35} true;
  goto $bb9, $bb25;
$bb27:
  assume !(($i37 == 1));
  $i36 := $eq.ref(serial8250_startup, $p0);
  assume {:branchcond $i36} true;
  goto $bb10, $bb26;
$bb28:
  assume !(($i38 == 1));
  $i37 := $eq.ref(serial8250_request_port, $p0);
  assume {:branchcond $i37} true;
  goto $bb11, $bb27;
$bb29:
  assume !(($i39 == 1));
  $i38 := $eq.ref(serial8250_get_poll_char, $p0);
  assume {:branchcond $i38} true;
  goto $bb12, $bb28;
$bb30:
  assume !(($i40 == 1));
  $i39 := $eq.ref(exar_handle_irq, $p0);
  assume {:branchcond $i39} true;
  goto $bb13, $bb29;
$bb31:
  assume !(($i41 == 1));
  $i40 := $eq.ref(serial8250_probe, $p0);
  assume {:branchcond $i40} true;
  goto $bb14, $bb30;
$bb32:
  assume !(($i42 == 1));
  $i41 := $eq.ref(serial8250_remove, $p0);
  assume {:branchcond $i41} true;
  goto $bb15, $bb31;
$bb33:
  assume !(($i43 == 1));
  $i42 := $eq.ref(serial8250_resume, $p0);
  assume {:branchcond $i42} true;
  goto $bb16, $bb32;
}
const devirtbounce.28: ref;
axiom (devirtbounce.28 == $sub.ref(0, 560022));
procedure  devirtbounce.28(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i41 := $eq.ref(serial_pnp_resume, $p0);
  assume {:branchcond $i41} true;
  goto $bb17, $bb33;
$bb2:
  assume ($i26 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := serial8250_modem_status($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i27 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := serial8250_register_8250_port($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i28 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := default_serial_dl_read($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i29 == 1);
  call $i7 := serial8250_default_handle_irq(arg);
  $r := $i7;
  $exn := false;
  return;
$bb6:
  assume ($i30 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call $i9 := serial8250_tx_dma($p8);
  $r := $i9;
  $exn := false;
  return;
$bb7:
  assume ($i31 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call $i11 := serial8250_request_dma($p10);
  $r := $i11;
  $exn := false;
  return;
$bb8:
  assume ($i32 == 1);
  call $i12 := serial8250_tx_empty(arg);
  $r := $i12;
  $exn := false;
  return;
$bb9:
  assume ($i33 == 1);
  call $i13 := serial8250_get_mctrl(arg);
  $r := $i13;
  $exn := false;
  return;
$bb10:
  assume ($i34 == 1);
  call $i14 := serial8250_startup(arg);
  $r := $i14;
  $exn := false;
  return;
$bb11:
  assume ($i35 == 1);
  call $i15 := serial8250_request_port(arg);
  $r := $i15;
  $exn := false;
  return;
$bb12:
  assume ($i36 == 1);
  call $i16 := serial8250_get_poll_char(arg);
  $r := $i16;
  $exn := false;
  return;
$bb13:
  assume ($i37 == 1);
  call $i17 := exar_handle_irq(arg);
  $r := $i17;
  $exn := false;
  return;
$bb14:
  assume ($i38 == 1);
  $p18 := $bitcast.ref.ref(arg);
  call $i19 := serial8250_probe($p18);
  $r := $i19;
  $exn := false;
  return;
$bb15:
  assume ($i39 == 1);
  $p20 := $bitcast.ref.ref(arg);
  call $i21 := serial8250_remove($p20);
  $r := $i21;
  $exn := false;
  return;
$bb16:
  assume ($i40 == 1);
  $p22 := $bitcast.ref.ref(arg);
  call $i23 := serial8250_resume($p22);
  $r := $i23;
  $exn := false;
  return;
$bb17:
  assume ($i41 == 1);
  $p24 := $bitcast.ref.ref(arg);
  call $i25 := serial_pnp_resume($p24);
  $r := $i25;
  $exn := false;
  return;
$bb18:
  assume !(($i26 == 1));
  assume false;
$bb19:
  assume !(($i27 == 1));
  $i26 := $eq.ref(serial8250_modem_status, $p0);
  assume {:branchcond $i26} true;
  goto $bb2, $bb18;
$bb20:
  assume !(($i28 == 1));
  $i27 := $eq.ref(serial8250_register_8250_port, $p0);
  assume {:branchcond $i27} true;
  goto $bb3, $bb19;
$bb21:
  assume !(($i29 == 1));
  $i28 := $eq.ref(default_serial_dl_read, $p0);
  assume {:branchcond $i28} true;
  goto $bb4, $bb20;
$bb22:
  assume !(($i30 == 1));
  $i29 := $eq.ref(serial8250_default_handle_irq, $p0);
  assume {:branchcond $i29} true;
  goto $bb5, $bb21;
$bb23:
  assume !(($i31 == 1));
  $i30 := $eq.ref(serial8250_tx_dma, $p0);
  assume {:branchcond $i30} true;
  goto $bb6, $bb22;
$bb24:
  assume !(($i32 == 1));
  $i31 := $eq.ref(serial8250_request_dma, $p0);
  assume {:branchcond $i31} true;
  goto $bb7, $bb23;
$bb25:
  assume !(($i33 == 1));
  $i32 := $eq.ref(serial8250_tx_empty, $p0);
  assume {:branchcond $i32} true;
  goto $bb8, $bb24;
$bb26:
  assume !(($i34 == 1));
  $i33 := $eq.ref(serial8250_get_mctrl, $p0);
  assume {:branchcond $i33} true;
  goto $bb9, $bb25;
$bb27:
  assume !(($i35 == 1));
  $i34 := $eq.ref(serial8250_startup, $p0);
  assume {:branchcond $i34} true;
  goto $bb10, $bb26;
$bb28:
  assume !(($i36 == 1));
  $i35 := $eq.ref(serial8250_request_port, $p0);
  assume {:branchcond $i35} true;
  goto $bb11, $bb27;
$bb29:
  assume !(($i37 == 1));
  $i36 := $eq.ref(serial8250_get_poll_char, $p0);
  assume {:branchcond $i36} true;
  goto $bb12, $bb28;
$bb30:
  assume !(($i38 == 1));
  $i37 := $eq.ref(exar_handle_irq, $p0);
  assume {:branchcond $i37} true;
  goto $bb13, $bb29;
$bb31:
  assume !(($i39 == 1));
  $i38 := $eq.ref(serial8250_probe, $p0);
  assume {:branchcond $i38} true;
  goto $bb14, $bb30;
$bb32:
  assume !(($i40 == 1));
  $i39 := $eq.ref(serial8250_remove, $p0);
  assume {:branchcond $i39} true;
  goto $bb15, $bb31;
$bb33:
  assume !(($i41 == 1));
  $i40 := $eq.ref(serial8250_resume, $p0);
  assume {:branchcond $i40} true;
  goto $bb16, $bb32;
}
const devirtbounce.29: ref;
axiom (devirtbounce.29 == $sub.ref(0, 561054));
procedure  devirtbounce.29(funcPtr: ref, arg: i64)
{
  var $p0: ref;
  var $i1: i1;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(serial8250_backup_timeout, $p0);
  assume {:branchcond $i2} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i1 == 1);
  call serial8250_timeout(arg);
  $exn := false;
  return;
$bb3:
  assume ($i2 == 1);
  call serial8250_backup_timeout(arg);
  $exn := false;
  return;
$bb4:
  assume !(($i1 == 1));
  assume false;
$bb5:
  assume !(($i2 == 1));
  $i1 := $eq.ref(serial8250_timeout, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb4;
}
procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: i64;
const $u1: ref;
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
